import com.liferay.gradle.util.FileUtil

import org.apache.tools.ant.filters.FixCrLfFilter

apply plugin: "antlr"

String parserDirName = "com/liferay/segments/asah/connector/internal/expression/parser"
List<String> startParameterTaskNames = gradle.startParameter.taskNames

dependencies {
	annotationProcessor group: "org.antlr", name: "antlr4-annotations", version: "4.3"

	antlr group: "org.antlr", name: "antlr4", version: "4.3"

	compileInclude group: "com.fasterxml.jackson.jaxrs", name: "jackson-jaxrs-base", version: "2.9.7"
	compileInclude group: "com.fasterxml.jackson.jaxrs", name: "jackson-jaxrs-json-provider", version: "2.9.7"
	compileInclude group: "com.fasterxml.jackson.module", name: "jackson-module-jaxb-annotations", version: "2.9.7"
	compileInclude group: "org.abego.treelayout", name: "org.abego.treelayout.core", version: "1.0.1"
	compileInclude group: "org.antlr", name: "antlr4-runtime", version: "4.3"

	compileOnly group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: "2.13.4"
	compileOnly group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.13.4"
	compileOnly group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.13.4.2"
	compileOnly group: "com.liferay", name: "biz.aQute.bnd.annotation", version: "4.2.0.LIFERAY-PATCHED-2"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "default"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "3.0.1"
	compileOnly group: "javax.servlet.jsp", name: "javax.servlet.jsp-api", version: "2.3.1"
	compileOnly group: "javax.ws.rs", name: "javax.ws.rs-api", version: "2.1"
	compileOnly group: "org.antlr", name: "antlr4", version: "4.3"
	compileOnly group: "org.antlr", name: "antlr4-annotations", version: "4.3"
	compileOnly group: "org.apache.cxf", name: "cxf-rt-rs-client", version: "3.4.10"
	compileOnly group: "org.apache.cxf", name: "cxf-rt-rs-extension-providers", version: "3.4.10"
	compileOnly group: "org.apache.felix", name: "org.apache.felix.http.servlet-api", version: "1.1.2"
	compileOnly group: "org.osgi", name: "org.osgi.service.cm", version: "1.6.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.4.0"
	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"
	compileOnly project(":apps:analytics:analytics-settings-api")
	compileOnly project(":apps:analytics:analytics-settings-rest-api")
	compileOnly project(":apps:asset:asset-list-api")
	compileOnly project(":apps:frontend-taglib:frontend-taglib")
	compileOnly project(":apps:frontend-taglib:frontend-taglib-form-navigator")
	compileOnly project(":apps:item-selector:item-selector-api")
	compileOnly project(":apps:item-selector:item-selector-criteria-api")
	compileOnly project(":apps:portal-odata:portal-odata-api")
	compileOnly project(":apps:segments:segments-api")
	compileOnly project(":apps:static:portal-configuration:portal-configuration-metatype-api")
	compileOnly project(":core:petra:petra-function")
	compileOnly project(":core:petra:petra-lang")
	compileOnly project(":core:petra:petra-sql-dsl-api")
	compileOnly project(":core:petra:petra-string")

	testCompile project(":apps:static:portal-configuration:portal-configuration-persistence-api")
}

generateGrammarSource {
	setActions([])

	File grammarFile = file("src/main/antlr/${parserDirName}/IndividualSegmentsExpression.g4")

	dependsOn cleanGenerateGrammarSource

	doFirst {
		delete fileTree("src/main/java/" + parserDirName) {
			exclude "**/source_formatter.ignore"
		}

		delete fileTree("src/main/resources/" + parserDirName) {
			exclude "**/source_formatter.ignore"
		}

		javaexec {
			args "-o", FileUtil.relativize(generateGrammarSource.outputDirectory, grammarFile.parentFile)
			args grammarFile.name
			args "-visitor"

			classpath = generateGrammarSource.antlrClasspath
			main = "org.antlr.v4.Tool"
			maxHeapSize = generateGrammarSource.maxHeapSize
			workingDir = grammarFile.parentFile
		}
	}

	doLast {
		copy {
			filter(FixCrLfFilter, javafiles: true, tab: FixCrLfFilter.AddAsisRemove.newInstance("add"))

			from outputDirectory
			include "**/*.java"
			into "src/main/java/" + parserDirName
		}

		copy {
			from outputDirectory
			exclude "**/*.java"
			into "src/main/resources/" + parserDirName
		}
	}

	ext {
		autoClean = false
	}

	enabled = startParameterTaskNames.contains("generateGrammarSource")
	maxHeapSize = "1512m"
	outputDirectory = new File(temporaryDir, "generated")
}

liferayOSGi {
	expandCompileInclude = true
}