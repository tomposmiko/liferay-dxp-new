// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render component 1`] = `
<MockRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/1/20/title%3Aasc",
            "search": "?backPath=%2F",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/1/20/title%3Aasc",
          "search": "?backPath=%2F",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Route
      path="/:page/:pageSize/:sort"
      render={[Function]}
    >
      <SummaryCard
        getTitle={[Function]}
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/1/20/title%3Aasc",
              "search": "?backPath=%2F",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        iconColor="success"
        iconName="check-circle"
        page="1"
        pageSize="20"
        processId={12345}
        query="?backPath=%2F"
        routeParams={
          Object {
            "page": "1",
            "pageSize": "20",
            "sort": "title:asc",
          }
        }
        sort="title:asc"
        total={false}
        totalValue={55}
        value={31}
      >
        <withRouter()
          className=" process-dashboard-summary-card"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          query={
            Object {
              "filters": Object {
                "slaStatuses": Array [
                  undefined,
                ],
                "statuses": Array [
                  "Pending",
                ],
              },
            }
          }
          to="/instance/12345/20/1"
        >
          <Component
            className=" process-dashboard-summary-card"
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/1/20/title%3Aasc",
                    "search": "?backPath=%2F",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/1/20/title%3Aasc",
                  "search": "?backPath=%2F",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {
                  "page": "1",
                  "pageSize": "20",
                  "sort": "title:asc",
                },
                "path": "/:page/:pageSize/:sort",
                "url": "/1/20/title%3Aasc",
              }
            }
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            query={
              Object {
                "filters": Object {
                  "slaStatuses": Array [
                    undefined,
                  ],
                  "statuses": Array [
                    "Pending",
                  ],
                },
              }
            }
            to="/instance/12345/20/1"
          >
            <ChildLinkWrapper
              backPath="/"
              className=" process-dashboard-summary-card"
              currentPath="/1/20/title%3Aasc?backPath=%2F"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/1/20/title%3Aasc",
                      "search": "?backPath=%2F",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/1/20/title%3Aasc",
                    "search": "?backPath=%2F",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              page="1"
              pageSize="20"
              query={
                Object {
                  "filters": Object {
                    "slaStatuses": Array [
                      undefined,
                    ],
                    "statuses": Array [
                      "Pending",
                    ],
                  },
                }
              }
              sort="title:asc"
              to="/instance/12345/20/1"
            >
              <Link
                className=" process-dashboard-summary-card"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                to={
                  Object {
                    "pathname": "/instance/12345/20/1",
                    "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F&filters.statuses%5B0%5D=Pending",
                  }
                }
              >
                <a
                  className=" process-dashboard-summary-card"
                  href="/instance/12345/20/1?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F&filters.statuses%5B0%5D=Pending"
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <div>
                    <div
                      className="header"
                    >
                      <span
                        className="bg-success-light mr-3 sticker sticker-circle"
                      >
                        <span
                          className="inline-item"
                        >
                          <Icon
                            elementClasses="text-success"
                            iconName="check-circle"
                          >
                            <svg
                              className="lexicon-icon lexicon-icon-check-circle text-success"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "<use xlink:href=\\"http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#check-circle\\" />",
                                }
                              }
                              data-testid="icon"
                              focusable="false"
                              role="presentation"
                            />
                          </Icon>
                        </span>
                      </span>
                      <span>
                        On Time
                      </span>
                    </div>
                    <div
                      className="body"
                      title={31}
                    >
                      31
                    </div>
                    <div
                      className="footer"
                    >
                      <span
                        className=" xsmall"
                      >
                        56.36%
                      </span>
                    </div>
                  </div>
                </a>
              </Link>
            </ChildLinkWrapper>
          </Component>
        </withRouter()>
      </SummaryCard>
    </Route>
  </Router>
</MockRouter>
`;

exports[`Should render component with disabled state 1`] = `
<MockRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/1/20/title%3Aasc",
            "search": "?backPath=%2F",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/1/20/title%3Aasc",
          "search": "?backPath=%2F",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Route
      path="/:page/:pageSize/:sort"
      render={[Function]}
    >
      <SummaryCard
        getTitle={[Function]}
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/1/20/title%3Aasc",
              "search": "?backPath=%2F",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        iconColor="success"
        iconName="check-circle"
        page="1"
        pageSize="20"
        processId={12345}
        query="?backPath=%2F"
        routeParams={
          Object {
            "page": "1",
            "pageSize": "20",
            "sort": "title:asc",
          }
        }
        sort="title:asc"
        total={false}
        totalValue={55}
      >
        <withRouter()
          className="disabled process-dashboard-summary-card"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          query={
            Object {
              "filters": Object {
                "slaStatuses": Array [
                  undefined,
                ],
                "statuses": Array [
                  "Pending",
                ],
              },
            }
          }
          to="/instance/12345/20/1"
        >
          <Component
            className="disabled process-dashboard-summary-card"
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/1/20/title%3Aasc",
                    "search": "?backPath=%2F",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/1/20/title%3Aasc",
                  "search": "?backPath=%2F",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {
                  "page": "1",
                  "pageSize": "20",
                  "sort": "title:asc",
                },
                "path": "/:page/:pageSize/:sort",
                "url": "/1/20/title%3Aasc",
              }
            }
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            query={
              Object {
                "filters": Object {
                  "slaStatuses": Array [
                    undefined,
                  ],
                  "statuses": Array [
                    "Pending",
                  ],
                },
              }
            }
            to="/instance/12345/20/1"
          >
            <ChildLinkWrapper
              backPath="/"
              className="disabled process-dashboard-summary-card"
              currentPath="/1/20/title%3Aasc?backPath=%2F"
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/1/20/title%3Aasc",
                      "search": "?backPath=%2F",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/1/20/title%3Aasc",
                    "search": "?backPath=%2F",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              page="1"
              pageSize="20"
              query={
                Object {
                  "filters": Object {
                    "slaStatuses": Array [
                      undefined,
                    ],
                    "statuses": Array [
                      "Pending",
                    ],
                  },
                }
              }
              sort="title:asc"
              to="/instance/12345/20/1"
            >
              <Link
                className="disabled process-dashboard-summary-card"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                to={
                  Object {
                    "pathname": "/instance/12345/20/1",
                    "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F&filters.statuses%5B0%5D=Pending",
                  }
                }
              >
                <a
                  className="disabled process-dashboard-summary-card"
                  href="/instance/12345/20/1?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F&filters.statuses%5B0%5D=Pending"
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <div>
                    <div
                      className="header"
                    >
                      <span
                        className="bg-success-light mr-3 sticker sticker-circle"
                      >
                        <span
                          className="inline-item"
                        >
                          <Icon
                            elementClasses="text-success"
                            iconName="check-circle"
                          >
                            <svg
                              className="lexicon-icon lexicon-icon-check-circle text-success"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "<use xlink:href=\\"http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#check-circle\\" />",
                                }
                              }
                              data-testid="icon"
                              focusable="false"
                              role="presentation"
                            />
                          </Icon>
                        </span>
                      </span>
                      <span>
                        On Time
                      </span>
                    </div>
                  </div>
                </a>
              </Link>
            </ChildLinkWrapper>
          </Component>
        </withRouter()>
      </SummaryCard>
    </Route>
  </Router>
</MockRouter>
`;
