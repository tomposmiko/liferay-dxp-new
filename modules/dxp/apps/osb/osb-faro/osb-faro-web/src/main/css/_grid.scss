.grid-root {
	display: grid;
	grid-auto-flow: row dense;
	grid-column-gap: $gridGap;
	grid-row-gap: $gridGap;
	grid-template-columns: repeat($maxGridItems, 1fr);

	&.grid-thirds {
		grid-template-columns: repeat(3, 1fr);

		.grid-item.size-#{$maxGridItems}x {
			grid-column: span $maxGridItems - 1;
		}
	}

	.grid-item {
		align-self: center;
		min-width: 0;

		@for $size from 1 through $maxGridItems {
			&.size-#{$size}x {
				grid-column: span $size;
			}
		}
	}
}

@media screen and (max-width: $gridMaxPageWidth + ($pagePadding * 2) + $sidebarOpenWidth) {
	.grid-root, .grid-root.grid-thirds {
		grid-template-columns: repeat($maxGridItemsMd, 1fr);

		.grid-item {
			@for $size from $maxGridItemsMd through $maxGridItems {
				&.size-#{$size}x {
					grid-column: span $maxGridItemsMd;
				}
			}
		}
	}
}

@media screen and (max-width: $gridMaxPageWidthLg + ($pagePadding * 2) + $sidebarOpenWidth) {
	.grid-root, .grid-root.grid-thirds {
		grid-template-columns: repeat($maxGridItemsSm, 1fr);

		.grid-item {
			@for $size from $maxGridItemsSm through $maxGridItems {
				&.size-#{$size}x {
					grid-column: span $maxGridItemsSm;
				}
			}
		}
	}
}