// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Normalizer Reducer should update store with normalized entities 1`] = `
Immutable.Map {
  "accounts": Immutable.Map {
    "1": Immutable.Record {
      "data": Immutable.Record {
        "activitiesCount": 0,
        "createTime": null,
        "id": null,
        "individualCount": 0,
        "name": "",
        "photoURL": "",
        "properties": Immutable.Map {},
        "status": null,
        "type": 0,
      },
      "error": false,
      "loading": false,
    },
  },
  "dataSources": Immutable.Map {
    "2": Immutable.Record {
      "data": Immutable.Record {
        "contactsSelected": false,
        "createDate": 0,
        "credentials": Immutable.Map {},
        "disabled": false,
        "event": null,
        "fileName": null,
        "id": null,
        "name": "",
        "properties": null,
        "provider": null,
        "providerType": "",
        "sitesSelected": false,
        "state": null,
        "status": null,
        "type": 1,
        "url": null,
      },
      "error": false,
      "loading": false,
    },
  },
  "individuals": Immutable.Map {
    "3": Immutable.Record {
      "data": Immutable.Record {
        "accountNames": null,
        "activitiesCount": 0,
        "dateCreated": null,
        "demographics": Immutable.Map {},
        "id": null,
        "lastActivityDate": null,
        "name": "",
        "properties": Immutable.Map {},
        "type": 2,
      },
      "error": false,
      "loading": false,
    },
  },
  "projects": Immutable.Map {
    "15": Immutable.Record {
      "data": Immutable.Record {
        "accountKey": null,
        "accountName": "",
        "corpProjectName": "",
        "corpProjectUuid": null,
        "faroSubscription": Immutable.Map {},
        "friendlyURL": null,
        "groupId": null,
        "incidentReportEmailAddresses": Immutable.List [],
        "name": "",
        "ownerEmailAddress": "",
        "recommendationsEnabled": false,
        "serverLocation": null,
        "state": null,
        "stateStartDate": null,
        "timeZone": Immutable.Record {
          "country": "UTC",
          "displayTimeZone": "(UTC) UTC",
          "timeZoneId": "UTC",
        },
        "userId": null,
      },
      "error": false,
      "loading": false,
    },
  },
  "segments": Immutable.Map {
    "4": Immutable.Record {
      "data": Immutable.Record {
        "activeIndividualCount": 0,
        "activitiesCount": 0,
        "anonymousIndividualCount": 0,
        "channelId": null,
        "criteriaString": "",
        "dateCreated": null,
        "dateModified": null,
        "id": "",
        "includeAnonymousUsers": false,
        "individualCount": 0,
        "knownIndividualCount": 0,
        "lastActivityDate": null,
        "name": "",
        "properties": Immutable.Map {},
        "referencedObjects": Immutable.Map {
          "assets": Immutable.Map {},
          "attributes": Immutable.Map {},
          "events": Immutable.Map {},
          "fieldMappings": Immutable.Map {},
        },
        "segmentType": null,
        "state": "",
        "status": null,
        "type": 4,
        "userName": null,
      },
      "error": false,
      "loading": false,
    },
  },
}
`;
