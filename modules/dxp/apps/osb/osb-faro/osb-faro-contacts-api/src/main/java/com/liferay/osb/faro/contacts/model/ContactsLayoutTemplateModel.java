/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.osb.faro.contacts.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ContactsLayoutTemplate service. Represents a row in the &quot;OSBFaro_ContactsLayoutTemplate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.osb.faro.contacts.model.impl.ContactsLayoutTemplateModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.osb.faro.contacts.model.impl.ContactsLayoutTemplateImpl</code>.
 * </p>
 *
 * @author Shinn Lok
 * @see ContactsLayoutTemplate
 * @generated
 */
@ProviderType
public interface ContactsLayoutTemplateModel
	extends BaseModel<ContactsLayoutTemplate> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contacts layout template model instance should use the {@link ContactsLayoutTemplate} interface instead.
	 */

	/**
	 * Returns the primary key of this contacts layout template.
	 *
	 * @return the primary key of this contacts layout template
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contacts layout template.
	 *
	 * @param primaryKey the primary key of this contacts layout template
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the contacts layout template ID of this contacts layout template.
	 *
	 * @return the contacts layout template ID of this contacts layout template
	 */
	public long getContactsLayoutTemplateId();

	/**
	 * Sets the contacts layout template ID of this contacts layout template.
	 *
	 * @param contactsLayoutTemplateId the contacts layout template ID of this contacts layout template
	 */
	public void setContactsLayoutTemplateId(long contactsLayoutTemplateId);

	/**
	 * Returns the group ID of this contacts layout template.
	 *
	 * @return the group ID of this contacts layout template
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this contacts layout template.
	 *
	 * @param groupId the group ID of this contacts layout template
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this contacts layout template.
	 *
	 * @return the user ID of this contacts layout template
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this contacts layout template.
	 *
	 * @param userId the user ID of this contacts layout template
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this contacts layout template.
	 *
	 * @return the user uuid of this contacts layout template
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this contacts layout template.
	 *
	 * @param userUuid the user uuid of this contacts layout template
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this contacts layout template.
	 *
	 * @return the user name of this contacts layout template
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this contacts layout template.
	 *
	 * @param userName the user name of this contacts layout template
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create time of this contacts layout template.
	 *
	 * @return the create time of this contacts layout template
	 */
	public long getCreateTime();

	/**
	 * Sets the create time of this contacts layout template.
	 *
	 * @param createTime the create time of this contacts layout template
	 */
	public void setCreateTime(long createTime);

	/**
	 * Returns the modified time of this contacts layout template.
	 *
	 * @return the modified time of this contacts layout template
	 */
	public long getModifiedTime();

	/**
	 * Sets the modified time of this contacts layout template.
	 *
	 * @param modifiedTime the modified time of this contacts layout template
	 */
	public void setModifiedTime(long modifiedTime);

	/**
	 * Returns the header contacts card template IDs of this contacts layout template.
	 *
	 * @return the header contacts card template IDs of this contacts layout template
	 */
	@AutoEscape
	public String getHeaderContactsCardTemplateIds();

	/**
	 * Sets the header contacts card template IDs of this contacts layout template.
	 *
	 * @param headerContactsCardTemplateIds the header contacts card template IDs of this contacts layout template
	 */
	public void setHeaderContactsCardTemplateIds(
		String headerContactsCardTemplateIds);

	/**
	 * Returns the name of this contacts layout template.
	 *
	 * @return the name of this contacts layout template
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this contacts layout template.
	 *
	 * @param name the name of this contacts layout template
	 */
	public void setName(String name);

	/**
	 * Returns the settings of this contacts layout template.
	 *
	 * @return the settings of this contacts layout template
	 */
	@AutoEscape
	public String getSettings();

	/**
	 * Sets the settings of this contacts layout template.
	 *
	 * @param settings the settings of this contacts layout template
	 */
	public void setSettings(String settings);

	/**
	 * Returns the type of this contacts layout template.
	 *
	 * @return the type of this contacts layout template
	 */
	public int getType();

	/**
	 * Sets the type of this contacts layout template.
	 *
	 * @param type the type of this contacts layout template
	 */
	public void setType(int type);

	@Override
	public ContactsLayoutTemplate cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}