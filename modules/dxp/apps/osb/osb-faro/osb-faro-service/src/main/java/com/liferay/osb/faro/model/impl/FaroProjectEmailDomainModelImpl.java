/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.osb.faro.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.osb.faro.model.FaroProjectEmailDomain;
import com.liferay.osb.faro.model.FaroProjectEmailDomainModel;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the FaroProjectEmailDomain service. Represents a row in the &quot;OSBFaro_FaroProjectEmailDomain&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>FaroProjectEmailDomainModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FaroProjectEmailDomainImpl}.
 * </p>
 *
 * @author Matthew Kong
 * @see FaroProjectEmailDomainImpl
 * @generated
 */
public class FaroProjectEmailDomainModelImpl
	extends BaseModelImpl<FaroProjectEmailDomain>
	implements FaroProjectEmailDomainModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a faro project email domain model instance should use the <code>FaroProjectEmailDomain</code> interface instead.
	 */
	public static final String TABLE_NAME = "OSBFaro_FaroProjectEmailDomain";

	public static final Object[][] TABLE_COLUMNS = {
		{"mvccVersion", Types.BIGINT},
		{"faroProjectEmailDomainId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"faroProjectId", Types.BIGINT},
		{"emailDomain", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("faroProjectEmailDomainId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("faroProjectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("emailDomain", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table OSBFaro_FaroProjectEmailDomain (mvccVersion LONG default 0 not null,faroProjectEmailDomainId LONG not null primary key,groupId LONG,companyId LONG,faroProjectId LONG,emailDomain VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table OSBFaro_FaroProjectEmailDomain";

	public static final String ORDER_BY_JPQL =
		" ORDER BY faroProjectEmailDomain.faroProjectEmailDomainId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY OSBFaro_FaroProjectEmailDomain.faroProjectEmailDomainId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FAROPROJECTID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FAROPROJECTEMAILDOMAINID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public FaroProjectEmailDomainModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _faroProjectEmailDomainId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFaroProjectEmailDomainId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _faroProjectEmailDomainId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FaroProjectEmailDomain.class;
	}

	@Override
	public String getModelClassName() {
		return FaroProjectEmailDomain.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<FaroProjectEmailDomain, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<FaroProjectEmailDomain, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProjectEmailDomain, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((FaroProjectEmailDomain)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<FaroProjectEmailDomain, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<FaroProjectEmailDomain, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(FaroProjectEmailDomain)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<FaroProjectEmailDomain, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<FaroProjectEmailDomain, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<FaroProjectEmailDomain, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<FaroProjectEmailDomain, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<FaroProjectEmailDomain, Object>>();

			attributeGetterFunctions.put(
				"mvccVersion", FaroProjectEmailDomain::getMvccVersion);
			attributeGetterFunctions.put(
				"faroProjectEmailDomainId",
				FaroProjectEmailDomain::getFaroProjectEmailDomainId);
			attributeGetterFunctions.put(
				"groupId", FaroProjectEmailDomain::getGroupId);
			attributeGetterFunctions.put(
				"companyId", FaroProjectEmailDomain::getCompanyId);
			attributeGetterFunctions.put(
				"faroProjectId", FaroProjectEmailDomain::getFaroProjectId);
			attributeGetterFunctions.put(
				"emailDomain", FaroProjectEmailDomain::getEmailDomain);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<FaroProjectEmailDomain, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<FaroProjectEmailDomain, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<FaroProjectEmailDomain, ?>>();

			attributeSetterBiConsumers.put(
				"mvccVersion",
				(BiConsumer<FaroProjectEmailDomain, Long>)
					FaroProjectEmailDomain::setMvccVersion);
			attributeSetterBiConsumers.put(
				"faroProjectEmailDomainId",
				(BiConsumer<FaroProjectEmailDomain, Long>)
					FaroProjectEmailDomain::setFaroProjectEmailDomainId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<FaroProjectEmailDomain, Long>)
					FaroProjectEmailDomain::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<FaroProjectEmailDomain, Long>)
					FaroProjectEmailDomain::setCompanyId);
			attributeSetterBiConsumers.put(
				"faroProjectId",
				(BiConsumer<FaroProjectEmailDomain, Long>)
					FaroProjectEmailDomain::setFaroProjectId);
			attributeSetterBiConsumers.put(
				"emailDomain",
				(BiConsumer<FaroProjectEmailDomain, String>)
					FaroProjectEmailDomain::setEmailDomain);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mvccVersion = mvccVersion;
	}

	@Override
	public long getFaroProjectEmailDomainId() {
		return _faroProjectEmailDomainId;
	}

	@Override
	public void setFaroProjectEmailDomainId(long faroProjectEmailDomainId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faroProjectEmailDomainId = faroProjectEmailDomainId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@Override
	public long getFaroProjectId() {
		return _faroProjectId;
	}

	@Override
	public void setFaroProjectId(long faroProjectId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faroProjectId = faroProjectId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFaroProjectId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("faroProjectId"));
	}

	@Override
	public String getEmailDomain() {
		if (_emailDomain == null) {
			return "";
		}
		else {
			return _emailDomain;
		}
	}

	@Override
	public void setEmailDomain(String emailDomain) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailDomain = emailDomain;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), FaroProjectEmailDomain.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FaroProjectEmailDomain toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, FaroProjectEmailDomain>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FaroProjectEmailDomainImpl faroProjectEmailDomainImpl =
			new FaroProjectEmailDomainImpl();

		faroProjectEmailDomainImpl.setMvccVersion(getMvccVersion());
		faroProjectEmailDomainImpl.setFaroProjectEmailDomainId(
			getFaroProjectEmailDomainId());
		faroProjectEmailDomainImpl.setGroupId(getGroupId());
		faroProjectEmailDomainImpl.setCompanyId(getCompanyId());
		faroProjectEmailDomainImpl.setFaroProjectId(getFaroProjectId());
		faroProjectEmailDomainImpl.setEmailDomain(getEmailDomain());

		faroProjectEmailDomainImpl.resetOriginalValues();

		return faroProjectEmailDomainImpl;
	}

	@Override
	public FaroProjectEmailDomain cloneWithOriginalValues() {
		FaroProjectEmailDomainImpl faroProjectEmailDomainImpl =
			new FaroProjectEmailDomainImpl();

		faroProjectEmailDomainImpl.setMvccVersion(
			this.<Long>getColumnOriginalValue("mvccVersion"));
		faroProjectEmailDomainImpl.setFaroProjectEmailDomainId(
			this.<Long>getColumnOriginalValue("faroProjectEmailDomainId"));
		faroProjectEmailDomainImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		faroProjectEmailDomainImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		faroProjectEmailDomainImpl.setFaroProjectId(
			this.<Long>getColumnOriginalValue("faroProjectId"));
		faroProjectEmailDomainImpl.setEmailDomain(
			this.<String>getColumnOriginalValue("emailDomain"));

		return faroProjectEmailDomainImpl;
	}

	@Override
	public int compareTo(FaroProjectEmailDomain faroProjectEmailDomain) {
		long primaryKey = faroProjectEmailDomain.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof FaroProjectEmailDomain)) {
			return false;
		}

		FaroProjectEmailDomain faroProjectEmailDomain =
			(FaroProjectEmailDomain)object;

		long primaryKey = faroProjectEmailDomain.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<FaroProjectEmailDomain> toCacheModel() {
		FaroProjectEmailDomainCacheModel faroProjectEmailDomainCacheModel =
			new FaroProjectEmailDomainCacheModel();

		faroProjectEmailDomainCacheModel.mvccVersion = getMvccVersion();

		faroProjectEmailDomainCacheModel.faroProjectEmailDomainId =
			getFaroProjectEmailDomainId();

		faroProjectEmailDomainCacheModel.groupId = getGroupId();

		faroProjectEmailDomainCacheModel.companyId = getCompanyId();

		faroProjectEmailDomainCacheModel.faroProjectId = getFaroProjectId();

		faroProjectEmailDomainCacheModel.emailDomain = getEmailDomain();

		String emailDomain = faroProjectEmailDomainCacheModel.emailDomain;

		if ((emailDomain != null) && (emailDomain.length() == 0)) {
			faroProjectEmailDomainCacheModel.emailDomain = null;
		}

		return faroProjectEmailDomainCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<FaroProjectEmailDomain, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<FaroProjectEmailDomain, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProjectEmailDomain, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(FaroProjectEmailDomain)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, FaroProjectEmailDomain>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					FaroProjectEmailDomain.class, ModelWrapper.class);

	}

	private long _mvccVersion;
	private long _faroProjectEmailDomainId;
	private long _groupId;
	private long _companyId;
	private long _faroProjectId;
	private String _emailDomain;

	public <T> T getColumnValue(String columnName) {
		Function<FaroProjectEmailDomain, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((FaroProjectEmailDomain)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("mvccVersion", _mvccVersion);
		_columnOriginalValues.put(
			"faroProjectEmailDomainId", _faroProjectEmailDomainId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("faroProjectId", _faroProjectId);
		_columnOriginalValues.put("emailDomain", _emailDomain);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("mvccVersion", 1L);

		columnBitmasks.put("faroProjectEmailDomainId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("faroProjectId", 16L);

		columnBitmasks.put("emailDomain", 32L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private FaroProjectEmailDomain _escapedModel;

}