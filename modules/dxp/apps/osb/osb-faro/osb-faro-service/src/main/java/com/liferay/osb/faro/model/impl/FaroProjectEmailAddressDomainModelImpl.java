/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.osb.faro.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.osb.faro.model.FaroProjectEmailAddressDomain;
import com.liferay.osb.faro.model.FaroProjectEmailAddressDomainModel;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the FaroProjectEmailAddressDomain service. Represents a row in the &quot;OSBFaro_FaroProjectEmailAddressDomain&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>FaroProjectEmailAddressDomainModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FaroProjectEmailAddressDomainImpl}.
 * </p>
 *
 * @author Matthew Kong
 * @see FaroProjectEmailAddressDomainImpl
 * @generated
 */
public class FaroProjectEmailAddressDomainModelImpl
	extends BaseModelImpl<FaroProjectEmailAddressDomain>
	implements FaroProjectEmailAddressDomainModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a faro project email address domain model instance should use the <code>FaroProjectEmailAddressDomain</code> interface instead.
	 */
	public static final String TABLE_NAME =
		"OSBFaro_FaroProjectEmailAddressDomain";

	public static final Object[][] TABLE_COLUMNS = {
		{"faroProjectEmailAddressDomainId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"faroProjectId", Types.BIGINT},
		{"emailAddressDomain", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("faroProjectEmailAddressDomainId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("faroProjectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("emailAddressDomain", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table OSBFaro_FaroProjectEmailAddressDomain (faroProjectEmailAddressDomainId LONG not null primary key,groupId LONG,faroProjectId LONG,emailAddressDomain VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table OSBFaro_FaroProjectEmailAddressDomain";

	public static final String ORDER_BY_JPQL =
		" ORDER BY faroProjectEmailAddressDomain.faroProjectEmailAddressDomainId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY OSBFaro_FaroProjectEmailAddressDomain.faroProjectEmailAddressDomainId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean ENTITY_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean FINDER_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean COLUMN_BITMASK_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FAROPROJECTID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FAROPROJECTEMAILADDRESSDOMAINID_COLUMN_BITMASK =
		4L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.osb.faro.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.osb.faro.model.FaroProjectEmailAddressDomain"));

	public FaroProjectEmailAddressDomainModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _faroProjectEmailAddressDomainId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFaroProjectEmailAddressDomainId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _faroProjectEmailAddressDomainId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FaroProjectEmailAddressDomain.class;
	}

	@Override
	public String getModelClassName() {
		return FaroProjectEmailAddressDomain.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<FaroProjectEmailAddressDomain, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<FaroProjectEmailAddressDomain, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProjectEmailAddressDomain, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(FaroProjectEmailAddressDomain)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<FaroProjectEmailAddressDomain, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<FaroProjectEmailAddressDomain, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(FaroProjectEmailAddressDomain)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<FaroProjectEmailAddressDomain, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<FaroProjectEmailAddressDomain, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<FaroProjectEmailAddressDomain, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<FaroProjectEmailAddressDomain, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<FaroProjectEmailAddressDomain, Object>>();

			attributeGetterFunctions.put(
				"faroProjectEmailAddressDomainId",
				FaroProjectEmailAddressDomain::
					getFaroProjectEmailAddressDomainId);
			attributeGetterFunctions.put(
				"groupId", FaroProjectEmailAddressDomain::getGroupId);
			attributeGetterFunctions.put(
				"faroProjectId",
				FaroProjectEmailAddressDomain::getFaroProjectId);
			attributeGetterFunctions.put(
				"emailAddressDomain",
				FaroProjectEmailAddressDomain::getEmailAddressDomain);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<FaroProjectEmailAddressDomain, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<FaroProjectEmailAddressDomain, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<FaroProjectEmailAddressDomain, ?>>();

			attributeSetterBiConsumers.put(
				"faroProjectEmailAddressDomainId",
				(BiConsumer<FaroProjectEmailAddressDomain, Long>)
					FaroProjectEmailAddressDomain::
						setFaroProjectEmailAddressDomainId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<FaroProjectEmailAddressDomain, Long>)
					FaroProjectEmailAddressDomain::setGroupId);
			attributeSetterBiConsumers.put(
				"faroProjectId",
				(BiConsumer<FaroProjectEmailAddressDomain, Long>)
					FaroProjectEmailAddressDomain::setFaroProjectId);
			attributeSetterBiConsumers.put(
				"emailAddressDomain",
				(BiConsumer<FaroProjectEmailAddressDomain, String>)
					FaroProjectEmailAddressDomain::setEmailAddressDomain);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@Override
	public long getFaroProjectEmailAddressDomainId() {
		return _faroProjectEmailAddressDomainId;
	}

	@Override
	public void setFaroProjectEmailAddressDomainId(
		long faroProjectEmailAddressDomainId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faroProjectEmailAddressDomainId = faroProjectEmailAddressDomainId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getFaroProjectId() {
		return _faroProjectId;
	}

	@Override
	public void setFaroProjectId(long faroProjectId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faroProjectId = faroProjectId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFaroProjectId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("faroProjectId"));
	}

	@Override
	public String getEmailAddressDomain() {
		if (_emailAddressDomain == null) {
			return "";
		}
		else {
			return _emailAddressDomain;
		}
	}

	@Override
	public void setEmailAddressDomain(String emailAddressDomain) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddressDomain = emailAddressDomain;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, FaroProjectEmailAddressDomain.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FaroProjectEmailAddressDomain toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, FaroProjectEmailAddressDomain>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FaroProjectEmailAddressDomainImpl faroProjectEmailAddressDomainImpl =
			new FaroProjectEmailAddressDomainImpl();

		faroProjectEmailAddressDomainImpl.setFaroProjectEmailAddressDomainId(
			getFaroProjectEmailAddressDomainId());
		faroProjectEmailAddressDomainImpl.setGroupId(getGroupId());
		faroProjectEmailAddressDomainImpl.setFaroProjectId(getFaroProjectId());
		faroProjectEmailAddressDomainImpl.setEmailAddressDomain(
			getEmailAddressDomain());

		faroProjectEmailAddressDomainImpl.resetOriginalValues();

		return faroProjectEmailAddressDomainImpl;
	}

	@Override
	public FaroProjectEmailAddressDomain cloneWithOriginalValues() {
		FaroProjectEmailAddressDomainImpl faroProjectEmailAddressDomainImpl =
			new FaroProjectEmailAddressDomainImpl();

		faroProjectEmailAddressDomainImpl.setFaroProjectEmailAddressDomainId(
			this.<Long>getColumnOriginalValue(
				"faroProjectEmailAddressDomainId"));
		faroProjectEmailAddressDomainImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		faroProjectEmailAddressDomainImpl.setFaroProjectId(
			this.<Long>getColumnOriginalValue("faroProjectId"));
		faroProjectEmailAddressDomainImpl.setEmailAddressDomain(
			this.<String>getColumnOriginalValue("emailAddressDomain"));

		return faroProjectEmailAddressDomainImpl;
	}

	@Override
	public int compareTo(
		FaroProjectEmailAddressDomain faroProjectEmailAddressDomain) {

		long primaryKey = faroProjectEmailAddressDomain.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof FaroProjectEmailAddressDomain)) {
			return false;
		}

		FaroProjectEmailAddressDomain faroProjectEmailAddressDomain =
			(FaroProjectEmailAddressDomain)object;

		long primaryKey = faroProjectEmailAddressDomain.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<FaroProjectEmailAddressDomain> toCacheModel() {
		FaroProjectEmailAddressDomainCacheModel
			faroProjectEmailAddressDomainCacheModel =
				new FaroProjectEmailAddressDomainCacheModel();

		faroProjectEmailAddressDomainCacheModel.
			faroProjectEmailAddressDomainId =
				getFaroProjectEmailAddressDomainId();

		faroProjectEmailAddressDomainCacheModel.groupId = getGroupId();

		faroProjectEmailAddressDomainCacheModel.faroProjectId =
			getFaroProjectId();

		faroProjectEmailAddressDomainCacheModel.emailAddressDomain =
			getEmailAddressDomain();

		String emailAddressDomain =
			faroProjectEmailAddressDomainCacheModel.emailAddressDomain;

		if ((emailAddressDomain != null) &&
			(emailAddressDomain.length() == 0)) {

			faroProjectEmailAddressDomainCacheModel.emailAddressDomain = null;
		}

		return faroProjectEmailAddressDomainCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<FaroProjectEmailAddressDomain, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<FaroProjectEmailAddressDomain, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProjectEmailAddressDomain, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(FaroProjectEmailAddressDomain)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, FaroProjectEmailAddressDomain>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						FaroProjectEmailAddressDomain.class,
						ModelWrapper.class);

	}

	private long _faroProjectEmailAddressDomainId;
	private long _groupId;
	private long _faroProjectId;
	private String _emailAddressDomain;

	public <T> T getColumnValue(String columnName) {
		Function<FaroProjectEmailAddressDomain, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((FaroProjectEmailAddressDomain)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"faroProjectEmailAddressDomainId",
			_faroProjectEmailAddressDomainId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("faroProjectId", _faroProjectId);
		_columnOriginalValues.put("emailAddressDomain", _emailAddressDomain);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("faroProjectEmailAddressDomainId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("faroProjectId", 4L);

		columnBitmasks.put("emailAddressDomain", 8L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private FaroProjectEmailAddressDomain _escapedModel;

}