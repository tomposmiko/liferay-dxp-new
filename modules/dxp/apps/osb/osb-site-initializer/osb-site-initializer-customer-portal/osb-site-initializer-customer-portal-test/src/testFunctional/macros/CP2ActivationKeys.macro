definition {

	macro _formatCamelCase {
		var camelCase = StringUtil.replace("${camelCase}", " ", "");

		var camelCase = StringUtil.lowerCaseFirstLetter("${camelCase}");

		return "${camelCase}";
	}

	macro assertDropdownItemIsDisabled {
		var key_dropdownItem = "${dropdownItem}";

		AssertElementPresent(locator1 = "CP2ActivationKeys#DISABLED_DROPDOWN_ITEM_BUTTON");
	}

	macro assertDropdownItemIsEnabled {
		var key_dropdownItem = "${dropdownItem}";

		AssertElementPresent(locator1 = "CP2ActivationKeys#ENABLED_DROPDOWN_ITEM_BUTTON");
	}

	macro assertDropdownItemIsVisible {
		var key_dropdownItem = "${dropdownItem}";

		AssertVisible(locator1 = "CP2ActivationKeys#DROPDOWN_ITEM_BUTTON");
	}

	macro assertDropdownSelection {
		var key_option = "${option}";

		AssertVisible(locator1 = "CP2ActivationKeys#DROPDOWN");
	}

	macro assertInstructionsTable {
		for (var text : list "${textList}") {
			var key_text = "${text}";

			AssertVisible(locator1 = "CP2ActivationKeys#RESPONSIVE_TABLE");
		}
	}

	macro assertLicenseQuantity {
		var key_licenseTab = CP2ActivationKeys._formatCamelCase(camelCase = "${licenseTab}");
		var key_numberOfLicenses = "${numberOfLicenses}";

		AssertElementPresent(locator1 = "CP2ActivationKeys#LICENSE_TAB_BUTTON_NUMBER");
	}

	macro assertTextAtTable {
		var key_linePosition = "${linePosition}";
		var key_colunmPosition = "${lineColunm}";
		var key_text = "${text}";

		AssertTextEquals(
			locator1 = "CP2ActivationKeys#TABLE_ELEMENT_BY_POSITION",
			value1 = "${text}");
	}

	macro assertTooltipIsVisible {
		var key_text = "${text}";

		AssertVisible(locator1 = "CP2ActivationKeys#TOOLTIPS_TEXT");
	}

	macro clickAtDownloadButton {
		var key_entitlementName = "${entitlementName}";

		Click(locator1 = "CP2ActivationKeys#TABLES_DOWNLOAD_BUTTON");

		DownloadTempFile();
	}

	macro clickAtDropdownItem {
		var key_dropdownItem = "${dropdownItem}";

		Click(locator1 = "CP2ActivationKeys#DROPDOWN_ITEM_BUTTON");
	}

	macro countTableRows {
		var key_rowCount = "1";
		var rowCount = "0";
		var hasPagesToCount = "true";

		while (("${hasPagesToCount}" == "true")) {
			while ((IsElementPresent(locator1 = "CP2ActivationKeys#KEYS_TABLE_ROWS")) && (maxIterations = "51")) {
				var key_rowCount = ${key_rowCount} + 1;
				var rowCount = ${rowCount} + 1;
			}

			if ((IsElementPresent(locator1 = "CP2ActivationKeys#KEYS_TABLE_ROWS")) && (IsElementNotPresent(locator1 = "CP2ActivationKeys#DISABLED_NEXT_PAGE_BUTTON"))) {
				var key_rowCount = "1";

				CP2ActivationKeys.goToNextTablePage();
			}
			else {
				var hasPagesToCount = "false";
			}
		}

		return "${rowCount}";
	}

	macro exportAllKeyDetails {
		Click(
			key_text = "Actions",
			locator1 = "Button#ANY");

		Click(
			key_action = "Export All Key Details (csv)",
			locator1 = "CP2ActivationKeys#ACTIONS_DROPDOWN");

		Alert.viewSuccessMessage();

		CP2FileUtil.assertDownloadedFileIsPresent(downloadedFileName = "${fileName}");
	}

	macro filterKeyTable {
		var key_filterOption = "${filterOption}";

		CustomerPortal.clickAtButton(text = "Filter");

		CP2ActivationKeys.clickAtDropdownItem(key_dropdownItem = "${filterType}");

		Check.checkNotVisible(locator1 = "CP2ActivationKeys#FILTER_CHECKBOX");

		CustomerPortal.clickAtButton(text = "Apply");
	}

	macro formatLicenseFileName {
		if (!(isSet(licenseType))) {
			var licenseType = "";
		}
		else {
			var licenseType = "${licenseType}-";
		}

		if (!(isSet(product))) {
			var product = "";
		}
		else {
			var product = "${product}-";
		}

		if (!(isSet(version))) {
			var version = "";
		}
		else {
			var version = "${version}-";
		}

		if (!(isSet(licenseName))) {
			var licenseName = "";
		}

		if (!(isSet(copy))) {
			var copy = "";
		}
		else {
			var copy = " (${copy})";
		}

		var downloadedFileName = "${licenseType}${product}${version}${licenseName}";

		var downloadedFileName = StringUtil.toLowerCase("${downloadedFileName}");

		var downloadedFileName = StringUtil.replace("${downloadedFileName}", " ", "");

		var downloadedFileName = "${downloadedFileName}${copy}.${fileType}";

		echo("Expected file name: ${downloadedFileName}");

		return "${downloadedFileName}";
	}

	macro goToKeyTab {
		var key_licenseTab = CP2ActivationKeys._formatCamelCase(camelCase = "${licenseTab}");

		Click(locator1 = "CP2ActivationKeys#LICENSE_TAB_BUTTON");
	}

	macro goToNextTablePage {
		ScrollWebElementIntoView(locator1 = "CP2ActivationKeys#NEXT_PAGE_BUTTON");

		Click(locator1 = "CP2ActivationKeys#NEXT_PAGE_BUTTON");
	}

	macro putMouseOverElementAtTable {
		var key_text = "${text}";

		MouseOver(locator1 = "CP2ActivationKeys#TABLE_ELEMENT_BY_TEXT");
	}

	macro selectKeyCheckboxByEnvironmentName {
		var key_environmentName = "${environmentName}";

		Check(locator1 = "CP2ActivationKeys#KEY_CHECKBOX");
	}

	macro selectKeyCheckboxByExpirationDate {
		var key_position = "${position}";
		var key_date = "${date}";

		Check(locator1 = "CP2ActivationKeys#KEY_CHECKBOX_BY_EXPIRATION_DATE");
	}

	macro selectPaginationQuantity {
		if (IsElementPresent(locator1 = "CP2ActivationKeys#PAGINATION_BUTTON")) {
			Click(locator1 = "CP2ActivationKeys#PAGINATION_BUTTON");

			AssertVisible(
				key_quantity = "${quantity}",
				locator1 = "CP2ActivationKeys#PAGINATION_BUTTON_ITEM");

			Click(
				key_quantity = "${quantity}",
				locator1 = "CP2ActivationKeys#PAGINATION_BUTTON_ITEM");
		}
	}

}