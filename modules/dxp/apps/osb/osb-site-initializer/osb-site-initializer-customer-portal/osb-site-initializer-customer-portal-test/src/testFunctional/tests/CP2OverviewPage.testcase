@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automtion ID: LPS-144412 | Test Summary: Verify if the user can open the drop-down filter and select Active Status"
	@priority = "4"
	test CanUserSelectActiveStatus {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Open the drop-down and assert the active status") {
			CP2NavigationMenu.clickOnStatusButton(
				status = "Active",
				title = "All");

			AssertElementPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "Active");
		}
	}

	@description = "Automation ID: LPS-144413 | Test Summary: Verify if the user can open the drop-down filter and select Expired Status"
	@priority = "4"
	test CanUserSelectExpiredStatus {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Open the drop-down and assert the expired status") {
			CP2NavigationMenu.clickOnStatusButton(
				status = "Expired",
				title = "All");

			AssertElementPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "Expired");
		}
	}

	@description = "Automation ID: LPS-144414 | Test Summary: Verify if the user can open the drop-down filter and select Future Status"
	@priority = "4"
	test CanUserSelectFutureStatus {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Open the drop-down and assert the future status") {
			CP2NavigationMenu.clickOnStatusButton(
				status = "Future",
				title = "All");

			AssertElementPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "Future");
		}
	}

	@description = "Automation ID: LPS-144416 | Test Summary: Verify if the user can open the drop-down filter and select three statuses"
	@priority = "3"
	test CanUserSelectThreeStatuses {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Open the drop-down and assert the all status") {
			CP2NavigationMenu.clickOnStatusButton(
				status = "All",
				title = "All");

			AssertElementPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "All");
		}
	}

	@description = "Automation ID: LPS-144419 | Test Summary: Verify if the value of the filter when transitioning between subscription types is kept and only reset when the user leaves the page"
	@priority = "4"
	test ValueIsKeptOnTransition {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Select a status and open a subscription card") {
			CP2NavigationMenu.clickOnStatusButton(
				status = "Active",
				title = "All");

			CustomerPortal.enterOnSubscription();
		}

		task ("Assert that the subscription status is active") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "Active");
		}

		task ("Go back to Homepage and join a project again") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "Test Account LXC-SM");
		}

		task ("Assert that the active status is no longer selected") {
			AssertElementNotPresent(
				locator1 = "CP2NavigationMenu#STATUS_BUTTON",
				title = "Active");
		}
	}

}