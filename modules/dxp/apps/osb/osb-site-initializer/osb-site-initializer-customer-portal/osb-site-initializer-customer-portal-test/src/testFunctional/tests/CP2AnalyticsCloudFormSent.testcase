@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccount = "Test Account Analytics Cloud";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = ${testSiteName});
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToOneOrMoreAccounts(accountsList = ${testAccount});
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalTearDown();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = ${testSiteName});
		}
	}

	@description = "Automation ID: LPS-150680 | Test Summary: Verify if the same user submits the setup page in two different tabs or diferrent user submits the setup at the same project displays a message to the user that the form was sent"
	@priority = 3
	test MessageConfirmingFormHasAlreadyBeenSent {
		task ("Change the user role in the project") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = "Test Account Analytics Cloud");

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");
		}

		task ("Go to CP2.0 and join a project and Going through onboarding") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(
				status = "Expired",
				title = "Test Account Analytics Cloud");

			CP2Utils.onboardingFlow();
		}

		task ("Go to product Activation then open a new tab") {
			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Analytics Cloud");

			Open.openInTheNewTab(locator1 = "http://localhost:8080");
		}

		task ("Go to CP 2.0 then go to Project and the product activation page") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(
				status = "Expired",
				title = "Test Account Analytics Cloud");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Analytics Cloud");
		}

		task ("Open the Setup Analytics Cloud modal and Fill out the activation form submit and close the tab") {
			CustomerPortal.clickOnFinishActivationButton();

			CP2AnalyticsCloudSetup.typeAllSetupAnalyticsCloudInfoFields();

			CustomerPortal.clickAtButton(text = "Submit");

			CustomerPortal.clickAtButton(text = "Done");

			Navigator.closeWindow();
		}

		task ("Click in Finish Activation and fill the form and assert the message the form has already submitted") {
			CustomerPortal.clickOnFinishActivationButton();

			CP2AnalyticsCloudSetup.typeAllSetupAnalyticsCloudInfoFields();

			CustomerPortal.clickAtButton(text = "Submit");

			AssertElementPresent(locator1 = "CP2AnalyticsCloudSetup#CLOUD_MODAL");

			CustomerPortal.clickAtButton(text = "Done");
		}

		task ("Delete the entries and objects created") {
			CP2Utils.clearCloudEntries(
				position = 3,
				status = "In-Progress");

			CP2Utils.deleteSpecificObjectEntry(
				email = "test@liferay.com",
				portlet = "Analytics Cloud Workspaces");

			CP2Utils.deleteSpecificObjectEntry(
				email = "test@liferay.com",
				portlet = "Incident Report Contacts Analytics Cloud");
		}
	}

	@description = "Automation ID: LPS-150681 | Test Summary: Verify if when the first customer admin logs in and goes through the onboarding flow, and an staff already made the set up the form should be already submitted."
	@priority = 3
	test UserDoesNotGoThroughOnboarding {
		task ("Change the user role in the project") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = "Test Account Analytics Cloud");

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");
		}

		task ("Go to CP2.0 and join a project and Going through onboarding") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(
				status = "Expired",
				title = "Test Account Analytics Cloud");

			CP2Utils.onboardingFlow();
		}

		task ("Go to the product activation page and assert the subtitle") {
			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Analytics Cloud");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#CARD_SUBSCRIPTION",
				title = "Almost there! Setup Analytics Cloud by finishing the activation form.");
		}

		task ("Open the Setup Analytics Cloud modal and Fill out the activation form and submit") {
			CustomerPortal.clickOnFinishActivationButton();

			CP2AnalyticsCloudSetup.typeAllSetupAnalyticsCloudInfoFields();

			CustomerPortal.clickAtButton(text = "Submit");

			CustomerPortal.clickAtButton(text = "Done");
		}

		task ("Delete account flag and go to CP2.0 and join a project") {
			CustomerPortal.deleteEntryAccountFlag(entry = "ERC-003");

			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(
				status = "Expired",
				title = "Test Account Analytics Cloud");
		}

		task ("Going through onboarding") {
			CustomerPortal.clickOnStartProjectSetup();

			CustomerPortal.clickOnSkipForNowButton();
		}

		task ("Assert that the activation card link has changed") {
			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Analytics Cloud");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#CARD_SUBSCRIPTION",
				title = "Your Analytics Cloud workspace is being set up and will be available soon.");
		}

		task ("Delete the entries and objects created") {
			CP2Utils.clearCloudEntries(
				position = 3,
				status = "In-Progress");

			CP2Utils.deleteSpecificObjectEntry(
				email = "test@liferay.com",
				portlet = "Analytics Cloud Workspaces");

			CP2Utils.deleteSpecificObjectEntry(
				email = "test@liferay.com",
				portlet = "Incident Report Contacts Analytics Cloud");
		}
	}

}