@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccounts = "Test Account LXC - SM,Test Account Commerce,Test Account DXP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToOneOrMoreAccounts(accountsList = "${testAccounts}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automation ID: LPS-144449 | Test Automation: Verify if when the user clicks on a subscription card its a pop-up showing the detailed terms"
	@priority = "4"
	test ClickingSubscriptionCardPopUpShows {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");
		}

		task ("Assert that a modal with all details opens") {
			Click(
				cardName = "Non-Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#MODAL_TITLE",
				modalTitle = "Non-Production");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "LXC - SM Non-Production");
		}
	}

	@description = "Automation ID: LPS-144483 | Test Summary: Verify there if status Active shows up"
	@ignore = "true"
	@priority = "3"
	test IfActiveStatusShowsUp {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");
		}

		task ("Open the modal and assert the active status") {
			Click(
				cardName = "Non-Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertTextEquals(
				locator1 = "CustomerPortalSite#TABLE_HEAD",
				title = "Status",
				value1 = "Status");

			AssertTextEquals(
				locator1 = "CustomerPortalSite#TABLE_STATUS",
				status = "Active",
				value1 = "Active");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "LXC - SM Non-Production");
		}
	}

	@description = "Automation ID: LPS-144484 | Test Summary: Verify there if status Expired shows up"
	@ignore = "true"
	@priority = "2"
	test IfExpiredStatusShowsUp {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account Commerce");
		}

		task ("Assert the Expired status on the card") {
			AssertTextEquals(
				cardName = "Developer Tools",
				locator1 = "CustomerPortalSite#CARD_STATUS",
				status = "Expired",
				value1 = "Expired");
		}
	}

	@description = "Automation ID: LPS-144485 | Test Summary: Verify there if status Future shows up"
	@ignore = "true"
	@priority = "2"
	test IfFutureStatusShowsUp {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account Commerce");
		}

		task ("Assert the Future status on the card") {
			Click(
				cardName = "Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertTextEquals(
				locator1 = "CustomerPortalSite#TABLE_HEAD",
				title = "Status",
				value1 = "Status");

			AssertTextEquals(
				locator1 = "CustomerPortalSite#TABLE_STATUS",
				status = "Future",
				value1 = "Future");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "Commerce Production");
		}
	}

	@description = "Automation ID: LPS-144452 | Test Summary: Check if when the user clicks out of the modal it closes"
	@priority = "3"
	test ModalCloseIfClickedOut {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");
		}

		task ("Open the modal and assert that it is being displayed") {
			Click(
				cardName = "Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#MODAL_TITLE",
				modalTitle = "LXC - SM");
		}

		task ("Assert that the modal has closed") {
			KeyPress(
				locator1 = "//body",
				value1 = "\ESCAPE");

			AssertElementNotPresent(locator1 = "CustomerPortalSite#MODAL");
		}
	}

	@description = "Automation ID: LPS-144464 | Test Summary: Verify that the Provisioned column appears for Commerce"
	@ignore = "true"
	@priority = "3"
	test ProvisionedColumnAppearsForCommerce {
		task ("Width desktop") {
			SetWindowSize(value1 = "1920,1080");
		}

		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account Commerce");
		}

		task ("Open the modal and assert the Provisioned column for Commerce") {
			Click(
				cardName = "Developer Tools",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#TABLE_HEAD",
				title = "Provisioned",
				value1 = "Provisioned");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "Commerce Developer Tools");
		}
	}

	@description = "Automation ID: LPS-144466 | Test Summary: Verify that the Provisioned column appears for DXP."
	@ignore = "true"
	@priority = "3"
	test ProvisionedColumnAppearsForDXP {
		task ("Width desktop") {
			SetWindowSize(value1 = "1920,1080");
		}

		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account DXP");
		}

		task ("Open the modal and assert the Provisioned column for DXP") {
			Click(
				cardName = "Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertElementPresent(
				locator1 = "CustomerPortalSite#TABLE_HEAD",
				title = "Provisioned",
				value1 = "Provisioned");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "DXP Production");
		}
	}

	@description = "Automation ID: LPS-144470 | Test Summary: Verify that the Provisioned column does not appear for DXP Cloud"
	@priority = "3"
	test ProvisionedColumnAppearsForDXPCloud {
		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");
		}

		task ("Open modal and assert that the Provisioned column is not displayed for LXC - SM") {
			Click(
				cardName = "Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			AssertElementNotPresent(
				locator1 = "CustomerPortalSite#TABLE_HEAD",
				title = "Provisioned",
				value1 = "Provisioned");
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "LXC - SM Production");
		}
	}

	@description = "Automation ID: LPS-144454 | Test Summary: Verify there is value under the Start - End Date column"
	@ignore = "true"
	@priority = "4"
	test ValueUnderColumnFields {
		ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

		CustomerPortal.enterOnProject(title = "Test Account DXP");

		task ("Open the modal and assert the start and end dates of the subscription") {
			Click(
				cardName = "Production",
				locator1 = "CustomerPortalSite#CARD_NAME");

			CustomerPortal.viewTableValue();
		}

		task ("Close the modal") {
			CustomerPortal.clickOnTheCloseButton(modalTitle = "DXP Production");
		}
	}

}