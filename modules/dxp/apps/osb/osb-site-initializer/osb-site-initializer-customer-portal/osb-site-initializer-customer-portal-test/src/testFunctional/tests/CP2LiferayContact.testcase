@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}
	}

	tearDown {
		CustomerPortal.customerPortalApisTearDown();

		JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

		PortalInstances.tearDownCP();
	}

	@description = "LPS-143375 - Verify if Liferay Contact displays Liferay Contact's email."
	@priority = "4"
	test IsContactEmailDisplayed {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		AssertTextEquals(
			locator1 = "CP2LiferayContact#DISPLAY_CONTACT",
			title = "customer-service@liferay.com",
			value1 = "customer-service@liferay.com");
	}

	@description = "LPS-143373 - Verify if Liferay Contact displays Liferay Contact's name."
	@priority = "4"
	test IsContactNameDisplayed {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		AssertElementPresent(locator1 = "CP2LiferayContact#CONTACT_NAME");
	}

	@description = "LPS-143374 - Verify if Liferay Contact displays Liferay Contact's role."
	@priority = "3"
	test IsContactRoleDisplayed {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		AssertTextEquals(
			locator1 = "CP2LiferayContact#DISPLAY_CONTACT",
			title = "Liferay Support",
			value1 = "Liferay Support");
	}

}