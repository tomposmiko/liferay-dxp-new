@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccounts = "Avangrid Portals";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToOneOrMoreAccounts(accountsList = "${testAccounts}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automation ID: LPS-146026 | Test Summary: Verify that after clicking the Download Key button the user download the appropriate Elasticsearch license"
	@priority = "4"
	test CanDownloadTheKeyWhenASubscriptionIsSelected {

		// Needs refactor since it depends on example Avangrid Portals account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");
		}

		task ("When a user selects a project in Customer Portal") {
			CustomerPortal.enterOnProject(title = "${testAccounts}");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Enterprise Search");
		}

		task ("When I click at the download button") {
			CustomerPortal.clickAtButton(text = "Download Key");
		}

		//task ("Then I assert that the alert with the message 'Activation Key Was Downloaded Successfully' is visible") {
		//	CustomerPortal.viewAlert(alertText = "Activation Key was downloaded successfully");
		//}

	}

	@description = "Automation ID: LPS-146022 | Test Summary: Verify that once a subscription was selected, the next drop-down is populated a list of start and end dates"
	@priority = "5"
	test CanViewListOfStartAndEndDatesActiveSubscriptionTerms {

		// Needs refactor since it depends on example Avangrid Portals account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");
		}

		task ("When a user selects a project in Customer Portal") {
			CustomerPortal.enterOnProject(title = "${testAccounts}");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Enterprise Search");
		}

		task ("Assert the list of LES subscriptions terms") {
			CP2Utils.assertDropdownSubscriptionTermsList();
		}
	}

	@description = "Automation ID: LPS-146021 | Test Summary: Verify that by clicking on subscriptions the user can select from a drop-down list their LES subscriptions"
	@priority = "5"
	test SeeListOfLESSSubscriptions {

		// Needs refactor since it depends on example Avangrid Portals account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");
		}

		task ("When a user selects a project in Customer Portal") {
			CustomerPortal.enterOnProject(title = "${testAccounts}");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "Enterprise Search");
		}

		task ("Assert the list of LES subscriptions") {
			var options = "Non-Production,Production,Backup";

			CP2Utils.assertDropdownList(optionList = "${options}");
		}
	}

}