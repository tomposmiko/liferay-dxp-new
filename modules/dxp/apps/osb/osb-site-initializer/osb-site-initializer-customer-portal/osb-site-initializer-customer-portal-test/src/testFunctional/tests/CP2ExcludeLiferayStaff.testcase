@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToAllAccounts();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automation ID: LPS-147791 | Test Summary: Verify if the Liferay Staff user can view a project for which he is not a member/worker/does not participate/does not have a role in it"
	@priority = "4"
	test IfStaffCanSeeProjectHeIsNotRelated {
		task ("Check how many projects are available in CP2.0") {
			Account.openAccountsAdmin();

			CustomerPortal.tableListInAccountsAdmin(projectsList = "Test Account LXC - SM,Test Account DXP,Test Account Analytics Cloud,Test Account Commerce,Test Account Enterprise Search,Test Account Portal,Test Account QA 7.0,Test Account QA 7.1,Test Account QA 7.2,Test Account QA 7.3,Test Account QA 7.4");
		}

		task ("Navigate to the Customer Portal 2.0 and assert the number of projects displayed on the homepage") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.tableListInHomepage(projectList = "Test Account LXC - SM,Test Account DXP,Test Account Analytics Cloud,Test Account Commerce,Test Account Enterprise Search,Test Account Portal,Test Account QA 7.0,Test Account QA 7.1,Test Account QA 7.2,Test Account QA 7.3,Test Account QA 7.4");
		}
	}

	@description = "Automation ID: LPS-147725 | Test Summary: Verify if when the user is Liferay Staff and it's administrator of the project, he will pass through the onboarding"
	@priority = "5"
	test IfStaffIsAdmWillPassOnboarding {
		task ("Navigate to Account Administrator and make the user an admin of the project") {
			Account.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = "Test Account LXC - SM");

			Account.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");
		}

		task ("Assert that when the user is Liferay Staff and administrator of the project has gone through onboarding") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");

			AssertElementPresent(locator1 = "CustomerPortalSite#START_PROJECT_SETUP_BUTTON");
		}
	}

	@description = "Automation ID: LPS-147722 | Test Summary: Verify if when user is Liferay Staff and not administrator of a project, he wont pass through the onboarding"
	@priority = "5"
	test IfStaffNotAdmWontPassOnboarding {
		task ("Navigate to Account Administrator") {
			CustomerPortal.openAccountsAdminForCP();
		}

		task ("View the checkbox of role entry is unchecked") {
			AssertElementNotPresent(
				key_tableEntry = "Account Administrator",
				locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

			Button.click(button = "Done");
		}

		task ("Assert that the Liferay Staff user has not gone through onboarding") {
			CP2Utils.goToCustomerPortalSiteWithRefresh();

			CustomerPortal.enterOnProject(title = "Test Account LXC - SM");

			AssertElementNotPresent(locator1 = "CustomerPortalSite#START_PROJECT_SETUP_BUTTON");
		}
	}

	@description = "Automation ID: LPS-147731 | Test Summary: Verify if when the user isn't Liferay Staff and it's a administrator of a Project, he will pass through the onboarding"
	@ignore = "true"
	@priority = "5"
	test NotASatffButIsAdmWillPassOnboarding {

		// TODO LPS-147731 NotASatffButIsAdmWillPassOnboarding pending implementation

	}

}