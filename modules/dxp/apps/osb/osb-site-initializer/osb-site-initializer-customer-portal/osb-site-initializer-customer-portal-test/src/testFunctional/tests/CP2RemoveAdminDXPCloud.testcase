@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccount = "Test Account LXC-SM";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToOneOrMoreAccounts(accountsList = "${testAccount}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automation ID: LPS-150058 | Test Summary: Verify if the user is allowed to remove the additional admin(s) added before continuing"
	@priority = "5"
	test IfAddedAdminCanBeRemoved {
		task ("Change the user role in the project") {
			Accounts.openAccountsAdmin();

			CustomerPortal.accountTableProject(title = "${testAccount}");

			Accounts.addAssigneeToRoleViaUsersTab(
				accountRoleTitle = "Account Administrator",
				accountUserName = "Test Test");
		}

		task ("Go to CP2.0 and join a project") {
			ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

			CustomerPortal.enterOnProject(title = "${testAccount}");
		}

		task ("Going through onboarding to Setup") {
			CustomerPortal.clickOnStartProjectSetup();

			CustomerPortal.clickOnSkipForNowButton();
		}

		task ("Fill out all the fields in the form") {
			CP2DXPCloudSetup.typeAllSetupDXPCloudInfoFields();
		}

		task ("Add new administrators and before submitting remove them") {
			CP2DXPCloudSetup.clickOnAddAnotherAdminButton();

			CP2DXPCloudSetup.clickOnRemoveThisAdminButton();
		}

		task ("Assert that the additional admin fields are no longer present in the modal") {
			CP2DXPCloudSetup.notViewSetupDXPCloufEXtraInfo();
		}
	}

}