@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Add test user access to all Accounts") {
			CustomerPortal.assignUserToOrganization();

			CustomerPortal.addUserToAllAccounts();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}

	@description = "Automation ID: LPS-148483 | Test Summary: Verify if when the user choose the ERC-003 and clicks on the Analytics Cloud product the url follow the respective page"
	@priority = "5"
	test IfAnalyticsCloudUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-003/activation/analytics-cloud");
		}

		task ("Assert that the URL displays the page of the Analytics Cloud product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "Analytics Cloud");
		}
	}

	@description = "Automation ID: LPS-148477 | Test Summary: Verify if when the user choose the ERC-004 and clicks on the Commerce product the url follow the respective page"
	@priority = "5"
	test IfCommerceUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-004/activation/commerce");
		}

		task ("Assert that the URL displays the page of the Commerce product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "Commerce");
		}
	}

	@description = "Automation ID: LPS-148479 | Test Summary: Verify if when the user choose the ERC-001 and clicks on the DXP Cloud product the url follow the respective page"
	@priority = "5"
	test IfDXPCloudUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-001/activation/lxc-sm");
		}

		task ("Assert that the URL displays the page of the LXC-SM product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "LXC-SM");
		}
	}

	@description = "Automation ID: LPS-148478 | Test Summary: Verify if when the user choose the ERC-007 and clicks on the DXP product the url follow the respective page"
	@priority = "5"
	test IfDXPUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-002/activation/dxp");
		}

		task ("Assert that the URL displays the page of the DXP product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "DXP");
		}
	}

	@description = "Automation ID: LPS-148481 | Test Summary: Verify if when the user choose the Riyad Bank - Corporate Website and clicks on the Enterprise Search product the url follow the respective page"
	@priority = "5"
	test IfEnterpriseUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-005/activation/enterprise-search");
		}

		task ("Assert that the URL displays the page of the Enterprise Search product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "Enterprise Search");
		}
	}

	@description = "Automation ID: LPS-148480 | Test Summary: Verify if when the user choose the ERC-002 and clicks on the Partnership product the url follow the respective page"
	@ignore = "true"
	@priority = "5"
	test IfPartnershipUrlFollowsRespectivePage {

		// Reason: Partnership page not yet implemented

		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-007/activation/partnership");
		}

		task ("Assert that the URL displays the page of the Partnership product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "Partnership");
		}
	}

	@description = "Automation ID: LPS-148482 | Test Summary: Verify if when the user choose the ERC-005 and clicks on the Portal product the url follow the respective page"
	@priority = "5"
	test IfPortalUrlFollowsRespectivePage {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-006/activation/portal");
		}

		task ("Assert that the URL displays the page of the Portal product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "Portal");
		}
	}

	@description = "Automation ID: LPS-148484 | Test Summary: Verify if when the user go back to the Project Listing the URLs get back to normal"
	@priority = "4"
	test IfProjectListingURLStillTheSame {
		var baseURL = PropsUtil.get("portal.url");

		task ("Go to CP2.0 and navigate to the product activation page") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}/project/#/ERC-008/activation/lxc-sm");
		}

		task ("Assert that the URL displays the page of the DXP product") {
			AssertElementPresent(
				locator1 = "CP2NavigationMenu#PRODUCT",
				product = "LXC-SM");
		}

		task ("Navigate to the homepage and assert that the URL displays the homepage") {
			Navigator.openSpecificURL(url = "${baseURL}/web/${testSiteURL}");

			AssertElementPresent(locator1 = "CP2LiferayContact#FIND_A_PROJECT");
		}
	}

}