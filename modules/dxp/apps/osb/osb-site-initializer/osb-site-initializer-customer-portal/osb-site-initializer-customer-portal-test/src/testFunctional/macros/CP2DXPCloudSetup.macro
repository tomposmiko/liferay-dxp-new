definition {

	macro activeDisasterRecoveryDataCenter {
		CustomerPortal.showCPObject(title = "Account Subscription");

		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Account Subscriptions");

		CustomerPortal.viewCPObjectCustomInfo(index = "4");

		Click(locator1 = "CP2DXPCloudSetup#HAS_DISASTER_DATA_CENTER_REGION");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();
	}

	macro assertCardStatusChanged {
		AssertTextEquals(
			key_status = "${status}",
			locator1 = "CustomerPortalSite#STATUS_CARD",
			value1 = "${value}");
	}

	macro clearAndDeleteDXPCloudEntries {
		CustomerPortal.clearActivationStatus(status = "${status}");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Site");

		CP2DXPCloudSetup.deleteEntryCloudEnvironments(entry = "ERC-001");

		CustomerPortal.deleteCPObject(title = "DXP Cloud Environment");

		CustomerPortal.deleteCPObject(title = "Account Subscription Group");
	}

	macro clickOnAddAnotherAdminButton {
		Click(locator1 = "CP2DXPCloudSetup#ADD_ANOTHER_ADMIN");
	}

	macro clickOnProductConsoleLink {
		Click(locator1 = "CustomerPortalSite#PRODUCT_CONSOLE");
	}

	macro clickOnRemoveThisAdminButton {
		Click(locator1 = "CP2DXPCloudSetup#REMOVE_THIS_ADMIN_DXP_CLOUD");
	}

	macro createDXPCloudObjects {
		CustomerPortal.showCPObject(title = "Account Subscription Group");

		CustomerPortal.addCPObject(title = "DXP Cloud Environment");
	}

	macro deactivateDisasterRecoveryDataCenter {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Account Subscriptions");

		CustomerPortal.viewCPObjectCustomInfo(index = "4");

		Click(locator1 = "CP2DXPCloudSetup#HAS_DISASTER_DATA_CENTER_REGION");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		CustomerPortal.deleteCPObject(title = "Account Subscription");
	}

	macro deleteDXPCloudEnvironments {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Objects");

		CustomerPortal.viewCPObjectCustomInfo(index = "14");

		CreateObject.checkToggleActive();

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Choose an Option");

		CustomerPortal.checkToggleHideWidget();

		CreateObject.saveObject();
	}

	macro deleteEntryCloudEnvironments {
		var key_status = "${entry}";

		if (IsElementPresent(locator1 = "CustomerPortalSite#DND_TABLE_ELEMENT")) {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "${portlet}");

			ObjectPortlet.deleteEntry(entry = "${entry}");
		}
	}

	macro notViewSetupDXPCloufEXtraInfo {
		AssertElementNotPresent(
			label = "dxp.admins[1].email",
			locator1 = "CustomerPortalSite#SETUP_VALUE");

		AssertElementNotPresent(
			label = "dxp.admins[1].firstName",
			locator1 = "CustomerPortalSite#SETUP_VALUE");

		AssertElementNotPresent(
			label = "dxp.admins[1].lastName",
			locator1 = "CustomerPortalSite#SETUP_VALUE");

		AssertElementNotPresent(
			label = "dxp.admins[1].github",
			locator1 = "CustomerPortalSite#SETUP_VALUE");
	}

	macro typeAllSetupDXPCloudInfoFields {
		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "projectId",
			value = "001");

		Select(
			locator1 = "CP2DXPCloudSetup#SELECT_DATA_CENTER_REGION",
			value1 = "Iowa, USA");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "email",
			value = "test@liferay.com");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "firstName",
			value = "FirstName");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "lastName",
			value = "LastName");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "github",
			value = "GitHubUser");
	}

	macro typeAllSetupDXPCloufEXtraInfo {
		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "email",
			position = "2",
			value = "test@liferay.com");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "firstName",
			position = "2",
			value = "FirstName");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "lastName",
			position = "2",
			value = "LastName");

		CP2DXPCloudSetup.typeSetupDXPCloudInfoFields(
			label = "github",
			position = "2",
			value = "GitHubUser");
	}

	macro typeSetupDXPCloudInfoFields {
		if (!(isSet(position))) {
			var position = "1";
		}

		var key_index = "${position}";

		Type(
			locator1 = "CustomerPortalSite#SETUP_FIELDS",
			value1 = "${value}");
	}

	macro viewDisasterRegionList {
		for (var region : list "${regionRow}") {
			AssertElementPresent(
				key_region = "${regionRow}",
				locator1 = "CP2DXPCloudSetup#DISASTER_REGION",
				value1 = "${region}");
		}
	}

	macro viewRegionList {
		Click(locator1 = "CP2DXPCloudSetup#SELECT_DATA_CENTER_REGION");

		for (var regionName : list "${regionList}") {
			AssertElementPresent(
				key_regionName = "${regionList}",
				locator1 = "CP2DXPCloudSetup#REGIONS_NAMES",
				value1 = "${regionName}");
		}
	}

	macro viewSetupDXPCloufEXtraFields {
		AssertElementPresent(
			label = "dxp.admins[1].email",
			locator1 = "CustomerPortalSite#SETUP_FIELDS");

		AssertElementPresent(
			label = "dxp.admins[1].firstName",
			locator1 = "CustomerPortalSite#SETUP_FIELDS");

		AssertElementPresent(
			label = "dxp.admins[1].lastName",
			locator1 = "CustomerPortalSite#SETUP_FIELDS");

		AssertElementPresent(
			label = "dxp.admins[1].github",
			locator1 = "CustomerPortalSite#SETUP_FIELDS");
	}

	macro viewSetupDXPCloufEXtraInfo {
		AssertElementPresent(
			label = "dxp.admins[1].email",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "test@liferay.com");

		AssertElementPresent(
			label = "dxp.admins[1].firstName",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "FirstName");

		AssertElementPresent(
			label = "dxp.admins[1].lastName",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "LastName");

		AssertElementPresent(
			label = "dxp.admins[1].github",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "GitHubUser");
	}

	macro viewSetupDXPCloufInfo {
		AssertElementPresent(
			label = "dxp.projectId",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "001");

		AssertElementPresent(
			locator1 = "CP2DXPCloudSetup#SELECT_DATA_CENTER_REGION",
			value1 = "Iowa, USA");

		AssertElementPresent(
			label = "dxp.admins[0].email",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "test@liferay.com");

		AssertElementPresent(
			label = "dxp.admins[0].firstName",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "FirstName");

		AssertElementPresent(
			label = "dxp.admins[0].lastName",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "LastName");

		AssertElementPresent(
			label = "dxp.admins[0].github",
			locator1 = "CustomerPortalSite#SETUP_VALUE",
			value = "GitHubUser");
	}

}