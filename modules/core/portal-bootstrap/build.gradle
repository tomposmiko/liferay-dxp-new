import aQute.bnd.osgi.Domain

import com.liferay.gradle.plugins.tasks.ExecuteBndTask
import com.liferay.gradle.util.copy.RenameDependencyClosure

import org.gradle.util.GUtil

task copySystemPackagesExtraLibs(type: Copy)
task copySystemPackagesExtraManifest(type: Copy)

String buildProfile = System.properties["build.profile"]

File systemPackagesExtraManifestFile = file("system.packages.extra.mf")

if (!System.getenv("JENKINS_HOME") || !systemPackagesExtraManifestFile.exists()) {
	systemPackagesExtraManifestFile = new File(buildDir, "system.packages.extra.mf")

	task buildSystemPackagesExtraManifest(type: ExecuteBndTask)

	buildSystemPackagesExtraManifest {
		classpath = files()

		dependsOn classes
		dependsOn copySystemPackagesExtraLibs

		outputFile = systemPackagesExtraManifestFile

		properties liferayOSGi.bundleDefaultInstructions

		property "-check", "imports"
		property "-fixupmessages", '"Classpath is empty. Private-Package ...";is:=ignore'
		property "-include", "system.packages.extra.bnd"

		property "Bundle-SymbolicName", {
			Properties bndProperties = GUtil.loadProperties(file("system.packages.extra.bnd"))

			bndProperties.getProperty("Bundle-SymbolicName")
		}

		property "Bundle-Version", {
			project.version
		}

		property "Provide-Capability", {
			File portalImplJarFile = configurations.compileOnly.find {
				it.name.startsWith "com.liferay.portal.impl-"
			}

			Domain portalImplJarDomain = Domain.domain(portalImplJarFile)

			portalImplJarDomain.provideCapability.toString()
		}

		resourceDirs = files()
		sourceDirs = files(sourceSets.main.allSource.srcDirs.findAll { it.directory })
		writeManifest = true
	}

	jar {
		dependsOn buildSystemPackagesExtraManifest
	}
}
else {
	logger.lifecycle "Reusing file {}.", systemPackagesExtraManifestFile.absolutePath
}

bundle {
	instruction "system.packages.extra.manifest.file", relativePath(systemPackagesExtraManifestFile)
}

copySystemPackagesExtraLibs {
	from configurations.compileOnly
	into "lib"
	rename new RenameDependencyClosure(project, configurations.compileOnly.name)
}

dependencies {
	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"

	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.jaxws.osgi.bridge", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.osgi.felix.util", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.osgi.service.tracker.collections", version: "3.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.concurrent", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.content", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.encryptor", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.executor", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.function", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.io", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.lang", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.log4j", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.mail", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.memory", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.nio", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.process", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.reflect", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.string", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.xml", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.registry.api", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.registry.impl", version: "2.0.0"
	compileOnly group: "com.liferay", name: "org.eclipse.osgi", version: "3.13.0.LIFERAY-PATCHED-4"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compileOnly group: "org.springframework", name: "spring-beans", version: "4.1.9.RELEASE"
	compileOnly group: "org.springframework", name: "spring-context", version: "4.1.9.RELEASE"
	compileOnly group: "org.springframework", name: "spring-core", version: "4.1.9.RELEASE"
	compileOnly project(":core:portal-app-license-api")
}

liferay {
	deployDir = file("${liferayHome}/osgi/core")
}