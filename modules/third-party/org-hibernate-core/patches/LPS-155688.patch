diff --git a/org/hibernate/dialect/Dialect.java b/org/hibernate/dialect/Dialect.java
index 1b0c77685eb3..a73d05b03269 100644
--- a/org/hibernate/dialect/Dialect.java
+++ b/org/hibernate/dialect/Dialect.java
@@ -36,6 +36,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Properties;
 import java.util.Set;
+import java.util.regex.Pattern;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -106,6 +107,9 @@ public abstract class Dialect {
 	public static final String QUOTE = "`\"[";
 	public static final String CLOSED_QUOTE = "`\"]";
 
+	private static final Pattern ESCAPE_CLOSING_COMMENT_PATTERN = Pattern.compile( "\\*/" );
+	private static final Pattern ESCAPE_OPENING_COMMENT_PATTERN = Pattern.compile( "/\\*" );
+
 	private static final Set<BasicType> streamBindingLobTypes = new HashSet<BasicType>();
 
 	static {
@@ -1998,4 +2002,13 @@ public abstract class Dialect {
 		// oddly most database in fact seem to, so true is the default.
 		return true;
 	}
+
+	public static String escapeComment(String comment) {
+		if ( StringHelper.isNotEmpty( comment ) ) {
+			final String escaped = ESCAPE_CLOSING_COMMENT_PATTERN.matcher( comment ).replaceAll( "*\\\\/" );
+			return ESCAPE_OPENING_COMMENT_PATTERN.matcher( escaped ).replaceAll( "/\\\\*" );
+		}
+		return comment;
+	}
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/Delete.java b/org/hibernate/sql/Delete.java
index 6ec17cc28415..d061618808f3 100644
--- a/org/hibernate/sql/Delete.java
+++ b/org/hibernate/sql/Delete.java
@@ -28,6 +28,8 @@ import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.Map;
 
+import org.hibernate.dialect.Dialect;
+
 /**
  * An SQL <tt>DELETE</tt> statement
  *
@@ -55,7 +57,7 @@ public class Delete {
 	public String toStatementString() {
 		StringBuffer buf = new StringBuffer( tableName.length() + 10 );
 		if ( comment!=null ) {
-			buf.append( "/* " ).append(comment).append( " */ " );
+			buf.append( "/* " ).append( Dialect.escapeComment( comment ) ).append( " */ " );
 		}
 		buf.append( "delete from " ).append(tableName);
 		if ( where != null || !primaryKeyColumns.isEmpty() || versionColumnName != null ) {
@@ -140,3 +142,4 @@ public class Delete {
 	}
 
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/Insert.java b/org/hibernate/sql/Insert.java
index 5d8e23257fe1..5caa61835e87 100644
--- a/org/hibernate/sql/Insert.java
+++ b/org/hibernate/sql/Insert.java
@@ -109,7 +109,7 @@ public class Insert {
 	public String toStatementString() {
 		StringBuffer buf = new StringBuffer( columns.size()*15 + tableName.length() + 10 );
 		if ( comment != null ) {
-			buf.append( "/* " ).append( comment ).append( " */ " );
+			buf.append( "/* " ).append( Dialect.escapeComment( comment ) ).append( " */ " );
 		}
 		buf.append("insert into ")
 			.append(tableName);
@@ -138,3 +138,4 @@ public class Insert {
 		return buf.toString();
 	}
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/InsertSelect.java b/org/hibernate/sql/InsertSelect.java
index 69a54ea9672e..bc5a1c690706 100644
--- a/org/hibernate/sql/InsertSelect.java
+++ b/org/hibernate/sql/InsertSelect.java
@@ -81,7 +81,7 @@ public class InsertSelect {
 
 		StringBuffer buf = new StringBuffer( (columnNames.size() * 15) + tableName.length() + 10 );
 		if ( comment!=null ) {
-			buf.append( "/* " ).append( comment ).append( " */ " );
+			buf.append( "/* " ).append( Dialect.escapeComment( comment ) ).append( " */ " );
 		}
 		buf.append( "insert into " ).append( tableName );
 		if ( !columnNames.isEmpty() ) {
@@ -99,3 +99,4 @@ public class InsertSelect {
 		return buf.toString();
 	}
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/QuerySelect.java b/org/hibernate/sql/QuerySelect.java
index f019782ab807..d1aee4bb1d91 100644
--- a/org/hibernate/sql/QuerySelect.java
+++ b/org/hibernate/sql/QuerySelect.java
@@ -135,7 +135,7 @@ public class QuerySelect {
 
 	public String toQueryString() {
 		StringBuffer buf = new StringBuffer(50);
-		if (comment!=null) buf.append("/* ").append(comment).append(" */ ");
+		if (comment!=null) buf.append("/* ").append( Dialect.escapeComment( comment ) ).append(" */ ");
 		buf.append("select ");
 		if (distinct) buf.append("distinct ");
 		String from = joins.toFromFragmentString();
@@ -211,3 +211,4 @@ public class QuerySelect {
 	}
 
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/Select.java b/org/hibernate/sql/Select.java
index 9a52cd468cec..5886c5bea9af 100644
--- a/org/hibernate/sql/Select.java
+++ b/org/hibernate/sql/Select.java
@@ -59,7 +59,7 @@ public class Select {
 	public String toStatementString() {
 		StringBuffer buf = new StringBuffer(guesstimatedBufferSize);
 		if ( StringHelper.isNotEmpty(comment) ) {
-			buf.append("/* ").append(comment).append(" */ ");
+			buf.append( "/* " ).append( Dialect.escapeComment( comment ) ).append( " */ " );
 		}
 		
 		buf.append("select ").append(selectClause)
@@ -207,3 +207,4 @@ public class Select {
 	}
 
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/SimpleSelect.java b/org/hibernate/sql/SimpleSelect.java
index 5035eeb5d442..732a09433e30 100644
--- a/org/hibernate/sql/SimpleSelect.java
+++ b/org/hibernate/sql/SimpleSelect.java
@@ -156,7 +156,7 @@ public class SimpleSelect {
 			);
 		
 		if ( comment!=null ) {
-			buf.append("/* ").append(comment).append(" */ ");
+			buf.append("/* ").append( Dialect.escapeComment( comment ) ).append(" */ ");
 		}
 		
 		buf.append("select ");
@@ -215,3 +215,4 @@ public class SimpleSelect {
 	}
 
 }
+/* @generated */
\ No newline at end of file
diff --git a/org/hibernate/sql/Update.java b/org/hibernate/sql/Update.java
index 400fe7c95e5d..e92ec6986349 100644
--- a/org/hibernate/sql/Update.java
+++ b/org/hibernate/sql/Update.java
@@ -181,7 +181,7 @@ public class Update {
 	public String toStatementString() {
 		StringBuffer buf = new StringBuffer( (columns.size() * 15) + tableName.length() + 10 );
 		if ( comment!=null ) {
-			buf.append( "/* " ).append( comment ).append( " */ " );
+			buf.append( "/* " ).append( Dialect.escapeComment( comment ) ).append( " */ " );
 		}
 		buf.append( "update " ).append( tableName ).append( " set " );
 		boolean assignmentsAppended = false;
@@ -240,3 +240,4 @@ public class Update {
 		return buf.toString();
 	}
 }
+/* @generated */
\ No newline at end of file
