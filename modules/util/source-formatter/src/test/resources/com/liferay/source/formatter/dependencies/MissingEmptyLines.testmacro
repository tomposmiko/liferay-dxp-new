@component-name = "portal-acceptance"
definition {
	property custom.properties = "layout.parallel.render.enable=false";
	setUp {
		TestCase.setUpPortalInstance();
	}
	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");
	}
	@description = "Validate if the user can create a Experience"
	@priority = "5"
	test AddDefaultExperienceWithBannerCenter {
		//Call Navigator.openWithAppendToBaseURL()

		//	Paremater: urlAppend
		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");
		// Call ContentPages.clickPencil()
		ContentPages.clickPencil();

		Experience.clickBasicSections();
		Experience.addBannerCenterElement();

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		// Call AssertTextEquals()
		// Parameter1: locator1
		// Parameter2: value1
		AssertTextEquals(
			locator1 = "Experience#BANNER_CENTER_TITLE_EXAMPLE_PORTLET",
			value1 = "Banner Title Example");
	}
	@description = "This is the description for TestA."
	@priority = "5"
	test TestA
	{
		CalendarNavigator.gotoConfiguration();
	}
	test TestB {
		property setup.wizard.enabled = "true";
	}
	@description = "This is the description for TestC."
	@ignore = "true"
	@priority = "5"
	test TestC{
		Upgrade.resetTestUserPassword();
	}
}