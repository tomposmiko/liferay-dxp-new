definition {
	macro configureBreadcrumb {
		SelectFrame(
			locator1 = "IFrame#CONFIGURATION"
		);
	}

	@prose = "I assert the ${breadcrumbName}"
	macro viewPG {
		var key_breadcrumbName = "${breadcrumbName}";
		static var breadcrumbNameUppercase = StringUtil.upperCase("${breadcrumbName}");

		AssertTextEquals(locator1 = "Breadcrumb#BREADCRUMB_ENTRY", value1 = "${breadcrumbNameUppercase}");

		if ((IsElementPresent(locator1 = "Blogs#ADD_BLOGS_ENTRY")) &&
			("${check}" == "true") &&
			(isSet(duplicate))) {

			Alert.viewSuccessMessage();
		}

		return "${breadcrumbNameUppercase}";
	}

	@prose = "I want to print rows-hash table: ${table}"
	macro echoRowsHashTable {
		var RowsHashTable rowsHashTable = new RowsHashTable("${table}");

		for  (var row : table "${rowsHashTable}")
			{
			TableEcho.echoTwoVars(
				v0 = "${row.hash('project_id')}",
				v1 = "${row.hash('status')}"
			);
		}
		var RawTable rawTable = new RawTable("${table}");

		for (var row : table "${rawTable}")  {
			TableEcho.echoTwoVars(
				v0 = "${row[0]}",
				v1 = "${row[1]}"
			);
		}
	}
}