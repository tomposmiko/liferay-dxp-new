@component-name = "portal-project-template"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Project Templates";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Templates Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "5"
	test MvcPortletTemplateSmoke {
		property portal.acceptance = "false";
		property project.templates = "mvc-portlet";
		property test.name.skip.portal.instance = "SampleProjectTemplates#MvcPortletTemplateSmoke";

		Navigator.gotoPage(pageName = "Templates Page");

		Portlet.addPG(portletName = "Samplemvc");

		Portlet.viewPG(
			portletBody = "Hello from Samplemvc!",
			portletName = "Samplemvc");
	}

	@priority = "5"
	test RestTemplateSmoke {
		property portal.acceptance = "false";
		property project.templates = "rest";
		property test.name.skip.portal.instance = "SampleProjectTemplates#RestTemplateSmoke";

		GogoShell.openGogoShellAdmin();

		GogoShell.viewModuleStatus(
			moduleName = "samplerest",
			moduleStatus = "Active");
	}

	@priority = "5"
	test ServiceBuilderTemplateSmoke {
		property portal.acceptance = "false";
		property project.templates = "service-builder";
		property test.name.skip.portal.instance = "SampleProjectTemplates#ServiceBuilderTemplateSmoke";

		GogoShell.openGogoShellAdmin();

		GogoShell.viewModuleStatus(
			moduleName = "foo-api",
			moduleStatus = "Active");

		GogoShell.viewModuleStatus(
			moduleName = "foo-service",
			moduleStatus = "Active");
	}

	@priority = "5"
	test ThemeTemplateSmoke {
		property portal.acceptance = "false";
		property project.templates = "theme";
		property test.name.skip.portal.instance = "SampleProjectTemplates#ThemeTemplateSmoke";
		var themeName = "sampletheme";

		Page.changeCurrentTheme(
			pageName = "Templates Page",
			themeName = "${themeName}");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/guest/templates-page");

		AssertHTMLSourceTextPresent(value1 = "themeId=${themeName}");
	}

	@priority = "5"
	test WarMvcPortletTemplateSmoke {
		property portal.acceptance = "false";
		property project.templates = "war-mvc-portlet";
		property test.name.skip.portal.instance = "SampleProjectTemplates#WarMvcPortletTemplateSmoke";

		Navigator.gotoPage(pageName = "Templates Page");

		Portlet.addPG(portletName = "samplewarmvcportlet");

		Portlet.viewPG(
			portletBody = "Hello from samplewarmvcportlet!",
			portletName = "samplewarmvcportlet");
	}

}