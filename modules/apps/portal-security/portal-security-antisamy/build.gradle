import com.liferay.gradle.util.FileUtil

task processSanitizerConfiguration(type: Copy)

String sanitizerConfigurationUrl = "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/owaspantisamy/antisamy-ebay-1.4.4.xml"

dependencies {
	compileInclude group: "net.sourceforge.nekohtml", name: "nekohtml", version: "1.9.16"
	compileInclude group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.5"
	compileInclude group: "org.apache.httpcomponents", name: "httpcore", version: "4.4.9"
	compileInclude group: "org.apache.xmlgraphics", name: "batik-css", version: "1.7"
	compileInclude group: "org.apache.xmlgraphics", name: "batik-ext", version: "1.7"
	compileInclude group: "org.apache.xmlgraphics", name: "batik-util", version: "1.7"
	compileInclude group: "org.owasp.antisamy", name: "antisamy", version: "1.5.7"
	compileInclude group: "xml-apis", name: "xml-apis-ext", version: "1.3.04"

	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.string", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.portal.configuration.metatype.api", version: "1.0.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "3.0.0"
	compileOnly group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
	compileOnly group: "xerces", name: "xercesImpl", version: "2.9.1"
	compileOnly group: "xml-apis", name: "xml-apis", version: "1.3.04"
}

processResources {
	dependsOn processSanitizerConfiguration
}

processSanitizerConfiguration {
	File sanitizerConfigurationFile = new File("src/main/resources/META-INF/resources/sanitizer-configuration.xml")

	ext {
		autoClean = false
	}

	filter {
		String line ->

		if (line.contains('<directive name="maxInputSize" value="20000"/>')) {
			line = line.replace "20000", "200000"
		}

		if (line.contains('<regexp name="onsiteURL" value=')) {
			line = '		<regexp name="onsiteURL" value="^(?![\\p{L}\\p{N}\\\\\\.\\#@\\$%\\*\\+&amp;;\\-_~,\\?=/!]*(&amp;colon))[\\p{L}\\p{N}\\\\\\.\\#@\\$%\\*\\+&amp;;\\-_~,\\?=/!]*"/>'
		}
		else if (line.contains('<regexp name="offsiteURL" value=')) {
			line = '		<regexp name="offsiteURL" value="(\\s)*((ht|f)tp(s?)://|mailto:)[\\p{L}\\p{N}]+[\\p{L}\\p{N}\\p{Zs}\\.\\#@\\$%\\*\\+&amp;;:\\-_~,\\?=/!\\(\\)]*(\\s)*"/>'
		}
		else if (line.contains('<tag-rules>')) {
			line = """\
				|	<allowed-empty-tags>
				|		<literal-list>
				|			<literal value="br"/>
				|			<literal value="hr"/>
				|			<literal value="a"/>
				|			<literal value="img"/>
				|			<literal value="param"/>
				|			<literal value="input"/>
				|			<literal value="textarea"/>
				|			<literal value="basefont"/>
				|			<literal value="col"/>
				|			<literal value="div"/>
				|			<literal value="source"/>
				|		</literal-list>
				|	</allowed-empty-tags>
				|
				|${line}
				|		<tag name="picture" action="validate">
				|			<attribute name="data-fileentryid" onInvalid="removeAttribute">
				|				<regexp-list>
				|					<regexp name="positiveInteger" />
				|				</regexp-list>
				|			</attribute>
				|		</tag>
				|		<tag name="source" action="validate">
				|			<attribute name="srcset">
				|				<regexp-list>
				|					<regexp name="anything"/>
				|				</regexp-list>
				|			</attribute>
				|			<attribute name="media">
				|				<regexp-list>
				|					<regexp name="anything" />
				|				</regexp-list>
				|			</attribute>
				|			<attribute name="type">
				|				<regexp-list>
				|					<regexp value="[a-zA-Z0-9\\-]+/[a-zA-Z0-9\\-]+" />
				|				</regexp-list>
				|			</attribute>
				|		</tag>""".stripMargin()
		}
		else if (line.contains('<tag name="a" action="validate">')) {
			line = """\
				|		<tag name="a" action="validate">
				|			<attribute name="target">
				|				<regexp-list>
				|					<regexp name="htmlId"/>
				|				</regexp-list>
				|			</attribute>""".stripMargin()
		}
		else if (line.contains('<tag name="img"')) {
			line = """\
				|${line}
				|			<attribute name="data-fileentryid" onInvalid="removeAttribute">
				|				<regexp-list>
				|					<regexp name="positiveInteger"/>
				|				</regexp-list>
				|			</attribute>""".stripMargin()
		}
		else if (line.contains('<tag name="ol" action="validate"/>')) {
			line = """\
				|		<tag name="ol" action="validate">
				|			<attribute name="type">
				|				<literal-list>
				|					<literal value="1"/>
				|					<literal value="a"/>
				|					<literal value="A"/>
				|					<literal value="i"/>
				|					<literal value="I"/>
				|				</literal-list>
				|			</attribute>
				|		</tag>""".stripMargin()
		}

		return line
	}

	from {
		FileUtil.get(project, sanitizerConfigurationUrl)
	}

	into sanitizerConfigurationFile.parentFile

	onlyIf {
		!sanitizerConfigurationFile.exists()
	}

	rename {
		sanitizerConfigurationFile.name
	}
}