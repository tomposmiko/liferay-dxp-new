/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.oauth2.provider.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the OAuth2RefreshToken service. Represents a row in the &quot;OAuth2RefreshToken&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.oauth2.provider.model.impl.OAuth2RefreshTokenModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.oauth2.provider.model.impl.OAuth2RefreshTokenImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OAuth2RefreshToken
 * @see com.liferay.oauth2.provider.model.impl.OAuth2RefreshTokenImpl
 * @see com.liferay.oauth2.provider.model.impl.OAuth2RefreshTokenModelImpl
 * @generated
 */
@ProviderType
public interface OAuth2RefreshTokenModel extends BaseModel<OAuth2RefreshToken>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a o auth2 refresh token model instance should use the {@link OAuth2RefreshToken} interface instead.
	 */

	/**
	 * Returns the primary key of this o auth2 refresh token.
	 *
	 * @return the primary key of this o auth2 refresh token
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this o auth2 refresh token.
	 *
	 * @param primaryKey the primary key of this o auth2 refresh token
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the o auth2 refresh token ID of this o auth2 refresh token.
	 *
	 * @return the o auth2 refresh token ID of this o auth2 refresh token
	 */
	public long getOAuth2RefreshTokenId();

	/**
	 * Sets the o auth2 refresh token ID of this o auth2 refresh token.
	 *
	 * @param oAuth2RefreshTokenId the o auth2 refresh token ID of this o auth2 refresh token
	 */
	public void setOAuth2RefreshTokenId(long oAuth2RefreshTokenId);

	/**
	 * Returns the company ID of this o auth2 refresh token.
	 *
	 * @return the company ID of this o auth2 refresh token
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this o auth2 refresh token.
	 *
	 * @param companyId the company ID of this o auth2 refresh token
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this o auth2 refresh token.
	 *
	 * @return the user ID of this o auth2 refresh token
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this o auth2 refresh token.
	 *
	 * @param userId the user ID of this o auth2 refresh token
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this o auth2 refresh token.
	 *
	 * @return the user uuid of this o auth2 refresh token
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this o auth2 refresh token.
	 *
	 * @param userUuid the user uuid of this o auth2 refresh token
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this o auth2 refresh token.
	 *
	 * @return the user name of this o auth2 refresh token
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this o auth2 refresh token.
	 *
	 * @param userName the user name of this o auth2 refresh token
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this o auth2 refresh token.
	 *
	 * @return the create date of this o auth2 refresh token
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this o auth2 refresh token.
	 *
	 * @param createDate the create date of this o auth2 refresh token
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the o auth2 application ID of this o auth2 refresh token.
	 *
	 * @return the o auth2 application ID of this o auth2 refresh token
	 */
	public long getOAuth2ApplicationId();

	/**
	 * Sets the o auth2 application ID of this o auth2 refresh token.
	 *
	 * @param oAuth2ApplicationId the o auth2 application ID of this o auth2 refresh token
	 */
	public void setOAuth2ApplicationId(long oAuth2ApplicationId);

	/**
	 * Returns the expiration date of this o auth2 refresh token.
	 *
	 * @return the expiration date of this o auth2 refresh token
	 */
	public Date getExpirationDate();

	/**
	 * Sets the expiration date of this o auth2 refresh token.
	 *
	 * @param expirationDate the expiration date of this o auth2 refresh token
	 */
	public void setExpirationDate(Date expirationDate);

	/**
	 * Returns the remote ip info of this o auth2 refresh token.
	 *
	 * @return the remote ip info of this o auth2 refresh token
	 */
	@AutoEscape
	public String getRemoteIPInfo();

	/**
	 * Sets the remote ip info of this o auth2 refresh token.
	 *
	 * @param remoteIPInfo the remote ip info of this o auth2 refresh token
	 */
	public void setRemoteIPInfo(String remoteIPInfo);

	/**
	 * Returns the scope aliases of this o auth2 refresh token.
	 *
	 * @return the scope aliases of this o auth2 refresh token
	 */
	@AutoEscape
	public String getScopeAliases();

	/**
	 * Sets the scope aliases of this o auth2 refresh token.
	 *
	 * @param scopeAliases the scope aliases of this o auth2 refresh token
	 */
	public void setScopeAliases(String scopeAliases);

	/**
	 * Returns the token content of this o auth2 refresh token.
	 *
	 * @return the token content of this o auth2 refresh token
	 */
	@AutoEscape
	public String getTokenContent();

	/**
	 * Sets the token content of this o auth2 refresh token.
	 *
	 * @param tokenContent the token content of this o auth2 refresh token
	 */
	public void setTokenContent(String tokenContent);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(OAuth2RefreshToken oAuth2RefreshToken);

	@Override
	public int hashCode();

	@Override
	public CacheModel<OAuth2RefreshToken> toCacheModel();

	@Override
	public OAuth2RefreshToken toEscapedModel();

	@Override
	public OAuth2RefreshToken toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}