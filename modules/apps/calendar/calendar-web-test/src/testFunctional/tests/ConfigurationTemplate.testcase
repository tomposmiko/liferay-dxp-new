@component-name = "portal-calendar"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Calendar";

	var pageName = "Calendar Page";
	var portletName = "Calendar";

	setUp {
		var portalURL = PropsUtil.get("portal.url");

		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Calendar Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "Calendar Page",
			layoutTemplate = "1 Column");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Calendar Page",
			widgetName = "Calendar");

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/calendar-page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			JSONCalendar.tearDown();

			CalendarConfiguration.tearDown();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "LRQA-71891 - Verify that the user can apply the selected template"
	@priority = 3
	test CanApplySelectedTemplate {
		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Configuration Templates");

		ConfigurationTemplate.saveCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");

		ConfigurationTemplate.viewCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");

		ConfigurationTemplate.applyConfigurationsTemplate(templateName = "Configuration Templates Name");
	}

	@description = "LRQA-71891 - Verify that the user can delete a template"
	@priority = 3
	test CanDeleteTemplate {
		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Configuration Templates");

		ConfigurationTemplate.saveCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");

		ConfigurationTemplate.viewOrderConfigurationsTemplate(tableOrder = "Configuration Templates Name");

		ConfigurationTemplate.deleteConfigurationsTemplate(templateName = "Configuration Templates Name");

		ConfigurationTemplate.notViewCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");
	}

	@description = "LRQA-71891 - Verify that the user can filter by Modified Date"
	@priority = 2
	test CanFilterByTemplateModifiedDate {
		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Configuration Templates");

		for (var templateNum : list "First,Second") {
			ConfigurationTemplate.saveCurrentConfigurationsTemplate(templateName = "${templateNum} Configuration Templates Name");

			IFrame.closeFrame();

			Portlet.gotoPortletOptions(
				portletName = "Calendar",
				portletOption = "Configuration Templates");
		}

		IFrame.selectModalFrame();

		ManagementBar.setFilterAndOrder(orderBy = "Modified Date");

		ConfigurationTemplate.viewOrderConfigurationsTemplate(tableOrder = "Second Configuration Templates Name,First Configuration Templates Name");

		Workflow.clickRevertSortDirection();

		ConfigurationTemplate.viewOrderConfigurationsTemplate(tableOrder = "First Configuration Templates Name,Second Configuration Templates Name");
	}

	@description = "LRQA-71891 - Verify that the user can filter by Name"
	@priority = 2
	test CanFilterByTemplateName {
		property portal.upstream = "quarantine";

		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Configuration Templates");

		for (var templateNum : list "First,Second") {
			ConfigurationTemplate.saveCurrentConfigurationsTemplate(templateName = "${templateNum} Configuration Templates Name");

			IFrame.closeFrame();

			Portlet.gotoPortletOptions(
				portletName = "Calendar",
				portletOption = "Configuration Templates");
		}

		IFrame.selectModalFrame();

		ManagementBar.setFilterAndOrder(orderBy = "Name");

		ConfigurationTemplate.viewOrderConfigurationsTemplate(tableOrder = "First Configuration Templates Name,Second Configuration Templates Name");

		Workflow.clickRevertSortDirection();

		ConfigurationTemplate.viewOrderConfigurationsTemplate(tableOrder = "Second Configuration Templates Name,First Configuration Templates Name");
	}

	@description = "LRQA-71891 - Verify that the user can save Current Configuration as a template"
	@priority = 3
	test CanSaveCurrentConfigurationAsTemplate {
		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Configuration Templates");

		ConfigurationTemplate.saveCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");

		ConfigurationTemplate.viewCurrentConfigurationsTemplate(templateName = "Configuration Templates Name");
	}

}