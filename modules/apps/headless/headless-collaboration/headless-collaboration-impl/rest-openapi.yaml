components:
  schemas:
    AggregateRating:
      description: https://www.schema.org/AggregateRating
      properties:
        bestRating:
          type: number
        ratingCount:
          type: number
        ratingValue:
          type: number
        worstRating:
          type: number
      type: object
    BlogPosting:
      description: https://www.schema.org/BlogPosting
      properties:
        aggregateRating:
          $ref: "#/components/schemas/AggregateRating"
        alternativeHeadline:
          type: string
        articleBody:
          type: string
        caption:
          type: string
        categories:
          items:
            properties:
              categoryId:
                format: int64
                type: integer
              categoryName:
                type: string
            type: object
          readOnly: true
          type: array
        categoryIds:
          items:
            format: int64
            type: integer
          type: array
          writeOnly: true
        contentSpace:
          format: int64
          type: integer
        creator:
          $ref: "#/components/schemas/Creator"
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        datePublished:
          format: date-time
          type: string
        description:
          type: string
        encodingFormat:
          type: string
        friendlyUrlPath:
          type: string
        hasComments:
          type: boolean
        headline:
          type: string
        id:
          format: int64
          type: integer
        image:
          properties:
            contentUrl:
              format: uri
              type: string
            imageId:
              format: int64
              type: integer
            name:
              type: string
          readOnly: true
          type: object
        imageId:
          format: int64
          type: integer
          writeOnly: true
        keywords:
          items:
            type: string
          type: array
      type: object
    Comment:
      description: https://www.schema.org/Comment
      properties:
        comments:
          items:
            $ref: "#/components/schemas/Comment"
          type: array
        creator:
          $ref: "#/components/schemas/Creator"
        dateCreated:
          format: date-time
          type: string
        dateModified:
          format: date-time
          type: string
        hasComments:
          type: boolean
        id:
          format: int64
          type: integer
        text:
          type: string
      type: object
    Creator:
      description: https://www.schema.org/Creator
      properties:
        additionalName:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        id:
          format: int64
          type: integer
        image:
          format: uri
          type: string
        name:
          type: string
        profileURL:
          format: uri
          type: string
      type: object
    BlogPostingImage:
      description: https://www.schema.org/BlogPostingImage
      properties:
        contentUrl:
          type: string
        encodingFormat:
          type: string
        fileExtension:
          type: string
        id:
          format: int64
          type: integer
        sizeInBytes:
          type: number
        title:
          type: string
      type: object
info:
  description: ""
  title: ""
  version: v1.0
openapi: 3.0.1
paths:
  "/blog-postings/{blog-posting-id}":
    delete:
      parameters:
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          content:
            application/json: {}
          description: ""
      tags: ["BlogPosting"]
    get:
      parameters:
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPosting"
          description: ""
      tags: ["BlogPosting"]
    patch:
      parameters:
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogPosting"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPosting"
          description: ""
      tags: ["BlogPosting"]
    put:
      parameters:
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogPosting"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPosting"
          description: ""
      tags: ["BlogPosting"]
  "/blog-postings/{blog-posting-id}/comments":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Comment"
                type: array
          description: ""
      tags: ["Comment"]
    post:
      parameters:
        - in: path
          name: blog-posting-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: ""
      tags: ["Comment"]
  "/comments/{comment-id}":
    delete:
      parameters:
        - in: path
          name: comment-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          content:
            application/json: {}
          description: ""
      tags: ["Comment"]
    get:
      parameters:
        - in: path
          name: comment-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: ""
      tags: ["Comment"]
    put:
      parameters:
        - in: path
          name: comment-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: ""
      tags: ["Comment"]
  "/comments/{comment-id}/comments":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: comment-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Comment"
                type: array
          description: ""
      tags: ["Comment"]
    post:
      parameters:
        - in: path
          name: comment-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: ""
      tags: ["Comment"]
  "/content-spaces/{content-space-id}/blog-postings":
    get:
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - in: path
          name: content-space-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BlogPosting"
                type: array
          description: ""
      tags: ["BlogPosting"]
    post:
      parameters:
        - in: path
          name: content-space-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogPosting"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPosting"
          description: ""
      tags: ["BlogPosting"]
  "/content-spaces/{content-space-id}/blog-posting-images":
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: path
          name: content-space-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BlogPostingImage"
                type: array
          description: ""
      tags: ["BlogPostingImage"]
    post:
      parameters:
        - in: path
          name: content-space-id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  $ref: "#/components/schemas/BlogPostingImage"
                file:
                  type: string
                  format: binary
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPostingImage"
          description: ""
      tags: ["BlogPostingImage"]
  "/blog-posting-images/{image-object-id}":
    delete:
      parameters:
        - in: path
          name: image-object-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        204:
          content:
            application/json: {}
          description: ""
      tags: ["BlogPostingImage"]
    get:
      parameters:
        - in: path
          name: image-object-id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPostingImage"
          description: ""
      tags: ["BlogPostingImage"]