components:
    schemas:
        AssetType:
            description: Represents the asset type associated with a `TaxonomyCategory`.
            properties:
                required:
                    description: A flag that marks if this type is required.
                    type: boolean
                subtype:
                    description: The asset's subtype.
                    type: string
                type:
                    description: The asset's type (e.g., `BlogPosting`, `Document`, etc.).
                    type: string
            type: object
        Creator:
            description: Represents the user who created the content. Properties follow the [creator](https://schema.org/creator) specification.
            properties:
                additionalName:
                    description: An additional name for the user. This can be used for a middle name.
                    readOnly: true
                    type: string
                familyName:
                    description: The user's surname (last name).
                    readOnly: true
                    type: string
                givenName:
                    description: The user's first name.
                    readOnly: true
                    type: string
                id:
                    description: The user's ID.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description: A relative URL to the user's profile image.
                    format: uri
                    readOnly: true
                    type: string
                name:
                    description: The user's full name.
                    readOnly: true
                    type: string
                profileURL:
                    description: A relative URL to the user's profile.
                    format: uri
                    readOnly: true
                    type: string
            type: object
        Keyword:
            description: Represents a keyword that describes content. Properties follow the [keywords](https://schema.org/keywords) specification.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The keyword's creator.
                    readOnly: true
                dateCreated:
                    description: The keyword's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The keyword's most recent modification date.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description: The keyword's ID.
                    format: int64
                    readOnly: true
                    type: integer
                keywordUsageCount:
                    description: The number of times this keyword has been used with other assets.
                    readOnly: true
                    type: integer
                name:
                    description: The keyword's name.
                    type: string
                siteId:
                    description: The ID of the site to which this keyword is scoped.
                    format: int64
                    readOnly: true
                    type: integer
            required:
                - name
            type: object
        TaxonomyCategory:
            description: Represents a category, which is a hierarchical classification that can be associated with particular asset types. Properties follow the [category](https://schema.org/category) specification.
            properties:
                availableLanguages:
                    description: A list of languages the category has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The category's creator.
                    readOnly: true
                dateCreated:
                    description: The category's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The category's most recent modification date.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The category's text description.
                    type: string
                id:
                    description: The category's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The category's name.
                    type: string
                numberOfTaxonomyCategories:
                    description: The number of times this category has been used in other assets.
                    readOnly: true
                    type: integer
                parentTaxonomyCategory:
                    description: The category's parent category, if it exists.
                    properties:
                        id:
                            format: int64
                            type: integer
                        name:
                            type: string
                    readOnly: true
                    type: object
                parentTaxonomyVocabulary:
                    description: The parent category's `TaxonomyVocabulary`, if such a parent category exists.
                    properties:
                        id:
                            format: int64
                            type: integer
                        name:
                            type: string
                    readOnly: true
                    type: object
                viewableBy:
                    description: A write-only property that specifies the category's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        TaxonomyVocabulary:
            description: Represents a vocabulary, which is a grouping of categories for a specific purpose (e.g., classification, sorting, etc.).
            properties:
                assetTypes:
                    description: A list of asset types that can be associated with this vocabulary.
                    items:
                        $ref: "#/components/schemas/AssetType"
                    type: array
                availableLanguages:
                    description: A list of languages the vocabulary has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The vocabulary's creator.
                    readOnly: true
                dateCreated:
                    description: The vocabulary's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The vocabulary's most recent modification date.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The vocabulary's text description.
                    type: string
                id:
                    description: The vocabulary's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The vocabulary's name.
                    type: string
                numberOfTaxonomyCategories:
                    description: The number of categories that directly depend on this vocabulary.
                    readOnly: true
                    type: integer
                siteId:
                    description: The ID of the site to which this vocabulary is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: A write-only property that specifies the vocabulary's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
info:
    description: ""
    title: "Headless Admin Taxonomy"
    version: v1.0
openapi: 3.0.1
paths:
    "/keywords/{keywordId}":
        delete:
            operationId: deleteKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Keyword"]
        get:
            operationId: getKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
        put:
            operationId: putKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Keyword"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Keyword"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
    "/sites/{siteId}/keywords":
        get:
            operationId: getSiteKeywordsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Keyword"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Keyword"
                                type: array
                    description: ""
            tags: ["Keyword"]
        post:
            operationId: postSiteKeyword
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Keyword"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Keyword"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
    "/sites/{siteId}/taxonomy-vocabularies":
        get:
            operationId: getSiteTaxonomyVocabulariesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyVocabulary"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyVocabulary"
                                type: array
                    description: ""
            tags: ["TaxonomyVocabulary"]
        post:
            operationId: postSiteTaxonomyVocabulary
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
    "/taxonomy-categories/{parentTaxonomyCategoryId}/taxonomy-categories":
        get:
            operationId: getTaxonomyCategoryTaxonomyCategoriesPage
            parameters:
                - in: path
                  name: parentTaxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                    description: ""
            tags: ["TaxonomyCategory"]
        post:
            operationId: postTaxonomyCategoryTaxonomyCategory
            parameters:
                - in: path
                  name: parentTaxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
    "/taxonomy-categories/{taxonomyCategoryId}":
        delete:
            operationId: deleteTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["TaxonomyCategory"]
        get:
            operationId: getTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
        patch:
            operationId: patchTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
        put:
            operationId: putTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
    "/taxonomy-vocabularies/{taxonomyVocabularyId}":
        delete:
            operationId: deleteTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["TaxonomyVocabulary"]
        get:
            operationId: getTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
        patch:
            operationId: patchTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
        put:
            operationId: putTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
    "/taxonomy-vocabularies/{taxonomyVocabularyId}/taxonomy-categories":
        get:
            operationId: getTaxonomyVocabularyTaxonomyCategoriesPage
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                    description: ""
            tags: ["TaxonomyCategory"]
        post:
            operationId: postTaxonomyVocabularyTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]