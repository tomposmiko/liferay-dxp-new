definition {

	macro _addDocument {
		Variables.assertDefined(parameterList = ${filePath});

		var portalURL = JSONCompany.getPortalURL();

		if (isSet(depotName)) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(depotName = ${depotName});

			var api = "asset-libraries/${assetLibraryId}/documents";
		}
		else if (isSet(documentFolderId)) {
			var api = "document-folders/${documentFolderId}/documents";
		}
		else {
			var api = "sites/${siteId}/documents";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u test@liferay.com:test \
				-H Content-Type: multipart/form-data \
				-F document={"externalReferenceCode": "${externalReferenceCode}"} \
				-F file=@${filePath}
		''';

		var curl = JSONCurlUtil.post(${curl});

		return ${curl};
	}

	macro _deleteDocumentsByErcInAssetLibrary {
		Variables.assertDefined(parameterList = ${externalReferenceCode});

		var portalURL = JSONCompany.getPortalURL();

		if (isSet(depotName)) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(depotName = ${depotName});

			var api = "asset-libraries/${assetLibraryId}/documents/by-external-reference-code/${externalReferenceCode}";
		}
		else {
			var api = "sites/${siteId}/documents/by-external-reference-code/${externalReferenceCode}";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u test@liferay.com:test \
				-H accept: application/json
		''';

		var curl = JSONCurlUtil.delete(${curl});

		return ${curl};
	}

	macro _filterDocumentInAssetLibrary {
		Variables.assertDefined(parameterList = "${depotName},${filtervalue}");

		var assetLibraryId = JSONGroupAPI._getDepotIdByName(depotName = ${depotName});
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/asset-libraries/${assetLibraryId}/documents?filter=${filtervalue} \
				-u test@liferay.com:test \
				-H accept: application/json
		''';

		var curl = JSONCurlUtil.get(${curl});

		return ${curl};
	}

	macro _getDocumentsByDifferentParameters {
		Variables.assertDefined(parameterList = ${documentId});

		var portalURL = JSONCompany.getPortalURL();

		if (isSet(parameter)) {
			var api = "documents/${documentId}?${parameter}=${parameterValue}";
		}
		else {
			var api = "documents/${documentId}";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get(${curl});

		return ${curl};
	}

	macro _getDocumentsByErcInAssetLibrary {
		Variables.assertDefined(parameterList = ${externalReferenceCode});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(assetLibraryId))) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(depotName = ${depotName});
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/asset-libraries/${assetLibraryId}/documents/by-external-reference-code/${externalReferenceCode} \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get(${curl});

		return ${curl};
	}

	macro _updateDocumentByErc {
		Variables.assertDefined(parameterList = ${externalReferenceCode});

		if (!(isSet(filePath) || isSet(title) || isSet(updateExternalReferenceCode))) {
			TestUtils.fail(message = "Please set at least one property to update the document.");
		}

		if (isSet(depotName)) {
			var assetLibraryId = JSONGroupAPI._getDepotIdByName(depotName = ${depotName});

			var api = "asset-libraries/${assetLibraryId}/documents/by-external-reference-code/${externalReferenceCode}";
		}
		else {
			var api = "asset-libraries/${siteId}/documents/by-external-reference-code/${externalReferenceCode}";
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u test@liferay.com:test \
		''';
		var delimiter = " ";

		if (isSet(filePath)) {
			var fileBody = "-F file=@\"${filePath}\"";

			var curl = StringUtil.add(${curl}, ${fileBody}, ${delimiter});
		}

		if (isSet(title) && isSet(updateExternalReferenceCode)) {
			var documentBody = '''
				-F document={"externalReferenceCode": "${updateExternalReferenceCode}", "title": "${title}"}
			''';

			var curl = StringUtil.add(${curl}, ${documentBody}, ${delimiter});
		}
		else {
			if (isSet(title)) {
				var documentBody = '''
					-F document={"title": "${title}"}
				 ''';
			}
			else if (isSet(updateExternalReferenceCode)) {
				var documentBody = '''
					-F document={"externalReferenceCode": "${updateExternalReferenceCode}"}
				''';
			}

			var curl = StringUtil.add(${curl}, ${documentBody}, ${delimiter});
		}

		var curl = JSONCurlUtil.put(${curl});

		return ${curl};
	}

	macro addDocumentInAssetLibraryByUploadFile {
		Variables.assertDefined(parameterList = "${depotName},${filePath}");

		var response = DocumentAPI._addDocument(
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode},
			filePath = ${filePath});

		return ${response};
	}

	macro addDocumentWithFileInDocumentFolder {
		Variables.assertDefined(parameterList = "${documentFolderId},${filePath}");

		var response = DocumentAPI._addDocument(
			documentFolderId = ${documentFolderId},
			externalReferenceCode = ${externalReferenceCode},
			filePath = ${filePath});

		return ${response};
	}

	macro addDocumentWithFileInSite {
		Variables.assertDefined(parameterList = "${siteId},${filePath}");

		var response = DocumentAPI._addDocument(
			externalReferenceCode = ${externalReferenceCode},
			filePath = ${filePath},
			siteId = ${siteId});

		return ${response};
	}

	macro assertDMPermissions {
		var response = DocumentAPI.getDMPermissionsWithDocumentID(documentId = ${documentId});

		var actualDMPermissions = JSONUtil.getWithJSONPath(${response}, "$..items[?(@.roleName == '${roleName}')].actionIds");

		echo("####actualDMPermissions: '${actualDMPermissions}'");

		TestUtils.assertEquals(
			actual = ${actualDMPermissions},
			expected = ${expectedDMPermissions});
	}

	macro assertExternalReferenceCodeWithCorrectValue {
		if (!(isSet(expectedExternalReferenceCodeValue))) {
			var expectedExternalReferenceCodeValue = DocumentAPI.getUuidOfCreatedDocument(responseToParse = ${responseToParse});
		}

		var actualExternalReferenceCodeValue = JSONUtil.getWithJSONPath(${responseToParse}, "$..externalReferenceCode");

		TestUtils.assertEquals(
			actual = ${actualExternalReferenceCodeValue},
			expected = ${expectedExternalReferenceCodeValue});
	}

	macro assertProperDocumentTotalCount {
		Variables.assertDefined(parameterList = ${expectedDocumentTotalCount});

		var response = DocumentAPI._filterDocumentInAssetLibrary(
			depotName = ${depotName},
			filtervalue = ${filtervalue});

		var actualDocumentTotalCount = JSONUtil.getWithJSONPath(${response}, "$..['totalCount']");

		TestUtils.assertEquals(
			actual = ${actualDocumentTotalCount},
			expected = ${expectedDocumentTotalCount});
	}

	macro deleteDocumentInAssetLibrary {
		Variables.assertDefined(parameterList = ${depotName});

		if (!(isSet(externalReferenceCode))) {
			Variables.assertDefined(parameterList = ${responseToParse});

			var externalReferenceCode = DocumentAPI.getUuidOfCreatedDocument(responseToParse = ${responseToParse});
		}

		DocumentAPI._deleteDocumentsByErcInAssetLibrary(
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode});
	}

	macro getDMPermissionsWithDocumentID {
		Variables.assertDefined(parameterList = ${documentId});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/documents/${documentId}/permissions \
				-H 'Content-Type: application/json' \
				-u '${userEmailAddress}:${userPassword}'
		''';

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro getDocumentsByDifferentParameters {
		var response = DocumentAPI._getDocumentsByDifferentParameters(
			documentId = ${documentId},
			parameter = ${parameter},
			parameterValue = ${parameterValue});

		return ${response};
	}

	macro getDocumentsByErcInAssetLibrary {
		var response = DocumentAPI._getDocumentsByErcInAssetLibrary(
			assetLibraryId = ${assetLibraryId},
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode});

		return ${response};
	}

	macro getIdOfCreatedDocument {
		var response = DocumentAPI.addDocumentInAssetLibraryByUploadFile(
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode},
			filePath = ${filePath});

		var documentId = JSONPathUtil.getIdValue(response = ${response});

		return ${documentId};
	}

	macro getRatedDocumentsWithDepotID {
		Variables.assertDefined(parameterList = ${depotId});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/asset-libraries/${depotId}/documents/rated-by-me \
				-H 'Content-Type: application/json' \
				-u '${userEmailAddress}:${userPassword}'
		''';

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro getRatedDocumentsWithSiteID {
		Variables.assertDefined(parameterList = ${siteId});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/documents/rated-by-me \
				-H 'Content-Type: application/json' \
				-u '${userEmailAddress}:${userPassword}'
		''';

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro getTitleOfDocument {
		var documentTitle = JSONUtil.getWithJSONPath(${responseToParse}, "$.['title']");

		return ${documentTitle};
	}

	macro getUuidOfCreatedDocument {
		Variables.assertDefined(parameterList = ${responseToParse});

		var contentURL = JSONUtil.getWithJSONPath(${responseToParse}, "$.['contentUrl']");

		var contentURLSubString = StringUtil.extractFirst(${contentURL}, "?");

		var documentUuid = StringUtil.extractLast(${contentURLSubString}, "/");

		return ${documentUuid};
	}

	macro postRatingWithDocumentID {
		Variables.assertDefined(parameterList = ${documentId});

		if (!(isSet(portalURL))) {
			var portalURL = JSONCompany.getPortalURL();
		}

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/documents/${documentId}/my-rating \
				-H 'Content-Type: application/json' \
				-u '${userEmailAddress}:${userPassword}' \
				-d '{
					"creator": {},
					"ratingValue": ${ratingValue}
				}'
		''';

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	macro putDMPermissionsWithDocumentID {
		var portalURL = JSONCompany.getPortalURL();
		var body = '''
			[
  				{
    				"actionIds": [
   					   "${actionIds}"
   					 ],
   					 "roleName": "${roleName}"
 				 }
			]
					''';

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/documents/${documentId}/permissions \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d ${body}
		''';

		var response = JSONCurlUtil.put(${curl});

		return ${response};
	}

	macro updateDocumentByErcInAssetLibrary {
		Variables.assertDefined(parameterList = ${depotName});

		var response = DocumentAPI._updateDocumentByErc(
			depotName = ${depotName},
			externalReferenceCode = ${externalReferenceCode},
			filePath = ${filePath},
			title = ${title},
			updateExternalReferenceCode = ${updateExternalReferenceCode});

		return ${response};
	}

}