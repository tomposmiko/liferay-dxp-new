definition {

	macro _createBlogPosting {
		Variables.assertDefined(parameterList = "${headline},${articleBody}");

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d {
					"headline": "${headline}",
					"externalReferenceCode": "${externalReferenceCode}",
					"articleBody": "${articleBody}"
				}
		''';

		var curl = JSONCurlUtil.post("${curl}");

		return "${curl}";
	}

	macro _createNBlogPostings {
		Variables.assertDefined(parameterList = "${numberOfBlogPostings},${createStrategy}");

		var body = BlogPostingAPI._createNBlogPostingsBody(
			numberOfBlogPostings = "${numberOfBlogPostings}",
			testCase = "${testCase}");
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings/batch?createStrategy=${createStrategy}\&importStrategy=${importStrategy} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d ${body}
		''';

		var curl = JSONCurlUtil.post("${curl}");

		return "${curl}";
	}

	macro _createNBlogPostingsBody {
		if (!(isSet(headline))) {
			var headline = "headline";
		}

		if (!(isSet(articleBody))) {
			var articleBody = "articleBody";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "erc";
		}

		if (!(isSet(testCase))) {
			var testCase = "";
		}

		if (isSet(testCase)) {
			if (("${testCase}" == "updateOneBlogPosting") || ("${testCase}" == "updateAllFields")) {
				var response = BlogPostingAPI.getBlogPostings();

				var existingHeadline = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
					fieldName = "headline",
					response = "${response}");
				var existingArticleBody = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
					fieldName = "articleBody",
					response = "${response}");
				var existingExternalReferenceCode = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
					fieldName = "externalReferenceCode",
					response = "${response}");
				var id = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
					fieldName = "id",
					response = "${response}");

				if ("${testCase}" == "updateOneBlogPosting") {
					var body = '''
						[
							{
								"headline": "${existingHeadline}",
								"articleBody": "${existingArticleBody}",
								"externalReferenceCode": "${existingExternalReferenceCode}"
							},
							{
								"headline": "headlineUpdated",
								"articleBody": "articleBodyUpdated",
								"externalReferenceCode": "ercUpdated"
							}
						]
					''';
				}
				else if ("${testCase}" == "updateAllFields") {
					var body = '''
						[
							{
								"headline": "headlineUpdated",
								"articleBody": "articleBodyUpdated",
								"externalReferenceCode": "externalReferenceCodeUpdated",
								"id": "${id}"
							}
						]
					''';
				}
			}
			else if ("${testCase}" == "incorrectData") {
				var body = '''
					[
						{
							"headline": "headline",
							"articleBody": "articleBody",
							"externalReferenceCode": "externalReferenceCode"
						},
						{
							"headline": "headlineUpdated",
							"articleBody": "articleBodyUpdated",
							"externalReferenceCode": "ercUpdated",
							"nonExistingField" : "this field does not exist"
						}
					]
				''';
			}
			else if ("${testCase}" == "nonExistingId") {
				var body = '''
					[
						{
							"headline": "headlineUpdated",
							"articleBody": "articleBodyUpdated",
							"externalReferenceCode": "ercUpdated",
							"id" : "1234"
						}
					]
				''';
			}
			else {
				var size = "${numberOfBlogPostings}";
				var i = "0";
				var body = '''
					[
				''';

				while (("${i}" != "${size}") && (maxIterations = "100")) {
					var blogPostingBody = '''
						{
							"headline": "${headline}${i}",
							"articleBody": "${articleBody}${i}",
							"externalReferenceCode": "${externalReferenceCode}${i}"
						}
					''';
					var j = ${i} + 1;

					if ("${j}" == "${size}") {
						var body = StringUtil.replace("${body}", "${body}", "${body}${blogPostingBody}]");
					}
					else {
						var blogPostingBody = StringUtil.replace("${blogPostingBody}", "${blogPostingBody}", "${blogPostingBody},");

						var body = StringUtil.replace("${body}", "${body}", "${body}${blogPostingBody}");
					}

					var i = ${i} + 1;
				}
			}
		}

		return "${body}";
	}

	macro _deleteBlogPosting {
		Variables.assertDefined(parameterList = "${blogPostingId}");

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");
		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/${blogPostingId} \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.delete("${curl}");

		return "${curl}";
	}

	macro _deleteBlogPostingsBatch {
		Variables.assertDefined(parameterList = "${body}");

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");
		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/batch \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d ${body}
		''';

		var curl = JSONCurlUtil.delete("${curl}");

		return "${curl}";
	}

	macro _getBlogPostings {
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro _getFieldValueOfExistingBlogPosting {
		Variables.assertDefined(parameterList = "${response},${fieldName}");

		var fieldValue = JSONUtil.getWithJSONPath("${response}", "$.items.[0].${fieldName}");

		return "${fieldValue}";
	}

	macro _updateBlogPosting {
		Variables.assertDefined(parameterList = "${numberOfBlogPostings},${updateStrategy}");

		var body = BlogPostingAPI._createNBlogPostingsBody(
			numberOfBlogPostings = "${numberOfBlogPostings}",
			testCase = "${testCase}");
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");
		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/batch?updateStrategy=${updateStrategy}\&importStrategy=${importStrategy} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d ${body}
		''';

		var curl = JSONCurlUtil.put("${curl}");

		return "${curl}";
	}

	macro _updateOneBlogPostingBodyParameter {
		Variables.assertDefined(parameterList = "${blogPostingId},${bodyParameterKey},${bodyParameterValue},${updateStrategy}");

		var bodyKeyValuePair = '''"${bodyParameterKey}": "${bodyParameterValue}"''';
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/batch?updateStrategy=${updateStrategy} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d [
					{
						${bodyKeyValuePair},
						"id": "${blogPostingId}"
					}
				]
		''';

		var response = JSONCurlUtil.put("${curl}");

		return "${response}";
	}

	macro assertResponseHasIdFieldValueOnly {
		var actualValue = JSONUtil.getWithJSONPath("${responseToParse}", "$.items");

		TestUtils.assertEquals(
			actual = "${actualValue}",
			expected = "${expectedValue}");
	}

	macro deleteAllBlogPostings {
		var numberOfItems = BlogPostingAPI.getNumberOfBlogPostingsCreated();

		if ("${numberOfItems}" != "0") {
			var blogPostingIdsList = BlogPostingAPI.getBlogPostingsIdList();
			var body = ListUtil.newList();

			for (var blogPostingId : list "${blogPostingIdsList}") {
				var value = '''{"id":${blogPostingId}}''';

				ListUtil.add("${body}", "${value}");
			}

			BlogPostingAPI._deleteBlogPostingsBatch(body = "${body}");

			var actualNumberOfBlogPostings = BlogPostingAPI.getNumberOfBlogPostingsCreated();

			TestUtils.assertEquals(
				actual = "${actualNumberOfBlogPostings}",
				expected = "0");
		}
	}

	macro getBlogPostingDataToString {
		if (!(isSet(response))) {
			var response = BlogPostingAPI.getBlogPostings();
		}

		var headline = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
			fieldName = "headline",
			response = "${response}");
		var articleBody = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
			fieldName = "articleBody",
			response = "${response}");
		var externalReferenceCode = BlogPostingAPI._getFieldValueOfExistingBlogPosting(
			fieldName = "externalReferenceCode",
			response = "${response}");

		var blogPostingData = "${headline},${articleBody},${externalReferenceCode}";

		return "${blogPostingData}";
	}

	macro getBlogPostings {
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro getBlogPostingsbyDifferentParameters {
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings?${parameter}=${restrictFieldsValue} \
				-u test@liferay.com:test \
				-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro getBlogPostingsIdList {
		var response = BlogPostingAPI._getBlogPostings();

		var idList = JSONUtil.getWithJSONPath("${response}", "$.items.[*].id");

		return "${idList}";
	}

	macro getIdOfCreatedBlogPosting {
		var response = BlogPostingAPI._createBlogPosting(
			articleBody = "${articleBody}",
			headline = "${headline}");

		var blogPostingId = JSONUtil.getWithJSONPath("${response}", "$.['id']");

		return "${blogPostingId}";
	}

	macro getIdOfCreateNBlogPostingBatchEngineImportTask {
		if (!(isSet(importStrategy))) {
			var importStrategy = "ON_ERROR_FAIL";
		}

		var response = BlogPostingAPI._createNBlogPostings(
			createStrategy = "${createStrategy}",
			importStrategy = "${importStrategy}",
			numberOfBlogPostings = "${numberOfBlogPostings}",
			testCase = "${testCase}");

		var importTaskId = JSONUtil.getWithJSONPath("${response}", "$.id");

		return "${importTaskId}";
	}

	macro getIdOfUpdatedPostingBatchEngineImportTask {
		if (!(isSet(importStrategy))) {
			var importStrategy = "ON_ERROR_FAIL";
		}

		var response = BlogPostingAPI._updateBlogPosting(
			importStrategy = "${importStrategy}",
			numberOfBlogPostings = "${numberOfBlogPostings}",
			testCase = "${testCase}",
			updateStrategy = "${updateStrategy}");

		var importTaskId = JSONUtil.getWithJSONPath("${response}", "$.id");

		return "${importTaskId}";
	}

	macro getIdOfUpdateOneBlogPostingBodyParameter {
		var response = BlogPostingAPI._updateOneBlogPostingBodyParameter(
			blogPostingId = "${blogPostingId}",
			bodyParameterKey = "${bodyParameterKey}",
			bodyParameterValue = "${bodyParameterValue}",
			updateStrategy = "${updateStrategy}");

		var importTaskId = JSONUtil.getWithJSONPath("${response}", "$.id");

		return "${importTaskId}";
	}

	macro getNumberOfBlogPostingsCreated {
		if (!(isSet(response))) {
			var response = BlogPostingAPI.getBlogPostings();
		}

		var numberOfBlogPostingsCreated = JSONUtil.getWithJSONPath("${response}", "$.totalCount");

		return "${numberOfBlogPostingsCreated}";
	}

	macro setUpGlobalIdOfCreatedBlogPosting {
		var blogPostingId = BlogPostingAPI.getIdOfCreatedBlogPosting(
			articleBody = "${articleBody}",
			headline = "${headline}");

		static var staticBlogPostingId = "${blogPostingId}";

		return "${staticBlogPostingId}";
	}

}