components:
    schemas:
        AggregateRating:
            description: Represents the average rating. See [AggregateRating](https://www.schema.org/AggregateRating) for more information.
            properties:
                bestRating:
                    description: The highest possible rating (by default normalized to 1.0).
                    format: double
                    readOnly: true
                    type: number
                ratingCount:
                    description: The number of ratings.
                    readOnly: true
                    type: integer
                ratingValue:
                    description: The average rating.
                    format: double
                    readOnly: true
                    type: number
                worstRating:
                    description: The lowest possible rating (by default normalized to 0.0).
                    format: double
                    readOnly: true
                    type: number
            type: object
        BlogPosting:
            description: Represents a blog post. See [BlogPosting](https://www.schema.org/BlogPosting) for more information.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The blog post's average rating.
                    readOnly: true
                alternativeHeadline:
                    description: The blog post's subtitle.
                    type: string
                articleBody:
                    description: The blog post's body (content).
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The blog post's author.
                    readOnly: true
                dateCreated:
                    description: The blog post's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The blog post's most recent modification date.
                    format: date-time
                    readOnly: true
                    type: string
                datePublished:
                    description: The blog post's publication date.
                    format: date-time
                    type: string
                description:
                    description: The blog post's description.
                    type: string
                encodingFormat:
                    description: The blog post's media format (e.g., HTML, BBCode, etc.).
                    readOnly: true
                    type: string
                friendlyUrlPath:
                    description: The blog post's relative URL.
                    type: string
                headline:
                    description: The blog post's main title.
                    type: string
                id:
                    description: The blog post's identifier.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description: The blog post's cover image.
                    properties:
                        caption:
                            description: The text describing the image.
                            type: string
                        contentUrl:
                            description: The image's relative URL.
                            format: uri
                            readOnly: true
                            type: string
                        imageId:
                            description: The image's ID. This can be used to retrieve more information in the `Document` API.
                            format: int64
                            type: integer
                    type: object
                keywords:
                    description: A list of keywords describing the blog post.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: The number of comments this blog post has received.
                    readOnly: true
                    type: integer
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                siteId:
                    description: The ID of the site to which this blog post is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories associated with this blog post.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The category's ID. This can be used to retrieve more information in the `TaxonomyCategory` API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The category's name.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write-only field that adds a `TaxonomyCategory` to this resource.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                viewableBy:
                    description: A write-only property that specifies the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - articleBody
                - headline
            type: object
        BlogPostingImage:
            description: Represents a blog post's image. Properties follow the [image](https://schema.org/image) specification.
            properties:
                contentUrl:
                    description: The image's relative URL.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The image's content type (e.g., `application/png`, etc.).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The image's file extension.
                    readOnly: true
                    type: string
                id:
                    description: The image's ID.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The image's size in bytes.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The image's title text.
                    type: string
                viewableBy:
                    description: A write-only property that specifies the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        Comment:
            description: Represents a comment. See [Comment](https://www.schema.org/Comment) for more details.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The comment's author.
                    readOnly: true
                dateCreated:
                    description: The comment's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The comment's latest modification date.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description: The comment's ID.
                    format: int64
                    readOnly: true
                    type: integer
                numberOfComments:
                    description: The number of child comments on this comment.
                    readOnly: true
                    type: integer
                text:
                    description: The comment's text content.
                    type: string
            type: object
        ContentDocument:
            description: Represents a document (binary data and metadata) associated with structured content. Properties follow the [Media Object](https://schema.org/MediaObject) specification.
            properties:
                contentUrl:
                    description: The document's relative URL.
                    format: uri
                    readOnly: true
                    type: string
                description:
                    description: The document's description.
                    type: string
                encodingFormat:
                    description: The document's content type (e.g., `application/pdf`, etc.).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The document's file extension.
                    readOnly: true
                    type: string
                id:
                    description: The document's ID.
                    format: int64
                    type: integer
                sizeInBytes:
                    description: The document's file size in bytes.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The document's title.
                    type: string
            type: object
        ContentField:
            description: Represents the value of each field in structured content. Fields can contain different information types (e.g., geolocation, documents, etc.).
            properties:
                dataType:
                    description: The field type (e.g., image, text, etc.).
                    readOnly: true
                    type: string
                inputControl:
                    description: The field's control type (e.g., text, text area, etc.).
                    readOnly: true
                    type: string
                label:
                    description: The field's label.
                    readOnly: true
                    type: string
                name:
                    description: The field's internal name. This is valid for comparisons and unique in the structured content.
                    type: string
                nestedFields:
                    description: A list of child content fields that depend on this resource.
                    items:
                        $ref: "#/components/schemas/ContentField"
                    type: array
                repeatable:
                    description: A flag that indicates whether this field can be rendered multiple times.
                    readOnly: true
                    type: boolean
                value:
                    properties:
                        data:
                            description: The field's content for simple types.
                            type: string
                        document:
                            allOf:
                                - $ref: "#/components/schemas/ContentDocument"
                            description: A content document element.
                        geo:
                            description: A point determined by latitude and longitude.
                            properties:
                                latitude:
                                    description: The latitude of a point in space.
                                    format: double
                                    type: number
                                longitude:
                                    description: The longitude of a point in space.
                                    format: double
                                    type: number
                            type: object
                        image:
                            allOf:
                                - $ref: "#/components/schemas/ContentDocument"
                            description: A content document element that stores an image file.
                        link:
                            description: A link to a page on the server.
                            format: uri
                            type: string
                        structuredContentLink:
                            description: A link to structured content on the server.
                            properties:
                                id:
                                    description: The resource's ID.
                                    format: int64
                                    type: integer
                                title:
                                    description: The resource's title.
                                    type: string
                            type: object
                    type: object
        ContentSetElement:
            description: Represents each member of a content set and can contain different types of assets.
            properties:
                content:
                    description: The content's fields.
                    readOnly: true
                    type: object
                contentType:
                    description: The content set element's type.
                    readOnly: true
                    type: string
                id:
                    description: The content set element's ID.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The content's title.
                    readOnly: true
                    type: string
        ContentStructure:
            description: Represents the content structure that backs structured content. This defines which form fields are available and the possible types and values.
            properties:
                availableLanguages:
                    description: The list of languages the structure has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                contentStructureFields:
                    description: The list of the content structure's fields.
                    items:
                        $ref: "#/components/schemas/ContentStructureField"
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The content structure's creator.
                    readOnly: true
                dateCreated:
                    description: The content structure's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the content structure changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The content structure's description.
                    readOnly: true
                    type: string
                id:
                    description: The content structure's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The content structure's name.
                    readOnly: true
                    type: string
                siteId:
                    description: The ID of the site to which the content structure is scoped.
                    format: int64
                    readOnly: true
                    type: integer
            type: object
        ContentStructureField:
            description: Represents each field in a content structure, backed by a content field.
            properties:
                dataType:
                    description: The form field's type (e.g., date, geolocation, text, etc.).
                    readOnly: true
                    type: string
                inputControl:
                    description: The form field's input control type (e.g., text, textarea, select field, etc.).
                    readOnly: true
                    type: string
                label:
                    description: The form field's label.
                    readOnly: true
                    type: string
                localizable:
                    description: A flag that indicates whether the content is accessible in different languages.
                    readOnly: true
                    type: boolean
                multiple:
                    description: A flag that indicates whether the form field can have several values.
                    readOnly: true
                    type: boolean
                name:
                    description: The form field's name.
                    readOnly: true
                    type: string
                nestedContentStructureFields:
                    description: The child content structure fields that depend on this form field.
                    items:
                        $ref: "#/components/schemas/ContentStructureField"
                    readOnly: true
                    type: array
                options:
                    description: The list of different possible values.
                    items:
                        properties:
                            label:
                                description: The option's label.
                                type: string
                            value:
                                description: The internal value of the field option.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                predefinedValue:
                    description: The form field's default value.
                    readOnly: true
                    type: string
                repeatable:
                    description: A flag that indicates whether this content can be rendered (and answered) several times.
                    readOnly: true
                    type: boolean
                required:
                    description: A flag that indicates whether this form field is required.
                    readOnly: true
                    type: boolean
                showLabel:
                    description: A flag that indicates whether the structure's end target should render the field label.
                    readOnly: true
                    type: boolean
            type: object
        Creator:
            description: Represents the user account of the content's creator/author. Properties follow the [creator](https://schema.org/creator) specification.
            properties:
                additionalName:
                    description: The author's additional name (e.g., middle name).
                    readOnly: true
                    type: string
                familyName:
                    description: The author's surname.
                    readOnly: true
                    type: string
                givenName:
                    description: The author's first name.
                    readOnly: true
                    type: string
                id:
                    description: The author's ID.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description: A relative URL to the author's profile image.
                    format: uri
                    readOnly: true
                    type: string
                name:
                    description: The author's full name.
                    readOnly: true
                    type: string
                profileURL:
                    description: A relative URL to the author's user profile.
                    format: uri
                    readOnly: true
                    type: string
            type: object
        Document:
            description: Represents a Document Library file, storing binary and metadata information. Properties follow the [MediaObject](https://schema.org/MediaObject) specification.
            properties:
                adaptedImages:
                    description: An array of images in several resolutions and sizes, created by the Adaptive Media framework.
                    items:
                        properties:
                            contentUrl:
                                description: The image's relative URL.
                                format: uri
                                type: string
                            height:
                                description: The image's height in pixels.
                                type: integer
                            resolutionName:
                                description: The name of the image's Adaptive Media image resolution.
                                type: string
                            sizeInBytes:
                                description: The image's size in bytes.
                                format: int64
                                type: integer
                            width:
                                description: The image's width in pixels.
                                type: integer
                        type: object
                    readOnly: true
                    type: array
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The document's average rating.
                    readOnly: true
                contentUrl:
                    description: The document's relative URL.
                    format: binary
                    readOnly: true
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The document's creator.
                    readOnly: true
                dateCreated:
                    description: The document's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the document changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The document's description.
                    type: string
                documentFolderId:
                    description: The ID of the `DocumentFolder` where this document is stored.
                    format: int64
                    readOnly: true
                    type: integer
                encodingFormat:
                    description: The document's content type (e.g., `application/pdf`, etc.).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The document's file extension.
                    readOnly: true
                    type: string
                id:
                    description: The document's ID.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the document.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: The number of comments on the document.
                    readOnly: true
                    type: integer
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                sizeInBytes:
                    description: The document's size in bytes.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories associated with this document.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The category's ID. This can be used to retrieve more information via the `TaxonomyCategory` API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The category's name.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write-only field that adds `TaxonomyCategory` instances to the document.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The document's main title/name.
                    type: string
                viewableBy:
                    description: A write-only property that specifies the document's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        DocumentFolder:
            description: Represents a document folder that can contain documents and other folders.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The folder's creator.
                    readOnly: true
                dateCreated:
                    description: The folder's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the folder changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The folder's description.
                    type: string
                id:
                    description: The folder's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The folder's main title/name.
                    type: string
                numberOfDocumentFolders:
                    description: The number of this folder's child folders.
                    readOnly: true
                    type: integer
                numberOfDocuments:
                    description: The number of documents in this folder.
                    readOnly: true
                    type: integer
                siteId:
                    description: The ID of the site to which this folder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: A write-only property that specifies the folder's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        KnowledgeBaseArticle:
            description: Represents a Knowledge Base article (`KBArticle`), the main entity in the Knowledge Base API.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The article's average rating.
                    readOnly: true
                articleBody:
                    description: The article's main content.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The article's author.
                    readOnly: true
                dateCreated:
                    description: The date the article was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time the article's content or metadata changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The article's description.
                    type: string
                encodingFormat:
                    description: The article's media type (e.g., HTML, BBCode, etc.).
                    readOnly: true
                    type: string
                friendlyUrlPath:
                    description: The article's relative URL.
                    type: string
                id:
                    description: The article's ID.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the article.
                    items:
                        type: string
                    type: array
                numberOfAttachments:
                    description: The article's number attachments.
                    readOnly: true
                    type: integer
                numberOfKnowledgeBaseArticles:
                    description: The number of this article's child articles.
                    readOnly: true
                    type: integer
                parentKnowledgeBaseFolder:
                    description: The article's parent folder, if it exists.
                    properties:
                        folderId:
                            description: The parent folder's ID.
                            format: int64
                            type: integer
                        folderName:
                            description: The parent folder's name.
                            type: string
                    readOnly: true
                    type: object
                parentKnowledgeBaseFolderId:
                    description: The ID of the article's parent folder, if that folder exists.
                    format: int64
                    type: integer
                    writeOnly: true
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                siteId:
                    description: The ID of the site to which this article is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories associated with this article.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The category's ID, which can be used to retrieve more information in the `TaxonomyCategory` API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The category's name.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write-only field that adds taxonomy categories to this article.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The article's main title.
                    type: string
                viewableBy:
                    description: A write-only property that specifies the article's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - articleBody
                - title
            type: object
        KnowledgeBaseAttachment:
            description: Represents a binary file attached to a Knowledge Base article.
            properties:
                contentUrl:
                    description: The file's relative URL.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The file's media type (e.g., application/pdf, etc.).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The file's extension.
                    readOnly: true
                    type: string
                id:
                    description: The file's ID.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The file's size in bytes.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The file's main title.
                    type: string
            type: object
        KnowledgeBaseFolder:
            description: Represents a folder for organizing Knowledge Base articles.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The folder's creator.
                    readOnly: true
                dateCreated:
                    description: The date the folder was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time the folder was modified.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The folder's description.
                    type: string
                id:
                    description: The folder's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The folder's main title/name.
                    type: string
                numberOfKnowledgeBaseArticles:
                    description: The number of Knowledge Base articles in this folder.
                    readOnly: true
                    type: integer
                numberOfKnowledgeBaseFolders:
                    description: The number of Knowledge Base folders in this folder.
                    readOnly: true
                    type: integer
                parentKnowledgeBaseFolder:
                    description: The folder's parent Knowledge Base folder, if it exists.
                    properties:
                        folderId:
                            description: The parent folder's ID.
                            format: int64
                            type: integer
                        folderName:
                            description: The parent folder's name.
                            type: string
                    readOnly: true
                    type: object
                parentKnowledgeBaseFolderId:
                    description: The ID of the folder's parent Knowledge Base folder, if such a parent folder exists.
                    format: int64
                    type: integer
                    writeOnly: true
                siteId:
                    description: The ID of the site to which this folder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: A write-only property that specifies the folder's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        MessageBoardAttachment:
            description: A binary file attached to a message on a message board (`MessageBoardMessage`).
            properties:
                contentUrl:
                    description: The file's relative URL.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The file's media format (e.g., application/pdf, etc.).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The file's extension.
                    readOnly: true
                    type: string
                id:
                    description: The file's ID.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The file's size in bytes.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The file's title.
                    type: string
            type: object
        MessageBoardMessage:
            description: Represents a message on a message board. Properties follow the [Discussion Forum Posting](https://schema.org/DiscussionForumPosting) specification.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The message's average rating.
                    readOnly: true
                anonymous:
                    description: A flag that indicates whether the message's author is anonymous.
                    type: boolean
                articleBody:
                    description: The message's main content.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The message's author.
                    readOnly: true
                dateCreated:
                    description: The date the message was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time the content or metadata of the message was changed.
                    format: date-time
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The message's media format (e.g., HTML, BBCode, etc.).
                    readOnly: true
                    type: string
                headline:
                    description: The message's main title.
                    type: string
                id:
                    description: The message's ID.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the message.
                    items:
                        type: string
                    type: array
                numberOfMessageBoardAttachments:
                    description: The number of the message's attachments.
                    readOnly: true
                    type: integer
                numberOfMessageBoardMessages:
                    description: The number of the message's child messages.
                    readOnly: true
                    type: integer
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                showAsAnswer:
                    description: A flag that indicates whether the message is answering a question.
                    type: boolean
                siteId:
                    description: The ID of the site to which this message is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: A write-only property that specifies the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        MessageBoardSection:
            description: Represents a section/folder on a message board, used to organize messages.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The section's creator.
                    readOnly: true
                dateCreated:
                    description: The date the section was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time the section was changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The section's description.
                    type: string
                id:
                    description: The section's ID.
                    format: int64
                    readOnly: true
                    type: integer
                numberOfMessageBoardSections:
                    description: The number of this section's child sections.
                    readOnly: true
                    type: integer
                numberOfMessageBoardThreads:
                    description: The number of message board threads in this section.
                    readOnly: true
                    type: integer
                siteId:
                    description: The ID of the site to which this section is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The section's main title.
                    type: string
                viewableBy:
                    description: A write-only property that specifies the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - title
            type: object
        MessageBoardThread:
            description: Represents a discussion thread in a message board.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The thread's average rating.
                    readOnly: true
                articleBody:
                    description: The thread's main body content (the message written as the thread's description).
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The thread's creator.
                    readOnly: true
                dateCreated:
                    description: The date the thread was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time any field of the thread changed.
                    format: date-time
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The media format of the thread's content (e.g., HTML, BBCode, etc.).
                    readOnly: true
                    type: string
                headline:
                    description: The thread's main title.
                    type: string
                id:
                    description: The thread's ID.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the thread.
                    items:
                        type: string
                    type: array
                numberOfMessageBoardAttachments:
                    description: The number of the thread's attachments.
                    readOnly: true
                    type: integer
                numberOfMessageBoardMessages:
                    description: The number of the thread's messages.
                    readOnly: true
                    type: integer
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                showAsQuestion:
                    description: A flag that indicates whether this thread was posted as a question that can receive approved answers.
                    type: boolean
                siteId:
                    description: The ID of the site to which this thread is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                threadType:
                    description: The thread's type.
                    type: string
                viewableBy:
                    description: A write-only property that specifies the thread's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - headline
            type: object
        Rating:
            description: Represents a rating/score received by any kind of asset. Properties follow the [Rating](https://schema.org/Rating) specification.
            properties:
                bestRating:
                    description: The best possible rating an asset can receive (normalized to 1.0 by default).
                    format: double
                    readOnly: true
                    type: number
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The rating's creator.
                    readOnly: true
                dateCreated:
                    description: The rating's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the rating changed.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description: The rating's ID.
                    format: int64
                    readOnly: true
                    type: integer
                ratingValue:
                    description: The rating's value.
                    format: double
                    type: number
                worstRating:
                    description: The worst possible rating an asset can receive (normalized to 0.0 by default).
                    format: double
                    readOnly: true
                    type: number
            type: object
        RelatedContent:
            # @review
            description: Represents a relationship between two resources, internally modeled as AssetLink.
            properties:
                contentType:
                    description: The type of the content.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The title of the content.
                    readOnly: true
                    type: string
        StructuredContent:
            description: Represents content that has fields and is rendered by a template backed by a `ContentStructure`. This is modeled internally as a `JournalArticle`.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The structured content's average rating.
                    readOnly: true
                availableLanguages:
                    description: The list of languages the structured content has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                contentFields:
                    description: The list of fields that store the structured content's information.
                    items:
                        $ref: "#/components/schemas/ContentField"
                    type: array
                contentStructureId:
                    description: The ID of the `ContentStructure`.
                    format: int64
                    type: integer
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The structured content's creator.
                    readOnly: true
                dateCreated:
                    description: The structured content's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time any field of the structured content was changed.
                    format: date-time
                    readOnly: true
                    type: string
                datePublished:
                    description: The structured content's most recent publication date.
                    format: date-time
                    type: string
                description:
                    description: The structured content's description.
                    type: string
                friendlyUrlPath:
                    description: A relative URL to the structured content's rendered content.
                    type: string
                id:
                    description: The structured content's ID.
                    format: int64
                    readOnly: true
                    type: integer
                key:
                    description: An identifier, independent of the database, that can be used to reference the structured content.
                    readOnly: true
                    type: string
                keywords:
                    description: A list of keywords describing the structured content.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: The number of comments the structured content has received.
                    readOnly: true
                    type: integer
                relatedContents:
                    items:
                        $ref: "#/components/schemas/RelatedContent"
                    readOnly: true
                    type: array
                renderedContents:
                    description: A list of rendered structured content, which results from using a template to process the content and return HTML.
                    items:
                        properties:
                            renderedContentURL:
                                description: An absolute URL to the rendered content.
                                format: uri
                                type: string
                            templateName:
                                description: The name of the template used to render the content.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                siteId:
                    description: The ID of the site to which this structured content is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories associated with this structured content.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The category's ID, which can be used to retrieve more information via the `TaxonomyCategory` API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The category's name.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write-only field to add a category to this structured content.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The structured content's main title.
                    type: string
                uuid:
                    description: A valid external identifier to reference this structured content.
                    readOnly: true
                    type: string
                viewableBy:
                    description: A write-only property that specifies the structured content's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - contentStructureId
                - title
        StructuredContentFolder:
            description: Represents a folder that can be used to organize structured content.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The folder's creator.
                    readOnly: true
                dateCreated:
                    description: The date the folder was created.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time any of the folder's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The folder's description.
                    type: string
                id:
                    description: The folder's ID.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The folder's name.
                    type: string
                numberOfStructuredContentFolders:
                    description: The number of structured content folders inside this folder.
                    readOnly: true
                    type: integer
                numberOfStructuredContents:
                    description: The number of structured content objects inside this folder.
                    readOnly: true
                    type: integer
                siteId:
                    description: The ID of the site to which this folder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: A write-only property that specifies the folder's default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
info:
    description: ""
    title: "Headless Delivery"
    version: v1.0
openapi: 3.0.1
paths:
    "/blog-posting-images/{blogPostingImageId}":
        delete:
            operationId: deleteBlogPostingImage
            parameters:
                - in: path
                  name: blogPostingImageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPostingImage"]
        get:
            operationId: getBlogPostingImage
            parameters:
                - in: path
                  name: blogPostingImageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                    description: ""
            tags: ["BlogPostingImage"]
    "/blog-postings/{blogPostingId}":
        delete:
            operationId: deleteBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPosting"]
        get:
            operationId: getBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
        patch:
            operationId: patchBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
        put:
            operationId: putBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
    "/blog-postings/{blogPostingId}/comments":
        get:
            operationId: getBlogPostingCommentsPage
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postBlogPostingComment
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/blog-postings/{blogPostingId}/my-rating":
        delete:
            operationId: deleteBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPosting"]
        get:
            operationId: getBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
        post:
            operationId: postBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
        put:
            operationId: putBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
    "/comments/{commentId}":
        delete:
            operationId: deleteComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Comment"]
        get:
            operationId: getComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
        put:
            operationId: putComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/comments/{parentCommentId}/comments":
        get:
            operationId: getCommentCommentsPage
            parameters:
                - in: path
                  name: parentCommentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postCommentComment
            parameters:
                - in: path
                  name: parentCommentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/content-sets/{contentSetId}/content-set-elements":
        get:
            operationId: getContentSetContentSetElementsPage
            parameters:
                - in: path
                  name: contentSetId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/content-structures/{contentStructureId}":
        get:
            operationId: getContentStructure
            parameters:
                - in: path
                  name: contentStructureId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContentStructure"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ContentStructure"
                    description: ""
            tags: ["ContentStructure"]
    "/content-structures/{contentStructureId}/structured-contents":
        get:
            operationId: getContentStructureStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: contentStructureId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
    "/document-folders/{documentFolderId}":
        delete:
            operationId: deleteDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["DocumentFolder"]
        get:
            operationId: getDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
        patch:
            operationId: patchDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
        put:
            operationId: putDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/document-folders/{documentFolderId}/documents":
        get:
            operationId: getDocumentFolderDocumentsPage
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                    description: ""
            tags: ["Document"]
        post:
            operationId: postDocumentFolderDocument
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/document-folders/{parentDocumentFolderId}/document-folders":
        get:
            operationId: getDocumentFolderDocumentFoldersPage
            parameters:
                - in: path
                  name: parentDocumentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                    description: ""
            tags: ["DocumentFolder"]
        post:
            operationId: postDocumentFolderDocumentFolder
            parameters:
                - in: path
                  name: parentDocumentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/documents/{documentId}":
        delete:
            operationId: deleteDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Document"]
        get:
            operationId: getDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
        patch:
            operationId: patchDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
        put:
            operationId: putDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/documents/{documentId}/comments":
        get:
            operationId: getDocumentCommentsPage
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postDocumentComment
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/documents/{documentId}/my-rating":
        delete:
            operationId: deleteDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Document"]
        get:
            operationId: getDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
        post:
            operationId: postDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
        put:
            operationId: putDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}":
        delete:
            operationId: deleteKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        get:
            operationId: getKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        patch:
            operationId: patchKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        put:
            operationId: putKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments":
        get:
            operationId: getKnowledgeBaseArticleKnowledgeBaseAttachmentsPage
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseAttachment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseAttachment"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
        post:
            operationId: postKnowledgeBaseArticleKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                                knowledgeBaseAttachment:
                                    $ref: "#/components/schemas/KnowledgeBaseAttachment"
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating":
        delete:
            operationId: deleteKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        get:
            operationId: getKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        put:
            operationId: putKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles":
        get:
            operationId: getKnowledgeBaseArticleKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: parentKnowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseArticleKnowledgeBaseArticle
            parameters:
                - in: path
                  name: parentKnowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-attachments/{knowledgeBaseAttachmentId}":
        delete:
            operationId: deleteKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
        get:
            operationId: getKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
    "/knowledge-base-folders/{knowledgeBaseFolderId}":
        delete:
            operationId: deleteKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        get:
            operationId: getKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        patch:
            operationId: patchKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        put:
            operationId: putKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles":
        get:
            operationId: getKnowledgeBaseFolderKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseFolderKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders":
        get:
            operationId: getKnowledgeBaseFolderKnowledgeBaseFoldersPage
            parameters:
                - in: path
                  name: parentKnowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        post:
            operationId: postKnowledgeBaseFolderKnowledgeBaseFolder
            parameters:
                - in: path
                  name: parentKnowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/message-board-attachments/{messageBoardAttachmentId}":
        delete:
            operationId: deleteMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardAttachment"]
        get:
            operationId: getMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-messages/{messageBoardMessageId}":
        delete:
            operationId: deleteMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardMessage"]
        get:
            operationId: getMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
        patch:
            operationId: patchMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
        put:
            operationId: putMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-messages/{messageBoardMessageId}/message-board-attachments":
        get:
            operationId: getMessageBoardMessageMessageBoardAttachmentsPage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                    description: ""
            tags: ["MessageBoardAttachment"]
        post:
            operationId: postMessageBoardMessageMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                MessageBoardAttachment:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-messages/{messageBoardMessageId}/my-rating":
        delete:
            operationId: deleteMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardMessage"]
        get:
            operationId: getMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
        put:
            operationId: putMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-messages/{parentMessageBoardMessageId}/message-board-messages":
        get:
            operationId: getMessageBoardMessageMessageBoardMessagesPage
            parameters:
                - in: path
                  name: parentMessageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardMessageMessageBoardMessage
            parameters:
                - in: path
                  name: parentMessageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-sections/{messageBoardSectionId}":
        delete:
            operationId: deleteMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardSection"]
        get:
            operationId: getMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
        patch:
            operationId: patchMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
        put:
            operationId: putMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/message-board-sections/{messageBoardSectionId}/message-board-threads":
        get:
            operationId: getMessageBoardSectionMessageBoardThreadsPage
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postMessageBoardSectionMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/message-board-sections/{parentMessageBoardSectionId}/message-board-sections":
        get:
            operationId: getMessageBoardSectionMessageBoardSectionsPage
            parameters:
                - in: path
                  name: parentMessageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                    description: ""
            tags: ["MessageBoardSection"]
        post:
            operationId: postMessageBoardSectionMessageBoardSection
            parameters:
                - in: path
                  name: parentMessageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/message-board-threads/{messageBoardThreadId}":
        delete:
            operationId: deleteMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardThread"]
        get:
            operationId: getMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
        patch:
            operationId: patchMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
        put:
            operationId: putMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/message-board-threads/{messageBoardThreadId}/message-board-attachments":
        get:
            operationId: getMessageBoardThreadMessageBoardAttachmentsPage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                    description: ""
            tags: ["MessageBoardAttachment"]
        post:
            operationId: postMessageBoardThreadMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                                knowledgeBaseAttachment:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-threads/{messageBoardThreadId}/message-board-messages":
        get:
            operationId: getMessageBoardThreadMessageBoardMessagesPage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardThreadMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-threads/{messageBoardThreadId}/my-rating":
        delete:
            operationId: deleteMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardThread"]
        get:
            operationId: getMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
        put:
            operationId: putMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
    "/sites/{siteId}/blog-posting-images":
        get:
            operationId: getSiteBlogPostingImagesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPostingImage"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPostingImage"
                                type: array
                    description: ""
            tags: ["BlogPostingImage"]
        post:
            operationId: postSiteBlogPostingImage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                blogPostingImage:
                                    $ref: "#/components/schemas/BlogPostingImage"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                    description: ""
            tags: ["BlogPostingImage"]
    "/sites/{siteId}/blog-postings":
        get:
            operationId: getSiteBlogPostingsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPosting"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPosting"
                                type: array
                    description: ""
            tags: ["BlogPosting"]
        post:
            operationId: postSiteBlogPosting
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
    "/sites/{siteId}/content-sets/by-key/{key}/content-set-elements":
        get:
            operationId: getSiteContentSetByKeyContentSetElementsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: key
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/sites/{siteId}/content-sets/by-uuid/{uuid}/content-set-elements":
        get:
            operationId: getSiteContentSetByUuidContentSetElementsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: uuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/sites/{siteId}/content-structures":
        get:
            operationId: getSiteContentStructuresPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentStructure"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentStructure"
                                type: array
                    description: ""
            tags: ["ContentStructure"]
    "/sites/{siteId}/document-folders":
        get:
            operationId: getSiteDocumentFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                    description: ""
            tags: ["DocumentFolder"]
        post:
            operationId: postSiteDocumentFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/sites/{siteId}/documents":
        get:
            operationId: getSiteDocumentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                    description: ""
            tags: ["Document"]
        post:
            operationId: postSiteDocument
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/sites/{siteId}/knowledge-base-articles":
        get:
            operationId: getSiteKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postSiteKnowledgeBaseArticle
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/sites/{siteId}/knowledge-base-folders":
        get:
            operationId: getSiteKnowledgeBaseFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        post:
            operationId: postSiteKnowledgeBaseFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/sites/{siteId}/message-board-sections":
        get:
            operationId: getSiteMessageBoardSectionsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                    description: ""
            tags: ["MessageBoardSection"]
        post:
            operationId: postSiteMessageBoardSection
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/sites/{siteId}/message-board-threads":
        get:
            operationId: getSiteMessageBoardThreadsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postSiteMessageBoardThread
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/sites/{siteId}/structured-content-folders":
        get:
            operationId: getSiteStructuredContentFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                    description: ""
            tags: ["StructuredContentFolder"]
        post:
            operationId: postSiteStructuredContentFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/sites/{siteId}/structured-contents":
        get:
            operationId: getSiteStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postSiteStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/sites/{siteId}/structured-contents/by-key/{key}":
        get:
            operationId: getSiteStructuredContentByKey
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: key
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/sites/{siteId}/structured-contents/by-uuid/{uuid}":
        get:
            operationId: getSiteStructuredContentByUuid
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: uuid
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders":
        get:
            operationId: getStructuredContentFolderStructuredContentFoldersPage
            parameters:
                - in: path
                  name: parentStructuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                    description: ""
            tags: ["StructuredContentFolder"]
        post:
            operationId: postStructuredContentFolderStructuredContentFolder
            parameters:
                - in: path
                  name: parentStructuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/structured-content-folders/{structuredContentFolderId}":
        delete:
            operationId: deleteStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContentFolder"]
        get:
            operationId: getStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
        patch:
            operationId: patchStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
        put:
            operationId: putStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/structured-content-folders/{structuredContentFolderId}/structured-contents":
        get:
            operationId: getStructuredContentFolderStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postStructuredContentFolderStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}":
        delete:
            operationId: deleteStructuredContent
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContent"]
        get:
            operationId: getStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
        patch:
            operationId: patchStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
        put:
            operationId: putStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}/comments":
        get:
            operationId: getStructuredContentCommentsPage
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postStructuredContentComment
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/structured-contents/{structuredContentId}/my-rating":
        delete:
            operationId: deleteStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContent"]
        get:
            operationId: getStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
        put:
            operationId: putStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}/rendered-content/{templateId}":
        get:
            operationId: getStructuredContentRenderedContentTemplate
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: templateId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        text/html:
                            schema:
                                type: string
                    description: ""
            tags: ["StructuredContent"]