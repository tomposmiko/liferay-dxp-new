components:
    schemas:
        AggregateRating:
            #@review
            description: https://www.schema.org/AggregateRating
            properties:
                bestRating:
                    description: The best rating possible (by default normalized to 1.0).
                    format: double
                    readOnly: true
                    type: number
                ratingCount:
                    description: The number of ratings.
                    readOnly: true
                    type: integer
                ratingValue:
                    description: The average rating.
                    format: double
                    readOnly: true
                    type: number
                worstRating:
                    description: The worst rating possible (by default normalized to 0.0).
                    format: double
                    readOnly: true
                    type: number
            type: object
        BlogPosting:
            #@review
            description: https://www.schema.org/BlogPosting
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                alternativeHeadline:
                    description: The subtitle of this BlogPosting.
                    type: string
                articleBody:
                    description: The article content of this BlogPosting.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the BlogPosting
                    readOnly: true
                dateCreated:
                    description: The creation date of the BlogPosting.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the BlogPosting changed.
                    format: date-time
                    readOnly: true
                    type: string
                datePublished:
                    description: The last date when the BlogPosting was published.
                    format: date-time
                    type: string
                description:
                    description: A description explaining this BlogPosting.
                    type: string
                encodingFormat:
                    description: The media format of the content (html, bbcode...).
                    readOnly: true
                    type: string
                friendlyUrlPath:
                    description: A relative URL where this content will be accesible.
                    type: string
                headline:
                    description: The main title of this BlogPosting.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description: The cover image of the BlogPosting.
                    properties:
                        caption:
                            description: A text describing the BlogPosting image.
                            type: string
                        contentUrl:
                            description: An absolute URL to the image.
                            format: uri
                            readOnly: true
                            type: string
                        imageId:
                            description: An identifier of the image, can be used to retrieve more information in a Document API.
                            format: int64
                            type: integer
                    type: object
                keywords:
                    description: A list of keywords describing the BlogPosting.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: The number of comments this BlogPosting has received.
                    readOnly: true
                    type: integer
                siteId:
                    description: The site identificator where this BlogPosting is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories asociated with this BlogPosting.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The id of the category, can be used to retrieve more information in the TaxonomyCategory API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The name of the TaxonomyCategory.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write only field to add TaxonomyCategory to this resource.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - articleBody
                - headline
            type: object
        BlogPostingImage:
            #@review
            description: https://www.schema.org/BlogPostingImage
            properties:
                contentUrl:
                    description: An absolute URL to the binary image.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The content type of this image (application/png...).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The extension of the image.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The size in bytes of the image.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The text describing the image.
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        Comment:
            #@review
            description: https://www.schema.org/Comment
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the Comment
                    readOnly: true
                dateCreated:
                    description: The creation date of the Comment.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the Comment changed.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                numberOfComments:
                    description: The number of child comments associated with this Comment.
                    readOnly: true
                    type: integer
                text:
                    description: The content of the Comment.
                    type: string
            type: object
        ContentDocument:
            #@review
            description: https://www.schema.org/ContentDocument
            properties:
                contentUrl:
                    description: An absolute URL to the binary file.
                    format: uri
                    readOnly: true
                    type: string
                description:
                    description: The description of the file.
                    type: string
                encodingFormat:
                    description: The content type (application/pdf) of the binary file.
                    readOnly: true
                    type: string
                fileExtension:
                    description: The file extension.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    type: integer
                sizeInBytes:
                    description: The size in bytes of the ContentDocument.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The text describing the ContentDocument.
                    type: string
            type: object
        ContentField:
            #@review
            description: https://www.schema.org/ContentField
            properties:
                dataType:
                    description: The type of field (image, text).
                    readOnly: true
                    type: string
                inputControl:
                    description: The type of control that has be used to render the content (text, textarea...).
                    readOnly: true
                    type: string
                label:
                    description: The label of the field.
                    readOnly: true
                    type: string
                name:
                    description: The internal name of the field, valid for comparisons and unique in the StructuredContent.
                    type: string
                nestedFields:
                    description: A list of child ContentFields that depend on this resource.
                    items:
                        $ref: "#/components/schemas/ContentField"
                    type: array
                repeatable:
                    description: A flag indicating if this field can be rendered multiple times.
                    readOnly: true
                    type: boolean
                value:
                    properties:
                        data:
                            description: The content of this field for simple types.
                            type: string
                        document:
                            allOf:
                                - $ref: "#/components/schemas/ContentDocument"
                            description: A ContentDocument element.
                        geo:
                            description: A point determined by latitude and longitude.
                            properties:
                                latitude:
                                    description: The latitude of a point in space.
                                    format: double
                                    type: number
                                longitude:
                                    description: The longitude of a point in space.
                                    format: double
                                    type: number
                            type: object
                        image:
                            allOf:
                                - $ref: "#/components/schemas/ContentDocument"
                            description: A ContentDocument element storing an image file.
                        link:
                            description: A link to a page inside the server.
                            format: uri
                            type: string
                        structuredContentLink:
                            description: A link to a JournalArticle stored in the server.
                            properties:
                                id:
                                    description: The identifier of the resource.
                                    format: int64
                                    type: integer
                                title:
                                    description: The title of the resouce.
                                    type: string
                            type: object
                    type: object
        ContentSetElement:
            #@review
            description: https://www.schema.org/ContentSetElement
            properties:
                content:
                    description: The main content.
                    readOnly: true
                    type: object
                contentType:
                    description: The type of the content.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The title of the ContentSetElement.
                    readOnly: true
                    type: string
        ContentStructure:
            #@review
            description: The ContentStructure backing a StructuredContent. Defines which form fields are available and the possible types and values.
            properties:
                availableLanguages:
                    description: A list of languages the content has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                contentStructureFields:
                    description: A list of fields that belong to this ContentStructure.
                    items:
                        $ref: "#/components/schemas/ContentStructureField"
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the ContentStructure
                    readOnly: true
                dateCreated:
                    description: The creation date of the ContentStructure.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the ContentStructure changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the ContentStructure
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The name.
                    readOnly: true
                    type: string
                siteId:
                    description: The site identificator where this ContentStructure is scoped.
                    format: int64
                    readOnly: true
                    type: integer
            type: object
        ContentStructureField:
            #@review
            description: https://www.schema.org/ContentStructureField
            properties:
                dataType:
                    description: The type of the form field (date, geo, text...).
                    readOnly: true
                    type: string
                inputControl:
                    description: The type of the input used to render the content (text, textarea, select...).
                    readOnly: true
                    type: string
                label:
                    description: The label of the form field.
                    readOnly: true
                    type: string
                localizable:
                    description: A flag indicating if the content can be accesible in different languages.
                    readOnly: true
                    type: boolean
                multiple:
                    description: A flag indicating that this form field can have several answers.
                    readOnly: true
                    type: boolean
                name:
                    description: The name.
                    readOnly: true
                    type: string
                nestedContentStructureFields:
                    description: The child ContentStructureFields that depends in this resource.
                    items:
                        $ref: "#/components/schemas/ContentStructureField"
                    readOnly: true
                    type: array
                options:
                    description: A list of several predefined answers.
                    items:
                        properties:
                            label:
                                description: The label.
                                type: string
                            value:
                                description: The internal value of the Option.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                predefinedValue:
                    description: The default value of the form field.
                    readOnly: true
                    type: string
                repeatable:
                    description: A flag indicating in this content can be rendered (and answered) several times.
                    readOnly: true
                    type: boolean
                required:
                    description: A flag to indicate that this form field is required, form can't be filled without it.
                    readOnly: true
                    type: boolean
                showLabel:
                    description: A flag indicating if the end target of this structure should render the label of the field.
                    readOnly: true
                    type: boolean
            type: object
        Creator:
            #@review
            description: https://www.schema.org/Creator
            properties:
                additionalName:
                    description: An additional name, can be used for a middle name.
                    readOnly: true
                    type: string
                familyName:
                    description: In the US, the surname of the UserAccount.
                    readOnly: true
                    type: string
                givenName:
                    description: In the US, the first name of the UserAccount.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                image:
                    description: A relative URL to the image profile of the UserAccount.
                    format: uri
                    readOnly: true
                    type: string
                name:
                    description: The full name of the UserAccount.
                    readOnly: true
                    type: string
                profileURL:
                    description: A relative URL to the profile of the UserAccount.
                    format: uri
                    readOnly: true
                    type: string
            type: object
        Document:
            #@review
            description: A DLFile, storing binary and metadata information. Properties follow https://schema.org/MediaObject specification.
            properties:
                adaptedImages:
                    description: An array of images in several resolutions and sizes, created by the adaptive media framework.
                    items:
                        properties:
                            contentUrl:
                                description: An absolute URL to the image.
                                format: uri
                                type: string
                            height:
                                description: The height of the image.
                                type: integer
                            resolutionName:
                                description: A descriptive name of this version.
                                type: string
                            sizeInBytes:
                                description: The size in bytes of the image.
                                format: int64
                                type: integer
                            width:
                                description: The width of the image.
                                type: integer
                        type: object
                    readOnly: true
                    type: array
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                contentUrl:
                    description: An absolute URL to the binary Document.
                    format: binary
                    readOnly: true
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the Document
                    readOnly: true
                dateCreated:
                    description: The creation date of the Document.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the Document changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the Document
                    type: string
                documentFolderId:
                    description: The id of the DocumentFolder where this Document is stored.
                    format: int64
                    readOnly: true
                    type: integer
                encodingFormat:
                    description: The content type (application/pdf) of the Document.
                    readOnly: true
                    type: string
                fileExtension:
                    description: The file extension of the binary file.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the Document.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: A list of child comments of this content.
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The size in bytes of the binary files.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories asociated with this Document.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The id of the category, can be used to retrieve more information in the TaxonomyCategory API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The name of the TaxonomyCategory.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write only field to add TaxonomyCategory to this resource.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The main title/name of the Document.
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        DocumentFolder:
            #@review
            description: A DocumentFolder containing other DocumentFolder or several Documents.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the DocumentFolder
                    readOnly: true
                dateCreated:
                    description: The creation date of the DocumentFolder.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the DocumentFolder changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the DocumentFolder
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The main title/name of the DocumentFolder
                    type: string
                numberOfDocumentFolders:
                    description: The number of child DocumentFolders that depend on this resources.
                    readOnly: true
                    type: integer
                numberOfDocuments:
                    description: The number of child Documents that depend on this resources.
                    readOnly: true
                    type: integer
                siteId:
                    description: The site identificator where this DocumentFolder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        KnowledgeBaseArticle:
            #@review
            description: A KBArticle, the main entity in the knowledge base API, modeling an article in a FAQ section.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                articleBody:
                    description: The main content of this resouce.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the KnowledgeBaseArticle
                    readOnly: true
                dateCreated:
                    description: The creation date of the KnowledgeBaseArticle.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the KnowledgeBaseArticle changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the KnowledgeBaseArticle.
                    type: string
                encodingFormat:
                    description: The media type (html, bbcode) of the content.
                    readOnly: true
                    type: string
                friendlyUrlPath:
                    description: A relative URL to access this resource.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the KnowledgeBaseArticle.
                    items:
                        type: string
                    type: array
                numberOfAttachments:
                    description: The number of KnowledgeBaseAttachments that are stored in this article.
                    readOnly: true
                    type: integer
                numberOfKnowledgeBaseArticles:
                    description: The number of child KBArticle that are asociated with this resouce.
                    readOnly: true
                    type: integer
                parentKnowledgeBaseFolder:
                    description: The parent KnowledgeBaseFolder of this article, if any.
                    properties:
                        folderId:
                            description: The identifier of the folder.
                            format: int64
                            type: integer
                        folderName:
                            description: The name of the folder.
                            type: string
                    readOnly: true
                    type: object
                parentKnowledgeBaseFolderId:
                    description: The parent KnowledgeBaseFolder identifier of this article, if any.
                    format: int64
                    type: integer
                    writeOnly: true
                siteId:
                    description: The site identificator where this TaxonomyVocabulary is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories asociated with this KnowledgeBaseArticle.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The id of the category, can be used to retrieve more information in the TaxonomyCategory API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The name of the TaxonomyCategory.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write only field to add TaxonomyCategory to this resource.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The main title of the KnowledgeBaseArticle.
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - articleBody
                - title
            type: object
        KnowledgeBaseAttachment:
            #@review
            description: A binary file asociated with a KnowledgeBaseArticle.
            properties:
                contentUrl:
                    description: An absolute URL to the binary file.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The media type (application/pdf...) of the binary file.
                    readOnly: true
                    type: string
                fileExtension:
                    description: The file extension.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The size in bytes of the binary file.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The main title of the binary file.
                    type: string
            type: object
        KnowledgeBaseFolder:
            #@review
            description: A folder to clasify KnowledgeBaseArticles.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the KnowledgeBaseFolder.
                    readOnly: true
                dateCreated:
                    description: The creation date of the KnowledgeBaseFolder.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the KnowledgeBaseFolder changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the KnowledgeBaseFolder.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The main title/name of this resource.
                    type: string
                numberOfKnowledgeBaseArticles:
                    description: The number of child KnowledgeBaseArticles asociated with this resource.
                    readOnly: true
                    type: integer
                numberOfKnowledgeBaseFolders:
                    description: The number of child KnowledgeBaseFolders asociated with this resource.
                    readOnly: true
                    type: integer
                parentKnowledgeBaseFolder:
                    description: The parent KnowledgeBaseFolder of this article, if any.
                    properties:
                        folderId:
                            description: The identifier of the folder.
                            format: int64
                            type: integer
                        folderName:
                            description: The name of the folder.
                            type: string
                    readOnly: true
                    type: object
                parentKnowledgeBaseFolderId:
                    description: The parent KnowledgeBaseFolder identifier of this article, if any.
                    format: int64
                    type: integer
                    writeOnly: true
                siteId:
                    description: The site identificator where this KnowledgeBaseFolder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        MessageBoardAttachment:
            #@review
            description: A binary file linked to a MessageBoardMessage.
            properties:
                contentUrl:
                    description: An absolute URL to the binary image.
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The media format of the binary file (application/pdf...).
                    readOnly: true
                    type: string
                fileExtension:
                    description: The extension of the binary file.
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                sizeInBytes:
                    description: The size in bytes of the binary file.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The title of the binary file.
                    type: string
            type: object
        MessageBoardMessage:
            #@review
            description: A MBMessage, a message inside a forum. Properties follow https://schema.org/DiscussionForumPosting specification.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                anonymous:
                    description: A flag to indicate that this message is not going to return the creator information.
                    type: boolean
                articleBody:
                    description: The main content of the MessageBoardMessage.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the MessageBoardMessage
                    readOnly: true
                dateCreated:
                    description: The creation date of the MessageBoardMessage.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the MessageBoardMessage changed.
                    format: date-time
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The media format of the content (html, bbcode...).
                    readOnly: true
                    type: string
                headline:
                    description: The main title of the MessageBoardMessage.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the MessageBoardMessage.
                    items:
                        type: string
                    type: array
                numberOfMessageBoardAttachments:
                    description: The number of child attachments associated with this resource.
                    readOnly: true
                    type: integer
                numberOfMessageBoardMessages:
                    description: The number of child MessageBoardMessages that are associated with this resource.
                    readOnly: true
                    type: integer
                showAsAnswer:
                    description: A flag to indicate if this MessageBoardMessage is answering a question.
                    type: boolean
                siteId:
                    description: The site identificator where this MessageBoardMessage is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            type: object
        MessageBoardSection:
            #@review
            description: Represents a folder inside a forum, clasifying several MessageBoardMessages.
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the MessageBoardSection
                    readOnly: true
                dateCreated:
                    description: The creation date of the MessageBoardSection.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the MessageBoardSection changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the MessageBoardSection
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                numberOfMessageBoardSections:
                    description: The number of child MessageBoardSections that belong to this MessageBoardSection.
                    readOnly: true
                    type: integer
                numberOfMessageBoardThreads:
                    description: The number of child MessageBoardThreads that belong to this MessageBoardSection.
                    readOnly: true
                    type: integer
                siteId:
                    description: The site identificator where this MessageBoardSection is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                title:
                    description: The main title of the resource.
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - title
            type: object
        MessageBoardThread:
            #@review
            description: A thread inside a forum, internally modelled with the MBThread class.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                articleBody:
                    description: The main content of the thread, the message written as description of the thread.
                    type: string
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the MessageBoardThread
                    readOnly: true
                dateCreated:
                    description: The creation date of the MessageBoardThread.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the MessageBoardThread changed.
                    format: date-time
                    readOnly: true
                    type: string
                encodingFormat:
                    description: The media format of the content (html, bbcode...).
                    readOnly: true
                    type: string
                headline:
                    description: The main title of the thread.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                keywords:
                    description: A list of keywords describing the MessageBoardThread.
                    items:
                        type: string
                    type: array
                numberOfMessageBoardAttachments:
                    description: The number of child attachments asociated with the MessageBoardThread.
                    readOnly: true
                    type: integer
                numberOfMessageBoardMessages:
                    description: The number of child attachments asociated with the MessageBoardMessages.
                    readOnly: true
                    type: integer
                showAsQuestion:
                    description: A flag indicating that this thread is posting a question that can receives aproved answers.
                    type: boolean
                siteId:
                    description: The site identificator where this MessageBoardThread is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                threadType:
                    description: The type of the thread.
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - headline
            type: object
        Rating:
            #@review
            description: Represents a score received by any kind of asset. Properties follow https://schema.org/Rating specification.
            properties:
                bestRating:
                    description: The best possible rating a content can receive, by default normalized to 1.0.
                    format: double
                    readOnly: true
                    type: number
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the Rating
                    readOnly: true
                dateCreated:
                    description: The creation date of the Rating.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the Rating changed.
                    format: date-time
                    readOnly: true
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                ratingValue:
                    description: The value of the Rating.
                    format: double
                    type: number
                worstRating:
                    description: The worst possible rating a content can receive, by default normalized to 0.0.
                    format: double
                    readOnly: true
                    type: number
            type: object
        StructuredContent:
            #@review
            description: A content with fields and rendered by a template backed by a ContentStructure. Internally modeled as a JournalArticle.
            properties:
                aggregateRating:
                    allOf:
                        - $ref: "#/components/schemas/AggregateRating"
                    description: The information of the ratings (average, number) associated to this resource.
                    readOnly: true
                availableLanguages:
                    description: A list of languages the content has a translation for.
                    items:
                        type: string
                    readOnly: true
                    type: array
                contentFields:
                    description: A list of fields that store the information of the StructuredContent.
                    items:
                        $ref: "#/components/schemas/ContentField"
                    type: array
                contentStructureId:
                    description: The identifier of the ContentStructure.
                    format: int64
                    type: integer
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the StructuredContent
                    readOnly: true
                dateCreated:
                    description: The creation date of the StructuredContent.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the StructuredContent changed.
                    format: date-time
                    readOnly: true
                    type: string
                datePublished:
                    description: The last date when the StructuredContent was published.
                    format: date-time
                    type: string
                description:
                    description: The description of the StructuredContent
                    type: string
                friendlyUrlPath:
                    description: A relative URL to the rendered content of the StructuredContent.
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                key:
                    description: An identifier, indepedent of the database, that can be used to reference the resource.
                    readOnly: true
                    type: string
                keywords:
                    description: A list of keywords describing the StructuredContent.
                    items:
                        type: string
                    type: array
                numberOfComments:
                    description: The number of child comments this StructuredContent has received.
                    readOnly: true
                    type: integer
                renderedContents:
                    description: A list of rendered StructuredContents, the result of using a template to process the content, returning html.
                    items:
                        properties:
                            renderedContentURL:
                                description: An absolute URL to the binary image.
                                format: uri
                                type: string
                            templateName:
                                description: The name of the template used to render the content.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                siteId:
                    description: The site identificator where this StructuredContent is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategories:
                    description: The categories asociated with this StructuredContent.
                    items:
                        properties:
                            taxonomyCategoryId:
                                description: The id of the category, can be used to retrieve more information in the TaxonomyCategory API.
                                format: int64
                                type: integer
                            taxonomyCategoryName:
                                description: The name of the TaxonomyCategory.
                                type: string
                        type: object
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    description: A write only field to add TaxonomyCategory to this resource.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                title:
                    description: The main title of the StructuredContent.
                    type: string
                uuid:
                    description: A valid external identifier to reference this content.
                    readOnly: true
                    type: string
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - contentStructureId
        StructuredContentFolder:
            #@review
            description: https://www.schema.org/StructuredContentFolder
            properties:
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    description: The creator of the StructuredContentFolder
                    readOnly: true
                dateCreated:
                    description: The creation date of the StructuredContentFolder.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description: The last time a field of the StructuredContentFolder changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description: The description of the StructuredContentFolder
                    type: string
                id:
                    description: The identifier of the resource.
                    format: int64
                    readOnly: true
                    type: integer
                name:
                    description: The name of the StructuredContentFolder.
                    type: string
                numberOfStructuredContentFolders:
                    description: The number of child StructuredContentFolders that belong to this resource.
                    readOnly: true
                    type: integer
                numberOfStructuredContents:
                    description: The number of child StructuredContents that belong to this resource.
                    readOnly: true
                    type: integer
                siteId:
                    description: The site identificator where this StructuredContentFolder is scoped.
                    format: int64
                    readOnly: true
                    type: integer
                viewableBy:
                    description: Write only property to specify the default permissions.
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
info:
    description: ""
    title: "Headless Delivery"
    version: v1.0
openapi: 3.0.1
paths:
    "/blog-posting-images/{blogPostingImageId}":
        delete:
            operationId: deleteBlogPostingImage
            parameters:
                - in: path
                  name: blogPostingImageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPostingImage"]
        get:
            operationId: getBlogPostingImage
            parameters:
                - in: path
                  name: blogPostingImageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                    description: ""
            tags: ["BlogPostingImage"]
    "/blog-postings/{blogPostingId}":
        delete:
            operationId: deleteBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPosting"]
        get:
            operationId: getBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
        patch:
            operationId: patchBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
        put:
            operationId: putBlogPosting
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
    "/blog-postings/{blogPostingId}/comments":
        get:
            operationId: getBlogPostingCommentsPage
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postBlogPostingComment
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/blog-postings/{blogPostingId}/my-rating":
        delete:
            operationId: deleteBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["BlogPosting"]
        get:
            operationId: getBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
        post:
            operationId: postBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
        put:
            operationId: putBlogPostingMyRating
            parameters:
                - in: path
                  name: blogPostingId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["BlogPosting"]
    "/comments/{commentId}":
        delete:
            operationId: deleteComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Comment"]
        get:
            operationId: getComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
        put:
            operationId: putComment
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/comments/{parentCommentId}/comments":
        get:
            operationId: getCommentCommentsPage
            parameters:
                - in: path
                  name: parentCommentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postCommentComment
            parameters:
                - in: path
                  name: parentCommentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/content-sets/{contentSetId}/content-set-elements":
        get:
            operationId: getContentSetContentSetElementsPage
            parameters:
                - in: path
                  name: contentSetId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/content-structures/{contentStructureId}":
        get:
            operationId: getContentStructure
            parameters:
                - in: path
                  name: contentStructureId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContentStructure"
                    description: ""
            tags: ["ContentStructure"]
    "/content-structures/{contentStructureId}/structured-contents":
        get:
            operationId: getContentStructureStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: contentStructureId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
    "/document-folders/{documentFolderId}":
        delete:
            operationId: deleteDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["DocumentFolder"]
        get:
            operationId: getDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
        patch:
            operationId: patchDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
        put:
            operationId: putDocumentFolder
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/document-folders/{documentFolderId}/documents":
        get:
            operationId: getDocumentFolderDocumentsPage
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                    description: ""
            tags: ["Document"]
        post:
            operationId: postDocumentFolderDocument
            parameters:
                - in: path
                  name: documentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/document-folders/{parentDocumentFolderId}/document-folders":
        get:
            operationId: getDocumentFolderDocumentFoldersPage
            parameters:
                - in: path
                  name: parentDocumentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                    description: ""
            tags: ["DocumentFolder"]
        post:
            operationId: postDocumentFolderDocumentFolder
            parameters:
                - in: path
                  name: parentDocumentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/documents/{documentId}":
        delete:
            operationId: deleteDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Document"]
        get:
            operationId: getDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
        patch:
            operationId: patchDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
        put:
            operationId: putDocument
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/documents/{documentId}/comments":
        get:
            operationId: getDocumentCommentsPage
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postDocumentComment
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/documents/{documentId}/my-rating":
        delete:
            operationId: deleteDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Document"]
        get:
            operationId: getDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
        post:
            operationId: postDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
        put:
            operationId: putDocumentMyRating
            parameters:
                - in: path
                  name: documentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["Document"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}":
        delete:
            operationId: deleteKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        get:
            operationId: getKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        patch:
            operationId: patchKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        put:
            operationId: putKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments":
        get:
            operationId: getKnowledgeBaseArticleKnowledgeBaseAttachmentsPage
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseAttachment"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
        post:
            operationId: postKnowledgeBaseArticleKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                                knowledgeBaseAttachment:
                                    $ref: "#/components/schemas/KnowledgeBaseAttachment"
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
    "/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating":
        delete:
            operationId: deleteKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        get:
            operationId: getKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        put:
            operationId: putKnowledgeBaseArticleMyRating
            parameters:
                - in: path
                  name: knowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles":
        get:
            operationId: getKnowledgeBaseArticleKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: parentKnowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseArticleKnowledgeBaseArticle
            parameters:
                - in: path
                  name: parentKnowledgeBaseArticleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-attachments/{knowledgeBaseAttachmentId}":
        delete:
            operationId: deleteKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
        get:
            operationId: getKnowledgeBaseAttachment
            parameters:
                - in: path
                  name: knowledgeBaseAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseAttachment"
                    description: ""
            tags: ["KnowledgeBaseAttachment"]
    "/knowledge-base-folders/{knowledgeBaseFolderId}":
        delete:
            operationId: deleteKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        get:
            operationId: getKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        patch:
            operationId: patchKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        put:
            operationId: putKnowledgeBaseFolder
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles":
        get:
            operationId: getKnowledgeBaseFolderKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postKnowledgeBaseFolderKnowledgeBaseArticle
            parameters:
                - in: path
                  name: knowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders":
        get:
            operationId: getKnowledgeBaseFolderKnowledgeBaseFoldersPage
            parameters:
                - in: path
                  name: parentKnowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        post:
            operationId: postKnowledgeBaseFolderKnowledgeBaseFolder
            parameters:
                - in: path
                  name: parentKnowledgeBaseFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/message-board-attachments/{messageBoardAttachmentId}":
        delete:
            operationId: deleteMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardAttachment"]
        get:
            operationId: getMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardAttachmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-messages/{messageBoardMessageId}":
        delete:
            operationId: deleteMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardMessage"]
        get:
            operationId: getMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
        patch:
            operationId: patchMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
        put:
            operationId: putMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-messages/{messageBoardMessageId}/message-board-attachments":
        get:
            operationId: getMessageBoardMessageMessageBoardAttachmentsPage
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                    description: ""
            tags: ["MessageBoardAttachment"]
        post:
            operationId: postMessageBoardMessageMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                MessageBoardAttachment:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-messages/{messageBoardMessageId}/my-rating":
        delete:
            operationId: deleteMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardMessage"]
        get:
            operationId: getMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
        put:
            operationId: putMessageBoardMessageMyRating
            parameters:
                - in: path
                  name: messageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-messages/{parentMessageBoardMessageId}/message-board-messages":
        get:
            operationId: getMessageBoardMessageMessageBoardMessagesPage
            parameters:
                - in: path
                  name: parentMessageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardMessageMessageBoardMessage
            parameters:
                - in: path
                  name: parentMessageBoardMessageId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-sections/{messageBoardSectionId}":
        delete:
            operationId: deleteMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardSection"]
        get:
            operationId: getMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
        patch:
            operationId: patchMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
        put:
            operationId: putMessageBoardSection
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/message-board-sections/{messageBoardSectionId}/message-board-threads":
        get:
            operationId: getMessageBoardSectionMessageBoardThreadsPage
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postMessageBoardSectionMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/message-board-sections/{parentMessageBoardSectionId}/message-board-sections":
        get:
            operationId: getMessageBoardSectionMessageBoardSectionsPage
            parameters:
                - in: path
                  name: parentMessageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                    description: ""
            tags: ["MessageBoardSection"]
        post:
            operationId: postMessageBoardSectionMessageBoardSection
            parameters:
                - in: path
                  name: parentMessageBoardSectionId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/message-board-threads/{messageBoardThreadId}":
        delete:
            operationId: deleteMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardThread"]
        get:
            operationId: getMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
        patch:
            operationId: patchMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
        put:
            operationId: putMessageBoardThread
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/message-board-threads/{messageBoardThreadId}/message-board-attachments":
        get:
            operationId: getMessageBoardThreadMessageBoardAttachmentsPage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                                type: array
                    description: ""
            tags: ["MessageBoardAttachment"]
        post:
            operationId: postMessageBoardThreadMessageBoardAttachment
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                                knowledgeBaseAttachment:
                                    $ref: "#/components/schemas/MessageBoardAttachment"
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardAttachment"
                    description: ""
            tags: ["MessageBoardAttachment"]
    "/message-board-threads/{messageBoardThreadId}/message-board-messages":
        get:
            operationId: getMessageBoardThreadMessageBoardMessagesPage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardMessage"
                                type: array
                    description: ""
            tags: ["MessageBoardMessage"]
        post:
            operationId: postMessageBoardThreadMessageBoardMessage
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardMessage"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardMessage"
                    description: ""
            tags: ["MessageBoardMessage"]
    "/message-board-threads/{messageBoardThreadId}/my-rating":
        delete:
            operationId: deleteMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["MessageBoardThread"]
        get:
            operationId: getMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
        put:
            operationId: putMessageBoardThreadMyRating
            parameters:
                - in: path
                  name: messageBoardThreadId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["MessageBoardThread"]
    "/sites/{siteId}/blog-posting-images":
        get:
            operationId: getSiteBlogPostingImagesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPostingImage"
                                type: array
                    description: ""
            tags: ["BlogPostingImage"]
        post:
            operationId: postSiteBlogPostingImage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                blogPostingImage:
                                    $ref: "#/components/schemas/BlogPostingImage"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPostingImage"
                    description: ""
            tags: ["BlogPostingImage"]
    "/sites/{siteId}/blog-postings":
        get:
            operationId: getSiteBlogPostingsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/BlogPosting"
                                type: array
                    description: ""
            tags: ["BlogPosting"]
        post:
            operationId: postSiteBlogPosting
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BlogPosting"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BlogPosting"
                    description: ""
            tags: ["BlogPosting"]
    "/sites/{siteId}/content-sets/by-key/{key}/content-set-elements":
        get:
            operationId: getSiteContentSetByKeyContentSetElementsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: key
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/sites/{siteId}/content-sets/by-uuid/{uuid}/content-set-elements":
        get:
            operationId: getSiteContentSetByUuidContentSetElementsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: uuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentSetElement"
                                type: array
                    description: ""
            tags: ["ContentSetElement"]
    "/sites/{siteId}/content-structures":
        get:
            operationId: getSiteContentStructuresPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContentStructure"
                                type: array
                    description: ""
            tags: ["ContentStructure"]
    "/sites/{siteId}/document-folders":
        get:
            operationId: getSiteDocumentFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/DocumentFolder"
                                type: array
                    description: ""
            tags: ["DocumentFolder"]
        post:
            operationId: postSiteDocumentFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DocumentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DocumentFolder"
                    description: ""
            tags: ["DocumentFolder"]
    "/sites/{siteId}/documents":
        get:
            operationId: getSiteDocumentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Document"
                                type: array
                    description: ""
            tags: ["Document"]
        post:
            operationId: postSiteDocument
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                document:
                                    $ref: "#/components/schemas/Document"
                                file:
                                    format: binary
                                    type: string
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Document"
                    description: ""
            tags: ["Document"]
    "/sites/{siteId}/knowledge-base-articles":
        get:
            operationId: getSiteKnowledgeBaseArticlesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseArticle"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseArticle"]
        post:
            operationId: postSiteKnowledgeBaseArticle
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseArticle"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseArticle"
                    description: ""
            tags: ["KnowledgeBaseArticle"]
    "/sites/{siteId}/knowledge-base-folders":
        get:
            operationId: getSiteKnowledgeBaseFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/KnowledgeBaseFolder"
                                type: array
                    description: ""
            tags: ["KnowledgeBaseFolder"]
        post:
            operationId: postSiteKnowledgeBaseFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/KnowledgeBaseFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/KnowledgeBaseFolder"
                    description: ""
            tags: ["KnowledgeBaseFolder"]
    "/sites/{siteId}/message-board-sections":
        get:
            operationId: getSiteMessageBoardSectionsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardSection"
                                type: array
                    description: ""
            tags: ["MessageBoardSection"]
        post:
            operationId: postSiteMessageBoardSection
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardSection"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardSection"
                    description: ""
            tags: ["MessageBoardSection"]
    "/sites/{siteId}/message-board-threads":
        get:
            operationId: getSiteMessageBoardThreadsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/MessageBoardThread"
                                type: array
                    description: ""
            tags: ["MessageBoardThread"]
        post:
            operationId: postSiteMessageBoardThread
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MessageBoardThread"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MessageBoardThread"
                    description: ""
            tags: ["MessageBoardThread"]
    "/sites/{siteId}/structured-content-folders":
        get:
            operationId: getSiteStructuredContentFoldersPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                    description: ""
            tags: ["StructuredContentFolder"]
        post:
            operationId: postSiteStructuredContentFolder
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/sites/{siteId}/structured-contents":
        get:
            operationId: getSiteStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postSiteStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/sites/{siteId}/structured-contents/by-key/{key}":
        get:
            operationId: getSiteStructuredContentByKey
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: key
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/sites/{siteId}/structured-contents/by-uuid/{uuid}":
        get:
            operationId: getSiteStructuredContentByUuid
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: uuid
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders":
        get:
            operationId: getStructuredContentFolderStructuredContentFoldersPage
            parameters:
                - in: path
                  name: parentStructuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContentFolder"
                                type: array
                    description: ""
            tags: ["StructuredContentFolder"]
        post:
            operationId: postStructuredContentFolderStructuredContentFolder
            parameters:
                - in: path
                  name: parentStructuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/structured-content-folders/{structuredContentFolderId}":
        delete:
            operationId: deleteStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContentFolder"]
        get:
            operationId: getStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
        patch:
            operationId: patchStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
        put:
            operationId: putStructuredContentFolder
            parameters:
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContentFolder"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContentFolder"
                    description: ""
            tags: ["StructuredContentFolder"]
    "/structured-content-folders/{structuredContentFolderId}/structured-contents":
        get:
            operationId: getStructuredContentFolderStructuredContentsPage
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/StructuredContent"
                                type: array
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postStructuredContentFolderStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentFolderId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}":
        delete:
            operationId: deleteStructuredContent
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContent"]
        get:
            operationId: getStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
        patch:
            operationId: patchStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
        put:
            operationId: putStructuredContent
            parameters:
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StructuredContent"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StructuredContent"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}/comments":
        get:
            operationId: getStructuredContentCommentsPage
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Comment"
                                type: array
                    description: ""
            tags: ["Comment"]
        post:
            operationId: postStructuredContentComment
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Comment"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                    description: ""
            tags: ["Comment"]
    "/structured-contents/{structuredContentId}/my-rating":
        delete:
            operationId: deleteStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["StructuredContent"]
        get:
            operationId: getStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
        post:
            operationId: postStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
        put:
            operationId: putStructuredContentMyRating
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Rating"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Rating"
                    description: ""
            tags: ["StructuredContent"]
    "/structured-contents/{structuredContentId}/rendered-content/{templateId}":
        get:
            operationId: getStructuredContentRenderedContentTemplate
            parameters:
                - in: path
                  name: structuredContentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: templateId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        text/html:
                            schema:
                                type: string
                    description: ""
            tags: ["StructuredContent"]