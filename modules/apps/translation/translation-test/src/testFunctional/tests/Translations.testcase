@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Translation Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that an imported translation can be approved through the workflow."
	@priority = "5"
	test ApproveImportToWebContent {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslateion = "Contenidoweb",
			descriptionTranslateion = "Descripcion",
			encoding = "false",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			webContentTitle = "WebContentTitle",
			workflow = "true");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.viewTranslationStatusWithWorkflowCP(
			webContentContent = "WebContent",
			webContentTitle = "WebContentTitle",
			workflowTask = "Review");

		PortletEntry.changeLocale(locale = "es-ES");

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		AssertTextEquals(
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Approved");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");

		AssertTextEquals(
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Approved");
	}

	@description = "This ensures that translate side by side shows the latest values after editing the web content article."
	@priority = "5"
	test EditWCAfterSideBySideTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.addCP(
			webContentContent = "WC WebContent Contenido editar",
			webContentTitle = "WC WebContent Título editar");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido editar",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título editar");
	}

	@description = "This ensures that a translated zip file with all available language can be exported."
	@priority = "5"
	test ExportWCWithAllLanguages {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Spanish (Spain),Swedish (Sweden)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that a translated zip file with an available language can be exported."
	@priority = "5"
	test ExportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that user can import the exported xliff file with 1.2 version."
	@priority = "5"
	test ImportExportedXLIFF {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			exportFileFormat = "XLIFF 1.2",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslateion = "Contenidoweb",
			descriptionTranslateion = "Descripcion",
			encoding = "false",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that a translated file(.xlf) with an available language can be imported."
	@priority = "5"
	test ImportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslateion = "Contenidoweb",
			descriptionTranslateion = "Descripcion",
			encoding = "false",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that a translated file(.xlf) after re-encoding it to UTF-8 can be imported."
	@priority = "4"
	test ImportWebContentWithUTF8 {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Japanese (Japan)");

		Translations.translateFile(
			contentTranslateion = "Webコンテンツ",
			descriptionTranslateion = "説明",
			encoding = "utf8",
			titleTranslation = "Webコンテンツのタイトル",
			translationFileName = "WebContentTitle-en_US-ja_JP",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-ja_JP_utf8.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "Webコンテンツ",
			webContentDescription = "説明",
			webContentTitle = "Webコンテンツのタイトル");
	}

	@description = "This ensures that a translated file(.xliff) with an available language can be imported."
	@priority = "5"
	test ImportWebContentWithXliffFile {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "German (Germany)");

		Translations.translateFile(
			contentTranslateion = "Internetinhalt",
			descriptionTranslateion = "Beschreibung",
			encoding = "false",
			titleTranslation = "TiteldesWebinhalts",
			translationFileName = "WebContentTitle-en_US-de_DE",
			translationFileRename = "true",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-de_DE.xliff",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "de-DE");

		WebContent.viewCP(
			webContentContent = "Internetinhalt",
			webContentDescription = "Beschreibung",
			webContentTitle = "TiteldesWebinhalts");
	}

	@description = "This ensures that an imported translation can be Rejected and Resubmited through the workflow."
	@priority = "5"
	test RejectandResubmitImportToDraftWebContent {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "French (France)");

		Translations.translateFile(
			contentTranslateion = "ContenuWeb",
			descriptionTranslateion = "Ladescription",
			encoding = "false",
			titleTranslation = "TitreducontenuWeb",
			translationFileName = "WebContentTitle-en_US-fr_FR",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-fr_FR.xlf",
			webContentTitle = "WebContentTitle",
			workflow = "true");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.viewTranslationStatusWithWorkflowCP(
			webContentContent = "WebContent",
			webContentTitle = "WebContentTitle",
			workflowTask = "Review");

		PortletEntry.changeLocale(locale = "fr-FR");

		AssertTextEquals(
			key_status = "Pending",
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Pending");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.viewTranslationStatusWithWorkflowCP(
			webContentContent = "WebContent",
			webContentTitle = "WebContentTitle",
			workflowTask = "Review");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-fr_FR.xlf",
			webContentTitle = "WebContentTitle",
			workflowResubmit = "true");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "WebContentTitle",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		AssertTextEquals(
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Approved");

		PortletEntry.changeLocale(locale = "fr-FR");

		WebContent.viewCP(
			webContentContent = "ContenuWeb",
			webContentDescription = "Ladescription",
			webContentTitle = "TitreducontenuWeb");

		AssertTextEquals(
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "Approved");
	}

	@description = "This ensures that the translator can select which target language she wants to translate."
	@priority = "5"
	test TranslateCustomizedWC {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox");

		for (var fieldName : list "Text,HTML,Integer,Number,Decimal,") {
			DynamicDataMapping.addField(
				field = "${fieldName}",
				fieldFieldLabel = "${fieldName}",
				fieldName = "${fieldName}");
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		var webContentSourceHTML = '''<h2 class="text-center">This is a HTML title</h2>''';

		WebContent.addWithStructureCP(
			description = "WC WebContent Description",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentDecimal = "1.1",
			webContentInteger = "123",
			webContentNumber = "100",
			webContentSourceHTML = "${webContentSourceHTML}",
			webContentText = "Text",
			webContentTextBox = "This is a text box.",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		var webContentHTML = "This is a HTML title";

		Translations.viewBaseFields(
			webContentDecimal = "1.1",
			webContentDescription = "WC WebContent Description",
			webContentHTML = "${webContentHTML}",
			webContentInteger = "123",
			webContentNumber = "100",
			webContentText = "Text",
			webContentTextBox = "This is a text box.",
			webContentTitle = "WC WebContent Title");

		var webContentSourceHTML = '''<h2 class="text-center">Este es un título HTML</h2>''';

		Translations.translateFields(
			webContentDecimal = "2.2",
			webContentDescription = "WC WebContent Descripción",
			webContentInteger = "321",
			webContentNumber = "200",
			webContentSourceHTML = "${webContentSourceHTML}",
			webContentText = "Mensaje de texto",
			webContentTextBox = "Este es un cuadro de texto.",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		var webContentHTML = "Este es un título HTML";

		Translations.viewTargetFields(
			webContentDecimal = "22,0",
			webContentDescription = "WC WebContent Descripción",
			webContentHTML = "${webContentHTML}",
			webContentInteger = "321",
			webContentNumber = "200",
			webContentText = "Mensaje de texto",
			webContentTextBox = "Este es un cuadro de texto.",
			webContentTitle = "WC WebContent Título");

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/es/group/guest/~/control_panel/manage?p_p_id=com_liferay_journal_web_portlet_JournalPortlet");

		LexiconEntry.changeDisplayStyle(displayStyle = "lista");

		Click.waitForMenuToggleJSClick(
			key_webContentTitle = "WC WebContent Título",
			locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		MenuItem.click(menuItem = "Editar");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			otherLocaleSummary = "Resumen",
			webContentDecimal = "22,0",
			webContentDescription = "WC WebContent Descripción",
			webContentHTML = "${webContentHTML}",
			webContentInteger = "321",
			webContentNumber = "200",
			webContentText = "Mensaje de texto",
			webContentTextBox = "Este es un cuadro de texto.",
			webContentTitle = "WC WebContent Título");
	}

	@description = "This ensures that the user can not translate a web content to an unavailable language."
	@priority = "4"
	test TranslateWCToUnavailableLanguage {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Arabic (Saudi Arabia),Catalan (Spain),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Swedish (Sweden)",
			defaultSiteLanguage = "English (United States)");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can not translate a web content without any languages permissions."
	@priority = "4"
	test TranslateWCWithoutLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.addRegularRole(roleTitle = "Regrole Name");

		JSONRole.assignRoleToUser(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "Info:You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can translate a Web content to the language she has permissions."
	@priority = "5"
	test TranslateWCWithSpecificLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.es_ES,com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.viewTargetLocales(
			currentTargetLocale = "zh-CN",
			noTargetLocale = "ar-SA,ca-ES,nl-NL,fi-FI,fr-FR,de-DE,hu-HU,ja-JP,pt-BR,sv-SE",
			targetLocale = "es-ES,zh-CN");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");
	}

	@description = "This ensures that the translator can select which base language she wants to translate."
	@priority = "5"
	test TranslateWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeBaseLocale(
			currentBaseLocale = "en-US",
			newBaseLocale = "es-ES");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "ja-JP");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.translateFields(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.changeTargetLocale(
			currentTargetLocale = "es-ES",
			newTargetLocale = "ja-JP");

		Translations.viewTargetFields(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");
	}

	@description = "This ensures that the user can see translation options after move all available languages to current."
	@priority = "4"
	test ViewOptionsWithAllLanguages {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "Text",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "Spanish (Spain)",
			defaultSiteLanguage = "Spanish (Spain)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(
			noOptions = "true",
			webContentTitle = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Swedish (Sweden)",
			defaultSiteLanguage = "Spanish (Spain)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that the user can see translation options after move one more available language to current."
	@priority = "5"
	test ViewOptionsWithOneMoreLanguage {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States)",
			defaultSiteLanguage = "English (United States)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(
			noOptions = "true",
			webContentTitle = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain)",
			defaultSiteLanguage = "English (United States)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(webContentTitle = "Web Content Title");
	}

}