definition {

	macro assertFileNameFromTempFolder {
		var translationZipFileName = TestCase.getDownloadedTempFileName(fileNamePattern = "${webContentTitle}*.zip");

		echo("## translationZipFileName: ${translationZipFileName}");

		if (contains("${translationZipFileName}", "en_US")) {
			echo("This is a exported translation file.");
		}
		else {
			fail("FAIL!");
		}
	}

	macro changeBaseLocale {
		Portlet.waitForForm();

		Click.clickNoMouseOver(
			key_currentLocale = StringUtil.lowerCase("${currentBaseLocale}"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		Click(
			key_locale = "${newBaseLocale}",
			locator1 = "Translation#DROPDOWN_MENU_ITEM");

		AssertElementPresent(
			key_locale = "${newBaseLocale}",
			locator1 = "Translation#CONTENT_TITLE");
	}

	macro changeTargetLocale {
		Portlet.waitForForm();

		Click.clickNoMouseOver(
			key_currentLocale = StringUtil.lowerCase("${currentTargetLocale}"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		Click(
			key_locale = "${newTargetLocale}",
			locator1 = "Translation#DROPDOWN_MENU_ITEM");

		AssertElementPresent(
			key_locale = "${newTargetLocale}",
			locator1 = "Translation#CONTENT_TITLE");
	}

	macro exportTranslation {
		AssertElementPresent(locator1 = "Language#EXPORT_TRANSLATION_ORIGIN_LANGUAGE");

		AssertElementPresent(
			key_checkboxName = "${defaultLanguage}",
			locator1 = "Checkbox#DISABLED_EXPORT_TRANSLATION");

		AssertElementPresent(locator1 = "Button#EXPORT_MODAL_DISABLED");

		if (isSet(exportFileFormat)) {
			Select(
				locator1 = "Select#EXPORT_FILE_FORMAT",
				value1 = "${exportFileFormat}");
		}

		for (var languageList : list "${languageList}") {
			Check.checkNotVisible(
				checkboxName = "${languageList}",
				locator1 = "Checkbox#ANY_CHECKBOX");
		}

		Click(locator1 = "Button#EXPORT_MODAL");

		DownloadTempFile();
	}

	macro gotoExportTranslation {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click.waitForMenuToggleJSClick(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		MenuItem.click(menuItem = "Export for Translation");
	}

	macro gotoImportTranslation {
		Click.waitForMenuToggleJSClick(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		MenuItem.click(menuItem = "Import Translation");
	}

	macro gotoTranslate {
		Click.waitForMenuToggleJSClick(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		MenuItem.click(menuItem = "Translate");
	}

	macro importTranslation {
		Translations.gotoImportTranslation(webContentTitle = "${webContentTitle}");

		AssertClick(
			locator1 = "Button#SELECT_FILE",
			value1 = "Select File");

		UploadTempFile.uploadTempFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${fileName}");

		if ("${workflow}" == "true") {
			PortletEntry.submitForPublication();
		}
		else if ("${workflowResubmit}" == "true") {
			PortletEntry.save();
		}
		else {
			PortletEntry.publish();
		}
	}

	macro translateFields {
		if (isSet(webContentTitle)) {
			Type(
				locator1 = "TextInput#TITLE_NOT_READONLY",
				value1 = "${webContentTitle}");
		}

		if (isSet(webContentContent)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentContent}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentDescription)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentDescription}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentSourceHTML)) {
			Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON_2");

			Type.typeCodeMirrorEditorNoError(
				locator1 = "CKEditor#BODY_FIELD_SOURCE_ON",
				value1 = "${webContentSourceHTML}");
		}

		if (isSet(webContentText)) {
			Type(
				key_fieldName = "Text",
				locator1 = "TextInput#TRANSLATIONS_TARGET_FIELD",
				value1 = "${webContentText}");
		}

		if (isSet(webContentTextBox)) {
			Type(
				key_fieldName = "TextBox",
				locator1 = "TextArea#TRANSLATIONS_TARGET_TEXT_BOX_FIELD",
				value1 = "${webContentTextBox}");
		}

		if (isSet(webContentInteger)) {
			Type(
				key_fieldName = "Integer",
				locator1 = "TextInput#TRANSLATIONS_TARGET_FIELD",
				value1 = "${webContentInteger}");
		}

		if (isSet(webContentNumber)) {
			Type(
				key_fieldName = "Number",
				locator1 = "TextInput#TRANSLATIONS_TARGET_FIELD",
				value1 = "${webContentNumber}");
		}

		if (isSet(webContentDecimal)) {
			Type(
				key_fieldName = "Decimal",
				locator1 = "TextInput#TRANSLATIONS_TARGET_FIELD",
				value1 = "${webContentDecimal}");
		}
	}

	macro translateFile {
		AntCommand(
			locator1 = "build-test.xml",
			value1 = "update-translation-file -Dtranslation.content.target.original=<![CDATA[${webContentContent}]]></target> -Dtranslation.content.target=<![CDATA[${contentTranslateion}]]></target> -Dtranslation.description.target.original=<![CDATA[${webContentDescription}]]></target> -Dtranslation.description.target=<![CDATA[${descriptionTranslateion}]]></target> -Dtranslation.file.encoding=${encoding} -Dtranslation.title.target.original=<![CDATA[${webContentTitle}]]></target> -Dtranslation.title.target=<![CDATA[${titleTranslation}]]></target> -Dtranslation.zip.file.name=${translationZipFileName} -Dtranslation.file.name=${translationFileName} -Dtranslation.file.rename=${translationFileRename}");
	}

	macro viewBaseFields {
		if (isSet(webContentTitle)) {
			AssertElementPresent(
				key_fieldName = "Title",
				key_fieldValue = "${webContentTitle}",
				locator1 = "Translation#BASE_LANGUAGE_FIELD");
		}

		if (isSet(webContentContent)) {
			AssertTextEquals(
				key_content = "${webContentContent}",
				key_fieldName = "Content",
				locator1 = "Translation#BASE_LANGUAGE_CONTENT_FIELD",
				value1 = "${webContentContent}");
		}

		if (isSet(webContentDescription)) {
			AssertTextEquals(
				key_content = "${webContentDescription}",
				key_fieldName = "Description",
				locator1 = "Translation#BASE_LANGUAGE_CONTENT_FIELD",
				value1 = "${webContentDescription}");
		}

		if (isSet(webContentHTML)) {
			AssertTextEquals.assertPartialText(
				key_content = "${webContentHTML}",
				key_fieldName = "HTML",
				locator1 = "Translation#BASE_LANGUAGE_CONTENT_FIELD",
				value1 = "${webContentHTML}");
		}

		if (isSet(webContentText)) {
			AssertElementPresent(
				key_fieldName = "Text",
				key_fieldValue = "${webContentText}",
				locator1 = "Translation#BASE_LANGUAGE_FIELD");
		}

		if (isSet(webContentTextBox)) {
			AssertElementPresent(
				key_fieldName = "Text Box",
				key_fieldValue = "${webContentTextBox}",
				locator1 = "Translation#BASE_LANGUAGE_TEXT_BOX_FIELD");
		}

		if (isSet(webContentInteger)) {
			AssertElementPresent(
				key_fieldName = "Integer",
				key_fieldValue = "${webContentInteger}",
				locator1 = "Translation#BASE_LANGUAGE_FIELD");
		}

		if (isSet(webContentNumber)) {
			AssertElementPresent(
				key_fieldName = "Number",
				key_fieldValue = "${webContentNumber}",
				locator1 = "Translation#BASE_LANGUAGE_FIELD");
		}

		if (isSet(webContentDecimal)) {
			AssertElementPresent(
				key_fieldName = "Decimal",
				key_fieldValue = "${webContentDecimal}",
				locator1 = "Translation#BASE_LANGUAGE_FIELD");
		}
	}

	macro viewTargetFields {
		if (isSet(webContentTitle)) {
			AssertElementPresent(
				key_fieldName = "Title",
				key_fieldValue = "${webContentTitle}",
				locator1 = "Translation#TARGET_LANGUAGE_FIELD");
		}

		if (isSet(webContentContent)) {
			Pause(locator1 = "3000");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

			if (IsTextNotEqual(locator1 = "CKEditor#BODY", value1 = "${webContentContent}")) {
				Refresh();

				SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");
			}

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentContent}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentDescription)) {
			Pause(locator1 = "3000");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			if (IsTextNotEqual(locator1 = "CKEditor#BODY", value1 = "${webContentDescription}")) {
				Refresh();

				SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");
			}

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = "${webContentDescription}");

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(webContentHTML)) {
			Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON_2");

			Type.typeCodeMirrorEditorNoError(
				locator1 = "CKEditor#BODY_FIELD_SOURCE_ON",
				value1 = "${webContentHTML}");

			Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON_2");
		}

		if (isSet(webContentText)) {
			AssertElementPresent(
				key_fieldName = "Text",
				key_fieldValue = "${webContentText}",
				locator1 = "Translation#TARGET_LANGUAGE_FIELD");
		}

		if (isSet(webContentTextBox)) {
			AssertElementPresent(
				key_fieldName = "Text Box",
				key_fieldValue = "${webContentTextBox}",
				locator1 = "Translation#TARGET_LANGUAGE_TEXT_BOX_FIELD");
		}

		if (isSet(webContentInteger)) {
			AssertElementPresent(
				key_fieldName = "Integer",
				key_fieldValue = "${webContentInteger}",
				locator1 = "Translation#TARGET_LANGUAGE_FIELD");
		}

		if (isSet(webContentNumber)) {
			AssertElementPresent(
				key_fieldName = "Number",
				key_fieldValue = "${webContentNumber}",
				locator1 = "Translation#TARGET_LANGUAGE_FIELD");
		}

		if (isSet(webContentDecimal)) {
			AssertElementPresent(
				key_fieldName = "Decimal",
				key_fieldValue = "${webContentDecimal}",
				locator1 = "Translation#TARGET_LANGUAGE_FIELD");
		}
	}

	macro viewTargetLocales {
		Portlet.waitForForm();

		Click.clickNoMouseOver(
			key_currentLocale = StringUtil.lowerCase("${currentTargetLocale}"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		for (var targetLocale : list "${targetLocale}") {
			AssertElementPresent(
				key_locale = "${targetLocale}",
				locator1 = "Translation#DROPDOWN_MENU_ITEM");
		}

		if (isSet(noTargetLocale)) {
			for (var noTargetLocale : list "${noTargetLocale}") {
				AssertElementNotPresent(
					key_locale = "${noTargetLocale}",
					locator1 = "Translation#DROPDOWN_MENU_ITEM");
			}
		}
	}

	macro viewTranslationOptions {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click.waitForMenuToggleJSClick(
			key_webContentTitle = "${webContentTitle}",
			locator1 = "WC#ENTRY_LIST_MENULIST_ICON");

		if (isSet(noOptions)) {
			MenuItem.viewNotPresent(menuItem = "Translate");

			MenuItem.viewNotPresent(menuItem = "Export for Translation");

			MenuItem.viewNotPresent(menuItem = "Import Translation");
		}
		else {
			AssertTextEquals(
				index = "6",
				locator1 = "MenuItem#DROPDOWN_MENU_ITEM_SPECIFIC",
				value1 = "Translate");

			AssertTextEquals(
				index = "7",
				locator1 = "MenuItem#DROPDOWN_MENU_ITEM_SPECIFIC",
				value1 = "Export for Translation");

			AssertTextEquals(
				index = "8",
				locator1 = "MenuItem#DROPDOWN_MENU_ITEM_SPECIFIC",
				value1 = "Import Translation");

			AssertTextEquals(
				index = "9",
				locator1 = "MenuItem#DROPDOWN_MENU_ITEM_SPECIFIC",
				value1 = "View History");
		}
	}

}