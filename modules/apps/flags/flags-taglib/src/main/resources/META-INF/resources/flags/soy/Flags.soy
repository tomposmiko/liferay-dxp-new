{namespace Flags}

/**
 * Prints the Flag component.
 */
{template .render}
	{@param companyName: string}
	{@param enabled: bool}
	{@param flagsEnabled: bool}
	{@param id: string}
	{@param label: bool}
	{@param message: string|null}
	{@param pathTermsOfUse: string}
	{@param pathThemeImages: string}
	{@param portletNamespace: string}
	{@param reasons: ?}
	{@param signedIn: bool}
	{@param? _handleCloseDialogClick: any}
	{@param? _handleFlagButtonClick: any}
	{@param? _handleReasonChange: any}
	{@param? _handleReportButtonClick: any}
	{@param? _reportDialogOpen: bool}
	{@param? _selectedReason: string}
	{@param? _showConfirmationMessage: bool}
	{@param? _showErrorMessage: bool}
	{@param? elementClasses: string}
	{@param? reporterEmailAddress: string}

	{let $containerAttributes kind="attributes"}
		class="taglib-flags
			{if $elementClasses}
				{sp}$elementClasses
			{/if}
		"

		id="{$id}"
	{/let}

	{let $spritemap: $pathThemeImages + '/lexicon/icons.svg' /}

	<div {$containerAttributes}>
		{call .flagIcon}
			{param _handleFlagButtonClick: $_handleFlagButtonClick /}
			{param enabled: $enabled /}
			{param label: $label /}
			{param message: $message /}
			{param spritemap: $spritemap /}
		{/call}

		{if $_reportDialogOpen}
			{call .reportDialog}
				{param _handleCloseDialogClick: $_handleCloseDialogClick /}
				{param _handleReasonChange: $_handleReasonChange /}
				{param _handleReportButtonClick: $_handleReportButtonClick /}
				{param _selectedReason: $_selectedReason /}
				{param _showConfirmationMessage: $_showConfirmationMessage /}
				{param _showErrorMessage: $_showErrorMessage /}
				{param companyName: $companyName /}
				{param flagsEnabled: $flagsEnabled /}
				{param pathTermsOfUse: $pathTermsOfUse /}
				{param pathThemeImages: $pathThemeImages /}
				{param portletNamespace: $portletNamespace /}
				{param reasons: $reasons /}
				{param reporterEmailAddress: $reporterEmailAddress /}
				{param signedIn: $signedIn /}
				{param spritemap: $spritemap /}
			{/call}
		{/if}
	</div>
{/template}

/**
 * Prints the flag icon and the text message.
 */
{template .flagIcon}
	{@param? _handleFlagButtonClick: any}
	{@param? enabled: bool}
	{@param label: bool}
	{@param message: string|null}
	{@param spritemap: string}

	{let $defaultMessage kind="text"}
		{msg desc=""}report{/msg}
	{/let}

	{let $labelMessage: isNull($message) ? $defaultMessage : $message /}

	{let $wrapperAttributes kind="attributes"}
		{if not $label}
			class="lfr-portal-tooltip"
			title="{$labelMessage}"
		{/if}
	{/let}

	<span {$wrapperAttributes}>
		{call ClayButton.render}
			{param ariaLabel: $labelMessage /}
			{param elementClasses: 'btn-outline-borderless btn-outline-secondary' /}
			{param events: ['click': $_handleFlagButtonClick] /}
			{param disabled: not $enabled /}
			{param icon: 'flag-empty' /}
			{param label: $label ? $labelMessage : null /}
			{param monospaced: not $label /}
			{param size: 'sm' /}
			{param spritemap: $spritemap /}
			{param style: false /}
			{param type: 'button' /}
		{/call}
	</span>
{/template}

/**
 * Prints the modal component.
 */
{template .reportDialog}
	{@param companyName: string}
	{@param flagsEnabled: bool}
	{@param pathTermsOfUse: string}
	{@param pathThemeImages: string}
	{@param portletNamespace: string}
	{@param reasons: ?}
	{@param signedIn: bool}
	{@param spritemap: string}
	{@param? _handleCloseDialogClick: any}
	{@param? _handleReasonChange: any}
	{@param? _handleReportButtonClick: any}
	{@param? _selectedReason: string}
	{@param? _showConfirmationMessage: bool}
	{@param? _showErrorMessage: bool}
	{@param? reporterEmailAddress: string}

	{call liferay.frontend.Modal.render}
		{param body kind="html"}
			{if $flagsEnabled}
				{if $_showErrorMessage}
					{call .errorMessage /}
				{elseif $_showConfirmationMessage}
					{call .confirmationMessage}
						{param companyName: $companyName /}
					{/call}
				{else}
					{call .reportForm}
						{param _handleReasonChange: $_handleReasonChange /}
						{param _selectedReason: $_selectedReason /}
						{param pathTermsOfUse: $pathTermsOfUse /}
						{param pathThemeImages: $pathThemeImages /}
						{param portletNamespace: $portletNamespace /}
						{param reasons: $reasons /}
						{param reporterEmailAddress: $reporterEmailAddress /}
						{param signedIn: $signedIn /}
					{/call}
				{/if}
			{else}
				<p>{msg desc=""}please-sign-in-to-flag-this-as-inappropriate{/msg}</p>
			{/if}
		{/param}

		{param dialogClasses: 'modal-dialog-sm' /}

		{param events: [ 'hide': $_handleCloseDialogClick] /}

		{param footer kind="html"}
			{if not ($_showConfirmationMessage or $_showErrorMessage or (not $signedIn and not $flagsEnabled))}
				<button class="btn btn-primary" data-onclick="{$_handleReportButtonClick}" type="button">{msg desc=""}report{/msg}</button>
				<button class="btn btn-link" data-onclick="hide" type="button">{msg desc=""}cancel{/msg}</button>
			{else}
				<button class="btn btn-default" data-onclick="hide" type="button">{msg desc=""}close{/msg}</button>
			{/if}
		{/param}

		{param header kind="html"}
			{msg desc=""}report-inappropriate-content{/msg}
		{/param}

		{param ref: 'modal' /}

		{param spritemap: $spritemap /}
	{/call}
{/template}

/**
 * Prints the form to select the flag's reason.
 */
{template .reportForm}
	{@param pathTermsOfUse: string}
	{@param pathThemeImages: string}
	{@param portletNamespace: string}
	{@param reasons: ?}
	{@param signedIn: bool}
	{@param? _handleReasonChange: any}
	{@param? _selectedReason: string}
	{@param? reporterEmailAddress: string}

	<form class="container-fluid-1280" method="post" name="{$portletNamespace}flagsForm" ref="form">
		{let $termsOfUse kind="html"}
			<a href="{$pathTermsOfUse}" target="_blank">
				{msg desc=""}terms-of-use{/msg}
			</a>
		{/let}

		<p>
			{msg desc=""}you-are-about-to-report-a-violation-of-our-{$termsOfUse}.-all-reports-are-strictly-confidential{/msg}
		</p>

		<fieldset>
			<div class="form-group">
				<label class="control-label" for="{$portletNamespace}reason">
					{msg desc=""}reason-for-the-report{/msg}
				</label>

				<select class="form-control" data-onchange="{$_handleReasonChange}" name="{$portletNamespace}reason" ref="reason">
					{foreach $key in keys($reasons)}
						{let $reason: $reasons[$key] /}
						<option value="{$key}">{$reason}</option>
					{/foreach}

					<option value="other">{msg desc=""}other-reason{/msg}</option>
				</select>
			</div>

			{if $_selectedReason == 'other'}
				<span>
					<div class="form-group">
						<label class="control-label" for="{$portletNamespace}otherReason">{msg desc=""}other-reason{/msg}</label>

						<input class="form-control" name="{$portletNamespace}otherReason" ref="otherReason" />
					</div>
				</span>
			{/if}

			{if $signedIn}
				<input name="{$portletNamespace}reporterEmailAddress" ref="reporterEmailAddress" type="hidden" value="{$reporterEmailAddress}" />
			{else}
				<label class="control-label" for="{$portletNamespace}reporterEmailAddress">{msg desc=""}email-address{/msg}
					<span class="reference-mark text-warning">
						<svg class="lexicon-icon">
							<use xlink:href="{$pathThemeImages}/lexicon/icons.svg#asterisk"></use>
						</svg>
					</span>
				</label>

				<input class="form-control" name="{$portletNamespace}reporterEmailAddress" ref="reporterEmailAddress" required type="email"/>
			{/if}
		</fieldset>
	</form>
{/template}

/**
 * Prints a confirmation message.
 */
{template .confirmationMessage}
	{@param companyName: string}

	<p>
		<strong>{msg desc=""}thank-you-for-your-report{/msg}</strong>
	</p>

	<p>
		{msg desc=""}although-we-cannot-disclose-our-final-decision,-we-do-review-every-report-and-appreciate-your-effort-to-make-sure-{$companyName}-is-a-safe-environment-for-everyone{/msg}
	</p>
{/template}

/**
 * Prints an error message.
 */
{template .errorMessage}
	<p>
		<strong>{msg desc=""}an-error-occurred-while-sending-the-report.-please-try-again-in-a-few-minutes{/msg}</strong>
	</p>
{/template}