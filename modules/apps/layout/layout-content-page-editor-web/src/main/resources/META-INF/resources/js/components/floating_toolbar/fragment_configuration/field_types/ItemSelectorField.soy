{namespace com.liferay.layout.content.page.editor.web.ItemSelectorField}

/**
 * Field ItemSelector variation
 */
{template .render}
	{@param configurationValues: ?}
	{@param field: [
		name: string,
		label: string,
		type: string,
		typeOptions: ?
	]}

	{@param? availableTemplates: list<[
		infoItemRendererKey: string,
		label: string,
		templates: list<[
			infoItemRendererKey: string,
			label: string,
			templateKey: string
		]>
	]>}
	{@param? enableSelectTemplate: bool}
	{@param? selectedClassName: string}
	{@param? spritemap: string}
	{@param? store: ?}
	{@param? _handleItemSelectClick: any}
	{@param? _handleSelectTemplateValueChanged: any}
	{@param? _handleItemTypeClick: any}

	<div>
		{if $selectedClassName}
			{call .classNameInfoItemSelector}
				{param configurationValues: $configurationValues /}
				{param field: $field /}
				{param handleItemSelectClick: $_handleItemSelectClick /}
				{param selectedInfoItemTitle: $configurationValues[$field.name]?.title /}
				{param spritemap: $spritemap /}
			{/call}
		{else}
			<div class="form-group">
				{call com.liferay.layout.content.page.editor.web.InfoItemSelector.render}
					{param fieldId: $field.name /}
					{param fieldName: $field.label /}
					{param handleAssetBrowserLinkClick: $_handleItemTypeClick /}
					{param handleInfoItemLinkClick: $_handleItemSelectClick /}
					{param selectedInfoItemTitle: $configurationValues[$field.name]?.title /}
					{param store: $store /}
				{/call}
			</div>
		{/if}

		{if $enableSelectTemplate and isNonnull($availableTemplates) and length($availableTemplates) > 0}
			{call .templateSelector}
				{param availableTemplates: $availableTemplates /}
				{param selectedTemplate: $configurationValues[$field.name]?.template /}
				{param handleSelectTemplateValueChanged: $_handleSelectTemplateValueChanged /}
			{/call}
		{/if}
	</div>
{/template}

{template .classNameInfoItemSelector}
	{@param configurationValues: ?}
	{@param field: [
		name: string,
		label: string,
		type: string,
		typeOptions: ?
	]}
	{@param? handleItemSelectClick: any}
	{@param? spritemap: string}

	<div class="form-group">
		<label for="{$field.name}-select">
			{$field.label}
		</label>

		<div class="d-flex">
			<input
				class="form-control form-control-sm mr-2"
				id="{$field.name}-select"
				readonly
				type="text"
				value="{$configurationValues[$field.name]?.title ?: ''}"
			/>

			<div class="btn-group">
				<button
					class="btn btn-monospaced btn-secondary btn-sm"
					data-onclick="{$handleItemSelectClick}"
					type="button"
				>
					<svg class="lexicon-icon">
						<use xlink:href="{$spritemap ?: ''}#plus"></use>
					</svg>
				</button>
			</div>
		</div>
	</div>
{/template}

{template .templateSelector}
	{@param availableTemplates: ?}
	{@param? selectedTemplate: ?}
	{@param? handleSelectTemplateValueChanged: any}

	<div class="form-group">
		<label for="template">{msg desc=""}template{/msg}</label>

		<select
			class="form-control form-control-sm"
			data-onchange="{$handleSelectTemplateValueChanged}"
			id="template"
		>
			{foreach $option in $availableTemplates}
				{if isNonnull($option.templates) and length($option.templates) > 0}
					<optgroup label="{$option.label}">
						{foreach $template in $option.templates}
							{let $optionAttributes kind="attributes"}
								{if $template.templateKey}
									data-template-key="{$template.templateKey}"
								{/if}

								{if $template.infoItemRendererKey}
									data-info-item-renderer-key="{$template.infoItemRendererKey}"
								{/if}

								{if $selectedTemplate and $selectedTemplate.infoItemRendererKey == $template.infoItemRendererKey and
								(not $selectedTemplate.templateKey or ($selectedTemplate.templateKey and $selectedTemplate.templateKey == $template.templateKey))}
									selected
								{/if}
							{/let}

							<option {$optionAttributes}>{$template.label}</option>
						{/foreach}
					</optgroup>
				{else}
					{let $optionAttributes kind="attributes"}
						{if $option.infoItemRendererKey}
							data-info-item-renderer-key="{$option.infoItemRendererKey}"
						{/if}

						{if $selectedTemplate and $selectedTemplate.infoItemRendererKey == $option.infoItemRendererKey}
							selected
						{/if}
					{/let}

					<option {$optionAttributes}>{$option.label}</option>
				{/if}
			{/foreach}
		</select>
	</div>
{/template}