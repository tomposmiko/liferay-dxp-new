{namespace com.liferay.layout.content.page.editor.web.MasterFragmentEntryLinkList}

/**
 * FragmentEntryLinkList
 */
{template .render}
	{@param fragmentEntryLinks: ?}
	{@param layoutData: ?}
	{@param masterLayoutData: [
		nextColumnId: number,
		nextRowId: number,
		structure: list<[
			columns: list<[
				config: ?,
				columnId: string,
				fragmentEntryLinkIds: list<string>,
				size: string
			]>,
			config: ?,
			empty: bool,
			rowId: string,
			type: string
		]>
	]}
	{@param? fragmentsEditorRowTypes: [
		sectionRow: string
	]}
	{@param? selectedSidebarPanelId: string}
	{@param? store: ?}

	{let $entryLinksClasses kind="text"}
		fragment-entry-link-list

		{if $selectedSidebarPanelId}
			{sp}fragment-entry-link-list--padded
		{/if}
	{/let}

	{if $masterLayoutData.structure and (length($masterLayoutData.structure) > 0)}
		<div class="{$entryLinksClasses}">
			{foreach $row in $masterLayoutData.structure}
				{if $row.type == $fragmentsEditorRowTypes.sectionRow}
					{foreach $column in $row.columns}
						{if $column.fragmentEntryLinkIds}
							{foreach $fragmentEntryLinkId in $column.fragmentEntryLinkIds}
								{let $fragmentEntryLink: $fragmentEntryLinks[$fragmentEntryLinkId] /}

								{if $fragmentEntryLink}
									<section class="master-fragment-entry-link">
										{call com.liferay.layout.content.page.editor.web.MasterFragmentEntryLinkContent.render}
											{param content: $fragmentEntryLink.content/}
											{param editableValues: $fragmentEntryLink.editableValues/}
											{param store: $store/}
										{/call}
									</section>
								{/if}
							{/foreach}
						{/if}
					{/foreach}
				{else}
					{call com.liferay.layout.content.page.editor.web.MasterFragmentEntryLinkListRow.render}
						{param columns: $row.columns /}
						{param fragmentEntryLinks: $fragmentEntryLinks /}
						{param key: $row.rowId /}
						{param row: $row /}
						{param layoutData: $layoutData /}
						{param selectedSidebarPanelId: $selectedSidebarPanelId /}
						{param store: $store /}
					{/call}
				{/if}
			{/foreach}
		</div>
	{/if}
{/template}