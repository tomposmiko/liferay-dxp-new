{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarTextPropertiesPanel}

/**
 * FloatingToolbarTextPropertiesPanel
 */
{template .render}
	{@param item: ?}
	{@param? _textAlignmentOptions: list<[
		textAlignmentId: string,
		label: string
	]>}
	{@param? _textStyles: list<[
		textStyleId: string,
		label: string
	]>}
	{@param? _handleTextAlignmentOptionChange: any}
	{@param? _handleTextColorButtonClick: any}
	{@param? _handleTextStyleOptionChange: any}
	{@param? themeColorsCssClasses: list<string>}

	<div class="floating-toolbar-spacing-panel">
		{call .textStyleOptions}
			{param _handleTextStyleOptionChange: $_handleTextStyleOptionChange /}
			{param textStyles: $_textStyles /}
			{param item: $item /}
		{/call}

		{call .textAlignmentOptions}
			{param _handleTextAlignmentOptionChange: $_handleTextAlignmentOptionChange /}
			{param textAlignmentOptions: $_textAlignmentOptions /}
			{param item: $item /}
		{/call}

		{call .textColorOptions}
			{param _handleTextColorButtonClick: $_handleTextColorButtonClick /}
			{param item: $item /}
			{param textColorCssClasses: $themeColorsCssClasses /}
		{/call}
	</div>
{/template}

/**
 * Text style options
 */
{template .textAlignmentOptions}
	{@param item: ?}
	{@param? _handleTextAlignmentOptionChange: any}
	{@param? textAlignmentOptions: list<[
		textAlignmentId: string,
		label: string
	]>}

	{if $textAlignmentOptions}
		<div class="form-group">
			<label for="floatingToolbarTextPropertiesPanelTextAlignmentOption">
				{msg desc=""}text-alignment{/msg}
			</label>

			<select
				class="form-control form-control-sm"
				data-onchange="{$_handleTextAlignmentOptionChange}"
				id="floatingToolbarTextPropertiesPanelTextAlignmentOption"
			>
				{foreach $textAlignmentOption in $textAlignmentOptions}
					{call .textAlignmentOption}
						{param textAlignmentOption: $textAlignmentOption /}
						{param item: $item /}
						{param key: $textAlignmentOption.textAlignmentId /}
					{/call}
				{/foreach}
			</select>
		</div>
	{/if}
{/template}

/**
 *
 */
{template .textColorOptions}
	{@param item: ?}
	{@param? textColorCssClasses: list<string>}
	{@param? _handleTextColorButtonClick: any}

	{if $textColorCssClasses}
		<div class="form-group">
			<label for="floatingToolbarTextColorColorPanelPalette">
				{msg desc=""}text-color{/msg}
			</label>

			{let $selectedTextColor kind="text"}
				{if $item.editableValues.config and $item.editableValues.config.textColor}
					{$item.editableValues.config.textColor}
				{/if}
			{/let}

			{call com.liferay.layout.content.page.editor.web.FloatingToolbarColorPicker.render}
				{param colors: $textColorCssClasses /}
				{param events: [ 'colorClicked': $_handleTextColorButtonClick ] /}
				{param id: 'floatingToolbarTextColorColorPanelPalette' /}
				{param selectedColor: $selectedTextColor /}
			{/call}
		</div>
	{/if}
{/template}

/**
 * Text style options
 */
{template .textStyleOptions}
	{@param item: ?}
	{@param? _handleTextStyleOptionChange: any}
	{@param? textStyles: list<[
		textStyleId: string,
		label: string
	]>}

	{if $textStyles}
		<div class="form-group">
			<label for="floatingToolbarTextPropertiesPanelTextStyleOption">
				{msg desc=""}text-style{/msg}
			</label>

			<select
				class="form-control form-control-sm"
				data-onchange="{$_handleTextStyleOptionChange}"
				id="floatingToolbarTextPropertiesPanelTextStyleOption"
			>
				{foreach $textStyle in $textStyles}
					{call .textStyleOption}
						{param textStyle: $textStyle /}
						{param item: $item /}
						{param key: $textStyle.textStyleId /}
					{/call}
				{/foreach}
			</select>
		</div>
	{/if}
{/template}

/**
 * Text style option
 */
{template .textAlignmentOption}
	{@param textAlignmentOption: [
		textAlignmentId: string,
		label: string
	]}
	{@param item: ?}

	{let $optionAttributes kind="attributes"}
		value="{$textAlignmentOption.textAlignmentId}"

		{if $item.editableValues.config and $item.editableValues.config.textAlignment == $textAlignmentOption.textAlignmentId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$textAlignmentOption.label}
	</option>
{/template}

/**
 * Text style option
 */
{template .textStyleOption}
	{@param textStyle: [
		textStyleId: string,
		label: string
	]}
	{@param item: ?}

	{let $optionAttributes kind="attributes"}
		value="{$textStyle.textStyleId}"

		{if $item.editableValues.config and $item.editableValues.config.textStyle == $textStyle.textStyleId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$textStyle.label}
	</option>
{/template}