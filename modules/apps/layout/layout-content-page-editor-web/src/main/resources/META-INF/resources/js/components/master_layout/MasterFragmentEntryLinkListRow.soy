{namespace com.liferay.layout.content.page.editor.web.MasterFragmentEntryLinkListRow}

{template .render}
	{@param columns: list<[
		config: ?,
		columnId: string,
		fragmentEntryLinkIds: list<string>,
		size: string
	]>}
	{@param fragmentEntryLinks: ?}
	{@param key: string}
	{@param row: [
			columns: list<[
				columnId: string,
				fragmentEntryLinkIds: list<string>,
				size: string
			]>,
			config: ?,
			empty: bool,
			rowId: string,
			type: string
		]}
	{@param layoutData: ?}
	{@param? selectedSidebarPanelId: string}
	{@param? store: ?}
	{@param? _backgroundImageValue: string}
	{@param? _mappedBackgroundFieldValue: string}

	{let $rowClasses kind="text"}
		{if $row and $row.config and $row.config.backgroundColorCssClass}
			{sp}bg-{$row.config.backgroundColorCssClass}
		{/if}
	{/let}

	{let $rowStyle kind="text"}
		{if $_mappedBackgroundFieldValue}
			background-image: url({$_mappedBackgroundFieldValue});
			background-position: 50% 50%;
			background-repeat: no-repeat;
			background-size: cover;
		{elseif $_backgroundImageValue}
			background-image: url({$_backgroundImageValue});
			background-position: 50% 50%;
			background-repeat: no-repeat;
			background-size: cover;
		{/if}
	{/let}

	<section
		class="{$rowClasses}"
		key="{$key}"
		style="{$rowStyle}"
		tabindex="0"
	>

		{let $wrapperClasses kind="text"}
			{if $row and $row.config and $row.config.containerType == 'fluid'}
				{sp}container-fluid
			{else}
				{sp}container
			{/if}
			{if $row and $row.config and $row.config.paddingHorizontal and $row.config.paddingHorizontal != '3'}
				{sp}px-{$row.config.paddingHorizontal}
			{/if}

			{if $row and $row.config}
				{sp}py-{$row.config.paddingVertical ?: '3'}
			{else}
				{sp}py-3
			{/if}
		{/let}

		{let $wrapperRowClasses kind="text"}
			row

			{if ($row.config and ($row.config.columnSpacing == false)) or ($row.type == '0')}
				{sp}no-gutters
			{/if}
		{/let}

		<div class="{$wrapperClasses}">
			<div class="{$wrapperRowClasses}">
				{foreach $column in $columns}
					{call .column}
						{param fragmentEntryLinkIds: $column.fragmentEntryLinkIds /}
						{param fragmentEntryLinks: $fragmentEntryLinks /}
						{param key: $column.columnId /}
						{param rowType: $row.type /}
						{param size: $column.size /}
						{param config: $column.config /}
						{param row: $row /}
						{param layoutData: $layoutData /}
						{param store: $store /}
						{param selectedSidebarPanelId: $selectedSidebarPanelId /}
					{/call}
				{/foreach}
			</div>
		</div>
	</section>

{/template}

{template .column}
	{@param fragmentEntryLinks: ?}
	{@param fragmentEntryLinkIds: list<string>}
	{@param? size: string}
	{@param layoutData: ?}
	{@param? selectedSidebarPanelId: string}
	{@param? store: ?}

	{let $columnClasses kind="text"}
		{if $size}
			{sp}col-md-{$size}
		{else}
			{sp}col-md-12
		{/if}
	{/let}

	<div class="{$columnClasses}">
		{foreach $fragmentEntryLinkId in $fragmentEntryLinkIds}
			{if $fragmentEntryLinkId == 'drop-zone'}
				{call com.liferay.layout.content.page.editor.web.FragmentEntryLinkList.render}
					{param fragmentEntryLinks: $fragmentEntryLinks /}
					{param layoutData: $layoutData /}
					{param store: $store /}
					{param selectedSidebarPanelId: $selectedSidebarPanelId /}
				{/call}
			{else}
				{let $fragmentEntryLink: $fragmentEntryLinks[$fragmentEntryLinkId] /}

				{if $fragmentEntryLink}
					<section class="master-fragment-entry-link">
						{call com.liferay.layout.content.page.editor.web.MasterFragmentEntryLinkContent.render}
							{param content: $fragmentEntryLink.content/}
							{param editableValues: $fragmentEntryLink.editableValues/}
							{param store: $store/}
						{/call}
					</section>
				{/if}
			{/if}
		{/foreach}
	</div>
{/template}