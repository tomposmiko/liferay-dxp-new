{namespace com.liferay.layout.content.page.editor.web.TranslationStatus}

/**
 * TranslationStatus
 */
{template .render}
	{@param? availableLanguages: ?}
	{@param? defaultLanguageId: string}
	{@param? fragmentEntryLinks: ?}
	{@param? languageId: string}
	{@param? spritemap: string}
	{@param? translationStatus: [
		languageValues: list<[
			languageId: string,
			values: list<?>
		]>,
		translationKeys: list<?>
	]}

	<div class="dropdown lfr-icon-menu" data-fragment-entry-links="{$fragmentEntryLinks}">
		<button
			class="btn btn-sm btn-secondary fragments-editor-toolbar__translation-status-button"
			data-toggle="dropdown"
			type="button"
		>
			{if $availableLanguages and $languageId and $spritemap}
				<span class="inline-item mb-1">
					{call .lexiconIcon}
						{param name: $availableLanguages[$languageId].languageIcon /}
						{param spritemap: $spritemap /}
					{/call}
				</span>
				<span class="btn-section">
					{$availableLanguages[$languageId].languageLabel}
				</span>
			{/if}
		</button>

		{if $availableLanguages and $defaultLanguageId and $languageId and $translationStatus}
			<div class="dropdown-menu dropdown-menu-indicator-end fragments-editor-toolbar__translation-status-list">
				{call .translationStatusItem}
					{param isCurrent: $defaultLanguageId == $languageId /}
					{param isDefault: true /}
					{param languageIcon: $availableLanguages[$defaultLanguageId].languageIcon /}
					{param languageId: $defaultLanguageId /}
					{param languageLabel: $availableLanguages[$defaultLanguageId].languageLabel /}
					{param spritemap: $spritemap ?: '' /}
				{/call}

				{foreach $languageTranslationStatus in $translationStatus.languageValues}
					{if $languageTranslationStatus.languageId != $defaultLanguageId}
						{call .translationStatusItem}
							{param isCurrent: $languageTranslationStatus.languageId == $languageId /}
							{param isDefault: false /}
							{param languageIcon: $availableLanguages[$languageTranslationStatus.languageId].languageIcon /}
							{param languageId: $languageTranslationStatus.languageId /}
							{param languageLabel: $availableLanguages[$languageTranslationStatus.languageId].languageLabel /}
							{param spritemap: $spritemap ?: '' /}
							{param translatedValues: length($languageTranslationStatus.values) /}
							{param translationKeys: length($translationStatus.translationKeys) /}
						{/call}
					{/if}
				{/foreach}
			</div>
		{/if}
	</div>
{/template}

/**
 * Translation Status item
 */
{template .translationStatusItem}
	{@param isCurrent: bool}
	{@param isDefault: bool}
	{@param languageId: string}
	{@param spritemap: string}
	{@param? languageIcon: string}
	{@param? languageLabel: string}
	{@param? translatedValues: int}
	{@param? translationKeys: int}

	<a
		class="dropdown-item fragments-editor-toolbar__translation-status-item"
		data-languageid="{$languageId}"
		data-onclick="_handleLanguageChange"
	>
		<span class="inline-item inline-item-before">
			{call .lexiconIcon}
				{param name: $languageIcon ?: '' /}
				{param spritemap: $spritemap /}
			{/call}
		</span>

		{if $isCurrent}
			<strong>{$languageLabel}</strong>
		{else}
			<span>{$languageLabel}</span>
		{/if}

		<span class="dropdown-item-indicator">
			{let $labelClasses kind="text"}
				fragments-editor-toolbar__translation-status-item__label
				{sp}label

				{if $isDefault}
					{sp}default
				{elseif $translatedValues == 0}
					{sp}untranslated
				{elseif $translatedValues < $translationKeys}
					{sp}translating
				{elseif $translatedValues == $translationKeys}
					{sp}translated
				{/if}
			{/let}

			{let $labelContent kind="text"}
				{if $isDefault}
					{msg desc=""}default{/msg}
				{elseif $translatedValues == 0}
					{msg desc=""}not-translated{/msg}
				{elseif $translatedValues < $translationKeys}
					{msg desc=""}translating{/msg}
					{sp}{$translatedValues}/{$translationKeys}
				{elseif $translatedValues == $translationKeys}
					{msg desc=""}translated{/msg}
				{/if}
			{/let}

			<span class="{$labelClasses}">
				{$labelContent}
			</span>
		</span>
	</a>
{/template}

/**
 * Lexicon icon
 */
{template .lexiconIcon}
	{@param name: string}
	{@param spritemap: string}

	<svg aria-hidden="true" class="lexicon-icon lexicon-icon-{$name}">
		<use xlink:href="{$spritemap}#{$name}" />
	</svg>
{/template}