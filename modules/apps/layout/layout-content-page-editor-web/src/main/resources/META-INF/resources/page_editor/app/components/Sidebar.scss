@import 'atlas-variables';

@import './variables';

$desktopToolbarHeight: 112px;
$sidebarButtonHeight: $sidebarButtonWidth;
$toolbarHeight: 64px;

// z-indexes for childern of page-editor-sidebar (which is a stacking context).

$zIndexButtons: 1;
$zIndexContent: 0;

.page-editor__sidebar {
	display: flex;
	height: calc(100vh - #{$toolbarHeight});
	position: fixed;
	right: 0;
	top: $toolbarHeight;
	z-index: $sidebarZIndex;

	&__buttons {
		background-color: $secondary-d1;
		flex-direction: column;
		padding-top: 16px;
		width: $sidebarButtonWidth;
		z-index: $zIndexButtons;

		&.light {
			background-color: $gray-200;
			font-size: 14px;
			padding: 16px 5px;
			width: 42px;

			button {
				color: $secondary;
				margin-bottom: 4px;

				&.active,
				&:active,
				&:focus,
				&:hover {
					background-color: $light-d1;
					color: $secondary-d2;
				}
			}

			a {
				color: $secondary;
				height: 32px;

				&.active,
				&:active,
				&:focus,
				&:hover {
					background-color: $light-d1;
					color: $secondary-d2;
				}
			}
		}

		a {
			align-items: center;
			border-radius: 0.25rem;
			color: $secondary-l1;
			display: flex;
			height: 2.5em;
			justify-content: center;

			&.active,
			&:active,
			&:focus,
			&:hover {
				color: $white;
			}

			&:focus {
				box-shadow: 0 0 0 0.125rem $white, 0 0 0 0.25rem $primary-l1,
					inset 0 0 rgba(0, 0, 0, 0);
				outline: none;
			}
		}

		button {
			color: $secondary-l1;

			&.active,
			&:active,
			&:focus,
			&:hover {
				color: $white;
			}
		}

		hr {
			border-color: $secondary;
			margin: 12px 8px;
		}
	}

	&__content {
		background-color: $white;
		border-left: 1px solid $secondary-l3;
		height: calc(100vh - #{$controlMenuHeight + $desktopToolbarHeight});
		overflow-x: hidden;
		position: fixed;
		right: $sidebarButtonWidth;
		transform: translateX(100%);
		transition: transform ease $defaultTransitionDuration;
		width: $sidebarContentWidth;
		z-index: $zIndexContent;

		&.rtl {
			transform: translateX(-100%);
		}

		&--open.page-editor__sidebar__content {
			transform: translateX(0);
		}

		@include media-breakpoint-up(xl) {
			height: calc(100vh - #{$desktopControlMenuHeight + $toolbarHeight});
		}
	}

	body.has-control-menu & {
		height: calc(100vh - #{$controlMenuHeight + $desktopToolbarHeight});
		top: $controlMenuHeight + $desktopToolbarHeight;

		@include media-breakpoint-up(xl) {
			height: calc(100vh - #{$desktopControlMenuHeight + $toolbarHeight});
			top: $desktopControlMenuHeight + $toolbarHeight;
		}
	}
}
