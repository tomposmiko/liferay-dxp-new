@import './variables';

$sidebarButtonHeight: $sidebarButtonWidth;

// z-indexes for childern of page-editor-sidebar (which is a stacking context).

$zIndexButtons: 1;
$zIndexContent: 0;

.page-editor-sidebar {
	display: flex;
	height: calc(100vh - #{$toolbarHeight});
	position: fixed;
	right: 0;
	top: $toolbarHeight;
	z-index: $zIndexSidebar;

	&-buttons {
		background-color: $sidebarButtonBackgroundColor;
		flex-direction: column;
		padding-top: 16px;
		width: $sidebarButtonWidth;
		z-index: $zIndexButtons;

		button {
			color: $sidebarButtonColor;

			&.active,
			&:active,
			&:focus,
			&:hover {
				color: $sidebarButtonHoverColor;
			}
		}

		hr {
			border-color: $sidebarButtonSeparatorColor;
			margin: 12px 8px;
		}
	}

	&-content {
		background-color: $sidebarContentBackgroundColor;
		border-left: 1px solid $sidebarBorderColor;
		height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
		overflow-x: hidden;
		position: fixed;
		right: $sidebarButtonWidth;
		transform: translateX(100%);
		transition: transform ease $defaultTransitionDuration;
		width: $sidebarContentWidth;
		z-index: $zIndexContent;
	}

	&-content-open {
		transform: translateX(0);
	}

	body.has-control-menu & {
		height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
		top: $controlMenuHeight + $toolbarHeight;
	}
}

#wrapper.page-editor-sidebar-padding {
	padding-right: $sidebarButtonWidth;
}

#wrapper.page-editor-sidebar-padding-open {
	padding-right: $sidebarButtonWidth + $sidebarContentWidth;
}
