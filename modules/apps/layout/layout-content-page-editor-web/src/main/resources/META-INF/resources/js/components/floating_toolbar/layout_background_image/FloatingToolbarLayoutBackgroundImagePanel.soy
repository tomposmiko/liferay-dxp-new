{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarLayoutBackgroundImagePanel}

/**
 * FloatingToolbarLayoutBackgroundImagePanel
 */
{template .render}
	{@param item: [
		config: [
			backgroundImage: ?,
			title: string
		]
	]}
	{@param? _backgroundImage: string}
	{@param? _fields: ?}
	{@param? _handleAssetBrowserLinkClick: any}
	{@param? _handleAssetEntryLinkClick: any}
	{@param? _handleClearButtonClick: any}
	{@param? _handleFieldOptionChange: any}
	{@param? _handleImageSourceTypeSelect: any}
	{@param? _handleMappingSourceTypeSelect: any}
	{@param? _handleSelectButtonClick: any}
	{@param? _imageSourceTypeIds: [
		content: string,
		selection: string
	]}
	{@param? _imageSourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? _mappingSourceTypeIds: [
		content: string,
		structure: string
	]}
	{@param? _mappingSourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? _selectedImageSourceTypeId: string}
	{@param? _selectedMappingSourceTypeId: string}
	{@param? assetBrowserLinks: list<[
		href: string,
		typeName: string
	]>}
	{@param? mappedAssetEntries: list<[
		encodedId: string,
		classNameId: string,
		classPK: string,
		title: string
	]>}
	{@param? mappingFieldsURL: string}
	{@param? store: ?}

	<div class="popover popover-scrollable p-3">
		<div class="floating-toolbar-layout-background-image-panel">
			{call .imageSourceTypeSelect}
				{param handleImageSourceTypeSelect: $_handleImageSourceTypeSelect /}
				{param imageSourceTypes: $_imageSourceTypes /}
				{param selectedImageSourceTypeId: $_selectedImageSourceTypeId /}
			{/call}

			{if $_selectedImageSourceTypeId == $_imageSourceTypeIds.selection}
				{call .manualImageSelect}
					{param handleClearButtonClick: $_handleClearButtonClick /}
					{param handleSelectButtonClick: $_handleSelectButtonClick /}
					{param backgroundImage: $_backgroundImage ?: '' /}
				{/call}
			{/if}

			{if $_selectedImageSourceTypeId == $_imageSourceTypeIds.content}
				{if $mappingFieldsURL}
					{call .mappingSourceTypeSelect}
						{param handleMappingSourceTypeSelect: $_handleMappingSourceTypeSelect /}
						{param mappingSourceTypes: $_mappingSourceTypes /}
						{param selectedMappingSourceTypeId: $_selectedMappingSourceTypeId /}
					{/call}
				{/if}

				{if not $mappingFieldsURL or $_selectedMappingSourceTypeId == $_mappingSourceTypeIds.content}
					<div class="floating-toolbar-layout-background-image-panel__asset-select form-group">
						{call com.liferay.layout.content.page.editor.web.AssetSelector.render}
							{param assetBrowserLinks: $assetBrowserLinks /}
							{param fieldId kind="text"}floatingToolbarLayoutBackgroundImagePanelAssetSelect{/param}
							{param fieldName kind="text"}{msg desc=""}content{/msg}{/param}
							{param handleAssetBrowserLinkClick: $_handleAssetBrowserLinkClick /}
							{param handleAssetEntryLinkClick: $_handleAssetEntryLinkClick /}
							{param recentlyUsedAssetEntries: $mappedAssetEntries /}
							{param selectedAssetEntryTitle: $item.config.title /}
							{param store: $store /}
						{/call}
					</div>
				{/if}

				{let $mappedFieldId kind="text"}
					{if $item.config.backgroundImage}
						{$item.config.backgroundImage.mappedField or $item.config.backgroundImage.fieldId}
					{/if}
				{/let}

				<div class="form-group">
					{call .fieldSelect}
						{param fields: $_fields /}
						{param handleFieldOptionChange: $_handleFieldOptionChange /}
						{param mappedFieldId: $mappedFieldId /}
					{/call}
				</div>
			{/if}
		</div>
	</div>
{/template}

/**
 * Field select
 */
{template .fieldSelect}
	{@param? fields: ?}
	{@param? handleFieldOptionChange: any}
	{@param? mappedFieldId: ?}

	{let $fieldsDisabled kind="attributes"}
		{if $fields.length < 1}
			disabled
		{/if}
	{/let}

	<label for="floatingToolbarLayoutBackgroundImagePanelFieldSelect">
		{msg desc=""}field{/msg}
	</label>

	<select
		class="form-control form-control-sm"
		data-onchange="{$handleFieldOptionChange}"
		id="floatingToolbarLayoutBackgroundImagePanelFieldSelect"
		{$fieldsDisabled}
	>
		{let $unmappedLabel kind="text"}
			-- {msg desc=""}unmapped{/msg} --
		{/let}

		{call .selectOption}
			{param optionId: '' /}
			{param optionLabel: $unmappedLabel /}
			{param selectedId: $mappedFieldId or $unmappedLabel /}
		{/call}

		{foreach $field in $fields}
			{call .selectOption}
				{param optionId: $field.key /}
				{param optionLabel: $field.label /}
				{param key: $field.key /}
				{param selectedId: $mappedFieldId /}
			{/call}
		{/foreach}
	</select>
{/template}

/**
 * Source select
 */
{template .imageSourceTypeSelect}
	{@param? handleImageSourceTypeSelect: any}
	{@param? imageSourceTypes: ?}
	{@param? selectedImageSourceTypeId: string}

	<div class="form-group">
		<label for="floatingToolbarLayoutBackgroundImagePanelImageSourceTypeSelect">
			{msg desc=""}image-source{/msg}
		</label>

		<select
			class="form-control form-control-sm"
			data-onchange="{$handleImageSourceTypeSelect}"
			id="floatingToolbarLayoutBackgroundImagePanelImageSourceTypeSelect"
		>
			{foreach $imageSourceType in $imageSourceTypes}
				{call .selectOption}
					{param optionId: $imageSourceType.id /}
					{param optionLabel: $imageSourceType.label /}
					{param key: $imageSourceType.id /}
					{param selectedId: $selectedImageSourceTypeId /}
				{/call}
			{/foreach}
		</select>
	</div>
{/template}

/**
 * Manual Image Select
 */
{template .manualImageSelect}
	{@param? handleClearButtonClick: any}
	{@param? handleSelectButtonClick: any}
	{@param backgroundImage: string}

	<div class="form-group">
		<label for="floatingToolbarLayoutBackgroundImagePanelOption">
			{msg desc=""}background-image{/msg}
		</label>

		{let $inputPlaceholder kind="text"}
			{msg desc=""}none{/msg}
		{/let}

		<input
			class="form-control form-control-sm"
			id="floatingToolbarLayoutBackgroundImagePanelOption"
			placeholder="{$inputPlaceholder}"
			readonly
			title="{$backgroundImage}"
			type="text"
			value="{$backgroundImage}"
		>
	</div>

	<div class="btn-group">
		<div class="btn-group-item">
			<button
				class="btn btn-secondary btn-sm"
				data-onclick="{$handleSelectButtonClick}"
				type="button"
			>
				{msg desc=""}select{/msg}
			</button>
		</div>

		<div class="btn-group-item">
			{let $clearButtonAttributes kind="attributes"}
				class="btn btn-outline-borderless btn-secondary btn-sm"
				data-onclick="{$handleClearButtonClick}"
				type="button"

				{if $backgroundImage == ''}
					disabled
				{/if}
			{/let}

			<button {$clearButtonAttributes}>
				{msg desc=""}clear{/msg}
			</button>
		</div>
	</div>
{/template}

/**
 * Source select
 */
{template .mappingSourceTypeSelect}
	{@param? handleMappingSourceTypeSelect: any}
	{@param? mappingSourceTypes: ?}
	{@param? selectedMappingSourceTypeId: string}

	<div class="form-group">
		<label for="floatingToolbarMappingPanelMappingSourceTypeSelect">
			{msg desc=""}source{/msg}
		</label>

		<select
			class="form-control form-control-sm"
			data-onchange="{$handleMappingSourceTypeSelect}"
			id="floatingToolbarMappingPanelMappingSourceTypeSelect"
		>
			{foreach $sourceType in $mappingSourceTypes}
				{call .selectOption}
					{param optionId: $sourceType.id /}
					{param optionLabel: $sourceType.label /}
					{param key: $sourceType.id /}
					{param selectedId: $selectedMappingSourceTypeId /}
				{/call}
			{/foreach}
		</select>
	</div>
{/template}

/**
 * Select option
 */
{template .selectOption}
	{@param optionId: string}
	{@param optionLabel: string}
	{@param? selectedId: string}

	{let $optionAttributes kind="attributes"}
		value="{$optionId}"

		{if $optionId == $selectedId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$optionLabel}
	</option>
{/template}