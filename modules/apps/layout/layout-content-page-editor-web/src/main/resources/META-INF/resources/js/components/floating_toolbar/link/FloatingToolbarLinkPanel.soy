{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarLinkPanel}

/**
 * FloatingToolbarLinkPanel
 */
{template .render}
	{@param item: [
		editableValues: [
			config: [
				buttonType: string,
				href: string,
			fieldId: string,
			mappedField: string,
			title: string,
			target: string,
			type: string
			]
		]
	]}
	{@param? _fields: ?}
	{@param? _handleAssetBrowserLinkClick: any}
	{@param? _handleAssetEntryLinkClick: any}
	{@param? _handleFieldOptionChange: any}
	{@param? _handleInputHrefKeyUp: any}
	{@param? _handleTargetOptionChange: any}
	{@param? _handleTypeOptionChange: any}
	{@param? _handleSourceTypeChange: any}
	{@param? _handleSubmit: any}
	{@param? _mappedFieldValue: string}
	{@param? _selectedAssetEntry: [
		title: string
	]}
	{@param? _selectedSourceTypeId: string}
	{@param? _sourceTypeIds: [
		content: string,
		structure: string
	]}
	{@param? _sourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? _targetTypes: ?}
	{@param? assetBrowserLinks: list<[
		href: string,
		typeName: string
	]>}
	{@param? mappedAssetEntries: list<[
		encodedId: string,
		classNameId: string,
		classPK: string,
		title: string
	]>}
	{@param? mappingFieldsURL: string}
	{@param? store: any}

	{let $linkType kind="text"}
		{if $item.editableValues.config and $item.editableValues.config.type}
			{$item.editableValues.config.type}
		{else}
			manual
		{/if}
	{/let}

	<div class="popover popover-scrollable p-3">
		<div class="floating-toolbar-link-panel">
			<form data-onsubmit="{$_handleSubmit}">
				<div class="form-group">
					<label for="floatingToolbarLinkTypePanelOption">
						{msg desc=""}link{/msg}
					</label>

					<select
						class="form-control form-control-sm"
						data-onchange="{$_handleTypeOptionChange}"
						id="floatingToolbarLinkTypePanelOption"
					>
						<option value="manual" {if $linkType == 'manual'}selected{/if}>
							{msg desc=""}manual{/msg}
						</option>

						<option value="mapped" {if $linkType == 'mapped'}selected{/if}>
							{msg desc=""}from-content-field{/msg}
						</option>
					</select>
				</div>

				{if $linkType == 'manual'}
					<div class="form-group">
						<label for="floatingToolbarLinkHrefPanelOption">
							{msg desc=""}URL{/msg}
						</label>

						<input
							class="form-control form-control-sm"
							data-onkeyup="{$_handleInputHrefKeyUp}"
							id="floatingToolbarLinkHrefPanelOption"
							title="{$item.editableValues.config ? $item.editableValues.config.href : ''}"
							type="text"
							value="{$item.editableValues.config ? $item.editableValues.config.href : ''}"
						>
					</div>
				{else}
					{call .linkMapping}
						{param assetBrowserLinks: $assetBrowserLinks /}
						{param fieldId: $item.editableValues.config.mappedField or $item.editableValues.config.fieldId /}
						{param fields: $_fields /}
						{param handleAssetBrowserLinkClick: $_handleAssetBrowserLinkClick /}
						{param handleAssetEntryLinkClick: $_handleAssetEntryLinkClick /}
						{param handleFieldOptionChange: $_handleFieldOptionChange /}
						{param handleSourceTypeChange: $_handleSourceTypeChange /}
						{param mappedAssetEntries: $mappedAssetEntries /}
						{param mappingFieldsURL: $mappingFieldsURL /}
						{param mappedFieldValue: $_mappedFieldValue /}
						{param sourceTypeIds: $_sourceTypeIds /}
						{param sourceTypes: $_sourceTypes /}
						{param selectedAssetEntryTitle: $item.editableValues.config ? $item.editableValues.config.title ?: $_selectedAssetEntry.title : '' /}
						{param selectedSourceTypeId: $_selectedSourceTypeId /}
						{param store: $store /}
					{/call}
				{/if}

				{if $_targetTypes and ($linkType == 'manual')}
					<div class="form-group">
						<label for="floatingToolbarLinkTargetPanelOption">
							{msg desc=""}target{/msg}
						</label>

						<select
							class="form-control form-control-sm"
							data-onchange="{$_handleTargetOptionChange}"
							id="floatingToolbarLinkTargetPanelOption"
						>
							{foreach $targetType in $_targetTypes}
								{call .targetTypeOption}
									{param item: $item /}
									{param targetType: $targetType /}
								{/call}
							{/foreach}
						</select>
					</div>
				{/if}
			</form>
		</div>
	</div>
{/template}

{template .linkMapping}
	{@param? assetBrowserLinks: list<[
		href: string,
		typeName: string
	]>}
	{@param? fieldId: string}
	{@param? fields: ?}
	{@param? mappedAssetEntries: list<[
		encodedId: string,
		classNameId: string,
		classPK: string,
		title: string
	]>}
	{@param? handleAssetBrowserLinkClick: any}
	{@param? handleAssetEntryLinkClick: any}
	{@param? handleFieldOptionChange: any}
	{@param? handleSourceTypeChange: any}
	{@param? mappingFieldsURL: string}
	{@param? mappedFieldValue: string}
	{@param? selectedAssetEntryTitle: string}
	{@param? selectedSourceTypeId: string}
	{@param? sourceTypeIds: [
		content: string,
		structure: string
	]}
	{@param? sourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? store: any}

	{if $mappingFieldsURL}
		<div class="form-group">
			{call com.liferay.layout.content.page.editor.web.FloatingToolbarMappingPanel.sourceTypeSelect}
				{param handleSourceTypeChange: $handleSourceTypeChange /}
				{param sourceTypes: $sourceTypes /}
				{param selectedSourceTypeId: $selectedSourceTypeId /}
			{/call}
		</div>
	{/if}

	{if not $mappingFieldsURL or $selectedSourceTypeId == $sourceTypeIds.content}
		<div class="floating-toolbar-mapping-panel__asset-select form-group">
			{call com.liferay.layout.content.page.editor.web.AssetSelector.render}
				{param assetBrowserLinks: $assetBrowserLinks /}
				{param fieldId kind="text"}floatingToolbarMappingPanelAssetSelect{/param}
				{param fieldName kind="text"}{msg desc=""}content{/msg}{/param}
				{param handleAssetBrowserLinkClick: $handleAssetBrowserLinkClick /}
				{param handleAssetEntryLinkClick: $handleAssetEntryLinkClick /}
				{param recentlyUsedAssetEntries: $mappedAssetEntries /}
				{param selectedAssetEntryTitle: $selectedAssetEntryTitle /}
				{param store: $store /}
			{/call}
		</div>
	{/if}

	<div class="form-group">
		{call com.liferay.layout.content.page.editor.web.FloatingToolbarMappingPanel.fieldSelect}
			{param fields: $fields /}
			{param handleFieldOptionChange: $handleFieldOptionChange /}
			{param mappedFieldId: $fieldId /}
		{/call}
	</div>

	{if $fieldId and isNonnull($mappedFieldValue)}
		<div class="form-group">
			<label for="floatingToolbarLinkHrefPanelOption">
				{msg desc=""}URL{/msg}
			</label>

			<input
				class="form-control form-control-sm"
				id="floatingToolbarLinkHrefPanelOption"
				readonly
				type="text"
				value="{$mappedFieldValue}"
			>
		</div>
	{/if}
{/template}

/**
 * Link target option
 */
{template .targetTypeOption}
	{@param item: [
		editableValues: [
			config: [
				target: string
			]
		]
	]}
	{@param targetType: [
		targetTypeId: string,
		label: string
	]}

	{let $optionAttributes kind="attributes"}
		value="{$targetType.targetTypeId}"

		{if $item.editableValues.config and $item.editableValues.config.target and $item.editableValues.config.target == $targetType.targetTypeId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$targetType.label}
	</option>
{/template}