{namespace com.liferay.layout.admin.web.LayoutColumn}

/**
 * LayoutColumn
 */
{template .render}
	{@param layoutColumn: list<[
		actionURLs: map<string, string>,
		active: bool,
		checked: bool,
		description: string,
		hasChild: bool,
		homePage: bool,
		homePageTitle: string,
		plid: string,
		title: string,
		url: string
	]>}
	{@param layoutColumnIndex: number}
	{@param handleLayoutColumnItemCheck: any}
	{@param handleLayoutColumnItemCheckboxClick: any}
	{@param handleLayoutColumnItemClick: any}
	{@param pathThemeImages: string}
	{@param portletNamespace: string}
	{@param? draggingItem: [
		actionURLs: map<string, string>,
		active: bool,
		checked: bool,
		description: string,
		hasChild: bool,
		homePage: bool,
		homePageTitle: string,
		plid: string,
		title: string,
		url: string
	]}
	{@param? draggingItemPosition: string}
	{@param? hoveredLayoutColumnItemPlid: string}

	{let $layoutColumnClasses kind="text"}
		col-11
		{sp}col-lg-4
		{sp}col-md-6

		{sp}layout-column
		{sp}show-quick-actions-on-hover

		{if length($layoutColumn) == 0}
			{sp}layout-column--placeholder
		{/if}

		{if $layoutColumnIndex != 0}
			{sp}layout-drop-target-item
		{/if}
	{/let}

	<ul
		class="{$layoutColumnClasses}"
		data-layout-column-index="{$layoutColumnIndex}"
		ref="layoutItemsWrapper"
	>
		{foreach $layoutColumnItem in $layoutColumn}
			{let $styleModifier kind="text"}
				{if $hoveredLayoutColumnItemPlid == $layoutColumnItem.plid}
					{$draggingItemPosition}
				{/if}

				{if $draggingItem and $draggingItem.plid == $layoutColumnItem.plid}
					{sp}layout-column-item-dragged
				{/if}
			{/let}

			{call .layoutColumnItem}
				{param key: $layoutColumnItem.plid /}
				{param layoutColumnIndex: $layoutColumnIndex /}
				{param layoutColumnItem: $layoutColumnItem /}
				{param handleLayoutColumnItemCheck: $handleLayoutColumnItemCheck /}
				{param handleLayoutColumnItemCheckboxClick: $handleLayoutColumnItemCheckboxClick /}
				{param handleLayoutColumnItemClick: $handleLayoutColumnItemClick /}
				{param pathThemeImages: $pathThemeImages /}
				{param portletNamespace: $portletNamespace /}
				{param styleModifier: $styleModifier /}
			{/call}
		{/foreach}
	</ul>
{/template}

/**
 * Lexicon icon
 */
{template .lexiconIcon}
	{@param name: string}
	{@param pathThemeImages: string}

	<svg aria-hidden="true" class="lexicon-icon lexicon-icon-{$name}">
		<use xlink:href="{$pathThemeImages}/lexicon/icons.svg#{$name}" />
	</svg>
{/template}

/**
 * Renders a Lexicon Horizontal Card
 */
{template .layoutColumnItem}
	{@param layoutColumnIndex: number}
	{@param layoutColumnItem: [
		actionURLs: map<string, string>,
		active: bool,
		checked: bool,
		description: string,
		hasChild: bool,
		homePage: bool,
		homePageTitle: string,
		plid: string,
		title: string,
		url: string
	]}
	{@param handleLayoutColumnItemCheck: any}
	{@param handleLayoutColumnItemCheckboxClick: any}
	{@param handleLayoutColumnItemClick: any}
	{@param pathThemeImages: string}
	{@param portletNamespace: string}
	{@param? styleModifier: string}

	{let $listGroupItemClasses kind="text"}
		layout-item
		{sp}list-group-item
		{sp}list-group-item-flex

		{if $layoutColumnIndex != 0}
			{sp}layout-drag-item
			{sp}layout-drop-target-item
		{/if}

		{if $layoutColumnItem.active}
			{sp}active-item
			{sp}focus
		{/if}

		{if $styleModifier}
			{sp}{$styleModifier}
		{/if}
	{/let}

	{let $listGroupItemAttributes kind="attributes"}
		class="{$listGroupItemClasses}"
		data-layout-column-item-plid="{$layoutColumnItem.plid}"
		data-onclick="{$handleLayoutColumnItemClick}"

		{if $layoutColumnIndex == 0}
			data-layout-column-item-url="{$layoutColumnItem.url}"
		{/if}

		{if $layoutColumnItem.active}
			ref="active"
		{/if}
	{/let}

	<li {$listGroupItemAttributes}>
		<div class="autofit-row autofit-row-center">
			{if $layoutColumnItem.plid != '0'}
				<div class="layout-drag-handler">
					{call .lexiconIcon}
						{param name: 'drag' /}
						{param pathThemeImages: $pathThemeImages /}
					{/call}
				</div>

				{let $layoutColumnItemAttributes kind="attributes"}
					class="custom-control-input"
					data-onchange="{$handleLayoutColumnItemCheck}"
					name="{$portletNamespace}rowIds"
					type="checkbox"
					value="{$layoutColumnItem.plid}"

					{if $layoutColumnItem.checked}
						checked
					{/if}
				{/let}

				<div class="autofit-col flex-col">
					<div
						class="custom-checkbox custom-control"
						data-onclick="{$handleLayoutColumnItemCheckboxClick}"
					>
						<label>
							<input {$layoutColumnItemAttributes} />

							<span class="custom-control-indicator custom-control-label select-item-checkbox-label"></span>
						</label>
					</div>
				</div>
			{/if}

			<div class="autofit-col flex-col flex-col-expand">
				<h4 class="list-group-title">
					<span class="text-truncate">
						{$layoutColumnItem.title}
					</span>
				</h4>

				{if $layoutColumnItem.description}
					<h6 class="layout-column-item-subtitle list-group-subtitle text-truncate">
						{$layoutColumnItem.description}

						{if $layoutColumnItem.homePage}
							&nbsp;
							<span class="label label-info">
								<span class="label-item label-item-expand">{msg desc=""}home{/msg}</span>
							</span>
						{/if}
					</h6>
				{/if}
			</div>

			{if $layoutColumnItem.actionURLs}
				{if $layoutColumnItem.plid == '0'}
					{if $layoutColumnItem.actionURLs['configureURL']}
						<div class="flex-col">
							<div class="quick-action-menu">
								<a
									class="component-action"
									href="{$layoutColumnItem.actionURLs['configureURL']}"
									title="{msg desc=""}configure{/msg}"
								>
									{call .lexiconIcon}
										{param name: 'cog' /}
										{param pathThemeImages: $pathThemeImages /}
									{/call}
								</a>
							</div>
						</div>
					{/if}
				{else}
					{if $layoutColumnItem.actionURLs['addURL']}
						<div class="flex-col">
							<div class="quick-action-menu">
								<a
									class="component-action"
									href="{$layoutColumnItem.actionURLs['addURL']}"
									title="{msg desc=""}add-page{/msg}"
								>
									{call .lexiconIcon}
										{param name: 'plus' /}
										{param pathThemeImages: $pathThemeImages /}
									{/call}
								</a>
							</div>
						</div>
					{/if}

					<div class="flex-col">
						<div
							aria-expanded="false"
							aria-haspopup="true"
							class="dropdown dropdown-action mt-0"
						>
							<button
								class="component-action dropdown-toggle"
								data-toggle="dropdown"
								type="button"
								title="{msg desc=""}show-actions{/msg}"
							>
								{call .lexiconIcon}
									{param name: 'ellipsis-v' /}
									{param pathThemeImages: $pathThemeImages /}
								{/call}
							</button>

							<div class="dropdown-menu">
								{if $layoutColumnItem.actionURLs['viewLayoutURL']}
									<a
										class="dropdown-item"
										href="{$layoutColumnItem.actionURLs['viewLayoutURL']}"
									>
										{msg desc=""}view{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['editLayoutURL']}
									<a
										class="dropdown-item"
										href="{$layoutColumnItem.actionURLs['editLayoutURL']}"
									>
										{msg desc=""}edit{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['configureURL']}
									<a
										class="dropdown-item"
										href="{$layoutColumnItem.actionURLs['configureURL']}"
									>
										{msg desc=""}configure{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['markAsHomePageLayoutURL']}
									<a
										class="dropdown-item"
										data-home-page-title="{$layoutColumnItem.homePageTitle}"
										data-onclick="_handleMarkAsHomePageLayoutClick"
										data-title="{$layoutColumnItem.title}"
										href="{$layoutColumnItem.actionURLs['markAsHomePageLayoutURL']}"
									>
										{msg desc=""}mark-as-home-page{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['copyLayoutURL']}
									<a
										class="dropdown-item"
										data-onclick="_handleCopyLayoutClick"
										href="{$layoutColumnItem.actionURLs['copyLayoutURL']}"
									>
										{msg desc=""}copy-page{/msg}
									</a>
								{/if}

								{let $permissionLinkAttributes kind="attributes"}
									class="dropdown-item layout-permissions-link lfr-icon-item"
									data-onclick="_handlePermissionLinkClick"
									href="{$layoutColumnItem.actionURLs['permissionsURL']}"
									id="{$portletNamespace}{$layoutColumnItem.plid}_permissions"
								{/let}

								{if $layoutColumnItem.actionURLs['permissionsURL']}
									<a {$permissionLinkAttributes}>
										{msg desc=""}permissions{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['orphanPortletsURL']}
									<a
										class="dropdown-item"
										href="{$layoutColumnItem.actionURLs['orphanPortletsURL']}"
									>
										{msg desc=""}orphan-widgets{/msg}
									</a>
								{/if}

								{if $layoutColumnItem.actionURLs['deleteURL']}
									<a
										class="dropdown-item"
										data-onclick="_handleDeleteItemClick"
										href="{$layoutColumnItem.actionURLs['deleteURL']}"
									>
										{msg desc=""}delete{/msg}
									</a>
								{/if}
							</div>
						</div>
					</div>
				{/if}

				<div class="layout-has-child-col">
					{if $layoutColumnItem.hasChild}
						{call .lexiconIcon}
							{param name: 'caret-right' /}
							{param pathThemeImages: $pathThemeImages /}
						{/call}
					{/if}
				</div>
			{/if}
		</div>
	</li>
{/template}