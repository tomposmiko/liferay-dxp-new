{namespace com.liferay.layout.admin.web.FragmentsEditor}

/**
 * FragmentsEditor
 */
{template .render}
	{@param classPK: ?}
	{@param defaultEditorConfigurations: ?}
	{@param defaultLanguageId: string}
	{@param fragmentEntryLinks: ?}
	{@param imageSelectorURL: string}
	{@param languageId: string}
	{@param layoutData: ?}
	{@param portletNamespace: string}
	{@param spritemap: string}
	{@param? activeItemId: string}
	{@param? activeItemType: string}
	{@param? fragmentsEditorSidebarVisible: bool}
	{@param? highlightMapping: bool}
	{@param? getAssetClassTypesURL: any}
	{@param? getAssetDisplayContributorsURL: any}
	{@param? dropTargetBorder: string}
	{@param? dropTargetItemId: string}
	{@param? dropTargetItemType: string}
	{@param? hoveredItemId: string}
	{@param? hoveredItemType: string}
	{@param? id: string}
	{@param? mappingFieldsURL: string}
	{@param? selectMappingDialogEditableId: string}
	{@param? selectMappingDialogEditableType: string}
	{@param? selectMappingDialogFragmentEntryLinkId: string}
	{@param? selectMappingDialogMappedFieldId: string}
	{@param? selectMappingDialogVisible: bool}
	{@param? selectMappingTypeDialogVisible: bool}
	{@param? selectedMappingTypes: [
		subtype: [
			id: string,
			label: string
		],
		type: [
			id: string,
			label: string
		]
	]}
	{@param? store: ?}
	{@param? updateLayoutPageTemplateEntryAssetTypeURL: any}

	<div class="fragments-editor" id="{$id}">
		{call com.liferay.layout.admin.web.FragmentsEditorToolbar.render}
			{param store: $store /}
		{/call}

		{call com.liferay.layout.admin.web.FragmentsEditorSidebar.render}
			{param ref: 'sidebar' /}
			{param store: $store /}
		{/call}

		{call com.liferay.layout.admin.web.FragmentEntryLinkList.render}
			{param activeItemId: $activeItemId /}
			{param activeItemType: $activeItemType /}
			{param defaultEditorConfigurations: $defaultEditorConfigurations /}
			{param defaultLanguageId: $defaultLanguageId /}
			{param fragmentEntryLinks: $fragmentEntryLinks /}
			{param fragmentsEditorSidebarVisible: $fragmentsEditorSidebarVisible ?: true /}
			{param dropTargetBorder: $dropTargetBorder /}
			{param dropTargetItemId: $dropTargetItemId /}
			{param dropTargetItemType: $dropTargetItemType /}
			{param hoveredItemId: $hoveredItemId /}
			{param hoveredItemType: $hoveredItemType /}
			{param imageSelectorURL: $imageSelectorURL /}
			{param languageId: $languageId /}
			{param layoutData: $layoutData /}
			{param highlightMapping: $highlightMapping /}
			{param mappingFieldsURL: $mappingFieldsURL /}
			{param portletNamespace: $portletNamespace /}
			{param ref: 'fragmentsEditorRender' /}
			{param selectedMappingTypes: $selectedMappingTypes /}
			{param spritemap: $spritemap /}
			{param store: $store /}
			{param translating: $languageId != $defaultLanguageId /}
		{/call}

		{if $mappingFieldsURL and $selectMappingDialogVisible}
			{call com.liferay.layout.admin.web.SelectMappingDialog.render}
				{param editableId: $selectMappingDialogEditableId /}
				{param editableType: $selectMappingDialogEditableType /}
				{param fragmentEntryLinkId: $selectMappingDialogFragmentEntryLinkId /}
				{param mappedFieldId: $selectMappingDialogMappedFieldId /}
				{param mappingFieldsURL: $mappingFieldsURL /}
				{param portletNamespace: $portletNamespace /}
				{param selectedMappingTypes: $selectedMappingTypes /}
				{param spritemap: $spritemap /}
				{param store: $store /}
			{/call}
		{/if}
		{if $getAssetClassTypesURL
			and $getAssetDisplayContributorsURL
			and $updateLayoutPageTemplateEntryAssetTypeURL
			and $selectMappingTypeDialogVisible}
			{call com.liferay.layout.admin.web.SelectMappingTypeDialog.render}
				{param classPK: $classPK /}
				{param getAssetClassTypesURL: $getAssetClassTypesURL /}
				{param getAssetDisplayContributorsURL: $getAssetDisplayContributorsURL /}
				{param portletNamespace: $portletNamespace /}
				{param spritemap: $spritemap /}
				{param store: $store /}
				{param updateLayoutPageTemplateEntryAssetTypeURL: $updateLayoutPageTemplateEntryAssetTypeURL /}
			{/call}
		{/if}
	</div>
{/template}