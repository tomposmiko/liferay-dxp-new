@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "This test ensures that a SERP preview is shown correctly based on the meta tags."
	@priority = 5
	test Smoke {
		property environment.acceptance = "true";
		property operating.system.types = "alpine,amazonlinux,centos,debian,fedora,orcllinux,osx,redhat,solaris,suse,ubuntu,windows";
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		AssertVisible(locator1 = "SitePagesEditPage#PREVIEW_SERP");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "Page HTML Title");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "Description");

		Page.viewPreview(
			description = "Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = ${portalURL});

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.gotoNavTab(navTab = "SEO");

		Page.viewPreview(
			description = "Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = ${portalURL});
	}

	@description = "This test ensures that ellipses are shown in the preview when the text limit is reached."
	@priority = 5
	test ValidateLongInputs {
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview");

		Navigator.gotoPage(pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview");

		Navigator.gotoEditPageViaControlMenu(pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview");

		Navigator.gotoNavTab(navTab = "SEO");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "Liferay Portal provides an excellent platform for building web applications");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web applications called social applications");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - ${siteName}",
			pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview",
			portalURL = ${portalURL},
			truncatedHTMLTitle = "true",
			truncatedURL = "true");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.gotoNavTab(navTab = "SEO");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - ${siteName}",
			pageName = "Long Test Page Name To Check The Display Style Of The URL In The SERP Preview",
			portalURL = ${portalURL},
			truncatedHTMLTitle = "true",
			truncatedURL = "true");
	}

	@description = "This test ensures that a SERP preview is refreshed when switching translations."
	@priority = 4
	test ViewPreviewWhenSwitchingTranslations {
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "Page HTML Title");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "Page Description");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = ${portalURL});

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "zh-CN");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "中文标题");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "中文描述");

		Page.viewPreview(
			description = "中文描述",
			htmlTitle = "中文标题 - ${siteName}",
			locale = "zh-CN",
			pageName = "Test Page",
			portalURL = ${portalURL});

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "en-US");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = ${portalURL});

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.gotoNavTab(navTab = "SEO");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - ${siteName}",
			pageName = "Test Page",
			portalURL = ${portalURL});

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "zh-CN");

		Page.viewPreview(
			description = "中文描述",
			htmlTitle = "中文标题 - ${siteName}",
			locale = "zh-CN",
			pageName = "Test Page",
			portalURL = ${portalURL});
	}

	@description = "This test ensures that a user can preview SEO tags with different languages."
	@priority = 5
	test ViewTranslatedLanguages {
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Test Site Name");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ar-SA");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "عنوان الاختبار");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "وصف الاختبار");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار - Test Site Name - ${siteName}",
			locale = "ar-SA",
			portalURL = ${portalURL},
			siteNameURL = "test-site-name");

		Button.clickSave();

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ca-ES");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "Título de la Prueba");

		PortletEntry.inputText(
			fieldLabel = "Description",
			text = "Descripción de la Prueba");

		Page.viewPreview(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba - Test Site Name - ${siteName}",
			locale = "ca-ES",
			portalURL = ${portalURL},
			siteNameURL = "test-site-name");

		Button.clickSave();

		PortletEntry.changeLocale(
			fieldName = "HTML Title",
			locale = "ar-SA");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار - Test Site Name - ${siteName}",
			locale = "ar-SA",
			portalURL = ${portalURL},
			siteNameURL = "test-site-name");

		OpenGraph.changeLocale(
			fieldName = "titleBoundingBox",
			locale = "ca-ES");

		Page.viewPreview(
			description = "Descripción de la Prueba",
			htmlTitle = "Título de la Prueba - Test Site Name - ${siteName}",
			locale = "ca-ES",
			portalURL = ${portalURL},
			siteNameURL = "test-site-name");
	}

}