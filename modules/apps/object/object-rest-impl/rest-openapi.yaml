components:
    schemas:
        AuditEvent:
            properties:
                auditFieldChanges:
                    items:
                        $ref: "#/components/schemas/AuditFieldChange"
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "../../headless/headless-delivery/headless-delivery-impl/rest-openapi.yaml#Creator"
                    readOnly: true
                dateCreated:
                    format: date
                    readOnly: true
                    type: string
                eventType:
                    readOnly: true
                    type: string
        AuditFieldChange:
            properties:
                name:
                    type: string
                newValue:
                    type: object
                oldValue:
                    type: object
        FileEntry:
            properties:
                id:
                    format: int64
                    type: integer
                link:
                    $ref: "#/components/schemas/Link"
                    readOnly: true
                name:
                    type: string
            type: object
        Link:
            properties:
                href:
                    type: string
                label:
                    type: string
            type: object
        ListEntry:
            properties:
                key:
                    type: string
                name:
                    type: string
                name_i18n:
                    additionalProperties:
                        type: string
                    readOnly: true
                    type: object
        ObjectEntry:
            properties:
                actions:
                    additionalProperties:
                        additionalProperties:
                            type: string
                        type: object
                    readOnly: true
                    type: object
                auditEvents:
                    description:
                        Optional field with the audit events associated with this object entry, can be embedded with
                        nestedFields
                    items:
                        $ref: "#/components/schemas/AuditEvent"
                    readOnly: true
                    type: array
                creator:
                    allOf:
                        - $ref: "../../headless/headless-delivery/headless-delivery-impl/rest-openapi.yaml#Creator"
                    readOnly: true
                dateCreated:
                    format: date
                    type: string
                dateModified:
                    format: date
                    type: string
                externalReferenceCode:
                    readOnly: true
                    type: string
                id:
                    format: int64
                    type: integer
                keywords:
                    description:
                        A list of keywords describing the object entry.
                    items:
                        type: string
                    type: array
                properties:
                    additionalProperties:
                        type: object
                    type: object
                    x-json-map: true
                scopeKey:
                    readOnly: true
                    type: string
                status:
                    $ref: "#/components/schemas/Status"
                    readOnly: true
                taxonomyCategoryBriefs:
                    description:
                        The categories associated with this object entry.
                    items:
                        $ref: "#/components/schemas/TaxonomyCategoryBrief"
                    readOnly: true
                    type: array
                taxonomyCategoryIds:
                    # @review
                    description:
                        A write-only field that adds `TaxonomyCategory` instances to the object entry.
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
            type: object
        Status:
            properties:
                code:
                    format: int32
                    readOnly: true
                    type: integer
                label:
                    type: string
                label_i18n:
                    type: string
            type: object
        TaxonomyCategoryBrief:
            properties:
                embeddedTaxonomyCategory:
                    # @review
                    description:
                        Optional field with the embedded taxonomy category, can be embedded with nestedFields
                    readOnly: true
                    type: object
                taxonomyCategoryId:
                    description:
                        The category's ID. This can be used to retrieve more information in the `TaxonomyCategory` API.
                    format: int64
                    readOnly: true
                    type: integer
                taxonomyCategoryName:
                    description:
                        The category's name.
                    readOnly: true
                    type: string
                taxonomyCategoryName_i18n:
                    additionalProperties:
                        type: string
                    # @review
                    description:
                        The localized category's names.
                    readOnly: true
                    type: object
            type: object
info:
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: ""
    version: v1.0
openapi: 3.0.1
paths:
    "":
        get:
            operationId: getObjectEntriesPage
            parameters:
                - in: query
                  name: aggregationTerms
                  schema:
                      items:
                          type: string
                      type: array
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ObjectEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ObjectEntry"
                                type: array
            tags: ["ObjectEntry"]
        post:
            operationId: postObjectEntry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
    "/by-external-reference-code/{currentExternalReferenceCode}/{objectRelationshipName}/{relatedExternalReferenceCode}":
        put:
            operationId: putByExternalReferenceCodeCurrentExternalReferenceCodeObjectRelationshipNameRelatedExternalReferenceCode
            parameters:
                - in: path
                  name: currentExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: objectRelationshipName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: relatedExternalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
    "/by-external-reference-code/{externalReferenceCode}":
        delete:
            operationId: deleteByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
        get:
            operationId: getByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        patch:
            operationId: patchByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        put:
            operationId: putByExternalReferenceCode
            parameters:
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
    "/by-external-reference-code/{objectEntryExternalReferenceCode}/object-actions/{objectActionName}":
        put:
            operationId: putByExternalReferenceCodeObjectEntryExternalReferenceCodeObjectActionObjectActionName
            parameters:
                - in: path
                  name: objectEntryExternalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: objectActionName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
    "/scopes/{scopeKey}/by-external-reference-code/{externalReferenceCode}":
        delete:
            operationId: deleteScopeScopeKeyByExternalReferenceCode
            parameters:
                - in: path
                  name: scopeKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
        get:
            operationId: getScopeScopeKeyByExternalReferenceCode
            parameters:
                - in: path
                  name: scopeKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        patch:
            operationId: patchScopeScopeKeyByExternalReferenceCode
            parameters:
                - in: path
                  name: scopeKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        put:
            operationId: putScopeScopeKeyByExternalReferenceCode
            parameters:
                - in: path
                  name: scopeKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
    "/scopes/{scopeKey}/by-external-reference-code/{externalReferenceCode}/object-actions/{objectActionName}":
        put:
            operationId: putScopeScopeKeyByExternalReferenceCodeObjectActionObjectActionName
            parameters:
                - in: path
                  name: scopeKey
                  schema:
                      type: string
                - in: path
                  name: externalReferenceCode
                  required: true
                  schema:
                      type: string
                - in: path
                  name: objectActionName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
    "/{objectEntryId}":
        delete:
            operationId: deleteObjectEntry
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
        get:
            operationId: getObjectEntry
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        patch:
            operationId: patchObjectEntry
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        put:
            operationId: putObjectEntry
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
    "/{objectEntryId}/object-actions/{objectActionName}":
        put:
            operationId: putObjectEntryObjectActionObjectActionName
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: objectActionName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
    "/{objectEntryId}/permissions":
        get:
            operationId: getObjectEntryPermissionsPage
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
                - in: query
                  name: roleNames
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]
        put:
            operationId: putObjectEntryPermissionsPage
            parameters:
                - in: path
                  name: objectEntryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
            tags: ["ObjectEntry"]
    /scopes/{scopeKey}:
        get:
            operationId: getScopeScopeKeyPage
            parameters:
                - in: path
                  name: scopeKey
                  schema:
                      type: string
                - in: query
                  name: aggregationTerms
                  schema:
                      items:
                          type: string
                      type: array
                - in: query
                  name: fields
                  schema:
                      type: string
                - in: query
                  name: flatten
                  schema:
                      type: boolean
                - in: query
                  name: nestedFields
                  schema:
                      type: string
                - in: query
                  name: restrictFields
                  schema:
                      type: string
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
                - in: header
                  name: Accept-Language
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ObjectEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ObjectEntry"
                                type: array
            tags: ["ObjectEntry"]
        post:
            operationId: postScopeScopeKey
            parameters:
                - in: path
                  name: scopeKey
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ObjectEntry"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ObjectEntry"
            tags: ["ObjectEntry"]