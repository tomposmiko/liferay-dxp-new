definition {

	macro _curlObjectField {
		var portalURL = JSONCompany.getPortalURL();

		if (isSet(objectDefinitionId)) {
			var api = "object-definitions/${objectDefinitionId}/object-fields";
		}
		else {
			var api = "/object-fields/${objectFieldId}";
		}

		var curl = '''
			${portalURL}/o/object-admin/v1.0/${api} \
				-H accept: application/json \
				-H Content-Type: application/json \
				-u test@liferay.com:test \
		''';

		return ${curl};
	}

	macro createObjectFieldByObjectDefinitionId {
		Variables.assertDefined(parameterList = "${objectDefinitionId},${dbType},${name}");

		var curl = ObjectFieldAPI._curlObjectField(objectDefinitionId = ${objectDefinitionId});

		if (!(isSet(label))) {
			var label = ${name};
		}

		var body = '''
			-d {
				"DBType": "${dbType}",
				"indexed": true,
				"indexedAsKeyword": false,
				"label":{"en_US":"${label}"},
				"listTypeDefinitionId": 0,
				"name": "${name}",
				"required": false
			}
		''';

		var curl = StringUtil.add(${curl}, ${body}, " ");

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	macro deleteObjectField {
		var curl = ObjectFieldAPI._curlObjectField(objectFieldId = ${staticObjectFieldId});

		JSONCurlUtil.delete(${curl});
	}

	macro getIdOfCreatedObjectField {
		var response = ObjectFieldAPI.createObjectFieldByObjectDefinitionId(
			dbType = ${dbType},
			name = ${name},
			objectDefinitionId = ${objectDefinitionId});

		var objectFieldId = JSONPathUtil.getIdValue(response = ${response});

		return ${objectFieldId};
	}

	macro getObjectFieldsByObjectId {
		Variables.assertDefined(parameterList = ${objectDefinitionId});

		var curl = ObjectFieldAPI._curlObjectField(objectDefinitionId = ${objectDefinitionId});

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro setUpGlobalObjectFieldId {
		var objectFieldId = ObjectFieldAPI.getIdOfCreatedObjectField(
			dbType = ${dbType},
			name = ${name},
			objectDefinitionId = ${objectDefinitionId});

		static var staticObjectFieldId = ${objectFieldId};

		return ${staticObjectFieldId};
	}

	macro updateFieldOfEntryById {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${entryId},${fieldLabel},${fieldValue},${requiredFieldLabel},${requiredFieldValue}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/${en_US_plural_label}/${entryId} \
				-u test@liferay.com:test \
				-H Content-Type: application/json \
				-d {
					"${requiredFieldLabel}": "${requiredFieldValue}",
		''';

		if (isSet(picklist)) {
			var fieldInBody = '''"${fieldLabel}": {"key":"${fieldValue}"}''';
		}

		if (isSet(multiselectPicklist)) {
			var fieldInBody = '''"${fieldLabel}": ["${fieldValue}","${fieldValue2}"]''';
		}
		else {
			var fieldInBody = '''"${fieldLabel}": "${fieldValue}"''';
		}

		var curl = StringUtil.add(${curl}, "${fieldInBody}}", "");

		JSONCurlUtil.patch(${curl});
	}

}