definition {

	macro assertDuplicatedEntryNotPresent {
		AssertElementNotPresent(
			key_entry = "${entry}",
			locator1 = "ObjectPortlet#DUPLICATED_ENTRY_VALUE");
	}

	macro assertEntryColumnNotPresent {
		AssertElementNotPresent(
			key_column = "${column}",
			locator1 = "ObjectPortlet#ENTRY_COLUMN");
	}

	macro assertEntryDetailsLabelPresent {
		AssertElementPresent(
			key_entryLabel = "${entryLabel}",
			locator1 = "ObjectPortlet#VIEW_ENTRY_DETAILS_LABEL");
	}

	macro assertEntryDetailsValuePresent {
		AssertElementPresent(
			key_entryValue = "${entryValue}",
			locator1 = "ObjectPortlet#VIEW_ENTRY_DETAILS_VALUE");
	}

	macro assertEntryNotPresent {
		AssertElementNotPresent(
			key_entry = "${entry}",
			locator1 = "ObjectPortlet#ENTRY_VALUE");
	}

	macro assertFieldEntryColumnIsDisplayed {
		AssertElementPresent(
			key_fieldLabelName = "${fieldLabelName}",
			locator1 = "ObjectPortlet#FIELD_ENTRY_COLUMN");
	}

	macro assertFieldLabelName {
		AssertTextEquals(
			key_fieldLabelName = "${fieldLabelName}",
			locator1 = "ObjectPortlet#FIELD_LABEL_NAME",
			value1 = "${key_fieldLabelName}");
	}

	macro assertFilterResultsSpecificOrder {
		var resultOrder = "0";

		for (var entry	: list "${entry}") {
			var resultOrder = ${resultOrder} + 1;

			AssertVisible(
				key_entry = "${entry}",
				locator1 = "ObjectPortlet#ENTRY_VALUE_SPECIFIC_ORDER",
				resultOrder = "${resultOrder}");
		}
	}

	macro assertGenericEntryColumnIsDisplayed {
		AssertElementPresent(
			key_fieldLabelName = "${fieldLabelName}",
			locator1 = "ObjectPortlet#GENERIC_ENTRY_COLUMN");
	}

	macro assertMenuItemColumn {
		AssertElementPresent(
			key_dropdowntItem = "${dropdowntItem}",
			locator1 = "ObjectPortlet#CHECK_UNCHECK_DROPDOWN_ITEM");
	}

	macro assertNoFieldsWereFound {
		AssertTextEquals(
			locator1 = "ObjectPortlet#NO_FIELDS_WERE_FOUND_MESSAGE",
			value1 = "No fields were found.");
	}

	macro changePagination {
		Click(locator1 = "ObjectPortlet#PAGINATION_ITEMS_PER_PAGE_SELECT");

		MenuItem.click(menuItem = "${itemsPerPage}");
	}

	macro checkAnyPage {
		var key_pageNumber = "${pageNumber}";

		Click(locator1 = "ObjectPortlet#ANY_PAGE");
	}

	macro checkUncheckColumnsDisplayed {
		Click(locator1 = "ObjectPortlet#ARROW_DOWN_ICON");

		Click(
			key_dropdowntItem = "${dropdowntItem}",
			locator1 = "ObjectPortlet#CHECK_UNCHECK_DROPDOWN_ITEM");
	}

	macro deleteEntry {
		Click(
			key_entry = "${entry}",
			locator1 = "ObjectPortlet#ENTRY_KEBAB_MENU");

		Click(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");
	}

	macro searchColumn {
		Click(locator1 = "ObjectPortlet#ARROW_DOWN_ICON");

		AssertElementPresent(locator1 = "ObjectPortlet#COLUMN_SEARCH_FIELD");

		Type(
			locator1 = "ObjectPortlet#COLUMN_SEARCH_FIELD",
			value1 = "${columnName}");

		Click(locator1 = "ObjectPortlet#COLUMN_ICON_SEARCH");
	}

	macro searchEntry {
		AssertElementPresent(locator1 = "ObjectPortlet#SEARCH_FIELD");

		Type(
			locator1 = "ObjectPortlet#SEARCH_FIELD",
			value1 = "${entryName}");

		KeyPress(
			locator1 = "ObjectPortlet#SEARCH_FIELD",
			value1 = "\RETURN");
	}

	macro selectCustomObject {
		Click(
			key_label = "${label}",
			locator1 = "ObjectPortlet#SELECT_CUSTOM_OBJECT");
	}

	macro sortField {
		Click(
			key_sortFieldName = "${sortFieldName}",
			locator1 = "ObjectPortlet#SORT_FIELD",
			value1 = "${sortFieldName}");
	}

	macro viewEntry {
		AssertElementPresent(
			key_entry = "${entry}",
			locator1 = "ObjectPortlet#ENTRY_VALUE");
	}

	macro viewEntryDetails {
		Click(
			key_entry = "${entry}",
			locator1 = "ObjectPortlet#ENTRY_KEBAB_MENU");

		Click(locator1 = "ObjectPortlet#VIEW_ENTRY_BUTTON");
	}

}