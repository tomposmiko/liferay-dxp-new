@component-name = "portal-object"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-136456 - Verify it is not possible to change the required option when a field is mapped to an object field"
	@priority = "5"
	test CannotChangeRequiredOption {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Custom Field");

		PopulateObjectFormsConfiguration.viewRequiredFieldOptionDisabled();
	}

	@description = "LPS-133365 - Verify if it's not possible to map a Object field with a Form field of a different type"
	@priority = "4"
	test CannotMapWithDifferentFieldTypes {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "date",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.viewUnmappedFormField(fieldLabelName = "There are no compatible object fields to map.");
	}

	@description = "LPS-133365 - Verify if it's not possible to map a Object field with a Form field of a different type in a Field Group"
	@priority = "4"
	test CannotMapWithDifferentFieldTypesForFieldGroup {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "date",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Numeric");

		Form.closeSidebar();

		Form.addFieldFromSidebarToFieldsGroup(
			key_fieldLabel = "Numeric",
			key_fieldName = "Text");

		PopulateObjectFormsConfiguration.viewUnmappedFormField(fieldLabelName = "There are no compatible object fields to map.");
	}

	@description = "LPS-133365 - Verify if it's not possible to publish the Form when a required Object field is not mapped to a Form field"
	@ignore = "true"
	@priority = "5"
	test CannotPublishWhenRequiredFieldNotMapped {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Required Field",
			fieldName = "text",
			fieldType = "String",
			isRequired = "true",
			objectName = "CustomObject");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "date",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Date");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Not Required Field");

		PopulateObjectFormsConfiguration.publishFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedObjectRequiredFieldsError(
			fieldLabelName = "Required Field",
			fieldType = "String");

		PopulateObjectFormsConfiguration.closeUnmappedError();

		PopulateObjectFormsConfiguration.saveFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedObjectRequiredFieldsError(
			fieldLabelName = "Required Field",
			fieldType = "String");
	}

	@description = "LPS-133365 - Verify if is not possible to publish the Form when required Object field is not mapped to a Form Field in a Field Group"
	@ignore = "true"
	@priority = "4"
	test CannotPublishWhenRequiredFieldNotMappedForFieldGroup {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Required Field",
			fieldName = "text",
			fieldType = "String",
			isRequired = "true",
			objectName = "CustomObject");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "date",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "integer",
			fieldType = "Integer",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Date");

		Form.closeSidebar();

		Form.addFieldFromSidebarToFieldsGroup(
			key_fieldLabel = "Date",
			key_fieldName = "Numeric");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Not Required Field");

		Form.closeSidebar();

		PopulateObjectFormsConfiguration.gotoFormField(formFieldName = "Date");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Not Required Field");

		PopulateObjectFormsConfiguration.publishFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedObjectRequiredFieldsError(
			fieldLabelName = "Required Field",
			fieldType = "String");

		PopulateObjectFormsConfiguration.closeUnmappedError();

		PopulateObjectFormsConfiguration.saveFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedObjectRequiredFieldsError(
			fieldLabelName = "Required Field",
			fieldType = "String");
	}

	@description = "LPS-133365 - Verify if it's not possible to save or publish the Form if a added Form field is not mapped to a Object field"
	@ignore = "true"
	@priority = "4"
	test CannotSaveOrPublishWhenAddedFieldNotMapped {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.publishFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedFormFieldsError(
			fieldLabel = "Text",
			fieldType = "Text");

		PopulateObjectFormsConfiguration.closeUnmappedError();

		PopulateObjectFormsConfiguration.saveFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedFormFieldsError(
			fieldLabel = "Text",
			fieldType = "Text");
	}

	@description = "LPS-133365 - Verify if it's not possible to save or publish the Form if a added Form field is not mapped to a Object field in a Field Group"
	@ignore = "true"
	@priority = "4"
	test CannotSaveOrPublishWhenAddedFieldNotMappedForFieldGroup {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Not Required Field",
			fieldName = "date",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Date");

		Form.closeSidebar();

		Form.addFieldFromSidebarToFieldsGroup(
			key_fieldLabel = "Date",
			key_fieldName = "Date");

		PopulateObjectFormsConfiguration.publishFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedFormFieldsError(
			fieldLabel = "Date",
			fieldType = "Date");

		PopulateObjectFormsConfiguration.closeUnmappedError();

		PopulateObjectFormsConfiguration.saveFormObject();

		PopulateObjectFormsConfiguration.viewUnmappedFormFieldsError(
			fieldLabel = "Date",
			fieldType = "Date");
	}

	@description = "LPS-136456 - Verify that it is not possible to view forms entries when it is mapped to an object"
	@priority = "4"
	test CannotViewFormsEntries {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Custom Field");

		PopulateObjectFormsConfiguration.saveFormObject();

		AssertElementNotPresent(
			locator1 = "FormsAdmin#FORMS_NAVIGATION_BAR_ITEM",
			value1 = "Entries");

		Navigator.gotoBack();

		Click(
			key_rowIndexNumber = "1",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS_N");

		AssertElementNotPresent(
			key_itemName = "Entries",
			locator1 = "FormsAdmin#FORMS_DROPDOWN_MENU_ITEM");
	}

	@description = "LPS-133365 - Verify if it's possible to select Object as a Storage Type"
	@priority = "5"
	test CanSelectObjectStorageType {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.viewDisplaySelectOption(label = "Object");

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.viewDisplaySelectOption(label = "Custom Object");
	}

	@description = "LPS-136456 - Verify that the Repeatable option is not available on a form when it is mapped to an object"
	@priority = "4"
	test RepeatableOptionNotAvailable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		Navigator.openURL();

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Custom Field");

		Form.gotoAdvancedTab();

		AssertElementNotPresent(locator1 = "PopulateObjectFormsConfiguration#REPEATABLE_TOGGLE_SWITCH");
	}

	@description = "LPS-136456 - Verify that the Searchable option is not available on a form when it is mapped to an object"
	@priority = "4"
	test SearchableOptionNotAvailable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		PopulateObjectFormsConfiguration.openForm();

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		PopulateObjectFormsConfiguration.openFormSettings();

		PopulateObjectFormsConfiguration.selectObject(label = "Object");

		PopulateObjectFormsConfiguration.selectCustomObject(label = "Custom Object");

		Form.gotoAddField(fieldType = "Text");

		PopulateObjectFormsConfiguration.mapFormField(fieldLabelName = "Custom Field");

		Form.gotoAdvancedTab();

		AssertElementNotPresent(locator1 = "PopulateObjectFormsConfiguration#ANY_SEARCHABLE_SECTION_TITLE");
	}

}