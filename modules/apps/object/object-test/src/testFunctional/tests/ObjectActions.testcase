@component-name = "portal-object"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-139008 - Verify it is possible to cancel the creation of an Action"
	@priority = "4"
	test CanCancelAction {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		LexiconEntry.gotoAdd();

		Button.clickCancel();

		AssertElementNotPresent(locator1 = "Portlet#MODAL_TITLE");

		ObjectAdmin.assertNoItemsWereFound();
	}

	@description = "LPS-139008 - Verify it is possible to cancel the update of an Action"
	@priority = "4"
	test CanCancelActionUpdate {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.goToActionDetails(viewEntry = "Action Name");

		ObjectAdmin.viewFieldDetails();

		Type(
			locator1 = "ObjectAdmin#VIEW_ACTION_NAME_ON_SIDE_PANEL",
			value1 = "Update Action Name");

		Button.clickCancel();

		AssertElementNotPresent(locator1 = "ObjectAdmin#FIELDS_DETAILS_IFRAME");

		Refresh();

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name");
	}

	@description = "LPS-139008 - Verify it is possible to create an Action"
	@priority = "5"
	test CanCreateAction {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name");
	}

	@description = "LPS-139008 - Verify it is possible to delete an Action"
	@priority = "5"
	test CanDeleteAction {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name");

		ObjectAdmin.deleteActionViaUI(actionName = "Action Name");

		ObjectAdmin.assertObjectActionsNotPresent(
			actionActive = "Yes",
			actionName = "Action Name");
	}

	@description = "LPS-139008 - Verify that it is possible to inactivate an Action"
	@priority = "4"
	test CanInactivateAction {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.editObjectAction(viewEntry = "Action Name");

		CreateObject.checkToggleInactive();

		Button.clickSave();

		Refresh();

		ObjectAdmin.assertObjectActions(
			actionActive = "No",
			actionName = "Action Name");
	}

	@description = "LPS-139008 - Verify it is not possible to leave the Action Name field blank"
	@priority = "3"
	test CannotLeaveActionNameBlank {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.viewRequiredAlert(requiredAlert = "Required");
	}

	@description = "LPS-139008 - Verify it is not possible to leave the Action Then field blank"
	@priority = "3"
	test CannotLeaveActionThenBlank {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			whenAction = "On After Add");

		ObjectAdmin.viewRequiredAlert(requiredAlert = "Required");
	}

	@description = "LPS-139008 - Verify it is not possible to leave the Action When field blank"
	@priority = "3"
	test CannotLeaveActionWhenBlank {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080");

		ObjectAdmin.viewRequiredAlert(requiredAlert = "Required");
	}

	@description = "LPS-139008 - Verify it is not possible to leave the URL field blank when Webhook is selected"
	@priority = "3"
	test CannotLeaveURLBlank {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			whenAction = "On After Add");

		ObjectAdmin.viewRequiredAlert(requiredAlert = "Required");
	}

	@description = "LPS-139008 - Verify that it is possible to reactivate an Action"
	@priority = "4"
	test CanReactivateAction {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.editObjectAction(viewEntry = "Action Name");

		CreateObject.checkToggleInactive();

		Button.clickSave();

		Refresh();

		ObjectAdmin.editObjectAction(viewEntry = "Action Name");

		CreateObject.checkToggleActive();

		Button.clickSave();

		Refresh();

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name");
	}

	@description = "LPS-139008 - Verify it is possible to search for an Action"
	@priority = "4"
	test CanSearchAction {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		for (var actionsNames : list "1,2") {
			ObjectAdmin.addObjectActionViaUI(
				actionName = "Action Name ${actionsNames}",
				thenAction = "Webhook",
				urlAction = "http://localhost:8080",
				whenAction = "On After Add");
		}

		Search.searchCP(searchTerm = "1");

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name 1");

		ObjectAdmin.assertObjectActionsNotPresent(
			actionActive = "Yes",
			actionName = "Action Name 2");
	}

	@description = "LPS-139008 - Verify it is possible to update an Action"
	@priority = "4"
	test CanUpdateAction {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object");

		ObjectAdmin.goToActionsTab();

		ObjectAdmin.addObjectActionViaUI(
			actionName = "Action Name",
			thenAction = "Webhook",
			urlAction = "http://localhost:8080",
			whenAction = "On After Add");

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Action Name");

		ObjectAdmin.editObjectAction(
			newActionName = "Update Action Name",
			viewEntry = "Action Name");

		ObjectAdmin.assertObjectActions(
			actionActive = "Yes",
			actionName = "Update Action Name");
	}

}