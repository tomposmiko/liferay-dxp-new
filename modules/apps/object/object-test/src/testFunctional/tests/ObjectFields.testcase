@component-name = "portal-object"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-146889 - Verify that when turn on the 'Set the Maximum Number of Characters' on a Text the Maximum Number of Characters field has the 280 value as default"
	@priority = "4"
	test 280IsDefaultMaximumCharacterText {
		property portal.upstream = "quarantine";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151571",
			objectName = "CustomObject151571",
			pluralLabelName = "Custom Objects 151571");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field Text",
			fieldName = "customObjectFieldText",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject151571");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151571");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.goToFieldsDetails(label = "Custom Field Text");

		Click(
			key_labelName = "Limit Characters",
			locator1 = "ObjectField#DEFAULT_TOGGLE_SWITCH");

		AssertElementPresent(
			locator1 = "ObjectField#MAXIMUM_NUMBER_CHARACTERS_OPTION",
			value1 = "280");
	}

	@description = "LPS-146889 - Verify that when turn on the 'Set the Maximum Number of Characters' on a Long Text the Maximum Number of Characters field has the 65,000 value as default"
	@ignore = "Test Stub"
	@priority = "4"
	test 65000IsDefaultMaximumCharacterLongText {

		// TODO LPS-151572 65000IsDefaultMaximumCharacterLongText pending implementation

	}

	@description = "LPS-146523 - Verify if the scope of the object is Virtual Instance (Company) I will be able to add from any folders I have access to"
	@priority = "4"
	test CanAddFromAnyFolderWhenScopedByCompany {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151564",
			objectName = "CustomObject151564",
			pluralLabelName = "Custom Objects 151564");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151564");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.addObjectFieldViaUI(
			fieldAttachment = "Upload or Select from Documents and Media Item Selector",
			fieldLabel = "Custom Attachment",
			fieldType = "Attachment");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject151564");

		Navigator.openURL();

		ObjectAdmin.goToCustomObject(objectName = "CustomObject151564");

		LexiconEntry.gotoAdd();

		ObjectAutoGeneratedLayout.clickSelectFile();

		ObjectField.addAnyFolder(folderName = "Folder 151564");
	}

	@description = "LPS-146523 - Verify if the scope of the object is Site, I will be able to add from the site I'm in or Asset Libraries connected to that site I have access to"
	@ignore = "Test Stub"
	@priority = "4"
	test CanAddFromSiteAssetLibrariesWhenScopedBySite {

		// TODO LPS-151566 CanAddFromSiteAssetLibrariesWhenScopedBySite pending implementation

	}

	@description = "LPS-142659 - Verify it is possible to create a Clob field"
	@priority = "4"
	test CanCreateClobField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 206",
			objectName = "CustomObject206",
			pluralLabelName = "Custom Objects 206");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 206");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.addObjectFieldViaUI(
			fieldLabel = "Custom Field",
			fieldType = "Long Text");

		Refresh();

		ObjectAdmin.assertObjectField(
			fieldLabel = "Custom Field",
			fieldType = "LongText");
	}

	@description = "LPS-146889 - Verify that when turn on the 'Set the Maximum Number of Characters' the user is not allowed to type any value outside the informed range on the help text"
	@ignore = "Test Stub"
	@priority = "4"
	test CannotTypeValueOutsideRange {

		// TODO LPS-151573 CannotTypeValueOutsideRange pending implementation

	}

	@description = "LPS-143065 - Verify if the 'Attachment' option is shown on the 'Type' dropdown"
	@priority = "5"
	test CanViewAttachmentOption {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151557",
			objectName = "CustomObject151557",
			pluralLabelName = "Custom Objects 151557");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151557");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		ObjectField.assertOptionAndDescription(
			description = "Upload files or select from Documents and Media.",
			option = "Attachment");
	}

	@description = "LPS-143065 - Verify if there is an option on Request Files: Directly from User's Computer"
	@priority = "4"
	test CanViewDirectlyFromUsersComputerOption {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151559",
			objectName = "CustomObject151559",
			pluralLabelName = "Custom Objects 151559");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151559");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		ObjectField.selectType(fieldType = "Attachment");

		ObjectField.assertOptionAndDescriptionOnRequestFiles(
			description = "Files can be stored in an object entry or in a specific folder in Documents and Media.",
			option = "Upload Directly from the User's Computer");
	}

	@description = "LPS-146523 - Verify if there's an option on Request Files: Upload and Select from Documents and Media Item Selector"
	@priority = "5"
	test CanViewDocumentsAndMediaOption {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151562",
			objectName = "CustomObject151562",
			pluralLabelName = "Custom Objects 151562");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151562");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		ObjectField.selectType(fieldType = "Attachment");

		ObjectField.assertOptionAndDescriptionOnRequestFiles(
			description = "Users can upload or select existing files from Documents and Media.",
			option = "Upload or Select from Documents and Media Item Selector");
	}

	@description = "LPS-146889 - Verify that when turn on the 'Set the Maximum Number of Characters' a Maximum Number of Characters field is shown"
	@priority = "4"
	test CanViewMaximumCharactersField {
		property portal.upstream = "quarantine";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151570",
			objectName = "CustomObject151570",
			pluralLabelName = "Custom Objects 151570");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field Text",
			fieldName = "customObjectFieldText",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject151570");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151570");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.goToFieldsDetails(label = "Custom Field Text");

		Click(
			key_labelName = "Limit Characters",
			locator1 = "ObjectField#DEFAULT_TOGGLE_SWITCH");

		AssertElementPresent(locator1 = "ObjectField#MAXIMUM_NUMBER_CHARACTERS_OPTION");
	}

	@description = "LPS-147944 - Verify it is possible to view more than 20 picklists for the picklist drop-down"
	@priority = "4"
	test CanViewMoreThan20Picklists {
		for (var numberPicklist : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21") {
			Picklist.addPicklistViaAPI(picklistName = "Custom Picklist ${numberPicklist}");
		}

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149248",
			objectName = "CustomObject149248",
			pluralLabelName = "Custom Objects 149248");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149248");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "ObjectField#LABEL_INPUT",
			value1 = "Custom Picklist");

		ObjectField.selectType(fieldType = "Picklist");

		Click(locator1 = "ObjectAdmin#OBJECT_FIELDS_PICKLIST");

		for (var numberPicklist : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21") {
			ObjectAdmin.viewPicklistOptionsOnFields(optionName = "Custom Picklist ${numberPicklist}");
		}
	}

	@description = "LPS-146889 - Verify that 'Set the Maximum Number of Characters' toggle is available for Text and Long Text fields"
	@priority = "5"
	test CanViewSetMaximumCharactersOption {
		property portal.upstream = "quarantine";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151569",
			objectName = "CustomObject151569",
			pluralLabelName = "Custom Objects 151569");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field Text",
			fieldName = "customObjectFieldText",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject151569");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "LongText",
			fieldLabelName = "Custom Field Long Text",
			fieldName = "customObjectFieldLongText",
			fieldType = "Clob",
			isRequired = "false",
			objectName = "CustomObject151569");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151569");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.goToFieldsDetails(label = "Custom Field Text");

		AssertElementPresent(
			key_labelName = "Limit Characters",
			locator1 = "ObjectField#DEFAULT_TOGGLE_SWITCH");

		ObjectField.closeModal();

		SelectFrame(locator1 = "ObjectAdmin#SELECT_OBJECT_FIELD");

		ObjectAdmin.goToFieldsDetails(label = "Custom Field Long Text");

		AssertElementPresent(
			key_labelName = "Limit Characters",
			locator1 = "ObjectField#DEFAULT_TOGGLE_SWITCH");
	}

	@description = "LPS-143065 - Verify if a side panel containing the Field name, Typem Request Files, Accepted File Extensions, and Maximum File Size fields"
	@priority = "4"
	test CanViewSidePanelOptions {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151560",
			objectName = "CustomObject151560",
			pluralLabelName = "Custom Objects 151560");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151560");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.addObjectFieldViaUI(
			fieldAttachment = "Upload Directly from the User's Computer",
			fieldLabel = "Custom Attachment",
			fieldType = "Attachment");

		ObjectAdmin.goToFieldsDetails(label = "Custom Attachment");

		AssertElementPresent(locator1 = "ObjectField#LABEL_ACCEPTED_FILE_EXTENSIONS");

		AssertElementPresent(locator1 = "ObjectField#LABEL_MAXIMUM_FILE_SIZE");
	}

	@description = "LPS-144902 - Verify there is a description of each Field Type"
	@priority = "4"
	test DescriptionForEachFieldType {
		property osgi.module.configuration.file.names = "com.liferay.object.web.internal.configuration.FFObjectFieldBusinessTypeConfiguration.config";
		property osgi.module.configurations = "enabled=&quot;true&quot;";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 147723",
			objectName = "CustomObject147723",
			pluralLabelName = "Custom Objects 147723");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 147723");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		Click(locator1 = "ObjectField#TYPE_FIELD");

		ObjectAdmin.viewDescriptionForEachFieldType();
	}

	@description = "LPS-146523 - Verify if the default folder will be the Documents and Media Home Folder of that specific site"
	@ignore = "Test Stub"
	@priority = "4"
	test DocumentsAndMediaHomeFolderIsDefaultWhenScopedBySite {

		// TODO LPS-151568 DocumentsAndMediaHomeFolderIsDefaultWhenScopedBySite pending implementation

	}

	@description = "LPS-146523 - Verify if the default folder will be the Global Documents and Media Home Folder"
	@ignore = "Test Stub"
	@priority = "4"
	test GlobalDocumentsAndMediaHomeFolderIsDefaultWhenScopedByCompany {

		// TODO LPS-151565 GlobalDocumentsAndMediaHomeFolderIsDefaultWhenScopedByCompany pending implementation

	}

	@description = "LPS-143065 - Change the Maximum File Size to 0 (zero) and verify if the Maximum File Size is now set by the System configurations"
	@priority = "4"
	test MaximumFileSizeIsSetBySystemConfigurationsWhenZero {
		property portal.upstream = "quarantine";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151561",
			objectName = "CustomObject151561",
			pluralLabelName = "Custom Objects 151561");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151561");

		ObjectAdmin.goToFieldsTab();

		ObjectAdmin.addObjectFieldViaUI(
			fieldAttachment = "Upload Directly from the User's Computer",
			fieldLabel = "Custom Attachment",
			fieldType = "Attachment");

		ObjectAdmin.goToFieldsDetails(label = "Custom Attachment");

		Type(
			locator1 = "ObjectField#INPUT_MAXIMUM_FILE_SIZE",
			value1 = "0");

		ObjectField.save();

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject151561");

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Infrastructure",
			configurationName = "Upload Servlet Request",
			configurationScope = "System Scope");

		ServerAdministration.configureFileUploadOverallMaximumFileSize(maxFileSize = "102400");

		Navigator.openURL();

		ObjectAdmin.goToCustomObject(objectName = "CustomObject151561");

		ObjectAutoGeneratedLayout.addAttachment(fileName = "Liferay Code of Business Conduct and Ethics.pdf");

		AssertElementPresent(
			locator1 = "Message#WARNING_FEEDBACK",
			value1 = "An unexpected error occurred while uploading your file.");
	}

	@description = "LPS-143065 - Verify that the Request Files option is a required field"
	@priority = "4"
	test RequestFilesIsRequired {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 151558",
			objectName = "CustomObject151558",
			pluralLabelName = "Custom Objects 151558");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 151558");

		ObjectAdmin.goToFieldsTab();

		LexiconEntry.gotoAdd();

		ObjectField.selectType(fieldType = "Attachment");

		Button.clickSave();

		AssertElementPresent(
			key_fieldName = "Request Files",
			locator1 = "ObjectField#ERROR_REQUIRED_FIELD_SPECIFIC");
	}

}