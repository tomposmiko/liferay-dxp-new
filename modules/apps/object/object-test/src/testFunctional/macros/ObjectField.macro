definition {

	macro addAnyFolder {
		IFrame.selectModalFrame();

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#IFRAME");

		Click(
			key_kebabOption = "Folder",
			locator1 = "ObjectAdmin#KEBAB_MENU_OPTION");

		Type(
			locator1 = "ObjectPortlet#INPUT_NAME",
			value1 = ${folderName});

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "ObjectField#DOCUMENT_NAME",
			value1 = ${folderName});
	}

	macro assertOptionAndDescriptionOnRequestFiles {
		Click(locator1 = "ObjectField#REQUEST_FILES_INPUT");

		AssertElementPresent(
			key_fieldType = ${option},
			locator1 = "ObjectField#TYPE_OPTION");

		AssertTextEquals(
			key_type = ${option},
			locator1 = "ObjectField#FIELD_TYPE_DESCRIPTION",
			value1 = ${description});
	}

	macro checkLimitCharacters {
		Click(
			key_labelName = "Limit Characters",
			locator1 = "ObjectField#DEFAULT_TOGGLE_SWITCH");
	}

	macro checkToggleMandatory {
		Check.checkToggleSwitch(locator1 = "ObjectField#MANDATORY_TOGGLE");
	}

	macro closeModal {
		Click(locator1 = "ObjectField#MODAL_CLOSE_BUTTON");
	}

	macro editFormulaField {
		ObjectField.typeLabel(content = ${newContent});

		Click(
			key_filterLabel = "Output",
			locator1 = "ObjectCustomViews#SELECT_FILTER_GENERIC");

		Click(
			key_dropdownItem = ${newTypeFormula},
			locator1 = "ObjectField#SELECT_FORMULA_FIELD_OPTION");

		Type(
			key_text = "Formula Builder",
			locator1 = "TextInput#ANY",
			value1 = ${formulaScript});
	}

	macro save {
		Click(locator1 = "ObjectField#SAVE_BUTTON");

		Refresh();
	}

	macro selectOptionOnRequestFiles {
		Click(locator1 = "ObjectField#REQUEST_FILES_INPUT");

		Click(
			key_fieldType = ${option},
			locator1 = "ObjectField#TYPE_OPTION");
	}

	macro selectPicklist {
		if (!(isSet(dropdownLabel))) {
			var dropdownLabel = "Picklist";
		}

		Click(
			dropdownLabel = ${dropdownLabel},
			locator1 = "ObjectField#ANY_DROPDOWN_LABEL");

		MenuItem.click(menuItem = ${picklistName});
	}

	macro selectType {
		Click(locator1 = "ObjectField#TYPE_FIELD");

		Click(
			key_fieldType = ${fieldType},
			locator1 = "ObjectField#TYPE_OPTION");
	}

	macro toggleMandatory {
		Check.toggleSwitch(locator1 = "ObjectField#MANDATORY_TOGGLE");
	}

	macro typeLabel {
		Type(
			locator1 = "ObjectField#LABEL_LOCALIZED",
			value1 = ${content});
	}

	macro typeName {
		Type(
			locator1 = "ObjectField#NAME_FIELD",
			value1 = ${fieldName});
	}

	macro typeStorageFolder {
		Type(
			locator1 = "ObjectField#STORAGE_FOLDER_INPUT",
			value1 = ${content});
	}

	macro typeValueOnLimitCharacters {
		Type(
			locator1 = "ObjectField#TYPE_MAXIMUM_NUMBER_CHARACTERS",
			value1 = ${newValue});
	}

	macro viewToogleOnSidePanelShowFilesInDM {
		if (${isDisabled} == "Yes") {
			AssertElementPresent(locator1 = "ObjectField#SHOW_FILES_IN_DM_SIDE_PANEL_DISABLED");
		}
		else if (${isDisabled} == "No") {
			AssertElementPresent(locator1 = "ObjectField#SHOW_FILES_IN_DM_SIDE_PANEL_NOT_DISABLED");
		}
	}

}