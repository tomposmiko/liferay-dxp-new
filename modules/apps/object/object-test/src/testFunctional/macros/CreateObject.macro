definition {

	macro activeCustomObject {
		ObjectPortlet.selectCustomObject(label = ${objectLabel});

		CreateObject.checkToggleActive();

		CreateObject.saveObject();
	}

	macro activeToogleAccountRestriction {
		Check.checkToggleSwitch(locator1 = "CreateObject#TOGGLE_ACCOUNT_RESTRICTION");
	}

	macro addRelationshipAndSelectEntry {
		LexiconEntry.gotoAdd();

		var menuItem = "Select Existing One";

		if (IsElementPresent(key_menuItem = ${menuItem}, locator1 = "MenuItem#ANY_MENU_ITEM")) {
			MenuItem.click(menuItem = ${menuItem});
		}

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		ClickNoError(
			key_titleFieldName = ${titleFieldName},
			locator1 = "CreateObject#SELECT_ENTRY_IN_RELATIONSHIP_TAB");

		WaitForSPARefresh();

		WaitForPageLoad();

		Alert.viewSuccessMessage();
	}

	macro assertAddedEntryRelationshipIsDisplayed {
		LexiconEntry.gotoAdd();

		Click(locator1 = "ObjectPortlet#SEARCH_RELATIONSHIP_ENTRY");

		WaitForSPARefresh();

		AssertElementPresent(
			key_entry = ${entry},
			locator1 = "CreateObject#ENTRY_RELATIONSHIP_FIELD_OPTION");
	}

	macro assertCustomObject {
		AssertElementPresent(
			key_labelName = ${labelName},
			locator1 = "CreateObject#OBJECT_NAME");
	}

	macro assertCustomObjectNotPresent {
		AssertElementNotPresent(
			key_labelName = ${labelName},
			locator1 = "CreateObject#OBJECT_NAME");
	}

	macro assertCustomObjectWithIndex {
		AssertElementPresent(
			key_index = ${index},
			key_labelName = ${labelName},
			locator1 = "CreateObject#OBJECT_NAME_INDEX");
	}

	macro assertDisabledAllFields {
		for (var fieldsDisabled : list "Name,Label,Scope,Panel Category Key") {
			AssertElementPresent(
				key_nameDisabled = ${fieldsDisabled},
				locator1 = "CreateObject#VIEW_OBJECT_DATA_DISABLED");
		}

		AssertElementPresent(locator1 = "CreateObject#SAVE_BUTTON_DISABLED");
	}

	macro assertEntrySelectedOnRelationshipField {
		AssertElementPresent(
			key_entry = ${entry},
			locator1 = "CreateObject#VIEW_ENTRY_SELECTED_ON_RELATIONSHIP_FIELD");
	}

	macro assertFieldAddedOnBlock {
		AssertElementPresent(
			key_fieldLabelName = ${fieldLabelName},
			locator1 = "CreateObject#FIELD_ADDED_ON_BLOCK");
	}

	macro assertLabelBasicInfo {
		var key_fieldType = "value";

		WaitForSPARefresh();

		if (!(IsElementPresent(locator1 = "CreateObject#FIELD_VALUE"))) {
			SelectFrame.selectFrameTop();

			SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");
		}

		AssertElementPresent(
			fieldLabel = ${fieldLabel},
			locator1 = "CreateObject#FIELD_VALUE");
	}

	macro assertLabelBasicInfoNotPresent {
		var key_fieldType = "value";

		WaitForSPARefresh();

		if (!(IsElementPresent(locator1 = "CreateObject#FIELD_VALUE"))) {
			SelectFrame.selectFrameTop();

			SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");
		}

		AssertElementNotPresent(
			fieldLabel = ${fieldLabel},
			locator1 = "CreateObject#FIELD_VALUE");
	}

	macro assertObjectFieldNameIsAutofilled {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "ObjectField#LABEL_INPUT",
			value1 = ${fieldLabel});

		AssertElementPresent(
			key_fieldName = ${fieldName},
			locator1 = "CreateObject#VIEW_OBJECT_FIELD_NAME");
	}

	macro assertObjectLabel {
		AssertTextEquals(
			locator1 = "CreateObject#OBJECT_LABEL",
			value1 = ${labelName});
	}

	macro assertObjectNotPresent {
		AssertElementNotPresent(
			key_tabName = ${objectLabel},
			locator1 = "ObjectAdmin#ANY_TAB_ON_ENTRY");
	}

	macro assertObjectPluralLabel {
		AssertTextEquals(
			locator1 = "CreateObject#OBJECT_PLURAL_LABEL",
			value1 = ${pluralLabelName});
	}

	macro assertOneColumnOnFieldEntry {
		AssertElementPresent(locator1 = "CreateObject#ASSERT_ONE_COLUMN_FIELD_ENTRY");

		AssertElementNotPresent(locator1 = "CreateObject#ASSERT_TWO_COLUMN_FIELD_ENTRY");
	}

	macro assertRelatedObject {
		AssertElementPresent(
			key_relatedObject = ${relatedObject},
			locator1 = "CreateObject#VIEW_RELATED_OBJECT_ON_RELATIONSHIP_FIELD");
	}

	macro assertRelationshipNotPresent {
		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextEquals(
			locator1 = "Message#NO_ENTRIES",
			value1 = "No entries were found.");
	}

	macro assertSearchableSectionOptionsAppears {
		AssertElementPresent(
			key_radioOption = ${radioOption},
			locator1 = "ObjectAdmin#FIELDS_RADIO_OPTION");
	}

	macro assertSelectedValueInDeletionType {
		WaitForSPARefresh();

		AssertElementPresent(
			key_fieldLabel = "Deletion Type",
			key_value = ${deletionType},
			locator1 = "CreateObject#ASSERT_DELETION_TYPE_VALUE");
	}

	macro assertTitleFieldIsSelected {
		AssertElementPresent(
			locator1 = "CreateObject#TITLE_FIELD",
			value1 = ${fieldLabel});
	}

	macro assertValuesOnObjectData {
		var key_fieldType = "form-control";

		AssertElementPresent(
			fieldLabel = ${fieldLabel},
			locator1 = "CreateObject#FIELD_VALUE");
	}

	macro assertValuesOnScope {
		AssertTextEquals(
			locator1 = "CreateObject#VIEW_OBJECT_SCOPE",
			value1 = ${valueScope});

		AssertTextEquals(
			locator1 = "CreateObject#PANEL_CATEGORY_KEY",
			value1 = ${valuePanelCategory});
	}

	macro checkToggleActive {
		Check.checkToggleSwitch(locator1 = "CreateObject#ACTIVE_TOGGLE");

		WaitForSPARefresh();

		WaitForPageLoad();
	}

	macro checkToggleCollapsible {
		Check.checkToggleSwitch(locator1 = "CreateObject#TOGGLE_COLLAPSIBLE");

		WaitForSPARefresh();

		WaitForPageLoad();
	}

	macro checkToggleInactive {
		Uncheck.uncheckToggleSwitch(locator1 = "CreateObject#ACTIVE_TOGGLE");

		WaitForSPARefresh();

		WaitForPageLoad();
	}

	macro deleteEntryInRelationshipTab {
		ObjectAdmin.gotoRelationshipsTab();

		if (isSet(entryName)) {
			Click.clickNoMouseOver(
				key_entryName = ${entryName},
				locator1 = "ObjectPortlet#DELETE_RELATIONSHIP_ENTRY");
		}
		else if (isSet(labelName)) {
			Click(
				key_objectLabel = ${labelName},
				locator1 = "ObjectAdmin#OBJECT_KEBAB_MENU");

			MenuItem.clickNoError(menuItem = "Delete");
		}

		WaitForSPARefresh();

		WaitForPageLoad();
	}

	macro deleteFieldOnBlock {
		Click(locator1 = "CreateObject#KEBAB_MENU_BLOCK_FIELD");

		Click(locator1 = "CreateObject#KEBAB_MENU_BLOCK_FIELD_OPTION_DELETE");
	}

	macro deleteObjectViaUI {
		Click(
			key_objectLabel = ${objectLabel},
			locator1 = "ObjectAdmin#OBJECT_KEBAB_MENU");

		MenuItem.clickNoError(menuItem = "Delete");
	}

	macro desactiveToogleAccountRestriction {
		Uncheck.uncheckToggleSwitch(locator1 = "CreateObject#TOGGLE_ACCOUNT_RESTRICTION");
	}

	macro editLabel {
		Type(
			locator1 = "CreateObject#OBJECT_LABEL",
			value1 = ${labelName});
	}

	macro editPluralLabel {
		Type(
			locator1 = "CreateObject#OBJECT_PLURAL_LABEL",
			value1 = ${pluralLabelName});
	}

	macro inactiveCustomObject {
		ObjectPortlet.selectCustomObject(label = ${objectLabel});

		CreateObject.checkToggleInactive();

		CreateObject.saveObject();
	}

	macro saveObject {
		Button.clickSave();

		Alert.viewSuccessMessage();

		WaitForElementNotPresent(locator1 = "Message#SUCCESS");

		WaitForPageLoad();
	}

	macro selectAccountRestrictedField {
		Click(locator1 = "CreateObject#ACCOUNT_RESTRICTED_FIELD");

		Click(
			key_menuItem = ${accountRestrictedField},
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	macro selectDeletionType {
		ObjectAdmin.gotoRelationshipsTab();

		ObjectAdmin.goToRelationshipsDetails(fieldName = ${fieldName});

		WaitForSPARefresh();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Select(
			locator1 = "CreateObject#SELECT_DELETION_TYPE",
			value1 = ${deletionType});

		PortletEntry.save();
	}

	macro selectPanelCategoryKey {
		Click(locator1 = "CreateObject#PANEL_CATEGORY_KEY");

		Click(
			key_menuItem = ${panelCategoryKey},
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	macro selectTitleField {
		Click(locator1 = "CreateObject#TITLE_FIELD");

		Click(
			key_menuItem = ${fieldLabel},
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	macro viewAccountRestrictedFieldIsRequiredOnEntries {
		AssertElementPresent(
			key_fieldName = ${relationshipName},
			locator1 = "FormFields#TEXT_FIELD");

		Button.clickSave();

		Alert.viewRequiredField();
	}

	macro viewErrorValueInvalid {
		AssertElementPresent(
			key_className = ${className},
			key_errorMessage = ${errorMessage},
			locator1 = "CreateObject#ERROR_MESSAGE");
	}

	macro viewObject {
		Click(
			key_labelName = ${labelName},
			locator1 = "CreateObject#VIEW_OBJECT");
	}

	macro withdrawObjectTask {
		Click(
			key_taskName = ${objectLabel},
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");

		Click(locator1 = "WorkflowSubmissions#SUBMISSIONS_DETAILS_PAGE_ELLIPSIS");

		MenuItem.click(menuItem = "Withdraw Submission");
	}

}