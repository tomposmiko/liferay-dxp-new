definition {

	macro activeCustomObject {
		ObjectPortlet.selectCustomObject(label = "${objectName}");

		CreateObject.checkToggleActive();

		CreateObject.saveObject();
	}

	macro addRelationshipAndSelectEntry {
		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		ClickNoError(
			key_titleFieldName = "${titleFieldName}",
			locator1 = "CreateObject#SELECT_ENTRY_IN_RELATIONSHIP_TAB");
	}

	macro assertAddedEntryRelationshipIsDisplayed {
		LexiconEntry.gotoAdd();

		Click(locator1 = "ObjectPortlet#SEARCH_RELATIONSHIP_ENTRY");

		AssertElementPresent(
			key_entry = "${entry}",
			locator1 = "CreateObject#ENTRY_RELATIONSHIP_FIELD_OPTION");
	}

	macro assertCanCollapseAndExpandEntryField {
		LexiconEntry.gotoAdd();

		Click(locator1 = "CreateObject#COLLAPSE_EXPAND_OBJECT_PORTLET_ENTRY_FIELD");

		WaitForSPARefresh();

		AssertNotVisible(locator1 = "ObjectAdmin#ENTRY_STRING_VALUE_FIELD");

		Click(locator1 = "CreateObject#COLLAPSE_EXPAND_OBJECT_PORTLET_ENTRY_FIELD");

		WaitForSPARefresh();

		WaitForVisible(locator1 = "ObjectAdmin#ENTRY_STRING_VALUE_FIELD");

		AssertVisible(locator1 = "ObjectAdmin#ENTRY_STRING_VALUE_FIELD");
	}

	macro assertCannotAddRelationshipTabFirst {
		LexiconEntry.gotoAdd();

		AssertElementPresent(locator1 = "CreateObject#DISABLED_TAB_TYPE_RELATIONSHIPS");
	}

	macro assertCustomObject {
		AssertElementPresent(
			key_labelName = "${labelName}",
			locator1 = "CreateObject#OBJECT_NAME");
	}

	macro assertDisabledFieldName {
		AssertElementPresent(locator1 = "CreateObject#DISABLED_FIELD_NAME");
	}

	macro assertDisabledFieldType {
		AssertElementPresent(locator1 = "CreateObject#DISABLED_FIELD_TYPE");
	}

	macro assertDisabledObjectName {
		AssertElementPresent(locator1 = "CreateObject#DISABLED_OBJECT_NAME");
	}

	macro assertDisabledPublishObjectButton {
		AssertElementPresent(locator1 = "CreateObject#DISABLED_PUBLISH_OBJECT_BUTTON");
	}

	macro assertEntrySelectedOnRelationshipField {
		AssertElementPresent(
			key_entry = "${entry}",
			locator1 = "CreateObject#VIEW_ENTRY_SELECTED_ON_RELATIONSHIP_FIELD");
	}

	macro assertFieldAddedOnBlock {
		AssertElementPresent(
			key_fieldLabelName = "${fieldLabelName}",
			locator1 = "CreateObject#FIELD_ADDED_ON_BLOCK");
	}

	macro assertFieldName {
		AssertTextEquals(
			locator1 = "CreateObject#FIELD_NAME",
			value1 = "${fieldName}");
	}

	macro assertFieldNotPresentInBlock {
		AssertElementNotPresent(
			key_fieldLabelName = "${fieldLabelName}",
			locator1 = "CreateObject#FIELD_ADDED_ON_BLOCK");
	}

	macro assertFieldType {
		AssertSelectedLabel(
			locator1 = "CreateObject#FIELD_TYPE",
			value1 = "${fieldType}");
	}

	macro assertObjectDefinitionName {
		AssertTextEquals(
			locator1 = "CreateObject#OBJECT_DEFINITION_NAME",
			value1 = "${objectName}");
	}

	macro assertObjectFieldNameIsAutofilled {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "ObjectAdmin#OBJECT_FIELDS_LABEL_INPUT",
			value1 = "${fieldLabel}");

		AssertElementPresent(
			key_fieldName = "${fieldName}",
			locator1 = "CreateObject#VIEW_OBJECT_FIELD_NAME");
	}

	macro assertObjectLabel {
		AssertTextEquals(
			locator1 = "CreateObject#OBJECT_LABEL",
			value1 = "${labelName}");
	}

	macro assertObjectPluralLabel {
		AssertTextEquals(
			locator1 = "CreateObject#OBJECT_PLURAL_LABEL",
			value1 = "${pluralLabelName}");
	}

	macro assertPanelCategoryKey {
		AssertElementPresent(
			key_panelCategoryKey = "${panelCategoryKey}",
			locator1 = "CreateObject#PANEL_CATEGORY_KEY_SELECTED");
	}

	macro assertRelatedObject {
		AssertElementPresent(
			key_RelatedObject = "${relatedObject}",
			locator1 = "CreateObject#VIEW_RELATED_OBJECT_ON_RELATIONSHIP_FIELD");
	}

	macro assertSearchableSectionOptionsAppears {
		AssertElementPresent(
			key_radioOption = "${radioOption}",
			locator1 = "ObjectAdmin#FIELDS_RADIO_OPTION");
	}

	macro assertTitleFieldIsSelected {
		AssertElementPresent(
			locator1 = "CreateObject#TITLE_FIELD",
			value1 = "${fieldLabel}");
	}

	macro assertToggleCollapsibleChecked {
		AssertChecked.assertCheckedNotVisible(locator1 = "CreateObject#TOGGLE_COLLAPSIBLE");
	}

	macro assertToggleMandatory {
		AssertChecked.assertCheckedNotVisible(locator1 = "ObjectAdmin#OBJECT_FIELDS_MANDATORY_TOGGLE_SWITCH");
	}

	macro checkToggleActive {
		Check.checkToggleSwitch(locator1 = "CreateObject#TOGGLE_ACTIVE");
	}

	macro checkToggleCollapsible {
		Check.checkToggleSwitch(locator1 = "CreateObject#TOGGLE_COLLAPSIBLE");
	}

	macro checkToggleInactive {
		Uncheck.uncheckToggleSwitch(locator1 = "CreateObject#TOGGLE_INACTIVE");
	}

	macro checkToggleMandatory {
		Check.checkToggleSwitch(locator1 = "CreateObject#TOGGLE_MANDATORY");
	}

	macro chooseEntryOnRelationshipField {
		Click(locator1 = "ObjectPortlet#SEARCH_RELATIONSHIP_ENTRY");

		KeyPress(
			locator1 = "ObjectPortlet#SEARCH_RELATIONSHIP_ENTRY",
			value1 = "\BACK_SPACE");

		Click(
			key_picklistOption = "${entryOption}",
			locator1 = "ObjectAdmin#ENTRY_PICKLIST_OPTION");
	}

	macro deleteEntryInRelationshipTab {
		ObjectAdmin.gotoRelationshipsTab();

		Click(locator1 = "CreateObject#DELETE_ENTRY_IN_RELATIONSHIP_TAB");

		AssertElementNotPresent(locator1 = "CreateObject#KEBAB_MENU_BLOCK_FIELD_OPTION_DELETE");
	}

	macro deleteFieldOnBlock {
		Click(locator1 = "CreateObject#KEBAB_MENU_BLOCK_FIELD");

		Click(locator1 = "CreateObject#KEBAB_MENU_BLOCK_FIELD_OPTION_DELETE");
	}

	macro editLabel {
		Type(
			locator1 = "CreateObject#OBJECT_LABEL",
			value1 = "${labelName}");
	}

	macro editName {
		Type(
			locator1 = "CreateObject#FIELD_NAME",
			value1 = "${fieldName}");
	}

	macro editPluralLabel {
		Type(
			locator1 = "CreateObject#OBJECT_PLURAL_LABEL",
			value1 = "${pluralLabelName}");
	}

	macro editType {
		Select(
			locator1 = "CreateObject#FIELD_TYPE",
			value1 = "${fieldType}");
	}

	macro inactiveCustomObject {
		ObjectPortlet.selectCustomObject(label = "${objectName}");

		CreateObject.checkToggleInactive();

		CreateObject.saveObject();
	}

	macro saveObject {
		Click(locator1 = "CreateObject#SAVE_BUTTON");

		WaitForSPARefresh();
	}

	macro selectDeletionType {
		ObjectAdmin.gotoRelationshipsTab();

		ObjectAdmin.goToRelationshipsDetails(fieldName = "${fieldName}");

		WaitForSPARefresh();

		SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

		Select(
			locator1 = "CreateObject#SELECT_DELETION_TYPE",
			value1 = "${deletionType}");

		Button.clickSave();
	}

	macro selectPanelCategoryKey {
		Select(
			locator1 = "CreateObject#PANEL_CATEGORY_KEY",
			value1 = "${panelCategoryKey}");
	}

	macro selectTitleField {
		Select(
			locator1 = "CreateObject#TITLE_FIELD",
			value1 = "${fieldLabel}");
	}

	macro toggleMandatory {
		Check.toggleSwitch(locator1 = "CreateObject#TOGGLE_MANDATORY");
	}

	macro viewObject {
		Click(
			key_labelName = "${labelName}",
			locator1 = "CreateObject#VIEW_OBJECT");
	}

}