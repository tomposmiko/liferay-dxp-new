definition {

	macro addAttachment {
		LexiconEntry.gotoAdd();

		WaitForSPARefresh();

		ObjectAutoGeneratedLayout.clickSelectFile();

		var filePath = TestCase.getDependenciesDirPath(fileName = "${fileName}");

		UploadFile(
			locator1 = "TextInput#FILE",
			value1 = "${filePath}");
	}

	macro assertFormatTypeOnRichText {
		AssertElementPresent(
			key_richText = "${richText}",
			key_specificType = "${specificType}",
			key_type = "${type}",
			locator1 = "ObjectAutoGeneratedLayout#EDIT_RICH_TEXT");
	}

	macro checkToggleLimitCharacters {
		Check.checkToggleSwitch(locator1 = "ObjectAutoGeneratedLayout#SHOW_COUNTER_TOGGLE");
	}

	macro ClickAtFileOnAttachment {
		Click(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

	macro clickSelectFile {
		Click(locator1 = "ObjectAutoGeneratedLayout#BUTTON_SELECT_FILE");
	}

	macro defineMaximumFileSize {
		Type(
			locator1 = "ObjectAutoGeneratedLayout#MAXIMUM_FILE_SIZE",
			value1 = "${maxFileSize}");
	}

	macro defineMaximumNumberOfCharacters {
		ObjectAutoGeneratedLayout.checkToggleLimitCharacters();

		Type(
			locator1 = "ObjectAutoGeneratedLayout#MAXIMUM_NUMBER_OF_CHARACTERS",
			value1 = "${maxCharacters}");
	}

	macro deleteFileOnAttachment {
		Click(locator1 = "ObjectAutoGeneratedLayout#DELETE_ATTACHMENT_ICON");
	}

	macro downloadFileOnAttachment {
		WaitForSPARefresh();

		ObjectAutoGeneratedLayout.ClickAtFileOnAttachment(fileOnAttachment = "${fileOnAttachment}");

		Click(locator1 = "Icon#EXPORT");

		DownloadTempFile();
	}

	macro typeAndEditRichText {
		ObjectAutoGeneratedLayout.typeAndSelectTextOnRichText(text = "${richText}");

		if ("${typeEdit}" == "Strong") {
			Click(locator1 = "ObjectAutoGeneratedLayout#BOLD_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGeneratedLayout.assertFormatTypeOnRichText(
				richText = "${richText}",
				specificType = ".",
				type = "strong");
		}

		if ("${typeEdit}" == "Italic") {
			Click(locator1 = "ObjectAutoGeneratedLayout#ITALIC_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGeneratedLayout.assertFormatTypeOnRichText(
				richText = "${richText}",
				specificType = ".",
				type = "em");
		}

		if ("${typeEdit}" == "Underline") {
			Click(locator1 = "ObjectAutoGeneratedLayout#UNDERLINE_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGeneratedLayout.assertFormatTypeOnRichText(
				richText = "${richText}",
				specificType = ".",
				type = "u");
		}

		if ("${typeEdit}" == "Numbered List") {
			Click(locator1 = "ObjectAutoGeneratedLayout#NUMBEREDLIST_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGeneratedLayout.assertFormatTypeOnRichText(
				richText = "${richText}",
				specificType = "ol",
				type = "li");
		}

		if ("${typeEdit}" == "Bulleted List") {
			Click(locator1 = "ObjectAutoGeneratedLayout#BULLETEDLIST_TYPE_RICH_TEXT");

			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			ObjectAutoGeneratedLayout.assertFormatTypeOnRichText(
				richText = "${richText}",
				specificType = "ul",
				type = "li");
		}
	}

	macro typeAndSelectTextOnRichText {
		Type(
			locator1 = "CKEditor#BODY_FIELD_IFRAME",
			value1 = "${text}");

		SelectFieldText(locator1 = "CKEditor#BODY_FIELD_IFRAME");

		SelectFrame(value1 = "relative=top");
	}

	macro updateAttachment {
		ObjectPortlet.viewEntryDetails(entry = "${fileName}");

		WaitForSPARefresh();

		ObjectAutoGeneratedLayout.viewFilePresentOnAttachment(fileOnAttachment = "${fileName}");

		ObjectAutoGeneratedLayout.deleteFileOnAttachment();

		ObjectAutoGeneratedLayout.clickSelectFile();

		var filePath = TestCase.getDependenciesDirPath(fileName = "${newFileName}");

		UploadFile(
			locator1 = "TextInput#FILE",
			value1 = "${filePath}");

		ObjectAutoGeneratedLayout.viewFilePresentOnAttachment(fileOnAttachment = "${newFileName}");

		Button.clickSave();
	}

	macro viewCharacterCount {
		AssertElementPresent(
			key_characterCount = "${characterCount}",
			locator1 = "ObjectAutoGeneratedLayout#VIEW_CHARACTER_COUNT");
	}

	macro viewFileNotPresentOnAttachment {
		AssertElementNotPresent(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

	macro viewFilePresentOnAttachment {
		AssertElementPresent(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

}