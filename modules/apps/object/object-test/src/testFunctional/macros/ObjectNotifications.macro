definition {

	macro addNewNotificationTemplate {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = ${notificationType});

		Type(
			key_text = "Name",
			locator1 = "TextInput#ANY",
			value1 = ${name});

		Type(
			key_text = "To",
			locator1 = "TextInput#ANY",
			value1 = ${entryTo});

		Type(
			key_text = "From Address",
			locator1 = "TextInput#ANY",
			value1 = ${fromAddress});

		Type(
			key_text = "From Name",
			locator1 = "TextInput#ANY",
			value1 = ${fromName});

		Type(
			key_text = "Subject",
			locator1 = "TextInput#ANY",
			value1 = ${subject});

		Type(
			locator1 = "CKEditor#BODY_FIELD_IFRAME",
			value1 = ${emailBody});
	}

	macro addNotificationTemplateAttachment {
		Click(
			key_dataSource = "Select a Data Source",
			locator1 = "ObjectNotifications#DATA_SOURCE_ATTACHMENTS");

		Click(
			key_objectLabel = ${objectLabel},
			locator1 = "ObjectNotifications#DATA_SOURCE_ATTACHMENTS_SELECT_OBJECT");

		Click(locator1 = "ObjectNotifications#FIELD_ATTACHMENTS_OBJECT");

		Click(locator1 = "ObjectNotifications#FIELD_ATTACHMENTS_OBJECT_SELECT_FIELD");
	}

	macro deleteNotificationTemplate {
		Click(
			key_objectLabel = ${templateName},
			locator1 = "ObjectAdmin#OBJECT_KEBAB_MENU");

		MenuItem.clickNoError(menuItem = "Delete");

		Alert.viewSuccessMessage();
	}

	macro deleteQueue {
		if (IsElementPresent(key_statusName = ${status}, locator1 = "ObjectNotifications#NOTIFICATION_STATUS")) {
			Click(
				key_text = ${triggerBy},
				locator1 = "Icon#ANY_VERTICAL_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");
		}
		else {
			Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");
		}
	}

	macro editNotificationTemplate {
		Click(
			key_name = ${notificationTemplateName},
			locator1 = "ObjectAdmin#TABLE_LIST_TITLE");

		if (isSet(name)) {
			Type(
				key_text = "Name",
				locator1 = "TextInput#ANY",
				value1 = ${name});
		}

		if (isSet(entryTo)) {
			Type(
				key_text = "To",
				locator1 = "TextInput#ANY",
				value1 = ${entryTo});
		}

		if (isSet(fromAddress)) {
			Type(
				key_text = "From Address",
				locator1 = "TextInput#ANY",
				value1 = ${fromAddress});
		}

		if (isSet(fromName)) {
			Type(
				key_text = "From Name",
				locator1 = "TextInput#ANY",
				value1 = ${fromName});
		}

		if (isSet(subject)) {
			Type(
				key_text = "Subject",
				locator1 = "TextInput#ANY",
				value1 = ${subject});
		}

		if (isSet(emailBody)) {
			Type(
				locator1 = "CKEditor#BODY_FIELD_IFRAME",
				value1 = ${emailBody});
		}

		if (isSet(externalReferenceCode)) {
			ObjectAdmin.editExternalReferenceCode(externalReferenceCode = ${externalReferenceCode});
		}
	}

	macro resendNotificationInTheQueue {
		Click(
			key_text = ${triggerBy},
			locator1 = "Icon#ANY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Resend");
	}

	macro viewNotificationTemplateDetails {
		Click(
			key_name = ${name},
			locator1 = "ObjectAdmin#TABLE_LIST_TITLE");

		AssertTextEquals(
			key_text = "Name",
			locator1 = "TextInput#ANY",
			value1 = ${name});

		AssertTextEquals(
			key_text = "From Address",
			locator1 = "TextInput#ANY",
			value1 = ${fromAddress});

		AssertTextEquals(
			key_text = "From Name",
			locator1 = "TextInput#ANY",
			value1 = ${fromName});

		if (isSet(description)) {
			AssertTextEquals(
				key_text = "description",
				locator1 = "TextArea#ANY",
				value1 = ${description});
		}

		if (isSet(entryTo)) {
			AssertTextEquals(
				key_text = "To",
				locator1 = "TextInput#ANY",
				value1 = ${entryTo});
		}

		if (isSet(cc)) {
			AssertTextEquals(
				key_text = "CC",
				locator1 = "TextInput#ANY",
				value1 = ${cc});
		}

		if (isSet(bcc)) {
			AssertTextEquals(
				key_text = "BCC",
				locator1 = "TextInput#ANY",
				value1 = ${bcc});
		}

		if (isSet(subject)) {
			AssertTextEquals(
				key_text = "Subject",
				locator1 = "TextInput#ANY",
				value1 = ${subject});
		}

		if (isSet(externalReferenceCode)) {
			AssertElementPresent(
				key_externalReferenceCode = ${externalReferenceCode},
				locator1 = "ObjectAdmin#EXTERNAL_REFERENCE_CODE_HEADER");
		}

		if (isSet(emailBody)) {
			SelectFrame(locator1 = "IFrame#IFRAME");

			AssertElementPresent(
				key_text = ${emailBody},
				locator1 = "CKEditor#BODY_TEXT");
		}
	}

}