definition {

	macro assertColumnNotPresent {
		AssertElementNotPresent(
			key_field = "${key_field}",
			locator1 = "FrontendDataSet#TABLE_ITEM_COLUMN");
	}

	macro assertColumnPresent {
		AssertElementPresent(
			key_field = "${key_field}",
			locator1 = "FrontendDataSet#TABLE_ITEM_COLUMN");
	}

	macro assertCustomViewName {
		AssertElementPresent(
			locator1 = "FrontendDataSet#SELECT_CUSTOM_VIEW",
			value1 = "${key_nameCustomView}");
	}

	macro assertFilterSummaryLabel {
		AssertElementPresent(
			locator1 = "FrontendDataSet#FILTER_SUMMARY_LABEL",
			value1 = "${key_filter}");
	}

	macro assertMenuItem {
		AssertElementPresent(
			key_itemName = "${key_menuItem}",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");
	}

	macro changeCustomView {
		Click(locator1 = "FrontendDataSet#SELECT_CUSTOM_VIEW");

		Click(
			key_optionName = "${key_itemName}",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");
	}

	macro compareValue {
		var dataSetValue1 = FDSCustomView.getValueByPosition(
			columnIndex = "${key_columnIndex}",
			valueIndex = "${key_valueIndex1}");
		var dataSetValue2 = FDSCustomView.getValueByPosition(
			columnIndex = "${key_columnIndex}",
			valueIndex = "${key_valueIndex2}");

		TestUtils.isGreaterThan(
			actual = "${dataSetValue1}",
			expected = "${dataSetValue2}");
	}

	macro createNewView {
		Click(locator1 = "FrontendDataSet#SELECT_OPTION_HEADER");

		Click(
			key_itemName = "Save View As...",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");

		Type(
			locator1 = "FrontendDataSet#INPUT_CUSTOM_VIEW_NAME",
			value1 = "${key_nameView}");

		Click(
			key_name = "Save",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");
	}

	macro deleteView {
		Click(locator1 = "FrontendDataSet#SELECT_OPTION_HEADER");

		Click(
			key_itemName = "Delete View",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");

		AssertTextEquals(
			locator1 = "Modal#BODY",
			value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Click(
			key_text = "Delete",
			locator1 = "Modal#MODAL_FOOTER_BUTTON");
	}

	macro getValueByPosition {
		var key_columnIndex = "${columnIndex}";
		var key_valueIndex = "${valueIndex}";
		var dataSetValue = selenium.getText("FrontendDataSet#TABLE_CELL");

		return "${dataSetValue}";
	}

	macro saveCustomView {
		Click(locator1 = "FrontendDataSet#SELECT_OPTION_HEADER");

		Click(
			key_itemName = "Save View",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");
	}

	macro saveViewAs {
		Click(locator1 = "FrontendDataSet#SELECT_CUSTOM_VIEW");

		Click(
			key_itemName = "Save View As",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");

		Type(
			locator1 = "FrontendDataSet#INPUT_CUSTOM_VIEW_NAME",
			value1 = "${key_nameView}");

		Click(
			key_name = "Save",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");
	}

	macro selectColumn {
		Click(
			ariaLabel = "Open Fields Menu",
			locator1 = "Button#ANY_WITH_ARIA_LABEL");

		Click(
			key_itemName = "${key_itemName}",
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW");
	}

	macro selectView {
		Click(
			locator1 = "FrontendDataSet#SELECT_OPTION_CUSTOM_VIEW",
			value1 = "${key_itemName}");
	}

}