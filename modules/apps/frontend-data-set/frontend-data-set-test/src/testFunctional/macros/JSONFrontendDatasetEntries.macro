definition {

	@summary = "This calls the JSON WS API to add a DataSet"
	macro _createDatasetEntry {
		Variables.assertDefined(parameterList = "${datasetName},${restApplication},${restEndpoint},${restSchema}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/c/fdsentries \
				-u ${userEmailAddress}:${userPassword} \
				-H accept: application/json \
				-H Content-Type: application/json \
				-d {
					"label": "${datasetName}",
					"restApplication": "${restApplication}",
					"restEndpoint": "${restEndpoint}",
					"restSchema": "${restSchema}"
				}
		''';

		JSONCurlUtil.post(${curl});

		var datasetEntriestIdList = JSONFrontendDatasetEntries._getDatasetEntryIds();

		if (${datasetEntriestIdList} == "") {
			fail("FAIL. No Dataset entry was created");
		}
	}

	macro _createFDSViewViaAPI {
		Variables.assertDefined(parameterList = "${datasetName},${dataSetViewName}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		if (!(isSet(dataSetViewDescription))) {
			var dataSetViewDescription = "";
		}

		var datasetEntryId = JSONFrontendDatasetEntries._getDatasetEntryIdByName(datasetName = ${datasetName});

		if (${datasetEntryId} != "") {
			var curl = '''
				${portalURL}/o/c/fdsviews \
					-u ${userEmailAddress}:${userPassword} \
					-H accept: application/json \
					-H Content-Type: application/json \
					-d {
						"symbol": "catalog",
						"description": "${dataSetViewDescription}",
						"defaultItemsPerPage": 0,
						"listOfItemsPerPage": "string",
						"label": "${dataSetViewName}",
						"r_fdsEntryFDSViewRelationship_c_fdsEntryId": ${datasetEntryId}
					}
			''';

			JSONCurlUtil.post(${curl});
		}
		else {
			echo("FAIL. No datasets was found");
		}
	}

	@summary = "This calls the JSON WS API to delete all data sets"
	macro _deleteFDSEntry {
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		if (!(isSet(datasetEntriesIdList))) {
			var datasetEntriesIdList = JSONFrontendDatasetEntries._getDatasetEntryIds();
		}

		if (${datasetEntriesIdList} != "") {
			for (var dataSetEntryId : list ${datasetEntriesIdList}) {
				var curl = '''
					${portalURL}/o/c/fdsentries/${dataSetEntryId} \
						-u ${userEmailAddress}:${userPassword}
				''';

				JSONCurlUtil.delete(${curl});
			}
		}
		else {
			echo("FAIL. No Datasets entries to be deleted");
		}
	}

	macro _getDatasetEntryIdByName {
		Variables.assertDefined(parameterList = ${datasetName});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/c/fdsentries \
				-u ${userEmailAddress}:${userPassword}
		''';

		var datasetEntryId = JSONCurlUtil.get(${curl}, "$.items[?(@.label=='${datasetName}')].id");

		if (${datasetEntryId} == "") {
			fail("FAIL. No datasets was found");
		}
		else {
			return ${datasetEntryId};
		}
	}

	macro _getDatasetEntryIds {
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/o/c/fdsentries \
				-u ${userEmailAddress}:${userPassword}
		''';

		var siteId = JSONCurlUtil.get(${curl}, "$..items[0].creator.id");

		var datasetEntryIds = JSONCurlUtil.get(${curl}, "$.items[?(@.id!='${siteId}')].id");

		if (${datasetEntryIds} == "") {
			fail("FAIL. No datasets was found");
		}
		else {
			return ${datasetEntryIds};
		}
	}

}