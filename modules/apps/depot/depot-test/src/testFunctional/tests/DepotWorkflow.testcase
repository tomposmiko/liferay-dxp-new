@component-name = "portal-document-management"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		JSONGroup.addGroup(groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that the approved image from a depot is available to use in its connected site."
	@ignore = "true"
	@priority = "5"
	test ApproveImage {
		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		AssertTextEquals(
			key_dmDocumentTitle = "Document_1.jpg",
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_WORKFLOW_STATUS",
			value1 = "Pending");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "site-name");

		BlogsNavigator.gotoAddEntry();

		BlogsNavigator.gotoSelectFile();

		ItemSelector.changeWorkspaces(
			navTab = "Documents and Media",
			workspacesType = "Repository");

		LexiconCard.clickCard(card = "Test Depot Name");

		LexiconCard.clickCard(card = "DM Folder Name");

		AssertElementNotPresent(
			key_imageFileName = "Document_1.jpg",
			locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCPStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Document_1.jpg");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "site-name");

		BlogsNavigator.gotoAddEntry();

		BlogsNavigator.gotoSelectFile();

		ItemSelector.selectRepositoryImage(
			depotName = "Test Depot Name",
			folderName = "DM Folder Name",
			imageFileName = "Document_1.jpg",
			navTab = "Documents and Media");
	}

	@description = "This ensures that the approved WC article from a depot is available to use in its connected site."
	@ignore = "true"
	@priority = "5"
	test ApproveWCArticle {
		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			available = "false",
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			webContentSelectWCFile = "WC Depot WebContent",
			webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title",
			webContentTitle = "WC WebContent Title");

		PortletEntry.submitForPublication();
	}

	@description = "This ensures that the approved WC article in folder from a depot is available to use in its connected site."
	@ignore = "true"
	@priority = "5"
	test ApproveWCInFolder {
		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name");

		WebContentFolder.configureWorkflowCP(
			folderName = "WC Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			available = "false",
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			folderName = "WC Folder Name",
			structureName = "WC Structure Name",
			webContentSelectWCFile = "WC Depot WebContent",
			webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			folderName = "WC Folder Name",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();
	}

	@description = "This ensures that the resubmitted document from a depot is available to use in its connected site."
	@ignore = "true"
	@priority = "5"
	test RejectAndResubmitDocument {
		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMFolder.configureWorkflowCP(
			dmDocumentTypeName = "Basic Document",
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Specific Restrictions");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Document_1.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		DMDocument.editDocument(
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "Document_2.doc");

		Button.clickSubmitForPublication();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Document_2.doc",
			workflowAssetType = "Document",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_2.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Document_2.doc",
			workflowAssetType = "Document",
			workflowTask = "Review");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCPStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Document_2.doc");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Documents and Media",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "DocumentsAndMedia",
			folderName = "DM Folder Name",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentDocumentsAndMedia = "Document_2.doc",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();
	}

	@description = "This ensures that the resubmitted WC article from a depot is available to use in its connected site."
	@ignore = "true"
	@priority = "5"
	test RejectAndResubmitWC {
		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		WebContent.editInReview(
			dropdownItem = "My Workflow Tasks",
			webContentTitleEdit = "Depot WebContent Title Edit");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title Edit");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title Edit",
			webContentTitle = "WC WebContent Title");

		PortletEntry.submitForPublication();
	}

}