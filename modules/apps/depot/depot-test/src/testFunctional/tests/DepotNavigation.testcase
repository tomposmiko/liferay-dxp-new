@component-name = "portal-document-management"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that a depot can be accessed from a connected site to create shortcut."
	@priority = "5"
	test AccessViaShortcut {
		JSONGroup.addGroup(groupName = "Site Name");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(
			connectSite = "true",
			siteList = "Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addDMShortcutCP(
			depotName = "Test Depot Name",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@description = "This ensures that a user can redirect to the repository via Space icon."
	@priority = "5"
	test AccessViaSiteNavigation {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		Navigator.openURL();

		DepotNavigator.gotoDepotViaSpaceIcon(depotName = "Test Depot Name");

		ProductMenuHelper.expandPanel(panel = "Site Administration");

		AssertTextEquals.assertPartialText(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME",
			value1 = "Test Depot Name");
	}

	@description = "This test covers LPS-104832. It ensures that the repositories can not connect to repositories."
	@priority = "5"
	test ViewRestrictionWhenConnectingSites {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Button.clickAdd();

		SelectFrame(locator1 = "IFrame#SELECT_SITES");

		AssertVisible(
			key_navItem = "Recent",
			locator1 = "NavBar#NAV_ITEM_LINK",
			value1 = "Recent");

		AssertVisible(
			key_navItem = "My Sites",
			locator1 = "NavBar#NAV_ITEM_LINK",
			value1 = "My Sites");

		AssertElementNotPresent(
			key_navItem = "Repositories",
			locator1 = "NavBar#NAV_ITEM_LINK");
	}

}