@component-name = "portal-document-management"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();

			Site.tearDownCP();
		}
	}

	@description = "This ensures that a depot can be connected to different types of sites."
	@priority = "5"
	test AddMultipleSites {
		Site.openSitesAdmin();

		Site.addBlankCP(
			membershipType = "Private",
			siteName = "Private Site Name");

		Site.openSitesAdmin();

		Site.addBlankCP(
			membershipType = "Restricted",
			siteName = "Restricted Site Name");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name,Private Site Name,Restricted Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.viewConnectedSite(
			depotName = "Test Depot Name",
			siteList = "Site Name,Private Site Name,Restricted Site Name");
	}

	@description = "This asserts that a deactivated site is still shown in connected sites and a deleted site is removed from connected sites."
	@priority = "4"
	test DeactivateAndDeleteSite {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.viewConnectedSite(
			depotName = "Test Depot Name",
			siteList = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.deactivateCP(
			siteName = "Site Name",
			successMessage = "true");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		// we need to add an assertion for the label that will later be developed and update the test description

		Depot.viewConnectedSite(
			depotName = "Test Depot Name",
			siteList = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.deleteCP(siteName = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.viewNoConnectedSiteCP();
	}

	@description = "This ensures that the disconnected site can not access the the depot."
	@priority = "5"
	test DisconnectFromSite {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.disconnectSite(siteList = "Site Name");

		Depot.viewNoConnectedSiteCP();
	}

	@description = "This ensures that a depot web content can be searched on a connected site when searching is reenabled."
	@priority = "5"
	test ReenableSearchability {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Searchable",
			siteList = "Site Name",
			tableEntryText = "Yes");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "WC WebContent Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "WC WebContent Title");
	}

	@description = "This ensures that users can search for depot document from connected site."
	@priority = "5"
	test SearchForDocument {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "DM Document Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "DM Document Title");
	}

	@description = "This ensures that a depot document cannot be searched from the disconnected site."
	@priority = "5"
	test SearchForDocumentFromDisconnectedSite {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM Document Title");
	}

	@description = "This ensures that a depot document associated with a tag can be searched from the connected site."
	@priority = "5"
	test SearchForTag {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title",
			tagNameList = "depot");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "depot");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "DM Document Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "DM Document Title");
	}

	@description = "This ensures that a depot document cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	test SearchForUnsearchableDocument {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM Document Title");
	}

	@description = "This ensures that a depot content associated with the user cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	test SearchForUnsearchableUser {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "TEST TEST");

		AssertElementNotPresent(
			key_searchAssetTitle = "DM Document Title",
			key_searchAssetType = "Document",
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE_SPECIFIC");

		AssertElementNotPresent(
			key_searchAssetTitle = "WC WebContent Title",
			key_searchAssetType = "Web Content Article",
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE_SPECIFIC");
	}

	@description = "This ensures that a depot web content cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	test SearchForUnsearchableWC {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "WC WebContent Title");
	}

	@description = "This ensures that a depot content associated with the user can be searched with from the connected site."
	@priority = "5"
	test SearchForUser {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "TEST TEST");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");
	}

	@description = "This ensures that a depot web content can be searched from the connected site."
	@priority = "5"
	test SearchForWebContent {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "WC WebContent Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "WC WebContent Title");
	}

	@description = "This ensures that a depot can be connected to the site."
	@priority = "5"
	test Smoke {
		property portal.acceptance = "true";

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.viewConnectedSite(
			depotName = "Test Depot Name",
			siteList = "Site Name");
	}

	@description = "This ensures that a connected site can access the depot document."
	@priority = "5"
	test ViewDocumentFromAnotherSite {
		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@description = "This ensures that a connected child site can access the depot image."
	@priority = "5"
	test ViewImageFromChildSite {
		JSONGroup.addChildSite(
			groupName = "Child Site Name",
			parentGroupName = "Site Name");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoEdit(depotName = "Test Depot Name");

		DepotNavigator.gotoSites(depotName = "Test Depot Name");

		Depot.connectSite(siteList = "Child Site Name");

		ProductMenu.gotoSite(site = "Child Site Name");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepot(
			depotName = "Test Depot Name",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.jpg");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.jpg");
	}

}