@component-name = "portal-liferay-online"
definition {

	property osgi.modules.includes = "site-initializer-team-extranet";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Team Extranet";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Team Extranet Site") {
			ApplicationsMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			Site.addSiteTemplateCP(
				siteName = "Test Site Team Extranet",
				siteTemplateName = "Team Extranet");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Team Extranet");
		}
	}

	@description = "This is a test for LPS-142641. Create a Site based on Team-Extranet"
	@priority = "5"
	test AddTeamExtranetSite {
		property portal.acceptance = "true";

		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Assert the Team Extranet Welcome Page is present") {
			AssertElementPresent(
				key_title = "Welcome to the team!",
				locator1 = "TeamExtranet#FRAGMENT_HEADER");
		}
	}

	@description = "This is a test for LPS-144166. Verify the Blog Entry DPT on Landscape Phone Size"
	@priority = "4"
	test BlogEntryDPTOnLandscapePhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Blog Entry") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Blog Entry");
		}

		task ("Go to Preview Mode in Landscape Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Landscape Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Blog Entry DPT on Portrait Phone Size"
	@priority = "4"
	test BlogEntryDPTOnPortraitPhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Blog Entry") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Blog Entry");
		}

		task ("Go to Preview Mode in Portrait Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Portrait Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Blog Entry DPT on Tablet Size"
	@priority = "4"
	test BlogEntryDPTOnTabletSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Blog Entry") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Blog Entry");
		}

		task ("Go to Preview Mode in Tablet") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Tablet",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144156. Can Set a Hosted Video URL on a Team Extranet Fragment Video"
	@priority = "4"
	test CanSetAHostedVideoURL {
		task ("Create a new Page by Json") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Team Extranet",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("Drag and Drop the Video fragment and Set the Hosted URL") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Team Extranet");

			PageEditor.addFragment(
				collectionName = "Components",
				fragmentName = "Video");

			PageEditor.gotoConfiguration(fragmentName = "Video");

			PageEditor.addVideoFragmentURL(videoLink = "http://localhost:8080/webdav/test-site-team-extranet/document_library/home_video.mp4");
		}

		task ("Preview the Page and Assert the fragment is present") {
			Masterclass.previewPageandAssertFragment(fragmentName = "video");
		}
	}

	@description = "This is a test for LPS-144156. Can Set a Non-Hosted Video URL on a Team Extranet Fragment Video"
	@priority = "4"
	test CanSetANonHostedVideoURL {
		task ("Create a new Page by Json") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Team Extranet",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("Drag and Drop the Video fragment and Set the Hosted URL") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Team Extranet");

			PageEditor.addFragment(
				collectionName = "Components",
				fragmentName = "Video");

			PageEditor.gotoConfiguration(fragmentName = "Video");

			PageEditor.addVideoFragmentURL(videoLink = "https://www.youtube.com/watch?v=2EPZxIC5ogU");
		}

		task ("Preview the Page and Assert the fragment is present") {
			Masterclass.previewPageandAssertFragment(fragmentName = "video");

			YoutubePortlet.assertVideoTitle(videoTitle = "Life at Liferay - A Look into Liferay Culture");
		}
	}

	@description = "This is a test for LPS-144166. Verify the Home page on Desktop Size"
	@priority = "4"
	test HomePageOnDesktopSize {
		task ("Open to Edit the Home Page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Test Site Team Extranet");
		}

		task ("Go to Preview Mode in Desktop") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Desktop",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,video,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Home page on Landscape Phone Size"
	@priority = "4"
	test HomePageOnLandscapePhoneSize {
		task ("Open to Edit the Home Page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Test Site Team Extranet");
		}

		task ("Go to Preview Mode in Landscape Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Landscape Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,video,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Home page on Portrait Phone Size"
	@priority = "4"
	test HomePageOnPortraitPhoneSize {
		task ("Open to Edit the Home Page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Test Site Team Extranet");
		}

		task ("Go to Preview Mode in Desktop") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Portrait Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,video,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Home page on Tablet Size"
	@priority = "4"
	test HomePageOnTabletSize {
		task ("Open to Edit the Home Page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Test Site Team Extranet");
		}

		task ("Go to Preview Mode in Tablet") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Tablet",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,header,video,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Job Position DPT on Desktop Size"
	@priority = "4"
	test JobPositionDPTOnDesktopSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Job Position") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Job Position");
		}

		task ("Go to Preview Mode in Desktop") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Desktop",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Job Position DPT on Landscape Phone Size"
	@priority = "4"
	test JobPositionDPTOnLandscapePhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Job Position") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Job Position");
		}

		task ("Go to Preview Mode in Landscape Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Landscape Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Job Position DPT on Portrait Phone Size"
	@priority = "4"
	test JobPositionDPTOnPortraitPhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Job Position") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Job Position");
		}

		task ("Go to Preview Mode in Portrait Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Portrait Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Job Position DPT on Tablet Size"
	@priority = "4"
	test JobPositionDPTOnTabletSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Job Position") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Job Position");
		}

		task ("Go to Preview Mode in Tablet") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Tablet",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-142641. Verify the Stylebook One is marked as default and includes a thumbnail"
	@priority = "4"
	test StylebookOneIsDefaultAndIncludesAThumbnail {
		task ("Go to Style Books and Assert the Stylebook One Card") {
			StyleBooksAdmin.openStyleBooksAdmin(siteURLKey = "test-site-team-extranet");

			StyleBooksAdmin.viewStyleBooksPresent(styleBookName = "Stylebook One");
		}

		task ("Assert the Stylebook One is Masked as Default") {
			LexiconCard.viewCardSticker(
				card = "Stylebook One",
				icon = "check-circle");
		}
	}

	@description = "This is a test for LPS-144166. Verify the Team Member DPT on Desktop Size"
	@priority = "4"
	test TeamMemberDPTOnDesktopSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Team Member") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Team Member");
		}

		task ("Go to Preview Mode in Desktop") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Desktop",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,member-header,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Team Member DPT on Landscape Phone Size"
	@priority = "4"
	test TeamMemberDPTOnLandscapePhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Team Member") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Team Member");
		}

		task ("Go to Preview Mode in Landscape Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Landscape Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,member-header,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Team Member DPT on Portrait Phone Size"
	@priority = "4"
	test TeamMemberDPTOnPortraitPhoneSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Team Member") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Team Member");
		}

		task ("Go to Preview Mode in Portrait Phone") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Portrait Phone",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,member-header,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-144166. Verify the Team Member DPT on Tablet Size"
	@priority = "4"
	test TeamMemberDPTOnTabletSize {
		task ("Go to Team Extranet Site") {
			ApplicationsMenu.gotoSite(site = "Test Site Team Extranet");
		}

		task ("Go to Display Page Templates and Team Member") {
			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			NavItem.gotoPageTemplates();

			Navigator.gotoNavTab(navTab = "Display Page Templates");

			LexiconEntry.gotoEntry(rowEntry = "Team Member");
		}

		task ("Go to Preview Mode in Tablet") {
			PageEditor.openPreviewMode();

			PageEditor.switchViewport(
				deviceType = "Tablet",
				modal = "true");
		}

		task ("Assert the Elements are Visible in Frame") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			for (var fragmentName : list "navbar,member-header,heading,card,footer") {
				AssertVisible(
					fragmentName = "${fragmentName}",
					index = "1",
					locator1 = "Fragment#FRAGMENT_BODY");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Categories"
	@priority = "3"
	test ViewTeamExtranetCategories {
		task ("Go to Team Extranet Categories") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the Regions Categories are present") {
			for (var categoryName : list "Asia Pacific,Europe,Latin America,Middle East & Africa,North America") {
				Category.viewCP(
					categoryName = "${categoryName}",
					vocabularyName = "Regions");
			}
		}

		task ("Go to Roles and Assert the Categories are Presente") {
			Click(
				categoryName = "Roles",
				locator1 = "ContentDashboard#CATEGORY_NAME_ELEMENT");

			for (var categoryName : list "Product Management,Marketing,Product Design") {
				Category.viewCP(
					categoryName = "${categoryName}",
					vocabularyName = "Roles");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Collections"
	@priority = "3"
	test ViewTeamExtranetCollections {
		task ("Go to Team Extranet Collections") {
			AssetListsAdmin.openAssetListsAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the Collections are present") {
			for (var key_title : list "Blog Entries,Featured Blog Entries,Team Members,Job Positions") {
				AssertElementPresent(
					key_title = "${key_title}",
					locator1 = "ItemSelector#LOCATION_INFO_LIST_GENERIC");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Documents and Media"
	@priority = "4"
	test ViewTeamExtranetDocumentsAndMedia {
		task ("Go to Team Extranet Documents and Media") {
			DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the 22 Documents are present") {
			Pagination.changePagination(itemsPerPage = "40");

			for (var key_card : list "site_logo_i.svg,member_peter_doe.jpg,member_kristin_watson.jpg,member_jerome_bell.jpg,member_jacob_jones.jpg,member_esther_howard.jpg,member_brooklyn_simmons.jpg,member_arlene_maccoy.jpg,member_albert_frank.jpg,home_video.mp4,entry_10.jpg,entry_09.jpg,entry_08.jpg,entry_07.jpg,entry_06.jpg,entry_05.jpg,entry_04.jpg,entry_03.jpg,entry_02.jpg,entry_01.jpg,arrow_down.svg") {
				AssertElementPresent(
					key_card = "${key_card}",
					locator1 = "Card#CARD_TITLE");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Fragments"
	@priority = "4"
	test ViewTeamExtranetFragments {
		task ("Go to Team Extranet Fragments Collections") {
			FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the Fragments Collections are present") {
			for (var key_card : list "Image,Blog Header,Footer,Heading,Text Block,Main Navbar,Parallax Container,Class Container,Link,Video,Button,Member Header,Job Card,Member Card,Social Links,Entry Card,Home Header,Entry Header") {
				AssertElementPresent(
					key_card = "${key_card}",
					locator1 = "Card#CARD_TITLE");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Pages"
	@priority = "4"
	test ViewTeamExtranetPages {
		task ("Go to Team Extranet Pages") {
			PagesAdmin.openPagesAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the Team Extranet Pages are present") {
			for (var pageName : list "Home,Team,Careers,Blog,Resources,Privacy Policy,Cookie Settings") {
				AssertVisible(
					key_itemName = "${pageName}",
					locator1 = "PagesAdmin#LIST_GROUP_ITEM");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Page Templates"
	@priority = "4"
	test ViewTeamExtranetPageTemplates {
		task ("Go to Masters Page Templates in Team Extranet Site") {
			MastersPageTemplatesAdmin.openMastersAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert Masters Page Templates are present") {
			for (var masterLayoutName : list "Blank,Master") {
				MastersPageTemplatesAdmin.viewMastersPresent(masterLayoutName = "${masterLayoutName}");
			}
		}

		task ("Go to Display Page Templates in Team Extranet Site") {
			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert Display Page Templates are present") {
			for (var displayPageName : list "Blog Entry,Job Position,Team Member") {
				DisplayPageTemplatesAdmin.viewDisplayPagePresent(displayPageName = "${displayPageName}");
			}
		}
	}

	@description = "This is a test for LPS-142641. View the Team Extranet Web Content"
	@priority = "4"
	test ViewTeamExtranetWebContent {
		task ("Go to Team Extranet Web Content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-team-extranet");
		}

		task ("Assert the 8 Team Members in Web Content are present") {
			WebContentFolder.gotoCP(
				folderName = "Team Members",
				webContentTitle = "Team Members");

			for (var webContentTitle : list "Jerome Bell,Jane Cooper,Esther Howard,Kristin Watson,Jacob Jones,Arlene MacCoy,Jacob Jones,Brooklyn Simmons") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}
		}

		task ("Assert the 9 Job Positions in Web Content are present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-team-extranet");

			WebContentFolder.gotoCP(
				folderName = "Job Positions",
				webContentTitle = "Job Positions");

			for (var webContentTitle : list "Senior Design Manager,SEO Specialist,Banking Product Manager,Junior Visual Designer,Marketing Lead,Principal Product Manager,Senior Product Designer,E-Commerce Marketing Specialist,Growth Product Manager") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}
		}

		task ("Assert the 9 Blog Entries in Web Content are present") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-team-extranet");

			WebContentFolder.gotoCP(
				folderName = "Blog Entries",
				webContentTitle = "Blog Entries");

			for (var webContentTitle : list "25 management tips from top industry experts,00 20 gifts you can give to your marketing boss,What the best Management pros do (and you should too),Great people doing a great job in the design industry,When professionals run into problems with marketing,5 tools everyone in the design industry should be using,Meet the Steve Jobs of the marketing industry") {
				WebContent.viewTitle(webContentTitle = "${webContentTitle}");
			}

			WebContent.viewTitle(
				webContentTitle = '''The worst advice we've ever heard about management''',
				webContentTitleEscapeCharacter = '''The worst advice we&#39;ve ever heard about management''');

			WebContent.viewTitle(
				webContentTitle = '''Think you're cut out for doing management?''',
				webContentTitleEscapeCharacter = '''Think you&#39;re cut out for doing management?''');
		}

		task ("Go to Structures tab and assert the 3 Structures Names are present") {
			NavItem.gotoStructures();

			for (var webContentTitle : list "Position,Member,Entry") {
				WebContentStructures.viewCP(structureName = "${structureName}");
			}
		}

		task ("Go to Templates tab and assert the 3 Templates Cards are present") {
			Navigator.gotoNavItem(navItem = "Templates");

			for (var templateName : list "Position,Member,Entry") {
				WebContentTemplates.viewCardsEntryCP(templateName = "${templateName}");
			}
		}
	}

}