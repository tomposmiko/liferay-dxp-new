@component-name = "portal-solutions"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife D2C";

	var testSiteName = "Raylife D2C";
	var testSiteURL = "raylife-d2c";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Raylife.createRaylifeSite(siteName = ${testSiteName});
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Raylife.tearDownCP();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "LPS-144339 - Verify if in the Re-enter Password field the passwords must be the same"
	@priority = 4
	test ArePasswordTheSame {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#ArePasswordTheSame";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Click(
			key_text = "CREATE NEW ACCOUNT",
			locator1 = "Button#ANY");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@123");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test123");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#VALIDATION_UNCHECKED",
			text = "Passwords are the same");
	}

	@description = "LPS-144342 - Verify if when users complete the account creation section, that completed section is indicated with a green checkmark"
	@priority = 3
	test CreateAccountSectionCompleted {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#CreateAccountSectionCompleted";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			locator1 = "RaylifeCreateAccount#EMAIL_FIELD",
			value1 = "test@liferay.com");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@123");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@123");

		Click(locator1 = "RaylifeCreateAccount#CREATE_ACCOUNT");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#PANEL_SUCCESS",
			title = "Create");
	}

	@description = "LPS-144331 - Verify e-mail validation is required (Must have '@' and a '.' )"
	@priority = 5
	test ErrorMessageAppearInEmailField {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#ErrorMessageAppearInEmailField";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			locator1 = "RaylifeCreateAccount#EMAIL_FIELD",
			value1 = "testliferaycom");

		AssertElementPresent(locator1 = "Raylife#ERROR_MESSAGE");
	}

	@description = "Story ID: LPS-135237 | Test Summary: Verify if after filling in the password and the email with all correct information, the create account button is active"
	@priority = 5
	test IsCreateAccountButtonActive {
		property solutions.acceptance = "true";
		property test.name.skip.portal.instance = "RaylifeCreateAccount#IsAccountButtonActive";

		task ("Given I go through all the forms Raylife basic, commercial, employees and properties") {
			ApplicationsMenu.gotoSite(key_site = ${testSiteName});

			RaylifeHomePage.startFlow();

			RaylifeContactInfo.typeAllBasicsInfoFields();

			Raylife.clickAtButton(text = "Continue");

			RaylifeBusiness.typeAllBusinessInfoFields();

			Raylife.clickAtButton(text = "Continue");

			RaylifeEmployees.typeAllEmployeesInfoFields();

			Raylife.clickAtButton(text = "Continue");

			RaylifeProperty.typeAllPropertyInfoFields();

			Raylife.clickAtButton(text = "Continue");
		}

		task ("And I select a quotation") {
			Raylife.selectTheQuote(quoteOption = "standard");
		}

		task ("When I fill in all the required fields") {
			RaylifeCreateAccount.createAccount();
		}

		task ("Then I should be able to assert that the Create Account button is enabled") {
			RaylifeCreateAccount.assertTheButtonIsEnabled();
		}
	}

	@description = "LPS-144333 - Verify if the create account button is disabled"
	@priority = 3
	test IsCreateAccountButtonDisabled {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#IsCreateAccountButtonDisabled";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Click(
			key_text = "CREATE NEW ACCOUNT",
			locator1 = "Button#ANY");

		AssertElementPresent(locator1 = "RaylifeCreateAccount#CREATE_ACCOUNT_DISABLED");
	}

	@description = "LPS-144335 - Verify that when entering a 7-character password the message 'At least 8 characters' is highlighted"
	@priority = 4
	test IsEightCharactersRequired {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#IsEightCharactersRequired";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@12");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@12");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#VALIDATION_UNCHECKED",
			text = "8 characters");
	}

	@description = "LPS-144336 - Verify that when entering a password with repeated numbers and letters the message 'At least 5 unique characters' is highlighted"
	@priority = 4
	test IsFiveUniqueCharactersRequired {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#IsFiveUniqueCharactersRequired";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@12");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@12");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#VALIDATION_CHECKED",
			text = "5 unique characters");
	}

	@description = "LPS-144337 - Verify that when entering a password with only letters and numbers the message 'At least 1 symbol' is highlighted"
	@priority = 4
	test IsOneSymbolRequired {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#IsOneSymbolRequired";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test1234");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test1234");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#VALIDATION_UNCHECKED",
			text = "1 symbol");
	}

	@description = "LPS-144338 - Verify that when entering the password with spaces the message 'No spaces allowed' is highlighted"
	@priority = 4
	test NoSpacesAreAllowed {
		property test.name.skip.portal.instance = "RaylifeCreateAccount#NoSpacesAreAllowed";

		ApplicationsMenu.gotoSite(key_site = ${testSiteName});

		RaylifeHomePage.startFlow();

		RaylifeContactInfo.typeAllBasicsInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeBusiness.typeAllBusinessInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeEmployees.typeAllEmployeesInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		RaylifeProperty.typeAllPropertyInfoFields();

		Click(locator1 = "Raylife#BUTTON_CONTINUE");

		Click(
			locator1 = "RaylifeCreateAccount#SELECT_QUOTE",
			title = "standard");

		Type(
			label = "password",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@ 123");

		Click(locator1 = "RaylifeCreateAccount#CREATE_NEW_ACCOUNT");

		Type(
			label = "rePassword",
			locator1 = "RaylifeCreateAccount#PASSWORD_FIELD",
			value1 = "test@ 123");

		AssertElementPresent(
			locator1 = "RaylifeCreateAccount#VALIDATION_UNCHECKED",
			text = "No spaces");
	}

}