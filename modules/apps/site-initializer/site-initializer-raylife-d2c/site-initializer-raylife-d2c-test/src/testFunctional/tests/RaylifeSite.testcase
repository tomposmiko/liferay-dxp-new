@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "site-initializer-raylife-d2c";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife D2C";

	var testSiteName = "Raylife D2C";
	var testSiteURL = "raylife-d2c";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Raylife.tearDownCP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "LPS-155319 - Verify that when Raylife D2C is created, the Objects APIs are created"
	@priority = "5"
	test AllObjectsIsCreatedForRaylifeD2c {
		property test.name.skip.portal.instance = "RaylifeSite#AllObjectsIsCreatedForRaylifeD2c";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Add site Raylife D2C") {
			Raylife.createRaylifeSite(siteName = "${testSiteName}");
		}

		task ("Assert all object for Raylife D2C") {
			Raylife.assertAllObjectsForRaylifeD2c();
		}
	}

	@description = "Verify if Raylife can be created"
	@priority = "5"
	test CanRaylifeBeCreated {
		property test.name.skip.portal.instance = "RaylifeSite#CanRaylifeBeCreated";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Create a new Raylife D2C Site") {
			Site.openSitesAdmin();

			Site.addSiteTemplateCP(
				siteName = "${testSiteName}",
				siteTemplateName = "Raylife D2C");
		}
	}

	@description = "LPS-142178 - Verify if when Raylife is created, a Catalog in Commerce will be created for it as well."
	@priority = "5"
	test CatalogForRaylifeIsCreated {
		property test.name.skip.portal.instance = "RaylifeSite#CatalogForRaylifeIsCreated";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		Raylife.createRaylifeSite(siteName = "${testSiteName}");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Catalogs");

		AssertElementPresent(
			locator1 = "Raylife#TABLE_CATALOG_NAME",
			name = "Raylife");

		Click(
			locator1 = "Raylife#TABLE_CATALOG_NAME",
			name = "Raylife");

		AssertElementPresent(
			locator1 = "Raylife#CATALOG_TITLE",
			title = "Raylife");
	}

	@description = "LPS-142180 - Verify if, when Raylife is created, Products related to Raylife are also created."
	@priority = "5"
	test ProductsForRaylifeIsCreated {
		property test.name.skip.portal.instance = "RaylifeSite#ProductsForRaylifeIsCreated";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		Raylife.createRaylifeSite(siteName = "${testSiteName}");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		while (IsElementNotPresent(locator1 = "Raylife#PRODUCTS_NAME", productList = "General Liability,Professional Liability,Workers Compensation,Business Owners Policy")) {
			Refresh();

			WaitForPageLoad();
		}

		Raylife.viewProductsList(productList = "General Liability,Professional Liability,Workers Compensation,Business Owners Policy");
	}

}