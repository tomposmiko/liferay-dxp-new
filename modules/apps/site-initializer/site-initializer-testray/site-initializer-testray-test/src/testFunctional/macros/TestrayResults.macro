definition {

	macro assertAssignCaseResults {
		Testray.assertItemName(key_name = "${assignName}");
	}

	macro assertStatus {
		AssertElementPresent(
			key_status = "${status}",
			locator1 = "TestrayResults#STATUS_CASE_RESULTS");
	}

	macro assertUnassignCaseResults {
		Testray.assertItemNotPresent(key_name = "${unassign}");
	}

	macro assignUsers {
		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Testray.goToProjectPage(projectName = "${userName}");

		Alert.viewSuccessMessage();
	}

	macro caseResultsMetrics {
		AssertTextEquals(
			locator1 = "TestrayResults#TOTAL_TEST_CASE_RESULTS",
			value1 = "${totalTestCases}");
	}

	macro disableIconAssign {
		AssertElementNotPresent(
			key_iconUser = "${assignIcon}",
			locator1 = "TestrayResults#ICON_ASSIGN_USER");
	}

	macro editTestsCaseResults {
		Select(
			locator1 = "TestrayResults#SELECT_STATUS_CASE_RESULTS",
			value1 = "${typeStatus}");

		Type(
			locator1 = "TestrayResults#INPUT_ISSUES",
			value1 = "${issues}");

		if (isSet(comment)) {
			Type(
				locator1 = "TestrayResults#INPUT_COMMENT",
				value1 = "${comment}");
		}

		Button.click(button = "Save");
	}

	macro enableIconAssign {
		AssertElementPresent(
			key_iconUser = "${assignIcon}",
			locator1 = "TestrayResults#ICON_ASSIGN_USER");
	}

	macro goToCaseResults {
		TestrayRoutines.goToRoutine(routineName = "${caseResultsName}");
	}

}