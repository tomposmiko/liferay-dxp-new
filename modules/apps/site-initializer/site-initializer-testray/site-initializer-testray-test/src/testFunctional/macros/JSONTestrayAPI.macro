definition {

	@summary = "This calls the JSON WS API to get object id"
	macro _getObjectId {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/${object} \
				-u test@liferay.com:test
		''';

		var objectId = JSONCurlUtil.get(${curl}, "$.items[?(@.name=='${objectName}')].id");

		echo(${objectId});

		return ${objectId};
	}

	@summary = "This calls the JSON WS API to get the ID of a Option object"
	macro _getOptionsId {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/factoroptions/?search=${optionsName} \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var factorOptionsId = JSONCurlUtil.get(${curl}, "$.items[?(@.name=='${optionsName}')].id");

		echo(${factorOptionsId});

		return ${factorOptionsId};
	}

	@summary = "This calls the JSON WS API to get the ID of a Project"
	macro _getProjectId {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/projects/?pageSize=150 \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var projectId = JSONCurlUtil.get(${curl}, "$.items[?(@.name=='${projectName}')].id");

		echo(${projectId});

		return ${projectId};
	}

	@summary = "This calls the JSON WS API to get the ID of a Team object"
	macro _getTeamId {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/teams/?search=${teamName} \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var teamId = JSONCurlUtil.get(${curl}, "$.items[?(@.name=='${teamName}')].id");

		echo(${teamId});

		return ${teamId};
	}

	@summary = "This calls the JSON WS API to create a Build object"
	macro createBuildAPI {
		Variables.assertDefined(parameterList = "${buildName},${projectId},${routineId},${productVersionId}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(template))) {
			var template = "";
		}

		if (!(isSet(statusTemplate))) {
			var statusTemplate = "";
		}

		if (!(isSet(gitHash))) {
			var gitHash = "";
		}

		if (!(isSet(buildPromoted))) {
			var buildPromoted = "";
		}

		var curl = '''
			${portalURL}/o/c/builds \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"description": "${description}",
					"template": "${template}",
					"active": "${statusTemplate}",
					"name": "${buildName}",
					"gitHash": "${gitHash}",
					"promoted": "${buildPromoted}",
					"r_projectToBuilds_c_projectId": "${projectId}",
					"r_routineToBuilds_c_routineId": "${routineId}",
					"r_productVersionToBuilds_c_productVersionId": "${productVersionId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Case Results object"
	macro createCaseResultAPI {
		Variables.assertDefined(parameterList = "${buildId},${casesId},${caseResultName},${componentId},${runId}");

		if (!(isSet(key))) {
			var key = "UNTESTED";
		}

		if (!(isSet(statusCaseResult))) {
			var statusCaseResult = "Untested";
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/caseresults \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"dueStatus": {
						"key": "${key}",
						"name": "${statusCaseResult}"
					},
					"name": "${caseResultName}",
					"r_buildToCaseResult_c_buildId": "${buildId}",
					"r_caseToCaseResult_c_caseId": "${casesId}",
					"r_componentToCaseResult_c_componentId": "${componentId}",
					"r_runToCaseResult_c_runId": "${runId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Case Results For Subtask object"
	macro createCaseResultsForSubtaskAPI {
		Variables.assertDefined(parameterList = "${caseResultForSubtask},${caseResultId},${subtaskId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/subtaskscasesresultses \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${caseResultForSubtask}",
					"r_caseResultToSubtasksCasesResults_c_caseResultId": "${caseResultId}",
					"r_subtaskToSubtasksCasesResults_c_subtaskId": "${subtaskId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Case object"
	macro createCasesAPI {
		Variables.assertDefined(parameterList = "${caseName},${caseTypeId},${projectId},${componentId}");

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(estimatedDuration))) {
			var estimatedDuration = "";
		}

		if (!(isSet(priority))) {
			var priority = 3;
		}

		if (!(isSet(steps))) {
			var steps = "";
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/cases \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${caseName}",
					"description": "${description}",
					"estimatedDuration": "${estimatedDuration}",
					"priority": "${priority}",
					"steps": "${steps}",
					"r_caseTypeToCases_c_caseTypeId": "${caseTypeId}",
					"r_componentToCases_c_componentId": "${componentId}",
					"r_projectToCases_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Case Type object"
	macro createCaseTypeAPI {
		Variables.assertDefined(parameterList = ${caseType});

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/casetypes \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${caseType}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Component object"
	macro createComponentAPI {
		Variables.assertDefined(parameterList = "${componentName},${projectId},${teamId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/components \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${componentName}",
					"r_projectToComponents_c_projectId": "${projectId}",
					"r_teamToComponents_c_teamId": "${teamId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Environment Factors object"
	macro createEnvironmentFactorsAPI {
		Variables.assertDefined(parameterList = "${environmentFactorsName},${factorCategoryId},${factorOptionsId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/factors \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${environmentFactorsName}",
					"r_factorCategoryToFactors_c_factorCategoryId": "${factorCategoryId}",
					"r_factorOptionToFactors_c_factorOptionId": "${factorOptionsId}",
					"r_routineToFactors_c_routineId": ${routineId}
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Factor Categories object"
	macro createFactorCategoriesAPI {
		Variables.assertDefined(parameterList = ${categoryName});

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/factorcategories \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${categoryName}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Factor Options object"
	macro createFactorOptionsAPI {
		Variables.assertDefined(parameterList = "${optionsName},${factorCategoryId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/factoroptions \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${optionsName}",
					"r_factorCategoryToOptions_c_factorCategoryId": "${factorCategoryId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Product Version object"
	macro createProductVersionAPI {
		Variables.assertDefined(parameterList = "${productVersion},${projectId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/productversions \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${productVersion}",
					"r_projectToProductVersions_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Project object"
	macro createProjectAPI {
		Variables.assertDefined(parameterList = "${projectName},${projectDescription}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/projects \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${projectName}",
					"description": "${projectDescription}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Requirement object"
	macro createRequirementAPI {
		Variables.assertDefined(parameterList = "${requirementName},${linkTitle},${componentId},${projectId}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(linkURL))) {
			var linkURL = "https://www.google.com/";
		}

		var curl = '''
			${portalURL}/o/c/requirements \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"summary": "${requirementName}",
					"description": "${description}",
					"linkTitle": "${linkTitle}",
					"linkURL": "${linkURL}",
					"r_componentToRequirements_c_componentId": "${componentId}",
					"r_projectToRequirements_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Routine object"
	macro createRoutineAPI {
		Variables.assertDefined(parameterList = "${routineName},${projectId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/routines \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${routineName}",
					"r_routineToProjects_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Run object"
	macro createRunAPI {
		Variables.assertDefined(parameterList = "${runName},${buildId}");

		if (!(isSet(runNumber))) {
			var runNumber = 01;
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/runs \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${runName}",
					"r_buildToRuns_c_buildId": "${buildId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Subtask object"
	macro createSubtaskAPI {
		Variables.assertDefined(parameterList = ${subtaskName});

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(subtaskNumber))) {
			var subtaskNumber = "";
		}

		if (!(isSet(score))) {
			var score = "";
		}

		var curl = '''
			${portalURL}/o/c/subtasks \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"dueStatus": {
						"key": "${key}",
						"name": "${statusSubtask}"
					},
					"number": "${subtaskNumber}",
					"score": "${score}",
					"name": "${subtaskName}",
					"r_taskToSubtasks_c_taskId": "${taskId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Suite object"
	macro createSuiteAPI {
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(typeSuite))) {
			var typeSuite = "";
		}

		var curl = '''
			${portalURL}/o/c/suites \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${suiteName}",
					"description": "${description}",
					"type": "${typeSuite}",
					"r_projectToSuites_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Task object"
	macro createTaskAPI {
		Variables.assertDefined(parameterList = "${taskName},${buildId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/tasks \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"dueStatus": {
						"key": "${key}",
						"name": "${statusTask}"
					},
					"name": "${taskName}",
					"r_buildToTasks_c_buildId": "${buildId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to create a Team object"
	macro createTeamAPI {
		Variables.assertDefined(parameterList = "${teamName},${projectId}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/teams \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"name": "${teamName}",
					"r_projectToTeams_c_projectId": "${projectId}"
				}'
		''';

		var response = JSONCurlUtil.post(${curl}, "$.id");

		echo(${response});

		return ${response};
	}

	@summary = "This calls the JSON WS API to delete an object"
	macro deleteObjectViaAPI {
		var portalURL = JSONCompany.getPortalURL();
		var objectId = JSONTestrayAPI._getObjectId(
			object = ${object},
			objectName = ${objectName});

		var curl = '''
			${portalURL}/o/c/${object}/${objectId} \
				-u test@liferay.com:test
		''';

		JSONCurlUtil.delete(${curl});
	}

	@summary = "This calls the JSON WS API to delete a project"
	macro deleteProject {
		var portalURL = JSONCompany.getPortalURL();
		var projectId = StringUtil.replace(${projectId}, " ", "%20");
		var projectId = JSONTestrayAPI.getProject(projectName = ${projectName});

		echo(${projectId});

		var curl = '''
			${portalURL}/o/c/projects/${projectId} \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		JSONCurlUtil.delete(${curl});
	}

	@summary = "This calls the JSON WS API to get the ID of a project"
	macro getProject {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/c/projects/?search=${projectName} \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var projectId = JSONCurlUtil.get(${curl}, "$.items[?(@.name=='${projectName}')].id");

		echo(${projectId});

		return ${projectId};
	}

}