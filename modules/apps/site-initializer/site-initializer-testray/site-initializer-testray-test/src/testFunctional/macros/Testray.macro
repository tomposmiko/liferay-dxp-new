definition {

	macro addNewComponent {
		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = "${componentName}");

		if (isSet(teamName)) {
			Select(
				key_fieldLabel = "Team",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${teamName}");
		}

		Button.clickSave();
	}

	macro addNewTeam {
		SelectFrame(locator1 = "Testray#MODAL_BODY");

		for (var teamName : list "${teamName}") {
			Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

			SelectFrame(locator1 = "Testray#MODAL_BODY");

			Type(
				locator1 = "TestrayManage#NEW_OPTION_NAME",
				value1 = "${teamName}");

			Button.clickSave();
		}
	}

	macro assertItemName {
		AssertElementPresent(
			key_projectName = "${key_name}",
			locator1 = "Testray#ITEM_NAME");
	}

	macro assertItemNotPresent {
		AssertElementNotPresent(
			key_projectName = "${key_name}",
			locator1 = "Testray#ITEM_NAME");
	}

	macro assertItemsPerPageValue {
		AssertElementPresent(
			key_value = "${itemValue}",
			locator1 = "Testray#ITEMS_PER_PAGE_VALUE_BUTTON");
	}

	macro assertNameTitle {
		AssertElementPresent(
			key_title = "${key_name}",
			locator1 = "Testray#NAME_TITLE");
	}

	macro assertPageNumber {
		AssertElementPresent(
			key_pageNumber = "${pageNumber}",
			locator1 = "Testray#NUMBER_PAGE_BUTTON");
	}

	macro assertProjectDescription {
		AssertElementPresent(
			key_value = "${value}",
			locator1 = "Testray#DESCRIPTION_PROJECT");
	}

	macro assertProjectTitleHeader {
		AssertElementPresent(
			key_projectName = "${projectName}",
			locator1 = "Testray#PROJECT_NAME_HEADER");
	}

	macro assertShowedItems {
		AssertElementPresent(
			key_text = "${itemsText}",
			locator1 = "Testray#ITEMS_PER_PAGE_DESCRIPTION");
	}

	macro changePagination {
		Click(
			key_numberItems = "${numberItems}",
			locator1 = "Testray#ITEMS_PER_PAGE_BUTTON");

		Click(
			key_value = "${valuePagination}",
			locator1 = "Testray#ITEMS_PER_PAGE_SELECT");
	}

	macro changePaginationInModal {
		Click(
			key_numberItems = "${numberItems}",
			locator1 = "Testray#ITEMS_PER_PAGE_BUTTON_MODAL");

		Click(
			key_value = "${valuePagination}",
			locator1 = "Testray#ITEMS_PER_PAGE_SELECT");
	}

	macro clickOnPageNumber {
		Click(
			key_pageNumber = "${pageNumber}",
			locator1 = "Testray#NUMBER_PAGE_BUTTON");
	}

	macro clickOnPageNumberModal {
		Click(
			key_pageDirection = "${pageNumber}",
			locator1 = "Testray#NUMBER_PAGE_BUTTON_MODAL");
	}

	macro createProjectTestray {
		Click(locator1 = "Testray#ADD_PROJECT");

		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = "${key_name}");

		Type(
			locator1 = "Testray#NEW_DESCRIPTION_PROJECT",
			value1 = "${description}");

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro createTestraySite {
		ApplicationsMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		LexiconEntry.gotoAdd();

		LexiconCard.clickCard(card = "Liferay Site Initializer Testray");

		SelectFrame(
			key_title = "Add Site",
			locator1 = "IFrame#MODAL_ANY");

		PortletEntry.inputName(name = "${siteName}");

		Click(locator1 = "Button#ADD");

		Alert.viewSuccessMessage();
	}

	macro createTestrayTasks {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Testray Tasks");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "TestrayTestflow#STATUS_EDIT",
			value1 = "${value}");

		Type(
			locator1 = "TestrayTestflow#ADD_NAME_TASKS",
			value1 = "Hotfix Tester - liferay-hotfix-1987-2008 - 7.4.10.7");

		Type(
			locator1 = "TestrayTestflow#ADD_BUILD_TASKS",
			value1 = "43015");

		Type(
			locator1 = "ObjectPortlet#VIEW_EMPTY_LABEL_IN_DATE_ENTRY",
			value1 = "04/01/2022");

		Click(locator1 = "Button#SAVE");
	}

	macro deleteAllProjects {
		TestrayLayout.clickResultsOnSidebar();

		Refresh();

		Testray.changePagination(
			numberItems = "20",
			valuePagination = "150");

		while (IsElementPresent(key_projectName = "Projects_", locator1 = "Testray#ITEM_NAME")) {
			TestrayContextMenu.clickContextMenuProjects(name = "Projects_");

			TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

			Alert.viewSuccessMessage();
		}
	}

	macro deleteComponent {
		RightClick.rightClick(
			key_projectName = "${itemName}",
			locator1 = "Testray#ITEM_NAME");

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this item?");

		Alert.viewSuccessMessage();
	}

	macro deleteProject {
		TestrayLayout.clickResultsOnSidebar();

		Testray.changePagination(
			numberItems = "20",
			valuePagination = "150");

		TestrayContextMenu.clickContextMenuProjects(name = "${nameProject}");

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

		Alert.viewSuccessMessage();
	}

	macro editComponent {
		TestrayContextMenu.clickContextMenuProjects(name = "${componentName}");

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Edit");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = "${newComponentName}");

		if (isSet(newTeamName)) {
			Select(
				key_fieldLabel = "Team",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${newTeamName}");
		}

		Button.clickSave();
	}

	macro editProjectTestray {
		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = "${name}");

		Type(
			locator1 = "Testray#NEW_DESCRIPTION_PROJECT",
			value1 = "${description}");

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro enableTestrayTasksInPortlet {
		Refresh();

		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Objects");

		Click(
			key_pageNumber = "2",
			locator1 = "Pagination#ANY_PAGE");

		ObjectPortlet.selectCustomObject(label = "Testray Task");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();
	}

	macro gotoAddProject {
		Click(locator1 = "Testray#ADD_PROJECT");
	}

	macro goToNextAndPreviousPage {
		Click(
			key_pageDirection = "${pageDirection}",
			locator1 = "Testray#NEXT_AND_PREVIOUS_PAGE_BUTTON");
	}

	macro goToProjectPage {
		Click(
			key_projectName = "${projectName}",
			locator1 = "Testray#ITEM_NAME");
	}

	macro goToTestflow {
		Click(locator1 = "Testray#TESTFLOW_SIDEBAR");
	}

	macro projectTabNavigator {
		Click(
			key_navTabName = "${navTabName}",
			locator1 = "Testray#PROJECT_NAVIGATOR_TAB_BUTTON");
	}

	macro signOutTestray {
		Click(locator1 = "TestrayUser#USER_ICON_SIDEBAR");

		Click(locator1 = "TestrayUser#SIGN_OUT");
	}

	macro statusChangeTestray {
		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Testray Tasks");

		Click(locator1 = "CommerceEntry#DROPDOWN");

		MenuItem.click(menuItem = "View");

		Type(
			locator1 = "TestrayTestflow#STATUS_EDIT",
			value1 = "${value}");

		Click(locator1 = "Button#SAVE");
	}

	macro tearDownCP {
		Refresh();

		ApplicationsMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Refresh();

		PortletEntry.selectAll();

		Click(locator1 = "Icon#SITES_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		Click(locator1 = "Button#MODAL_DELETE");

		Alert.viewSuccessMessage();
	}

	macro typeProjectsField {
		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = "${projectName}");

		Type(
			locator1 = "Testray#NEW_DESCRIPTION_PROJECT",
			value1 = "${description}");

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro viewErrorMessage {
		AssertElementPresent(
			key_fieldLabel = "${fieldLabel}",
			key_warningMessage = "${warningMessage}",
			locator1 = "Testray#FIELD_REQUIRED_MESSAGE");
	}

	macro viewOverviewTab {
		AssertElementPresent(
			key_rowValue = "${rowValue}",
			locator1 = "Testray#OVERVIEW_LAYOUT_VALUES");
	}

}