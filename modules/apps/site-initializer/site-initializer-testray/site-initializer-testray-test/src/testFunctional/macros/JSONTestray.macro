definition {

	macro addBuild {
		Variables.assertDefined(parameterList = "${buildName},${projectName},${routineName},${productVersion}");

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});
		var routineId = JSONTestraySetter.getRoutineId(routineName = ${routineName});
		var productVersionId = JSONTestraySetter.getProductVersionId(productVersion = ${productVersion});

		var buildId = JSONTestrayAPI.createBuildAPI(
			buildName = ${buildName},
			productVersionId = ${productVersionId},
			projectId = ${projectId},
			routineId = ${routineId});
	}

	macro addCaseResult {
		Variables.assertDefined(parameterList = "${buildName},${caseResultName},${componentName},${caseName},${runName}");

		var buildId = JSONTestraySetter.getBuildId(buildName = ${buildName});
		var componentId = JSONTestraySetter.getComponentId(componentName = ${componentName});
		var casesId = JSONTestraySetter.getCaseId(caseName = ${caseName});
		var runId = JSONTestraySetter.getRunId(runName = ${runName});

		var caseResultId = JSONTestrayAPI.createCaseResultAPI(
			buildId = ${buildId},
			caseResultName = ${caseResultName},
			casesId = ${casesId},
			componentId = ${componentId},
			messageError = ${messageError},
			runId = ${runId});
	}

	macro addCaseResultForSubtask {
		Variables.assertDefined(parameterList = "${caseResultForSubtask},${caseResultName},${subtaskName}");

		var caseResultId = JSONTestraySetter.getCaseResultId(caseResultName = ${caseResultName});
		var subtaskId = JSONTestraySetter.getSubtaskId(subtaskName = ${subtaskName});

		var caseResultForSubtaskId = JSONTestrayAPI.createCaseResultsForSubtaskAPI(
			caseResultForSubtask = ${caseResultForSubtask},
			caseResultId = ${caseResultId},
			subtaskId = ${subtaskId});
	}

	macro addCases {
		Variables.assertDefined(parameterList = "${caseName},${caseType},${projectName},${componentName}");

		var caseTypeId = JSONTestraySetter.getCaseTypeId(caseType = ${caseType});
		var componentId = JSONTestraySetter.getComponentId(componentName = ${componentName});
		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var caseId = JSONTestrayAPI.createCasesAPI(
			caseName = ${caseName},
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			description = ${description},
			priority = ${priority},
			projectId = ${projectId},
			steps = ${steps});
	}

	macro addCaseType {
		var caseTypeId = JSONTestrayAPI.createCaseTypeAPI(caseType = ${caseType});
	}

	macro addComponent {
		Variables.assertDefined(parameterList = "${componentName},${projectName},${teamName}");

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});
		var teamId = JSONTestraySetter.getTeamId(teamName = ${teamName});

		var componentId = JSONTestrayAPI.createComponentAPI(
			componentName = ${componentName},
			projectId = ${projectId},
			teamId = ${teamId});
	}

	macro addEnvironmentFactors {
		Variables.assertDefined(parameterList = ${environmentFactorsName});

		if (!(isSet(optionsName))) {
			var optionsName = "Option 1";
		}

		if (!(isSet(categoryName))) {
			var categoryName = "Category 1";
		}

		if (!(isSet(routineName))) {
			var routineName = "Routine 1";
		}

		JSONTestray.addFactorCategory(categoryName = ${categoryName});

		var factorCategoryId = JSONTestraySetter.getFactorCategoryId(categoryName = ${categoryName});

		JSONTestray.addFactorOptions(
			factorCategoryId = ${factorCategoryId},
			optionsName = ${optionsName});

		var factorOptionsId = JSONTestraySetter.getFactorOptionsId(optionsName = ${optionsName});
		var routineId = JSONTestraySetter.getRoutineId(routineName = ${routineName});

		var environmentFactorsId = JSONTestrayAPI.createEnvironmentFactorsAPI(
			environmentFactorsName = ${environmentFactorsName},
			factorCategoryId = ${factorCategoryId},
			factorOptionsId = ${factorOptionsId},
			routineId = ${routineId});
	}

	macro addFactorCategory {
		Variables.assertDefined(parameterList = ${categoryName});

		var factorCategoryId = JSONTestrayAPI.createFactorCategoriesAPI(categoryName = ${categoryName});
	}

	macro addFactorOptions {
		Variables.assertDefined(parameterList = ${optionsName});

		var factorOptionsId = JSONTestrayAPI.createFactorOptionsAPI(
			factorCategoryId = ${factorCategoryId},
			optionsName = ${optionsName});
	}

	macro addProductVersion {
		Variables.assertDefined(parameterList = "${productVersion},${projectName}");

		if (!(isSet(projectName))) {
			var projectName = "Project 1";
		}

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var productVersionId = JSONTestrayAPI.createProductVersionAPI(
			productVersion = ${productVersion},
			projectId = ${projectId});
	}

	macro addProject {
		Variables.assertDefined(parameterList = "${projectName},${projectDescription}");

		var projectId = JSONTestrayAPI.createProjectAPI(
			projectDescription = ${projectDescription},
			projectName = ${projectName});
	}

	macro addRequirement {
		Variables.assertDefined(parameterList = "${componentName},${linkTitle},${projectName},${requirementName}");

		var componentId = JSONTestraySetter.getComponentId(componentName = ${componentName});
		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var requirementId = JSONTestrayAPI.createRequirementAPI(
			componentId = ${componentId},
			linkTitle = ${linkTitle},
			linkURL = ${linkURL},
			projectId = ${projectId},
			requirementName = ${requirementName});
	}

	macro addRoutine {
		Variables.assertDefined(parameterList = "${routineName},${projectName}");

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var routineId = JSONTestrayAPI.createRoutineAPI(
			projectId = ${projectId},
			routineName = ${routineName});
	}

	macro addRun {
		Variables.assertDefined(parameterList = "${runName},${buildName}");

		var buildId = JSONTestraySetter.getBuildId(buildName = ${buildName});

		var runId = JSONTestrayAPI.createRunAPI(
			buildId = ${buildId},
			runName = ${runName});
	}

	macro addSubtask {
		Variables.assertDefined(parameterList = "${subtaskName},${subtaskNumber},${taskName},${key},${score}");

		var taskId = JSONTestraySetter.getTaskId(taskName = ${taskName});

		var subtaskId = JSONTestrayAPI.createSubtaskAPI(
			key = ${key},
			messageError = ${messageError},
			score = ${score},
			statusSubtask = ${statusSubtask},
			subtaskName = ${subtaskName},
			subtaskNumber = ${subtaskNumber},
			taskId = ${taskId});
	}

	macro addSuite {
		if (!(isSet(projectName))) {
			var projectName = "Project 1";
		}

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var suiteId = JSONTestrayAPI.createSuiteAPI(
			projectId = ${projectId},
			suiteName = ${suiteName});
	}

	macro addTask {
		Variables.assertDefined(parameterList = "${taskName},${key},${statusTask},${buildName}");

		var buildId = JSONTestraySetter.getBuildId(buildName = ${buildName});

		var taskId = JSONTestrayAPI.createTaskAPI(
			buildId = ${buildId},
			key = ${key},
			statusTask = ${statusTask},
			taskName = ${taskName});
	}

	macro addTeam {
		Variables.assertDefined(parameterList = "${teamName},${projectName}");

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var teamId = JSONTestrayAPI.createTeamAPI(
			projectId = ${projectId},
			teamName = ${teamName});
	}

}