definition {

	macro addBuildViaUI {
		if (!(isSet(addVersion))) {
			var addVersion = "1.3";
		}

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(gitHash))) {
			var gitHash = "";
		}

		Click(locator1 = "Button#PLUS");

		if (isSet(dropdownItem)) {
			Click.javaScriptClick(
				key_menuItem = ${dropdownItem},
				locator1 = "MenuItem#ANY_MENU_ITEM");
		}

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${buildFieldName});

		Select(
			locator1 = "TestrayBuild#ROUTINE_ID",
			value1 = ${routine});

		TestrayManage.addProductVersionInBuild(key_name = ${addVersion});

		Select(
			locator1 = "TestrayBuild#PRODUCT_VERSION",
			value1 = ${productVersionOption});

		Type(
			locator1 = "TestrayBuild#GIT_HASH_FIELD",
			value1 = ${gitHash});

		Type(
			locator1 = "TestrayCases#FIELD_DESCRIPTION",
			value1 = ${description});

		TestrayRequirements.addRequirementCase(
			buttonText = "Select Cases",
			caseName = ${caseName},
			linkText = "Add Cases");

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro addBuildWithMultipleOptions {
		Click(locator1 = "Button#PLUS");

		if (isSet(dropdownItem)) {
			Click.javaScriptClick(
				key_menuItem = ${dropdownItem},
				locator1 = "MenuItem#ANY_MENU_ITEM");
		}

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${fieldName});

		Select(
			locator1 = "TestrayBuild#ROUTINE_ID",
			value1 = ${routine});

		TestrayManage.addProductVersionInBuild(key_name = ${addVersion});

		Select(
			locator1 = "TestrayBuild#PRODUCT_VERSION",
			value1 = ${productVersion});

		Type(
			locator1 = "TestrayBuild#GIT_HASH_FIELD",
			value1 = ${gitHash});

		Type(
			locator1 = "TestrayCases#FIELD_DESCRIPTION",
			value1 = ${description});

		TestrayRequirements.addRequirementCase(
			buttonText = "Select Cases",
			caseName = ${caseName},
			linkText = "Add Cases");

		TestrayBuild.addNewOptionInBuild(
			category = ${categoryName},
			option = ${optionName});

		TestrayBuild.addSelectStacksInBuild(
			parameterLabel = ${labelStack},
			stackoptions = ${stackName});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro addNewOptionInBuild {
		Button.click(button = "Add Option");

		SelectFrame(locator1 = "Testray#MODAL_BODY");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_IN_MODAL",
			value1 = ${option});

		Select(
			locator1 = "TestrayManage#SELECT_CATEGORY_IN_OPTIONS",
			value1 = ${category});

		Button.clickSave();
	}

	macro addSelectStacksInBuild {
		Button.click(button = "Select Stacks");

		Click(
			locator1 = "TestrayBuild#SELECT_STACKS_PARAMETER_LABEL_FIELD",
			parameterLabel = ${parameterLabel},
			stackoptions = ${stackoptions});

		Button.click(button = "Next");

		Button.click(button = "Add");
	}

	macro addSuitesInBuild {
		Click(
			key_text = ${linkText},
			locator1 = "Button#ANY");

		Click.clickAtNotVisible(
			key_checkboxOption = ${caseName},
			locator1 = "Checkbox#SPECIFIC_CHECKBOX_IN_TABLE");

		Click(
			key_text = ${buttonText},
			locator1 = "Button#ANY");
	}

	macro createBuild {
		if (isSet(dropdownItem)) {
			Click(locator1 = "Button#PLUS");

			Click.javaScriptClick(
				key_picklistOption = ${dropdownItem},
				locator1 = "TestrayDropdown#PICKLIST_KEBAB_MENU_OPTION");
		}

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${fieldName});

		Select(
			locator1 = "TestrayBuild#ROUTINE_ID",
			value1 = ${routine});

		TestrayManage.addProductVersionInBuild(key_name = ${addVersion});

		Select(
			locator1 = "TestrayBuild#PRODUCT_VERSION",
			value1 = ${productVersion});

		Type(
			locator1 = "TestrayBuild#GIT_HASH_FIELD",
			value1 = ${gitHash});

		Type(
			locator1 = "TestrayCases#FIELD_DESCRIPTION",
			value1 = ${description});

		TestrayRequirements.addRequirementCase(
			buttonText = "Select Cases",
			caseName = ${caseName},
			linkText = "Add Cases");

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro deleteBuild {
		TestrayLayout.clickResultsOnSidebar();

		Testray.changePagination(
			numberItems = 20,
			valuePagination = 150);

		Testray.goToProjectPage(projectName = "Projects_1 Project");

		TestrayRoutines.goToRoutine(routineName = "Routines_1 Routine");

		while (IsElementPresent(key_projectName = "Builds_", locator1 = "Testray#ITEM_NAME")) {
			Testray.deleteComponent(itemName = ${itemName});
		}
	}

	macro editBuild {
		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${fieldName});

		Select(
			locator1 = "TestrayBuild#ROUTINE_ID",
			value1 = ${routine});

		Select(
			locator1 = "TestrayBuild#PRODUCT_VERSION",
			value1 = ${productVersion});

		Type(
			locator1 = "TestrayBuild#GIT_HASH_FIELD",
			value1 = ${gitHash});

		Type(
			locator1 = "TestrayCases#FIELD_DESCRIPTION",
			value1 = ${description});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	macro goToBuild {
		Click(
			key_projectName = ${buildName},
			locator1 = "Testray#ITEM_NAME");
	}

	macro selectDefaultEnvironmentFactors {
		Refresh();

		TestrayContextMenu.clickContextMenuProjects(name = "Routines_1 Routine");

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Select Default Environment Factors");

		WaitForElementPresent(
			key_environmentFactors = "Application Server",
			locator1 = "Testray#SELECT_ENVIRONMENT_FACTORS");

		for (var listboxItem : list ${listCategory}) {
			Click(
				key_environmentFactors = ${listboxItem},
				locator1 = "Testray#SELECT_ENVIRONMENT_FACTORS");

			Click(locator1 = "Testray#AUDIT_GRAPH_CONFIGURATION_RIGHT_ARROW_BUTTON");
		}

		Button.click(button = "Next");

		Select(
			key_fieldLabel = ${label},
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${listOption});

		Select(
			key_fieldLabel = ${label1},
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${listOption1});

		Button.click(button = "Save");
	}

	macro verifyEnvironmentFactors {
		AssertElementPresent(
			key_environmentFactors = ${listCategory},
			locator1 = "Testray#VERIFY_ENVIRONMENT_FACTORS_SELECTED");

		AssertElementPresent(
			key_environmentFactors = ${listCategory1},
			locator1 = "Testray#VERIFY_ENVIRONMENT_FACTORS_SELECTED");

		Button.click(button = "Next");

		AssertElementPresent(
			key_fieldLabel = ${label},
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${listOption});

		AssertElementPresent(
			key_fieldLabel = ${label1},
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${factorOptionId1});
	}

	macro verifyPromoteBuild {
		AssertElementPresent(locator1 = "TestrayBuild#PROMOTE_BUILD");
	}

	macro verifySpecificEnvironmentFactors {
		AssertElementPresent(
			key_environmentFactors = ${listCategory},
			locator1 = "Testray#VERIFY_ENVIRONMENT_FACTORS_SELECTED");

		Button.click(button = "Next");

		AssertElementPresent(
			key_fieldLabel = ${label},
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = ${listOption});
	}

	macro viewBuildDetails {
		AssertElementPresent(
			locator1 = "TestrayBuild#BUILD_DETAILS_PRODUCT_VERSION",
			value1 = ${productVersion});

		AssertElementPresent(
			locator1 = "TestrayBuild#BUILD_DETAILS_DESCRIPTION",
			value1 = ${description});

		AssertElementPresent(
			locator1 = "TestrayBuild#BUILD_DETAILS_GIT_HASH",
			value1 = ${gitHash});
	}

}