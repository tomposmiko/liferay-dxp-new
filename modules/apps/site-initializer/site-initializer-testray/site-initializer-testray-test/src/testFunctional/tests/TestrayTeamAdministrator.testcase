@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Testray.createTestraySite(siteName = "Testray 2");

		Refresh();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Testray.deleteAllProjects();

		Testray.tearDownCP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a test for LPS-160594 - Verify if as an Administrator I am able to add a Team"
	@priority = "5"
	test AdminCanAddTeam {
		task ("Go to Testray and Create Project") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Project Description",
				key_name = "Projects_1 Project");
		}

		task ("Change pagination, create Team and Assert it was created") {
			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");

			TestrayManage.createTeam(
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project",
				version = "Teams_1 Team");

			Testray.assertItemName(key_name = "Teams_1 Team");
		}
	}

	@description = "This is a test for LPS-160595 - Verify if as an Administrator I am able to delete a Team"
	@priority = "5"
	test AdminCanDeleteTeam {
		task ("Go to Testray and Create Project") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Project Description",
				key_name = "Projects_1 Project");
		}

		task ("Change pagination and create Team") {
			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");

			TestrayManage.createTeam(
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project",
				version = "Teams_2 Team");
		}

		task ("Delete Team and Assert it was Deleted") {
			TestrayManage.deleteProductVersion(
				itemManage = "Delete",
				versionName = "Teams_2 Team");

			Testray.assertItemNotPresent(key_name = "Teams_2 Team");
		}
	}

	@description = "This is a test for LPS-160596 - Verify if as an Administrator I am able to edit a Team"
	@priority = "5"
	test AdminCanEditTeam {
		task ("Go to Testray and Create Project") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Project Description",
				key_name = "Projects_1 Project");
		}

		task ("Change pagination and create Team") {
			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");

			TestrayManage.createTeam(
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project",
				version = "Teams_3 Team");
		}

		task ("Edit Team and Assert it was Edited") {
			TestrayManage.editTeam(
				nameTeam = "Teams_3 Team",
				typeTeam = "Teams_3 Team Edited");

			Testray.assertItemName(key_name = "Teams_3 Team Edited");
		}
	}

	@description = "This is a test for LPS-162501 - Verify if as an Administrator I should not be able to add a duplicate Teams"
	@ignore = "Test Stub"
	@priority = "5"
	test AdminCanNotAddDuplicateTeams {
		task ("Go to Testray and Create Project") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Project Description",
				key_name = "Projects_1 Project");
		}

		task ("Change pagination, create Product Version and Assert that no duplicate product version was created") {
			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");

			TestrayManage.createTeam(
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project",
				version = "Teams_2 Team");

			Click(locator1 = "TestrayManage#CLOSE_MODAL");

			TestrayManage.specificVersion(
				caseName = "Teams_2 Team",
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project");

			Alert.viewErrorMessage(errorMessage = "An unexpected error ocurred");
		}
	}

	@description = "This is a test for LPS-162502 - Verify if as an Administrator I can see the warning message 'This field is required' when trying to save without a name"
	@priority = "4"
	test AdminCanViewWarningMessage {
		task ("Go to Testray and Create Project") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Project Description",
				key_name = "Projects_1 Project");
		}

		task ("Change pagination and Assert that field Name is required") {
			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");

			TestrayManage.specificVersion(
				caseName = "",
				manageOption = "Manage Teams",
				nameOptions = "Projects_1 Project");

			AssertElementPresent(
				key_fieldLabel = "Name",
				key_warningMessage = "name is a required field",
				locator1 = "Testray#FIELD_REQUIRED_MESSAGE");
		}
	}

}