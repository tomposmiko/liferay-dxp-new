@component-name = "portal-solutions"
definition {

	property custom.properties = "javascript.single.page.application.enabled=false${line.separator}jsonws.web.service.paths.excludes=";
	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Name";
	var testSiteURL = "customer-portal-name";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			Site.openSitesAdmin();

			TeamExtranet.addSiteTemplateCP(
				siteName = "${testSiteName}",
				siteTemplateName = "Liferay OSB Site Initializer Customer Portal");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

			CustomerPortal.customerPortalApisTearDown();
		}
	}

	@description = "LPS-144412 - Verify if the user can open the drop-down filter and select Active Status"
	@priority = "4"
	test CanUserSelectActiveStatus {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CP2NavigationMenu.clickOnStatusButton(
			status = "Active",
			title = "All");

		AssertElementPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "Active");
	}

	@description = "LPS-144413 - Verify if the user can open the drop-down filter and select Expired Status"
	@priority = "4"
	test CanUserSelectExpiredStatus {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CP2NavigationMenu.clickOnStatusButton(
			status = "Expired",
			title = "All");

		AssertElementPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "Expired");
	}

	@description = "LPS-144414 - Verify if the user can open the drop-down filter and select Future Status"
	@priority = "4"
	test CanUserSelectFutureStatus {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CP2NavigationMenu.clickOnStatusButton(
			status = "Future",
			title = "All");

		AssertElementPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "Future");
	}

	@description = "LPS-144416 - Verify if the user can open the drop-down filter and select three statuses"
	@priority = "3"
	test CanUserSelectThreeStatuses {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CP2NavigationMenu.clickOnStatusButton(
			status = "All",
			title = "All");

		AssertElementPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "All");
	}

	@description = "LPS-144419 - Verify if the value of the filter when transitioning between subscription types is kept and only reset when the user leaves the page"
	@priority = "4"
	test ValueIsKeptOnTransition {
		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CP2NavigationMenu.clickOnStatusButton(
			status = "Active",
			title = "All");

		CustomerPortal.enterOnSubscription();

		AssertElementPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "Active");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		AssertElementNotPresent(
			locator1 = "CP2NavigationMenu#STATUS_BUTTON",
			title = "Active");
	}

}