@component-name = "portal-solutions"
definition {

	property custom.properties = "javascript.single.page.application.enabled=false${line.separator}jsonws.web.service.paths.excludes=";
	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Name";
	var testSiteURL = "customer-portal-name";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			Site.openSitesAdmin();

			TeamExtranet.addSiteTemplateCP(
				siteName = "${testSiteName}",
				siteTemplateName = "Liferay OSB Site Initializer Customer Portal");
		}

		task ("Create CP2.0 objects") {
			CustomerPortal.createCPSiteObjects();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

			CustomerPortal.customerPortalTearDown();

			User.logoutPG();
		}
	}

	@description = "LPS-144966 - Verify if trying to send invitation to members with a banned email shows a error"
	@priority = "5"
	test CanViewErrorMessageForBannedEmail {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CP2TeamMembers.addFieldsTeamMembersExtra(
			position = "0",
			positionNumber = "0",
			rowEmail = "0-mail.com",
			rowRole = "User");

		AssertTextEquals(
			locator1 = "CustomerPortalSite#ERROR_MESSAGE",
			value1 = "Please insert a valid e-mail.");
	}

	@description = "LPS-144958 - Verify if when a Project has reached or is reaching the limit, the admin roles should be disabled in drop down"
	@priority = "4"
	test IfMaxAdminDropDisabled {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CP2TeamMembers.addFieldsTeamMembersExtra(
			addMembers = "true",
			position = "0",
			positionNumber = "0",
			rowEmail = "test01@project.com",
			rowRole = "Administrator");

		AssertElementPresent(
			key_index = "1",
			locator1 = "CP2TeamMembers#ROLE_DISABLED",
			role = "Administrator");
	}

	@description = "LPS-144956 - Verify if when a Project has reached or is reaching the limit, the ticket requestor role should be disabled in drop down"
	@priority = "4"
	test IfMaxRequestorDropDisabled {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CP2TeamMembers.addFieldsTeamMembersExtra(
			addMembers = "true",
			position = "0",
			positionNumber = "0",
			rowEmail = "test01@project.com",
			rowRole = "Requester");

		AssertElementPresent(
			key_index = "1",
			locator1 = "CP2TeamMembers#ROLE_DISABLED",
			role = "Requester");
	}

	@description = "LPS-144960 - Verify if when the user selects 'Skip for Now' he is taken to the next step"
	@priority = "5"
	test IfSkipForNowJumpToNextStep {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CustomerPortal.clickOnSkipForNowButton();

		AssertElementPresent(locator1 = "CP2DXPCloudSetup#SETUP_DXP_CLOUD_PAGE");
	}

	@description = "LPS-144961 - Verify max number of admin/ticket requestor"
	@priority = "2"
	test IsMaxNumberCorrect {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		AssertElementPresent(
			locator1 = "CustomerPortalSite#SUBTITLE_SUPPORT",
			value1 = "Only 3 members per project (including yourself) have role permissions (Admins & Support Seats) to open Support tickets.");

		ApplicationsMenu.gotoPortlet(
			category = "Object",
			panel = "Control Panel",
			portlet = "Koroneiki Accounts");

		CustomerPortal.viewCPObjectInfo();

		CustomerPortal.viewValueFieldKoroneiki(
			field = "maxRequestors",
			value = "3");
	}

	@description = "LPS-144964 - Verify if partner = true, show 'Partner Manager' on Roles"
	@priority = "4"
	test IsPartnerManagerShowingUp {
		CP2TeamMembers.activePartnersRole();

		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Partner Member",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		AssertElementPresent(
			key_rowNumber = "0",
			locator1 = "CP2TeamMembers#ROLE_SELECT",
			value1 = "Partner Manager");

		CustomerPortal.deactivateKoroneikiAccount();
	}

	@description = "LPS-144963 - Verify if partner = true, show 'Partner Member' on Roles"
	@priority = "4"
	test IsPartnerMemberShowingUp {
		CP2TeamMembers.activePartnersRole();

		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Partner Member",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		AssertElementPresent(
			key_rowNumber = "0",
			locator1 = "CP2TeamMembers#ROLE_SELECT",
			value1 = "Partner Member");

		CustomerPortal.deactivateKoroneikiAccount();
	}

	@description = "LPS-144962 - Verify if slaCurrent = 'Gold' (or Platinum), show 'Requestor' on Roles"
	@priority = "4"
	test IsRequestorShowingUp {
		CustomerPortal.viewValueFieldKoroneiki(
			field = "slaCurrent",
			value = "Platinum Subscription");

		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		AssertElementPresent(
			key_rowNumber = "0",
			locator1 = "CP2TeamMembers#ROLE_SELECT",
			value1 = "Requester");
	}

	@description = "LPS-144968 - Verify if when the fields are empty the button 'Send Invitations' is disabled"
	@priority = "3"
	test IsSendInvitationsButtonDisabled {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CP2TeamMembers.addFieldsTeamMembersExtra(
			position = "0",
			positionNumber = "0",
			rowEmail = "test",
			rowRole = "User");

		AssertElementPresent(locator1 = "CP2TeamMembers#SEND_INVITATIONS_DISABLED");
	}

	@description = "LPS-144953 - Verify if the user can invite multiple emails with roles on team members on the same screen."
	@ignore = "true"
	@priority = "4"
	test MultipleEmailsWithRoleAtOnce {
		Accounts.openAccountsAdmin();

		CustomerPortal.accountTableProject(title = "Test Account 01");

		Accounts.addAssigneeToRoleViaUsersTab(
			accountRoleTitle = "Account Administrator",
			accountUserName = "Test Test");

		ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");

		CustomerPortal.enterOnProject(title = "Test Account 01");

		CustomerPortal.clickOnStartProjectSetup();

		CP2TeamMembers.addFieldsTeamMembersExtra(
			addMembers = "true",
			position = "0",
			positionNumber = "0",
			rowEmail = "test01@project.com",
			rowRole = "Administrator");

		CP2TeamMembers.addFieldsTeamMembersExtra(
			position = "1",
			positionNumber = "1",
			rowEmail = "test02@project.com",
			rowRole = "User");

		CP2TeamMembers.clickTeamMembersSendInvitation();
	}

}