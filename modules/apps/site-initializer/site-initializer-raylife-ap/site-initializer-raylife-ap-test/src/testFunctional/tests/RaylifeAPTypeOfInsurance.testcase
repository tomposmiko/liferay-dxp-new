@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-165493=true";
	property osgi.modules.includes = "site-initializer-raylife-ap";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	var testSiteName = "Raylife AP";
	var testSiteURL = "raylife-ap";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Raylife AP Site") {
			Site.openSitesAdmin();

			Raylife.createRaylifeSite(siteName = "Raylife D2C");

			Raylife.createRaylifeSite(siteName = "Raylife AP");
		}

		task ("Login as Scott Producer because of roles and permissions") {
			User.logoutPG();

			RaylifeAP.userLoginInRaylife(email = "scott.producer");

			RaylifeAP.goToRaylifeUserProfileMenu(raylifeSite = "Raylife AP");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		RaylifeAP.tearDownCP();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "LPS-146328 - Verify if the 'New Applications' button from the side-bar option 'Applications', works."
	@priority = 5
	test CanAccessNewApplicationFromSideBar {
		property test.name.skip.portal.instance = "RaylifeAPTypeOfInsurance#CanAccessNewApplicationFromSideBar";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the modal new application is open by side-bar option") {
			RaylifeAPNavigator.gotoSidebarItem(itemName = "Applications");

			Button.click(button = "New Applications");
		}

		task ("Then Assert the modal is open") {
			RaylifeApplicationModal.assertModalOption(description = "What type of insurance does this customer need?");
		}
	}

	@description = "LPS-146328 - Verify if the user can swicth between the cards."
	@priority = 3
	test CanSwitchBetweenCards {
		property test.name.skip.portal.instance = "RaylifeAPTypeOfInsurance#CanSwitchBetweenCards";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("Given the modal for new application is open") {
			Button.click(button = "Application");
		}

		task ("Then Assert if the user can switch between the cards") {
			RaylifeApplicationModal.assertModalOption(option = "Personal");

			RaylifeApplicationModal.selectModalOption(option = "Business");

			RaylifeApplicationModal.assertModalOption(option = "Business");
		}
	}

	@description = "LPS-146328 - Verify if when the user selects a card, go to next page and click on 'Previous' button the card still selected (active)."
	@priority = 4
	test CardStillSelectedWhenUserGoToPreviousPage {
		property test.name.skip.portal.instance = "RaylifeAPTypeOfInsurance#CardStillSelectedWhenUserGoToPreviousPage";

		// Skip portal instance due to LRQA-79129. Unskip after it is resolved

		task ("When the user clicks the previous button") {
			RaylifeApplicationModal.openNewApplicationFlow(
				button = "Previous",
				insurance = "Busines");
		}

		task ("Then the Insurance option is still active") {
			RaylifeApplicationModal.assertModalOption(option = "Busines");
		}
	}

}