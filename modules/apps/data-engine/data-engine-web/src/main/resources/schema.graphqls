input DataDefinitionFieldInput {
	defaultValue: String
	indexable: Boolean
	labels: [LocalizedValueInput]
	localizable: Boolean
	name: String!
	repeatable: Boolean
	required: Boolean
	tips: [LocalizedValueInput]
	type: String!
}

input DataDefinitionInput {
	dataDefinitionId: ID
	descriptions: [LocalizedValueInput]
	fields: [DataDefinitionFieldInput]
	names: [LocalizedValueInput]
	storageType: String
}

input DataRecordCollectionInput {
	dataDefinition: DataDefinitionInput
	dataRecordCollectionId: ID
	descriptions: [LocalizedValueInput]
	names: [LocalizedValueInput]
}

input LocalizedValueInput {
	key: String!
	value: String!
}

input SaveDataDefinitionModelPermissionsInput {
	companyId: ID!
	dataDefinitionId: ID!
	delete: Boolean
	groupId: ID!
	roleNames: [String]!
	scopedGroupId: ID!
	scopedUserId: ID!
	update: Boolean
	view: Boolean
}

input SaveDataDefinitionPermissionsInput {
	addDataDefinition: Boolean
	companyId: ID!
	definePermissions: Boolean
	roleNames: [String]!
	scopedGroupId: ID!
}

schema {
	mutation: MutationType
	query: QueryType
}

type CountDataDefinitionType {
	total: Int
}

type DataDefinitionFieldType {
	defaultValue: String
	indexable: Boolean
	labels: [LocalizedValueType]
	localizable: Boolean
	name: String
	repeatable: Boolean
	required: Boolean
	tips: [LocalizedValueType]
	type: String
}

type DataDefinition {
	dataDefinitionId: ID
	descriptions: [LocalizedValueType]
	fields: [DataDefinitionFieldType]
	names: [LocalizedValueType]
	storageType: String
}

type DataRecordCollection {
	dataDefinition: DataDefinition
	dataRecordCollectionId: ID
	descriptions: [LocalizedValueType]
	names: [LocalizedValueType]
}

type DeleteDataDefinitionType {
	dataDefinition: DataDefinition
}

type GetDataDefinitionType {
	dataDefinition: DataDefinition
}

type ListDataDefinitionType {
	dataDefinitions: [DataDefinition]
}

type LocalizedValueType {
	key: String
	value: String
}

type SaveModelPermissionsDataDefinitionType {
	dataDefinitionId: ID
}

type SavePermissionsDataDefinitionType {
	roleNames: [String]
}

type MutationType {
	deleteDataDefinition(dataDefinitionId: ID!, languageId: String!): DeleteDataDefinitionType
	saveDataDefinition(userId: ID!, groupId: ID!, dataDefinition: DataDefinitionInput!, languageId: String!): SaveDataDefinitionType
	saveDataDefinitionModelPermissions(saveDataDefinitionModelPermissionsInput: SaveDataDefinitionModelPermissionsInput!, languageId: String!): SaveModelPermissionsDataDefinitionType
	saveDataDefinitionPermissions(saveDataDefinitionPermissionsInput: SaveDataDefinitionPermissionsInput!, languageId: String!): SavePermissionsDataDefinitionType
	saveDataRecordCollection(userId: ID!, groupId: ID!, dataRecordCollection: DataRecordCollectionInput!, languageId: String!): SaveDataRecordCollectionType
}

type QueryType {
	countDataDefinition(companyId: ID!, groupId: ID!, languageId: String!): CountDataDefinitionType
	getDataDefinition(dataDefinitionId: ID!, languageId: String!): GetDataDefinitionType
	listDataDefinition(companyId: ID!, groupId: ID!, languageId: String!, start: Int!, end: Int!): ListDataDefinitionType
	searchCountDataDefinition(companyId: ID!, groupId: ID!, languageId: String!, keywords:String!): SearchCountDataDefinitionType
	searchDataDefinition(companyId: ID!, groupId: ID!, languageId: String!, keywords:String!, start: Int!, end: Int!): SearchDataDefinitionType
}

type SaveDataDefinitionType {
	dataDefinition: DataDefinition
}

type SaveDataRecordCollectionType {
	dataRecordCollection: DataRecordCollection
}


type SearchCountDataDefinitionType {
	total: Int
}

type SearchDataDefinitionType {
	dataDefinitions: [DataDefinition]
}