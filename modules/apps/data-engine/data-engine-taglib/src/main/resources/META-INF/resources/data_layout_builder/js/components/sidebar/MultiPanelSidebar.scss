@import '../../../css/variables';
@import 'atlas-variables';

$controlMenuHeight: 48px;
$defaultTransitionDuration: 0.5s;
$desktopControlMenuHeight: 56px;
$toolbarDesktopHeight: 64px;
$toolbarHeight: 110px;

// z-indexes for children of page-editor-sidebar (which is a stacking context).

$zIndexButtons: 1;
$zIndexContent: 0;

.multi-panel-sidebar {
	display: flex;
	height: calc(100vh - #{$toolbarHeight});
	position: fixed;
	right: 0;
	top: $toolbarHeight;

	@include media-breakpoint-up(lg) {
		height: calc(100vh - #{$toolbarDesktopHeight});
		top: $toolbarDesktopHeight;

		&-content {
			height: calc(100vh - #{$toolbarDesktopHeight});
		}
	}

	body.has-control-menu & {
		height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
		top: $controlMenuHeight + $toolbarHeight;

		&-content {
			height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
		}

		@include media-breakpoint-up(sm) {
			height: calc(100vh - #{$desktopControlMenuHeight + $toolbarHeight});
			top: $desktopControlMenuHeight + $toolbarHeight;

			&-content {
				height: calc(
					100vh - #{$desktopControlMenuHeight + $toolbarHeight}
				);
			}
		}

		@include media-breakpoint-up(lg) {
			height: calc(
				100vh - #{$desktopControlMenuHeight + $toolbarDesktopHeight}
			);
			top: $desktopControlMenuHeight + $toolbarDesktopHeight;

			&-content {
				height: calc(
					100vh - #{$desktopControlMenuHeight + $toolbarDesktopHeight}
				);
			}
		}
	}

	&-buttons {
		background-color: $white;
		border-left: solid thin $secondary-l3;
		flex-direction: column;
		padding-top: 16px;
		width: $multiPanelSidebarButtonWidth;
		z-index: $zIndexButtons;

		a {
			align-items: center;
			border-radius: 0.25rem;
			color: $secondary-l1;
			display: flex;
			height: 2.5em;
			justify-content: center;

			&.disabled {
				color: $gray-500;
			}

			&.active,
			&:focus,
			&:hover {
				background-color: $gray-200;
				color: $gray-900;
			}

			&:focus {
				box-shadow: 0 0 0 0.125rem $white, 0 0 0 0.25rem $primary-l1,
					inset 0 0 fade-out($black, 1);
				outline: none;
			}
		}

		button {
			border-radius: 0;
			color: $gray-900;

			&.disabled {
				color: $gray-500;
			}

			&:active,
			&:focus,
			&:hover {
				background-color: $gray-200;
				color: $gray-900;
			}
		}

		hr {
			border-color: $gray-200;
			margin: 12px 8px;
		}
	}

	&-content {
		background-color: $white;
		border-left: 1px solid $gray-300;
		overflow-x: hidden;
		position: fixed;
		right: $multiPanelSidebarButtonWidth;
		transform: translateX(100%);
		transition: transform ease $defaultTransitionDuration;
		visibility: hidden;
		width: $multiPanelSidebarContentWidth;
		z-index: $zIndexContent;

		&-open {
			transform: translateX(0);
			visibility: visible;
		}
	}

	&-dark {
		& .multi-panel-sidebar-buttons {
			background-color: $gray-800;
			border-left-color: $secondary;

			a,
			button {
				color: $gray-500;

				&.active,
				&:active,
				&:focus,
				&:hover {
					background-color: fade-out($white, 0.94);
					color: $white;
				}
			}

			hr {
				border-color: $gray-600;
			}
		}
	}

	&.menu-indicator-enabled {
		top: 144px !important;

		.data-layout-builder-sidebar {
			.sidebar .sidebar-body {
				height: calc(100vh - 248px);
			}

			&.display-settings .sidebar .sidebar-body {
				height: calc(100vh - (248px - #{$displaySettingsHeight}));
			}
		}
	}
}

.rtl .multi-panel-sidebar {
	&-content {
		transform: translateX(100%);

		&-open {
			transform: translateX(0);
		}
	}
}
