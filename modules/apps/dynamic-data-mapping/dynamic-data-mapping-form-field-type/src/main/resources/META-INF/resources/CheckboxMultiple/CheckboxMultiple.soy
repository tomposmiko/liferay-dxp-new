{namespace CheckboxMultiple}

{template .render}
	{@param name: string}
	{@param value: ?}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? displayErrors: bool}
	{@param? errorMessage: string}
	{@param? id: string}
	{@param? inline: bool}
	{@param? label: string}
	{@param? options: list<[
		label: string,
		value: string
	]>}
	{@param? predefinedValue: list<any>}
	{@param? readOnly: bool}
	{@param? repeatable: bool}
	{@param? required: bool}
	{@param? showAsSwitcher: bool}
	{@param? showLabel: bool}
	{@param? spritemap: string}
	{@param? tip: string}
	{@param? visible: bool}
	{@param? valid: bool}

	{call FieldBase.render}
		{param contentRenderer kind="html"}
			{call .content}
				{param _handleFieldBlurred: $_handleFieldBlurred /}
				{param _handleFieldChanged: $_handleFieldChanged /}
				{param _handleFieldFocused: $_handleFieldFocused /}
				{param disabled: $readOnly /}
				{param inline: $inline /}
				{param name: $name /}
				{param options: $options /}
				{param predefinedValue: $predefinedValue /}
				{param showAsSwitcher: $showAsSwitcher /}
				{param showLabel: $showLabel /}
				{param value: $value /}
			{/call}
		{/param}
		{param displayErrors: $displayErrors /}
		{param errorMessage: $errorMessage /}
		{param id: $id /}
		{param label: $label /}
		{param name: $name /}
		{param ref: 'base' /}
		{param repeatable: $repeatable /}
		{param required: $required /}
		{param showLabel: $showLabel /}
		{param spritemap: $spritemap /}
		{param tip: $tip /}
		{param valid: $valid /}
		{param visible: $visible /}
	{/call}
{/template}

{template .content}
	{@param name: string}
	{@param value: ?}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? disabled: bool}
	{@param? inline: bool}
	{@param? options: list<[
		label: string,
		value: string
	]>}
	{@param? predefinedValue: list<any>}
	{@param? showAsSwitcher: bool}

	{let $displayValue: $value and length($value) > 0 ? $value : $predefinedValue /}

	<div class="lfr-ddm-checkbox-multiple">
		{if $options}
			{foreach $option in $options}
				{let $checked kind="text"}
					{if $displayValue}
						{foreach $currentValue in $displayValue}
							{if $currentValue == $option.value}
								checked
							{/if}
						{/foreach}
					{/if}
				{/let}

				{if $showAsSwitcher}
					<div class="lfr-ddm-form-field-checkbox-switch  {if $inline} lfr-ddm-form-field-checkbox-switch-inline {/if}">
						<label class="simple-toggle-switch toggle-switch">
							{let $attributes kind="attributes"}
								class="toggle-switch-check"
								data-index="{index($option)}"
								data-onblur="{$_handleFieldBlurred}"
								data-onchange="{$_handleFieldChanged}"
								data-onfocus="{$_handleFieldFocused}"

								{if $checked == 'checked'}
									checked
								{/if}

								{if $disabled}
									disabled
								{/if}

								name="{$name}"
								ref="input{index($option)}"
								type="checkbox"
								value="{$option.value}"
							{/let}

							<input {$attributes} />

							<span aria-hidden="true" class="toggle-switch-bar">
								<span class="toggle-switch-handle"></span>
							</span>
							<span class="toggle-switch-label">{$option.label}</span>
						</label>
					</div>
				{else}
					{let $attributes kind="attributes"}
						class="custom-control custom-checkbox
							{if $inline}
								{sp}custom-control-inline
							{/if}
						"
					{/let}

					<div {$attributes}>
						{call .input}
							{param _handleFieldBlurred: $_handleFieldBlurred /}
							{param _handleFieldChanged: $_handleFieldChanged /}
							{param _handleFieldFocused: $_handleFieldFocused /}
							{param checked: $checked == 'checked' ? true : false /}
							{param disabled: $disabled /}
							{param label: $option.label /}
							{param name: $name /}
							{param showLabel: true /}
							{param value: $option.value /}
						{/call}
					</div>
				{/if}
			{/foreach}
		{/if}
	</div>
{/template}

/**
 * This renders the checkbox input
 */
{template .input}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldChanged: any}
	{@param? _handleFieldFocused: any}
	{@param? ariaLabelledBy: string}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? label: string}
	{@param? labelContent: html}
	{@param? name: string}
	{@param? showLabel: bool}
	{@param? value: string}

	<label>
		{let $inputAttributes kind="attributes"}
			{if $ariaLabelledBy}
				aria-labelledby="{$ariaLabelledBy}"
			{/if}

			{if $checked}
				checked="checked"
			{/if}

			{if $disabled}
				disabled="disabled"
			{/if}

			class="custom-control-input"

			data-onblur="{$_handleFieldBlurred}"
			data-onchange="{$_handleFieldChanged}"
			data-onfocus="{$_handleFieldFocused}"

			{if $name}
				name="{$name}"
			{/if}

			{if $value}
				value="{$value}"
			{/if}

			ref="input"
			type="checkbox"
		{/let}

		<input {$inputAttributes} />

		<span class="custom-control-label">
			{if $label}
				{let $spanLabelClasses kind="text"}
					custom-control-label-text
					{if not $showLabel}
						{sp}sr-only
					{/if}
				{/let}

				<span class="{$spanLabelClasses}">{$label}</span>
			{/if}
		</span>

		{if $labelContent}
			{$labelContent}
		{/if}
	</label>
{/template}