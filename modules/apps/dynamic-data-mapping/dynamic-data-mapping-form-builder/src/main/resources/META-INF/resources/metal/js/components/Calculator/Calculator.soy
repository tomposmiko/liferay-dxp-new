{namespace Calculator}

{template .render}
	{@param index: int}
	{@param options: list<?>}
	{@param optionsRepeatable: list<?>}
	{@param calculatorOptions: list<?>}
	{@param? disableCalculatorField: bool}
	{@param strings: [
			addField: string,
			theExpressionWillBeDisplayedHere: string
		]
	}
	{@param spritemap: string}
	{@param? expression: string}
	{@param? _handleItemSelection: any}

	<div action-rule-calculate-index="{$index}" class="action-rule-calculate row">
		<div class="col-md-12 no-padding">
			<div class="calculate-container">
				<div class="calculate-container-calculator-component col-md-3">
					<div class="liferay-ddm-form-builder-calculator">
						{let $optionsList: $disableCalculatorField ? $optionsRepeatable : $options /}
						{let $disableAddField: length($options) > 0 ? false : true /}
						{call ClayDropdownBase.render}
							{param events: [
								'itemClicked': $_handleItemSelection
							] /}
							{param contentRenderer: 'dropdownFormContent' /}
							{param disabled: $disableAddField /}
							{param elementClasses: 'calculator-add-field-button-container' /}
							{param items: $optionsList /}
							{param label: $strings.addField /}
							{param ref: 'calculatorAddField' + $index /}
							{param spritemap: $spritemap /}
							{param style: 'primary' /}
							{param triggerClasses: 'btn-lg calculator-add-field-button ddm-button' /}
						{/call}

						{let $disableField : $disableCalculatorField ? 'disabled' : '' /}

						<div class="calculator-button-area" data-onclick="{$_handleItemSelection}">
							<ul class="calculator-buttons calculator-buttons-numbers">
								<li class="border-top-left btn btn-secondary button-padding-icons calculator-button" data-calculator-key="backspace">
									{call ClayIcon.render}
										{param spritemap: $spritemap /}
										{param symbol: 'angle-left' /}
									{/call}
								</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="(">(</li>
								<li class="border-top-right btn btn-secondary calculator-button {$disableField}" data-calculator-key=")">)</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="1">1</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="2">2</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="3">3</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="4">4</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="5">5</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="6">6</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="7">7</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="8">8</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="9">9</li>
								<li class="border-bottom-left btn btn-secondary button-two-columns calculator-button {$disableField}" data-calculator-key="0">0</li>
								<li class="border-bottom-right btn btn-secondary calculator-button {$disableField}" data-calculator-key=".">.</li>
							</ul>

							<ul class="calculator-buttons calculator-buttons-operators">
								{let $disableCalculatorOptions:  $disableCalculatorField ? true : false /}
								<li data-calculator-key="...">
									{call ClayActionsDropdown.render}
										{param events: [
											'itemClicked': $_handleItemSelection
										] /}
										{param elementClasses: 'dropdown-action' /}
										{param disabled: $disableCalculatorOptions or $disableAddField /}
										{param items: $calculatorOptions /}
										{param ref: 'calculatorOptions' + $index /}
										{param spritemap: $spritemap /}
										{param style: 'secondary' /}
										{param triggerClasses: 'dropdown-toggle calculator-add-operator-button-area' /}
									{/call}
								</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="+">+</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="-">-</li>
								<li class="btn btn-secondary calculator-button {$disableField}" data-calculator-key="*">*</li>
								<li class="border-bottom-left border-bottom-right btn btn-secondary calculator-button {$disableField}" data-calculator-key="/">/</li>
							</ul>
						</div>
					</div>
				</div>

				<div class="calculate-container-fields col-md-9">
					<div class="form-group">
						{delcall PageRenderer.RegisterFieldType variant="'text'"}
							{param name: 'calculator-expression' /}
							{param readOnly: true /}
							{param displayStyle: 'multipleline' /}
							{param placeholder: $strings.theExpressionWillBeDisplayedHere /}
							{param showLabel: false /}
							{param spritemap: $spritemap /}
							{param value: $expression /}
						{/delcall}
					</div>
				</div>
			</div>
		</div>
	</div>
{/template}

{deltemplate ClayDropdownItem.Item variant="'dropdownCalculator'"}
	{@param label: string}
	{@param? _handleItemClick: any}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? href: string}
	{@param? icon: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? items: list<?>}
	{@param? itemsIconAlignment: string}
	{@param? maxItems: int}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? title: string}

	{let $item kind="html"}
		{$label}
		<span class="calculate-fieldname">Fieldname: {$title}</span>
	{/let}

	{let $itemAttributes kind="attributes"}
		class="dropdown-item
			{if $active or $checked}
				{sp}active
			{/if}
		"

		data-onclick="{$_handleItemClick}"
	{/let}

	<li {$itemAttributes} data-option-value='{$title}'>
		{$item}
	</li>

	{if $separator}
		<li aria-hidden="true" class="dropdown-divider" role="presentation"></li>
	{/if}

{/deltemplate}

{deltemplate ClayDropdownBase.Content variant="'dropdownFormContent'"}
	{@param? _handleItemClick: any}
	{@param? contentRenderer: string}
	{@param? items: list<?>}
	{@param? itemsIconAlignment: string}
	{@param? spritemap: string}

	{if $items}
		<ul class="list-unstyled">
			{call ClayDropdownBase.items}
				{param _handleItemClick: $_handleItemClick /}
				{param items: $items /}
				{param itemsIconAlignment: $itemsIconAlignment /}
				{param contentRenderer: 'dropdownCalculator' /}
				{param spritemap: $spritemap /}
			{/call}
		</ul>
	{/if}
{/deltemplate}