{namespace FormRenderer}

{template .render}
	{@param pages: ?}
	{@param spritemap: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handlePaginationItemClicked: any}
	{@param? _handlePaginationLeftClicked: any}
	{@param? _handlePaginationRightClicked: any}
	{@param? activePage: number}
	{@param? editable: bool}
	{@param? paginationMode: string}

	{let $currentPaginationMode: $paginationMode ?: 'paginated' /}
	{let $total: length($pages) /}

	{delcall FormRenderer.pages}
		{param _handleFieldBlurred: $_handleFieldBlurred /}
		{param _handleFieldClicked: $_handleFieldClicked /}
		{param _handleFieldEdited: $_handleFieldEdited /}
		{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
		{param _handlePaginationLeftClicked: $_handlePaginationLeftClicked /}
		{param _handlePaginationRightClicked: $_handlePaginationRightClicked /}
		{param activePage: $activePage ?: 0 /}
		{param editable: $editable /}
		{param pages: $pages /}
		{param paginationMode: $currentPaginationMode /}
		{param spritemap: $spritemap /}
		{param total: $total /}
	{/delcall}
{/template}

{deltemplate FormRenderer.pages}
	{@param activePage: number}
	{@param pages: ?}
	{@param paginationMode: string}
	{@param spritemap: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handlePaginationItemClicked: any}
	{@param? _handlePaginationLeftClicked: any}
	{@param? _handlePaginationRightClicked: any}
	{@param? editable: bool}

	<div class="position-relative">
		{if ($paginationMode == 'wizard') or (length($pages) == 1)}
			{delcall FormRenderer.PaginationContainer}
				{param _handleFieldBlurred: $_handleFieldBlurred /}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param _handlePaginationLeftClicked: $_handlePaginationLeftClicked /}
				{param _handlePaginationRightClicked: $_handlePaginationRightClicked /}
				{param activePage: $activePage /}
				{param pages: $pages /}
				{param paginationMode: $paginationMode /}
				{param spritemap: $spritemap /}
			{/delcall}
		{/if}

		{foreach $page in $pages}
			{call PageRenderer.render}
				{param activePage: $activePage /}
				{param editable: $editable /}
				{param events: [
					'fieldBlurred': $_handleFieldBlurred,
					'fieldClicked': $_handleFieldClicked,
					'fieldEdited': $_handleFieldEdited
				] /}
				{param page: $page /}
				{param pageIndex: index($page) /}
				{param paginationMode: $paginationMode /}
				{param ref: 'pageRenderer' + index($page) /}
				{param key: index($page) /}
				{param spritemap: $spritemap /}
				{param total: length($pages) /}
			{/call}
		{/foreach}

		{let $multiple: length($pages) > 1 /}

		{if ($multiple and ($paginationMode == 'paginated')) or (($paginationMode == 'paginated') and (length($pages) == 1))}
			{delcall FormRenderer.PaginationContainer}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param _handlePaginationLeftClicked: $_handlePaginationLeftClicked /}
				{param _handlePaginationRightClicked: $_handlePaginationRightClicked /}
				{param activePage: $activePage /}
				{param pages: $pages /}
				{param paginationMode: $paginationMode /}
				{param spritemap: $spritemap /}
			{/delcall}
		{/if}
	</div>
{/deltemplate}

{deltemplate FormRenderer.PaginationContainer}
	{@param activePage: number}
	{@param paginationMode: string}
	{@param spritemap: string}
	{@param? _handlePaginationItemClicked: any}
	{@param? _handlePaginationLeftClicked: any}
	{@param? _handlePaginationRightClicked: any}
	{@param? pages: ?}

	{let $multiple: length($pages) > 1 /}
	{let $classes kind="text"}
		ddm-form-pagination

		{if $multiple}
			{sp}position-relative
		{else}
			{sp}position-absolute
		{/if}

		{if $multiple and $paginationMode == 'wizard'}
			{sp}wizard-mode
		{elseif $multiple and $paginationMode == 'paginated'}
			{sp}pagination-mode
		{/if}
	{/let}

	<div class="{$classes}">
		{if $multiple and ($paginationMode == 'wizard')}
			{delcall FormRenderer.Wizard}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param activePage: $activePage /}
				{param pages: $pages /}
				{param spritemap: $spritemap /}
			{/delcall}
		{elseif $multiple and ($paginationMode == 'paginated')}
			{delcall FormRenderer.Pagination}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param _handlePaginationLeftClicked: $_handlePaginationLeftClicked /}
				{param _handlePaginationRightClicked: $_handlePaginationRightClicked /}
				{param activePage: $activePage /}
				{param pages: $pages /}
			{/delcall}
		{/if}
	</div>
{/deltemplate}

{deltemplate FormRenderer.Wizard}
	{@param? _handlePaginationItemClicked: any}
	{@param? activePage: number}
	{@param? pages: ?}

	<ol class="dmm-wizard multi-step-indicator-label-top multi-step-nav multi-step-nav-collapse-sm">
		{foreach $page in $pages}
			{let $pageIndex: index($page) /}

			{delcall FormRenderer.WizardItem variant="$page.paginationItemRenderer"}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param activePage: $activePage /}
				{param page: $page /}
				{param pageIndex: $pageIndex /}
				{param total: length($pages) /}
			{/delcall}
		{/foreach}
	</ol>
{/deltemplate}

{deltemplate FormRenderer.WizardItem}
	{@param? _handlePaginationItemClicked: any}
	{@param? activePage: number}
	{@param page: ?}
	{@param pageIndex: number}
	{@param total: number}

	{let $step: $pageIndex + 1 /}

	{let $classes kind="text"}
		multi-step-item

		{if $step != $total}
			{sp}multi-step-item-expand
		{/if}

		{if $pageIndex == $activePage}
			{sp}active
		{/if}
	{/let}

	<li class="{$classes}" data-onclick="{$_handlePaginationItemClicked}" data-page-index="{$pageIndex}">
		<div class="multi-step-divider"></div>
		<div class="multi-step-indicator">
			{let $defaultPageTitle kind="text"}
				{msg desc=""}untitled-page{/msg}
			{/let}
			{let $title: $page.title ? $page.title : $defaultPageTitle /}

			<div class="multi-step-indicator-label">{$title}</div>

			<a class="multi-step-icon" data-multi-step-icon="{$step}" href="javascript:;"></a>
		</div>
	</li>
{/deltemplate}

{deltemplate FormRenderer.Pagination}
	{@param activePage: number}
	{@param? _handlePaginationItemClicked: any}
	{@param? _handlePaginationLeftClicked: any}
	{@param? _handlePaginationRightClicked: any}
	{@param? pages: ?}

	<ul class="ddm-pagination justify-content-center pagination">
		{let $wizardClasses kind="text"}
			page-item

			{if $activePage == 0}
				{sp}visibility-hidden
			{/if}
		{/let}

		<li class="{$wizardClasses}" data-onclick="{$_handlePaginationLeftClicked}">
			<a class="page-link" href="javascript:;" role="button">
				«
				<span class="sr-only">{msg desc=""}previous{/msg}</span>
			</a>
		</li>

		{foreach $page in $pages}
			{let $pageIndex: index($page) /}

			{delcall FormRenderer.PaginationItem variant="$page.paginationItemRenderer"}
				{param _handlePaginationItemClicked: $_handlePaginationItemClicked /}
				{param activePage: $activePage /}
				{param page: $page /}
				{param pageIndex: $pageIndex /}
			{/delcall}
		{/foreach}

		{let $paginationClasses kind="text"}
			page-item

			{if ($activePage == (length($pages) - 1)) or ($activePage == -1)}
				{sp}visibility-hidden
			{/if}
		{/let}

		<li class="{$paginationClasses}" data-onclick="{$_handlePaginationRightClicked}">
			<a class="page-link" href="javascript:;" role="button">
				»
				<span class="sr-only">{msg desc=""}next{/msg}</span>
			</a>
		</li>
	</ul>
{/deltemplate}

{deltemplate FormRenderer.PaginationItem}
	{@param activePage: number}
	{@param page: ?}
	{@param pageIndex: number}
	{@param? _handlePaginationItemClicked: any}

	{let $step: $pageIndex + 1 /}
	{let $classes kind="text"}
		page-item

		{if $pageIndex == $activePage}
			{sp}active
		{/if}
	{/let}

	<li class="{$classes}" data-onclick="{$_handlePaginationItemClicked}" data-page-index="{$pageIndex}">
		<a class="page-link" href="javascript:;">{$step}</a>
	</li>
{/deltemplate}