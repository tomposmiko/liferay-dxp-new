{namespace PageRenderer}

{template .render}
	{@param pages: ?}
	{@param showSubmitButton: bool}
	{@param spritemap: string}
	{@param submitLabel: string}
	{@param total: number}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handleFieldFocused: any}
	{@param? activePage: number}
	{@param? editable: bool}
	{@param? empty: bool}
	{@param? page: ?}
	{@param? pageIndex: number}
	{@param? paginationMode: string}
	{@param? readOnly: bool}
	{@param? strings: map<string, string>}

	{let $contentRenderer kind="text"}
		{if $page.contentRenderer != null and $page.contentRenderer != ''}
			{$page.contentRenderer}
		{elseif $paginationMode == null or $paginationMode == ''}
			{if length($pages) > 1}
				wizard
			{else}
				single_page
			{/if}
		{elseif $paginationMode != null and $paginationMode == 'single-page'}
			single_page
		{else}
			{$paginationMode}
		{/if}
	{/let}

	{delcall PageRenderer.container variant="$contentRenderer"}
		{param _handleFieldBlurred: $_handleFieldBlurred /}
		{param _handleFieldClicked: $_handleFieldClicked /}
		{param _handleFieldEdited: $_handleFieldEdited /}
		{param _handleFieldFocused: $_handleFieldFocused /}
		{param activePage: $activePage ?: 0 /}
		{param contentRenderer: $contentRenderer /}
		{param editable: $editable /}
		{param empty: $empty /}
		{param page: $page /}
		{param pageIndex: $pageIndex ?: 0 /}
		{param pages: $pages /}
		{param paginationMode: $paginationMode /}
		{param readOnly: $readOnly /}
		{param showSubmitButton: $showSubmitButton /}
		{param spritemap: $spritemap /}
		{param strings: $strings /}
		{param submitLabel: $submitLabel /}
		{param total: $total /}
	{/delcall}
{/template}

{template .page}
	{@param activePage: number}
	{@param pageIndex: number}
	{@param paginationMode: string}
	{@param spritemap: string}
	{@param total: number}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handleFieldFocused: any}
	{@param? editable: bool}
	{@param? empty: bool}
	{@param? page: ?}

	<div class="active ddm-form-page lfr-ddm-form-page">
		{let $headerRenderer: $page.headerRenderer ?: '' /}

		{if $activePage == $pageIndex}
			{delcall PageRenderer.PageHeader data="$page" variant="$headerRenderer"}
				{param description: $page.description ?: '' /}
				{param pageIndex: $pageIndex /}
				{param title: $page.title ?: '' /}
				{param total: $total /}
			{/delcall}
		{/if}

		{if $empty and $editable and $activePage == $pageIndex}
			{let $attributes kind="attributes"}
				class="col col-empty col-md-12 last-col lfr-initial-col mt-5 mb-4"
				data-ddm-field-column="0"
				data-ddm-field-page="{$pageIndex}"
				data-ddm-field-row="0"
			{/let}

			<div class="row">
				<div {$attributes}>
					<div class="ddm-empty-page ddm-target">
						<p class="ddm-empty-page-message">
							{msg desc=""}drag-from-sidebar-and-drop-here{/msg}
						</p>
					</div>
				</div>
			</div>
		{else}
			{foreach $row in $page.rows}
				{if isFirst($row) and $editable and $activePage == $pageIndex}
					{call .placeholder}
						{param isRow: true /}
						{param pageIndex: $pageIndex /}
						{param rowIndex: 0 /}
						{param size: 12 /}
					{/call}
				{/if}

				{call .row}
					{param _handleFieldBlurred: $_handleFieldBlurred /}
					{param _handleFieldClicked: $_handleFieldClicked /}
					{param _handleFieldEdited: $_handleFieldEdited /}
					{param _handleFieldFocused: $_handleFieldFocused /}
					{param activePage: $activePage /}
					{param editable: $editable /}
					{param pageIndex: $pageIndex /}
					{param paginationMode: $paginationMode /}
					{param row: $row /}
					{param rowIndex: index($row) /}
					{param spritemap: $spritemap /}
				{/call}

				{if $editable and $activePage == $pageIndex}
					{call .placeholder}
						{param isRow: true /}
						{param pageIndex: $pageIndex /}
						{param rowIndex: index($row) + 1 /}
						{param size: 12 /}
					{/call}
				{/if}
			{/foreach}
		{/if}
	</div>
{/template}

{template .row}
	{@param activePage: number}
	{@param spritemap: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handleFieldFocused: any}
	{@param? editable: bool}
	{@param? pageIndex: number}
	{@param? row: ?}
	{@param? rowIndex: number}

	<div class="position-relative row">
		{foreach $column in $row.columns}
			{call .column}
				{param _handleFieldBlurred: $_handleFieldBlurred /}
				{param _handleFieldClicked: $_handleFieldClicked /}
				{param _handleFieldEdited: $_handleFieldEdited /}
				{param _handleFieldFocused: $_handleFieldFocused /}
				{param activePage: $activePage /}
				{param column: $column /}
				{param columnIndex: index($column) /}
				{param editable: $editable /}
				{param pageIndex: $pageIndex /}
				{param rowIndex: $rowIndex /}
				{param spritemap: $spritemap /}
			{/call}
		{/foreach}
	</div>
{/template}

{template .column}
	{@param activePage: number}
	{@param spritemap: string}
	{@param? _handleFieldBlurred: any}
	{@param? _handleFieldClicked: any}
	{@param? _handleFieldEdited: any}
	{@param? _handleFieldFocused: any}
	{@param? column: ?}
	{@param? columnIndex: number}
	{@param? editable: bool}
	{@param? pageIndex: number}
	{@param? rowIndex: number}

	{if length($column.fields) != 0}
		{let $indexes kind="attributes"}
			data-ddm-field-row="{$rowIndex}"
			data-ddm-field-page="{$pageIndex}"
			data-ddm-field-column="{$columnIndex}"
		{/let}

		{let $attributes kind="attributes"}
			class="col-md-{$column.size} col-ddm"

			{$indexes}
		{/let}

		<div {$attributes}>
			{let $content kind="html"}
				{foreach $field in $column.fields}
					{let $fieldType: $field.type /}

					{delcall PageRenderer.RegisterFieldType variant="$fieldType" data="$field" allowemptydefault="true"}
						{param events: [
						'fieldBlurred': $_handleFieldBlurred,
						'fieldEdited': $_handleFieldEdited,
						'fieldFocused': $_handleFieldFocused
						] /}
						{param ref: $field.type + $field.fieldName + $field.name + $field.label + $rowIndex + $columnIndex + $pageIndex /}
						{param spritemap: $spritemap /}
					{/delcall}
				{/foreach}
			{/let}

			{if $editable}
				{let $selected: $column.fields[0].selected /}

				<div class="ddm-field-container h-100 {if $selected}selected{/if}">
					<div class="ddm-resize-handle ddm-resize-handle-left" {$indexes}></div>

					{let $attributesDrag kind="attributes"}
						class="ddm-drag"

						data-onclick="{$_handleFieldClicked}"
					{/let}

					<div {$attributesDrag}>
						{$content}
					</div>

					<div class="ddm-resize-handle ddm-resize-handle-right" {$indexes}></div>
				</div>
			{else}
				{$content}
			{/if}
		</div>
	{elseif $editable and $activePage == $pageIndex}
		{call .placeholder}
			{param columnIndex: $columnIndex /}
			{param pageIndex: $pageIndex /}
			{param rowIndex: $rowIndex /}
			{param size: $column.size /}
		{/call}
	{/if}
{/template}

{template .placeholder}
	{@param size: number}
	{@param? columnIndex: number}
	{@param? isRow: bool}
	{@param? pageIndex: number}
	{@param? rowIndex: number}

	{let $attributes kind="attributes"}
		class="col col-empty col-md-{$size}"

		{if $rowIndex != 'undefined'}
			data-ddm-field-row="{$rowIndex}"
		{/if}

		{if $pageIndex != 'undefined'}
			data-ddm-field-page="{$pageIndex}"
		{/if}

		{if $columnIndex != 'undefined'}
			data-ddm-field-column="{$columnIndex}"
		{/if}
	{/let}

	{let $content kind="html"}
		<div {$attributes}>
			<div class="ddm-target"></div>
		</div>
	{/let}

	{if $isRow}
		<div class="placeholder row">
			{$content}
		</div>
	{else}
		{$content}
	{/if}
{/template}

{deltemplate PageRenderer.RegisterFieldType}
	{@param? editable: bool}
	{@param? field: ?}

	{if $editable}
		<div class="ddm-field-not-found">
			Field doesn't exist.
		</div>
	{/if}
{/deltemplate}

{deltemplate PageRenderer.PageHeader}
	{@param description: string}
	{@param pageIndex: number}
	{@param title: string}
	{@param total: number}

	{let $pageTitleAttributes kind="attributes"}
		class="lfr-ddm-form-page-title"
	{/let}

	<h3 {$pageTitleAttributes}>{$title}</h3>

	{let $pageDescriptionAttributes kind="attributes"}
		class="lfr-ddm-form-page-description"
	{/let}

	<h4 {$pageDescriptionAttributes}>{$description}</h4>
{/deltemplate}