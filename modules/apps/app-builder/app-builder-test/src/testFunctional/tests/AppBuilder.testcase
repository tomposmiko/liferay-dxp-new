@component-name = "app-builder"
definition {

	property custom.properties = "default.layout.template.id=1_column";

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "App Builder";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "App Builder Site Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "App Builder",
			panel = "Control Panel",
			portlet = "Custom Objects");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "App Builder",
				panel = "Control Panel",
				portlet = "Custom Objects");

			AppBuilderAdmin.teardownAppBuilder();

			Page.tearDownCP();

			JSONGroup.deleteGroupByName(groupName = "App Builder Site Name");

		}
	}

	@description = "Add a Custom Object with valid name"
	@priority = "5"
	test AddCustomObjectWithValidName {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "my custom object");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "my custom object");
	}

	@description = "This is a use case for LPS-104569."
	@priority = "5"
	test AddMultipleFormViewsToTheSameObject {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 1",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 2",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		var fieldList = "Text,Select from List,Single Selection,Multiple Selection,Date,Numeric,Upload";

		for (var field : list "${fieldList}") {

			AppBuilderAdmin.add();

			FormViewBuilder.addFormViewAndValidateFieldLabel(
				fieldType = "${field}",
				formViewName = "My Form View with ${field} 1");

			FormViewBuilder.addFormViewAndValidateFieldLabel(
				fieldType = "${field}",
				formViewName = "My Form View with ${field} 2");

			FormViewBuilder.openFormView(formViewName = "My Form View with ${field} 1");
			FormViewBuilder.validateFieldLabel(fieldLabel = "${field}");
			AppBuilderAdmin.gotoBack();

			FormViewBuilder.openFormView(formViewName = "My Form View with ${field} 2");
			FormViewBuilder.validateFieldLabel(fieldLabel = "${field}");
			AppBuilderAdmin.gotoBack();
		}

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.openItem(itemName = "my custom object 1");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Create one or more forms to display the data held in your data object.",
			title = "There are no form views yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Form View");
	}

	@description = "Add a Form View with a Date field"
	@priority = "5"
	test AddSimpleFormViewWithDateField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Date",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Grid field"
	@ignore = "true"
	@priority = "5"
	test AddSimpleFormViewWithGridField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Grid",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Multiple Selection field"
	@priority = "5"
	test AddSimpleFormViewWithMultipleSelectionField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Multiple Selection",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Numeric field"
	@priority = "5"
	test AddSimpleFormViewWithNumericField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Numeric",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Select From List field"
	@priority = "5"
	test AddSimpleFormViewWithSelectFromListField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Select from List",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Single Selection field"
	@priority = "5"
	test AddSimpleFormViewWithSingleSelectionField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Single Selection",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Text Field"
	@priority = "5"
	test AddSimpleFormViewWithTextField {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Text",
			formViewName = "My Form View");
	}

	@description = "Add a Form View with a Upload field"
	@priority = "5"
	test AddSimpleFormViewWithUploadField {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormViewAndValidateFieldLabel(
			fieldType = "Upload",
			formViewName = "My Form View");
	}

	@description = "Add a Table View"
	@priority = "5"
	test AddSimpleTableView {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.add();

		TableViewBuilder.addColumnByDoubleClick(fieldType = "Text");

		TableViewBuilder.setName(tableViewName = "My Table View");

		TableViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "My Table View");

		AppBuilderAdmin.openItem(itemName = "My Table View");

		TableViewBuilder.validateColumnLabel(columnLabel = "Text");

		TableViewBuilder.validateColumnLabelAtSidebar(columnLabel = "Text");

		TableViewBuilder.save();
	}

	@description = "Attempt to add a Custom Object without a valid name"
	@priority = "5"
	test AttemptToAddCustomObjectWithoutValidName {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancel();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancel();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "false");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancel();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "false");
		AppBuilderAdmin.validateRequiredValidNameMessage();
		AppBuilderAdmin.cancel();
	}

	@description = "Change order of list from default most recent on top to oldest."
	@priority = "5"
	test ChangeFormViewsListOrderByDate {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title");

		FormViewBuilder.addFormView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Date Field - Form View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Text Field - Form View Title");

		AppBuilderAdmin.filterListAscendAndDescend();

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Text Field - Form View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Date Field - Form View Title");
	}

	@description = "Order the list of Form Views by Name/Title (Asc or Desc)"
	@priority = "5"
	test ChangeFormViewsListOrderByName {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title");

		FormViewBuilder.addFormView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Date Field - Form View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Text Field - Form View Title");

		AppBuilderAdmin.chooseSearchFilterByOption(filterOption = "Name");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Text Field - Form View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Date Field - Form View Title");
	}

	@description = "Change order of Table Views list from the default of most recent on top to oldest."
	@priority = "5"
	test ChangeTableViewsListOrderByDate {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Single Selection",
			formViewName = "Single Selection Field - Form View Title",
			tableViewName = "Single Selection Field - Table View Title");

		FormViewBuilder.switchToFormViewTab();

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Upload",
			formViewName = "Upload Field - Form View Title",
			tableViewName = "Upload Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Upload Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Single Selection Field - Table View Title");

		AppBuilderAdmin.filterListAscendAndDescend();

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Single Selection Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Upload Field - Table View Title");
	}

	@description = "Order the list of Table Views by Name/Title (Asc or Desc)"
	@priority = "5"
	test ChangeTableViewsListOrderByName {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title",
			tableViewName = "Text Field - Table View Title");

		FormViewBuilder.switchToFormViewTab();

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Numeric",
			formViewName = "Numeric Field - Form View Title",
			tableViewName = "Numeric Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Numeric Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Text Field - Table View Title");

		AppBuilderAdmin.chooseSearchFilterByOption(filterOption = "Name");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Text Field - Table View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Numeric Field - Table View Title");
	}

	@description = "Create, Remove, Update and Delete entries of an application deployed as Product Menu"
	@priority = "5"
	test CreateRemoveUpdateDeleteEntriesOfProductMenuApp {
		property portal.acceptance = "true";

		var myFormViewName = "My Registration form";
		var myTableViewName = "My display table";
		var myAppName = "My Registration app";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Full name");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Nickname");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Numeric");
		FormViewBuilder.setFieldLabel(fieldLabel = "Number of children");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Select from List");
		FormViewBuilder.setFieldLabel(fieldLabel = "Occupation");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Date");
		FormViewBuilder.setFieldLabel(fieldLabel = "Date of birth");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Multiple Selection");
		FormViewBuilder.setFieldLabel(fieldLabel = "Hobbies");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Multiple${number}",
				optionValue = "Multiple ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.setName(formViewName = "${myFormViewName}");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myFormViewName}");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.add();

		TableViewBuilder.addColumnByDoubleClick(fieldType = "Full name");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Nickname");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Number of children");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Occupation");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Date of birth");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Hobbies");

		TableViewBuilder.setName(tableViewName = "${myTableViewName}");

		TableViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myTableViewName}");

		App.add(
			appTitle = "${myAppName}",
			deployOption = "Product Menu",
			formViewName = "${myFormViewName}",
			tableViewName = "${myTableViewName}");

		AppBuilderAdmin.gotoCustomAppCP(
			panel = "Control Panel",
			portlet = "${myAppName}");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Alex");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "4");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 2");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 1,Multiple 2");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2016");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Alex");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "4");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 2");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2016");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1, Multiple 2");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Ferguson");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Ferguson");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "7");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 3");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 3");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2000");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Ferguson");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister Ferguson");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "7");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 3");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2000");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 3");

		AppBuilderAdmin.viewItem(itemName = "Ferguson");

		DetailsView.validateEntry(entry = "Ferguson");
		DetailsView.validateEntry(entry = "Mister Ferguson");
		DetailsView.validateEntry(entry = "7");
		DetailsView.validateEntry(entry = "Select 3");
		DetailsView.validateEntry(entry = "05/02/2000");
		DetailsView.validateEntry(entry = "Multiple 3");

		DetailsView.previousEntry();

		DetailsView.validateEntry(entry = "Alex");
		DetailsView.validateEntry(entry = "Mister");
		DetailsView.validateEntry(entry = "4");
		DetailsView.validateEntry(entry = "Select 2");
		DetailsView.validateEntry(entry = "05/02/2016");
		DetailsView.validateEntry(entry = "Multiple 1");
		DetailsView.validateEntry(entry = "Multiple 2");

		DetailsView.deleteEntry(itemName = "Alex");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Pepe");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Guardi");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "6");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 1");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 1");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/1999");

		AppBuilderAdmin.save();

		AppBuilderAdmin.viewItem(itemName = "Ferguson");

		DetailsView.nextEntry();

		DetailsView.editEntry();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Klopp");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Klopp");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "4");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 3");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 2");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/1989");

		AppBuilderAdmin.cancel();

		DetailsView.validateEntry(entry = "Pepe");
		DetailsView.validateEntry(entry = "Mister Guardi");
		DetailsView.validateEntry(entry = "6");
		DetailsView.validateEntry(entry = "Select 1");
		DetailsView.validateEntry(entry = "05/02/1999");
		DetailsView.validateEntry(entry = "Multiple 1");

		DetailsView.backButton();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Pepe");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister Guardi");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "6");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/1999");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1");
	}

	@description = "Create, Remove, Update and Delete entries of an application deployed as a Standalone"
	@priority = "5"
	test CreateRemoveUpdateDeleteEntriesOfStandaloneApp {
		property portal.acceptance = "true";

		var myFormViewName = "My Registration form";
		var myTableViewName = "My display table";
		var myAppName = "My Registration app";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Full name");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Nickname");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Numeric");
		FormViewBuilder.setFieldLabel(fieldLabel = "Number of children");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Select from List");
		FormViewBuilder.setFieldLabel(fieldLabel = "Occupation");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Date");
		FormViewBuilder.setFieldLabel(fieldLabel = "Date of birth");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Multiple Selection");
		FormViewBuilder.setFieldLabel(fieldLabel = "Hobbies");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Multiple${number}",
				optionValue = "Multiple ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.setName(formViewName = "${myFormViewName}");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myFormViewName}");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.add();

		TableViewBuilder.addColumnByDoubleClick(fieldType = "Full name");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Nickname");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Number of children");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Occupation");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Date of birth");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Hobbies");

		TableViewBuilder.setName(tableViewName = "${myTableViewName}");

		TableViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myTableViewName}");

		App.add(
			appTitle = "${myAppName}",
			deployOption = "Standalone",
			formViewName = "${myFormViewName}",
			tableViewName = "${myTableViewName}");

		AppBuilderAdmin.openStandAloneApp(itemName = "My Registration app");

		SelectWindow.selectPopUp(locator1 = "null");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Alex");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "4");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 2");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 1,Multiple 2");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2016");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Alex");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "4");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 2");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2016");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1, Multiple 2");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Ferguson");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Ferguson");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "7");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 3");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 3");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2000");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Ferguson");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister Ferguson");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "7");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 3");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2000");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 3");

		AppBuilderAdmin.viewItem(itemName = "Ferguson");

		DetailsView.validateEntry(entry = "Ferguson");
		DetailsView.validateEntry(entry = "Mister Ferguson");
		DetailsView.validateEntry(entry = "7");
		DetailsView.validateEntry(entry = "Select 3");
		DetailsView.validateEntry(entry = "05/02/2000");
		DetailsView.validateEntry(entry = "Multiple 3");

		DetailsView.previousEntry();

		DetailsView.validateEntry(entry = "Alex");
		DetailsView.validateEntry(entry = "Mister");
		DetailsView.validateEntry(entry = "4");
		DetailsView.validateEntry(entry = "Select 2");
		DetailsView.validateEntry(entry = "05/02/2016");
		DetailsView.validateEntry(entry = "Multiple 1");
		DetailsView.validateEntry(entry = "Multiple 2");

		DetailsView.deleteEntry(itemName = "Alex");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Pepe");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Guardi");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "6");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 1");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 1");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/1999");

		AppBuilderAdmin.save();

		AppBuilderAdmin.viewItem(itemName = "Ferguson");

		DetailsView.nextEntry();

		DetailsView.editEntry();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Klopp");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister Klopp");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "4");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 3");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 2");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/1989");

		AppBuilderAdmin.cancel();

		DetailsView.validateEntry(entry = "Pepe");
		DetailsView.validateEntry(entry = "Mister Guardi");
		DetailsView.validateEntry(entry = "6");
		DetailsView.validateEntry(entry = "Select 1");
		DetailsView.validateEntry(entry = "05/02/1999");
		DetailsView.validateEntry(entry = "Multiple 1");

		DetailsView.backToTableView();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Pepe");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister Guardi");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "6");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/1999");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1");
	}

	@description = "Create, Remove, Update and Delete entries of an application deployed as a Widget"
	@priority = "5"
	test CreateRemoveUpdateDeleteEntriesOfWidgetApp {
		property portal.acceptance = "true";

		var myFormViewName = "My Registration form";
		var myTableViewName = "My display table";
		var myAppName = "My Registration app";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Full name");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Text");
		FormViewBuilder.setFieldLabel(fieldLabel = "Nickname");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Numeric");
		FormViewBuilder.setFieldLabel(fieldLabel = "Number of children");
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Select from List");
		FormViewBuilder.setFieldLabel(fieldLabel = "Occupation");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Date");
		FormViewBuilder.setFieldLabel(fieldLabel = "Date of birth");
		FormViewBuilder.setFieldRequired();
		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Multiple Selection");
		FormViewBuilder.setFieldLabel(fieldLabel = "Hobbies");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Multiple${number}",
				optionValue = "Multiple ${number}",
				rowNumber = "${number}");
		}
		FormViewBuilder.closeSidebar();

		FormViewBuilder.setName(formViewName = "${myFormViewName}");

		FormViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myFormViewName}");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.add();

		TableViewBuilder.addColumnByDoubleClick(fieldType = "Full name");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Nickname");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Number of children");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Occupation");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Date of birth");
		TableViewBuilder.addColumnByDoubleClick(fieldType = "Hobbies");

		TableViewBuilder.setName(tableViewName = "${myTableViewName}");

		TableViewBuilder.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${myTableViewName}");

		App.add(
			appTitle = "${myAppName}",
			deployOption = "Widget",
			formViewName = "${myFormViewName}",
			tableViewName = "${myTableViewName}");

		JSONLayout.addPublicLayout(
			groupName = "App Builder Site Name",
			layoutName = "App Builder Test Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "App Builder Site Name",
			layoutName = "App Builder Test Page",
			layoutTemplate = "1 Column");

		Navigator.gotoSitePage(
			pageName = "App Builder Test Page",
			siteName = "App Builder Site Name");

		Portlet.addPG(
			pageName = "App Builder Test Page",
			portletName = "My Registration app");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Alex");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Mister");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "2");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 2");

		FormViewBuilder.selectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 1,Multiple 2,Multiple 3");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2016");

		AppBuilderAdmin.save();

		Navigator.gotoSitePage(
			pageName = "App Builder Test Page",
			siteName = "App Builder Site Name");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Alex");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Mister");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "2");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 2");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2016");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1, Multiple 2, Multiple 3");

		AppBuilderAdmin.editItem(itemName = "Alex");

		FormViewBuilder.editText(
			fieldName = "FullName",
			fieldValue = "Pepe");

		FormViewBuilder.editText(
			fieldName = "Nickname",
			fieldValue = "Guardi");

		FormViewBuilder.editText(
			fieldName = "NumberOfChildren",
			fieldValue = "1");

		FormViewBuilder.selectSelectOption(
			fieldName = "Occupation",
			selectOption = "Select 1");

		FormViewBuilder.deselectSelectWithMultipleOptions(
			fieldName = "Hobbies",
			selectOptionsList = "Multiple 2");

		FormViewBuilder.editDate(
			fieldName = "DateOfBirth",
			fieldValue = "05/02/2014");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Pepe");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Guardi");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Select 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "05/02/2014");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Multiple 1, Multiple 3");

		AppBuilderAdmin.deleteEntry(itemName = "Pepe");
	}

	@description = "Delete an existing custom object with no associated relationships"
	@priority = "5"
	test DeleteCustomObjectWithAssociatedRelationship {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		TableViewBuilder.addBasicTableView(
			fieldType = "Text",
			tableViewName = "My Table View");

		App.add(
			appTitle = "Test App",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		AppBuilderAdmin.gotoCustomAppCP(
			panel = "Control Panel",
			portlet = "Test App");

		AppBuilderAdmin.add();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "test");

		AppBuilderAdmin.save();

		ProductMenu.gotoPortlet(
			category = "App Builder",
			panel = "Control Panel",
			portlet = "Custom Objects");

		AppBuilderAdmin.deleteEntry(itemName = "my custom object");
	}

	@description = "Delete an existing custom object with no associated relationships"
	@priority = "5"
	test DeleteCustomObjectWithNoAssociatedRelationship {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.deleteEntry(itemName = "my custom object");
	}

	@description = "Delete an existing Form View with no active publishing through the kebab/action menu"
	@priority = "5"
	test DeleteFormViewThroughActionMenu {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View 1");

		AppBuilderAdmin.deleteEntry(itemName = "My Form View 1");
	}

	@description = "Delete an existing Table View with no active publishing through the kebab/action menu"
	@priority = "5"
	test DeleteTableViewThroughActionMenu {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title",
			tableViewName = "Text Field - Table View Title");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Text Field - Table View Title");

		AppBuilderAdmin.deleteEntry(itemName = "Text Field - Table View Title");
	}

	@description = "Choose between the existing Form Views of an object when deploying an app"
	@priority = "5"
	test DeployAnAppChoosingBetweenTheExistingFormViews {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View 1");

		FormViewBuilder.addFormView(
			fieldType = "Numeric",
			formViewName = "My Form View 2");

		TableViewBuilder.addBasicTableView(
			fieldType = "Text",
			tableViewName = "My Table View 1");

		TableViewBuilder.addBasicTableView(
			fieldType = "Numeric",
			tableViewName = "My Table View 2");

		App.add(
			appTitle = "Test App 1",
			deployOption = "Product Menu",
			formViewName = "My Form View 1",
			tableViewName = "My Table View 1");

		App.add(
			appTitle = "Test App 2",
			deployOption = "Product Menu",
			formViewName = "My Form View 2",
			tableViewName = "My Table View 2");

		AppBuilderAdmin.gotoCustomAppCP(
			panel = "Control Panel",
			portlet = "Test App 1");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "content of form 1");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "content of form 1");

		AppBuilderAdmin.gotoCustomAppCP(
			panel = "Control Panel",
			portlet = "Test App 2");

		AppBuilderAdmin.add();

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "123");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "123");
	}

	@description = "Clear search results when clicking the Clear button on the search results banner"
	@priority = "5"
	test FormViewClearSearchResults {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title");

		FormViewBuilder.addFormView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.searchByItem(itemName = "Text");

		AppBuilderAdmin.validateIfSearchItemIsFound(itemName = "Text");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Date Field - Form View Title");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Text Field - Form View Title");
	}

	@description = "Validate returns by search engine using a search term"
	@priority = "5"
	test FormViewSearchByTerm {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title");

		FormViewBuilder.addFormView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.searchByItem(itemName = "Text");

		AppBuilderAdmin.validateIfSearchItemIsFound(itemName = "Text");
	}

	@description = "No results found screen is shown when the search doesn't retrieve any results"
	@ignore = "true"
	@priority = "5"
	test FormViewSearchNoResultsFound {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title");

		FormViewBuilder.addFormView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.searchByItem(itemName = "Apple");

		AppBuilderAdmin.validateIfSearchItemIsNotFound(itemName = "Apple");
	}

	@description = "Publish my app as a widget and submit entry"
	@priority = "5"
	test PublishAppAsWidgetAndSubmitEntry {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		TableViewBuilder.addBasicTableView(
			fieldType = "Text",
			tableViewName = "My Table View");

		App.add(
			appTitle = "Widget App",
			deployOption = "Widget",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "App Builder Page");

		Navigator.gotoPage(pageName = "App Builder Page");

		Portlet.addPG(
			pageName = "App Builder Page",
			portletName = "Widget App");

		AppBuilderAdmin.add();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Content of form deployed as widget.");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Content of form deployed as widget.");
	}

	@description = "Search for an object in the object list"
	@priority = "5"
	test SearchForObject {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 1",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 2",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 3",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.gotoBack();

		AppBuilderAdmin.searchByItem(itemName = "1");

		AppBuilderAdmin.validateIfSearchItemIsFound(itemName = "1");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.chooseSearchFilterByOption(filterOption = "Name");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "my custom object 3");

		AppBuilderAdmin.chooseSearchFilterByOption(filterOption = "Modified Date");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "my custom object 3");

		AppBuilderAdmin.searchByItem(itemName = "!@#");

		AppBuilderAdmin.validateIfSearchItemIsNotFound(itemName = "!@#");
	}

	@description = "Clear Table View search results when clicking the Clear button on the search results banner"
	@priority = "5"
	test TableViewClearSearchResults {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Upload",
			formViewName = "Upload Field - Form View Title",
			tableViewName = "Upload Field - Table View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.searchByItem(itemName = "Upload");

		AppBuilderAdmin.validateIfSearchItemIsFound(itemName = "Upload");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Upload Field - Table View Title");
	}

	@description = "Validate Table View search returns by search engine using a search term"
	@priority = "5"
	test TableViewSearchByTerm {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "My custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title",
			tableViewName = "Text Field - Table View Title");

		FormViewBuilder.switchToFormViewTab();

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title",
			tableViewName = "Date Field - Table View Title");

		AppBuilderAdmin.searchByItem(itemName = "Text");

		AppBuilderAdmin.validateIfSearchItemIsFound(itemName = "Text");
	}

	@description = "No results found screen is shown when the Table View search doesn't retrieve any results"
	@priority = "5"
	test TableViewSearchNoResultsFound {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "Custom Object Title",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "Text Field - Form View Title",
			tableViewName = "Text Field - Table View Title");

		FormViewBuilder.switchToFormViewTab();

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Date",
			formViewName = "Date Field - Form View Title",
			tableViewName = "Date Field - Table View Title");

		AppBuilderAdmin.validateCustomObjectNameOnHeader(customObjectName = "Custom Object Title");

		AppBuilderAdmin.searchByItem(itemName = "Apple");

		AppBuilderAdmin.validateIfSearchItemIsNotFound(itemName = "Apple");
	}

	@description = "Validate empty list state of Apps listing screen"
	@priority = "5"
	test ValidateEmptyStateOfAppsListingScreen {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.switchTab(tabName = "Apps");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Select the form and table view you want and deploy your app as a widget, standalone or place it in the product menu.",
			title = "There are no apps yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New App");
	}

	@description = "Validate empty list state of Custom Object listing screen"
	@priority = "5"
	test ValidateEmptyStateOfCustomObjectListingScreen {

		AppBuilderAdmin.teardownAppBuilder();

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Custom Objects define the types of data your business application needs.",
			title = "There are no custom objects yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Custom Object");
	}

	@description = "Validate empty list state of Form View listing screen"
	@priority = "5"
	test ValidateEmptyStateOfFormViewListingScreen {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Create one or more forms to display the data held in your data object.",
			title = "There are no form views yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Form View");
	}

	@description = "Validate empty list state of Table View listing screen"
	@priority = "5"
	test ValidateEmptyStateOfTableViewListingScreen {

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.switchTab(tabName = "Table Views");

		AppBuilderAdmin.validateEmptyListMessage(
			description = "Create one or more tables to display the data held in your data object.",
			title = "There are no table views yet.");

		AppBuilderAdmin.assertNewButtonIsVisible(buttonValue = "New Table View");
	}

}