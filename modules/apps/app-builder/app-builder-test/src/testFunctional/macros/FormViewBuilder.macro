definition {

	macro addFieldByDoubleClick {

		var key_fieldType = "${fieldType}";

		DoubleClick(locator1 = "FormViewBuilder#ADD_FIELD_TYPE");

		AssertElementPresent(locator1 = "FormViewBuilder#SIDEBAR_BASIC_TAB");
	}

	macro addFieldByDragAndDrop {

		Pause(locator1 = "10000");

		var key_fieldType = "${fieldType}";

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "FormViewBuilder#ADD_FIELD_TYPE",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = "${fieldType}");

		AssertElementPresent(locator1 = "FormViewBuilder#SIDEBAR_BASIC_TAB");
	}

	macro addFormView {

		if (IsElementNotPresent(locator1 = "FormViewBuilder#SIDEBAR_FIELDS_TAB") && IsElementPresent(locator1 = "AppBuilder#FORM_VIEW_TAB")) {
			FormViewBuilder.switchToFormViewTab();
			AppBuilderAdmin.add();
		}

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "${formViewName}");

		FormViewBuilder.save();
	}

	macro addFormViewAndValidateFieldLabel {

		FormViewBuilder.addFormView(
			fieldType = "${fieldType}",
			formViewName = "${formViewName}");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${formViewName}");

		AppBuilderAdmin.openItem(itemName = "${formViewName}");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");

		AppBuilderAdmin.gotoBack();
	}

	macro clickOnSwitcher {
		Click(
			key_switcherOption = "${propertyName}",
			locator1 = "FormViewBuilder#SIDEBAR_BASIC_REQUIRED");
	}

	macro closeSidebar() {
		Click(locator1 = "FormViewBuilder#CLOSE_SIDEBAR");
	}

	macro deselectSelectWithMultipleOptions {
		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.disableCheckbox(fieldName = "${selectOption}");
		}
	}

	macro disableCheckbox {
		if (IsChecked(locator1 = "FormViewBuilder#CHECKBOX", key_fieldName = "${fieldName}")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "FormViewBuilder#CHECKBOX_LABEL");
		}

		FormViewBuilder.viewCheckboxNotChecked(fieldName = "${fieldName}");
	}

	macro editDate {
		Type(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#DATE_FIELD",
			value1 = "${fieldValue}");
	}

	macro editOptionsRow {
		var key_rowNumber = "${rowNumber}";

		Type(
			locator1 = "FormViewBuilder#OPTIONS_OPTION_VALUE_FIELD",
			value1 = "${optionValue}");

		AssertElementPresent(locator1 = "FormViewBuilder#OPTIONS_OPTION_NAME_FIELD");
	}

	macro editText {
		Type(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#TEXT_FIELD",
			value1 = "${fieldValue}");
	}

	macro enableCheckbox {
		if (IsNotChecked.isNotCheckedNotVisible(locator1 = "FormViewBuilder#CHECKBOX", key_fieldName = "${fieldName}")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "FormViewBuilder#CHECKBOX_LABEL");
		}

		FormViewBuilder.viewCheckboxChecked(fieldName = "${fieldName}");
	}

	macro openFormView {
		AppBuilderAdmin.openItem(itemName = "${formViewName}");
	}

	macro openSidebar() {
		Click(locator1 = "FormViewBuilder#OPEN_SIDEBAR");
	}

	macro save {
		AppBuilderAdmin.save();
	}

	macro selectRadioOption {
		Click(
			key_fieldName = "${fieldName}",
			key_radioOption = "${radioOption}",
			locator1 = "FormViewBuilder#RADIO_OPTION_LABEL");
	}

	macro selectSelectOption {
		var key_fieldName = "${fieldName}";
		var key_selectOption = "${selectOption}";

		Click(
			locator1 = "FormViewBuilder#SELECT_FIELD",
			value1 = "${selectOption}");

		Click(
			locator1 = "FormViewBuilder#SELECT_FIELD_OPTIONS_LIST",
			value1 = "${selectOption}");
	}

	macro selectSelectWithMultipleOptions {
		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.enableCheckbox(fieldName = "${selectOption}");
		}
	}

	macro setFieldHelpText {
		var key_fieldType = "tip";
		Type(
			locator1 = "FormViewBuilder#FIELD_LABEL_AT_SIDEBAR",
			value1 = "${fieldLabel}");

		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_VALUE",
			value1 = "${fieldLabel}");
	}

	macro setFieldLabel {
		var key_fieldType = "label";
		Type(
			locator1 = "FormViewBuilder#FIELD_LABEL_AT_SIDEBAR",
			value1 = "${fieldLabel}");

		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_VALUE",
			value1 = "${fieldLabel}");
	}

	macro setFieldRequired {
		FormViewBuilder.clickOnSwitcher(propertyName = "required");
	}

	macro setName {

		AppBuilderAdmin.setName(title = "${formViewName}");
	}

	macro switchToFormViewTab {
		AppBuilderAdmin.switchTab(tabName = "Form Views");
	}

	macro validateFieldLabel {
		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_LABEL",
			value1 = "${fieldLabel}");
	}

	macro viewCheckboxChecked {
		AssertChecked.assertCheckedNotVisible(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#CHECKBOX");
	}

	macro viewCheckboxNotChecked {
		AssertNotChecked.assertNotCheckedNotVisible(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#CHECKBOX");
	}

}