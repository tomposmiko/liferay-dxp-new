definition {

	macro _inputCountryDetails {
		if (isSet(countryName)) {
			PortletEntry.inputName(name = ${countryName});
		}

		if (isSet(countryKey)) {
			PortletEntry.inputText(
				fieldLabel = "Key",
				text = ${countryKey});
		}

		if (isSet(twoLetterISOCode)) {
			PortletEntry.inputText(
				fieldLabel = "Two-Letter ISO Code",
				text = ${twoLetterISOCode});
		}

		if (isSet(threeLetterISOCode)) {
			PortletEntry.inputText(
				fieldLabel = "Three-Letter ISO Code",
				text = ${threeLetterISOCode});
		}

		if (isSet(countryNumber)) {
			PortletEntry.inputText(
				fieldLabel = "Number",
				text = ${countryNumber});
		}

		if (isSet(countryCallingCode)) {
			PortletEntry.inputText(
				fieldLabel = "Country Calling Code",
				text = ${countryCallingCode});
		}

		if (isSet(countryPriority)) {
			PortletEntry.inputText(
				fieldLabel = "Priority",
				text = ${countryPriority});
		}
	}

	macro _inputRegionDetails {
		PortletEntry.inputName(name = ${regionName});

		if (isSet(regionKey)) {
			PortletEntry.inputText(
				fieldLabel = "Key",
				text = ${regionKey});
		}

		if (isSet(regionCode)) {
			PortletEntry.inputText(
				fieldLabel = "Region Code",
				text = ${regionCode});
		}

		if (isSet(regionPriority)) {
			PortletEntry.inputText(
				fieldLabel = "Priority",
				text = ${regionPriority});
		}
	}

	macro _selectMultipleCountries {
		for (var countryName : list ${countryNames}) {
			LexiconEntry.selectEntry(rowEntry = ${countryName});
		}
	}

	macro activateCountry {
		Search.searchCP(searchTerm = ${countryName});

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Activate",
			rowEntry = ${countryName});

		Alert.viewSuccessMessage();
	}

	macro activateMultipleCountries {
		CountriesManagement._selectMultipleCountries(countryNames = ${countryNames});

		ClickNoError(locator1 = "Icon#UNDO");

		Alert.viewSuccessMessage();
	}

	macro activateRegion {
		Search.searchCP(searchTerm = ${regionName});

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Activate",
			rowEntry = ${regionName});

		Alert.viewSuccessMessage();
	}

	macro addCountry {
		LexiconEntry.gotoAdd();

		CountriesManagement._inputCountryDetails(
			countryCallingCode = ${countryCallingCode},
			countryKey = ${countryKey},
			countryName = ${countryName},
			countryNumber = ${countryNumber},
			countryPriority = ${countryPriority},
			threeLetterISOCode = ${threeLetterISOCode},
			twoLetterISOCode = ${twoLetterISOCode});

		if (isSet(billingAllowed)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Billing Allowed",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(shippingAllowed)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Shipping Allowed",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(subjectToVAT)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Subject to VAT",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (${countryStatus} == "Inactive") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addRegion {
		CountriesManagement.goToRegions(countryName = ${countryName});

		LexiconEntry.gotoAdd();

		CountriesManagement._inputRegionDetails(
			regionCode = ${regionCode},
			regionKey = ${regionKey},
			regionName = ${regionName},
			regionPriority = ${regionPriority});

		if (${regionStatus} == "Inactive") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if (${regionStatus} == "Active") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro deactivateCountry {
		Search.searchCP(searchTerm = ${countryName});

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Deactivate",
			rowEntry = ${countryName});

		AssertConfirm(value1 = "Are you sure you want to deactivate this?");

		Alert.viewSuccessMessage();
	}

	macro deactivateMultipleCountries {
		CountriesManagement._selectMultipleCountries(countryNames = ${countryNames});

		ClickNoError(locator1 = "Icon#DEACTIVATE");

		AssertConfirm(value1 = "Are you sure you want to deactivate the selected countries?");

		Alert.viewSuccessMessage();
	}

	macro deactivateRegion {
		Search.searchCP(searchTerm = ${regionName});

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Deactivate",
			rowEntry = ${regionName});

		AssertConfirm(value1 = "Are you sure you want to deactivate this?");

		Alert.viewSuccessMessage();
	}

	macro deleteCountry {
		Search.searchCP(searchTerm = ${countryName});

		if (${deleteType} == "Delete Icon") {
			LexiconEntry.selectEntry(key_rowEntry = ${countryName});

			ClickNoError(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to delete the selected countries?");

			Alert.viewSuccessMessage();
		}
		else if (${deleteType} == "Management Toolbar") {
			LexiconEntry.selectEntry(key_rowEntry = ${countryName});

			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete the selected countries?");

			Alert.viewSuccessMessage();
		}
		else {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Delete",
				rowEntry = ${countryName});

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}

		LexiconEntry.viewNoEntry(rowEntry = ${countryName});
	}

	macro deleteRegion {
		Search.searchCP(searchTerm = ${regionName});

		if (${deleteType} == "Delete Icon") {
			LexiconEntry.selectEntry(key_rowEntry = ${regionName});

			ClickNoError(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to delete the selected regions?");

			Alert.viewSuccessMessage();
		}
		else if (${deleteType} == "Management Toolbar") {
			LexiconEntry.selectEntry(key_rowEntry = ${regionName});

			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete the selected regions?");

			Alert.viewSuccessMessage();
		}
		else {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Delete",
				rowEntry = ${regionName});

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}

		LexiconEntry.viewNoEntry(rowEntry = ${regionName});
	}

	macro editRegion {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Edit",
			rowEntry = ${regionName});

		if (isSet(regionNameEdit)) {
			PortletEntry.inputText(
				fieldLabel = "Name",
				text = ${regionNameEdit});
		}

		if (isSet(regionKeyEdit)) {
			PortletEntry.inputText(
				fieldLabel = "Key",
				text = ${regionKeyEdit});
		}

		if (isSet(regionCodeEdit)) {
			PortletEntry.inputText(
				fieldLabel = "Region Code",
				text = ${regionCodeEdit});
		}

		if (isSet(regionPriorityEdit)) {
			PortletEntry.inputText(
				fieldLabel = "Priority",
				text = ${regionPriorityEdit});
		}

		if (${regionStatusEdit} == "Inactive") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if (${regionStatusEdit} == "Active") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Active",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro goToRegions {
		Search.searchCP(searchTerm = ${countryName});

		LexiconEntry.gotoEntry(rowEntry = ${countryName});

		Navigator.gotoNavTab(navTab = "Regions");
	}

	macro openCountriesManagementPortlet {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/control_panel/manage?p_p_id=com_liferay_address_web_internal_portlet_CountriesManagementAdminPortlet");
	}

	@description = "Assert values in country table. Need to set countryName, billingAllowed, shippingAllowed, twoLetterISOCode, countryStatus"
	macro viewCountryInTable {
		LexiconTable.viewTableEntryTitle(tableEntry = ${countryName});

		if (${billingAllowed} == "true") {
			AssertElementPresent(
				key_columnName = "billing-allowed",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_CHECK");
		}
		else if (${billingAllowed} == "false") {
			AssertElementPresent(
				key_columnName = "billing-allowed",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_TIMES");
		}

		if (${shippingAllowed} == "true") {
			AssertElementPresent(
				key_columnName = "shipping-allowed",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_CHECK");
		}
		else if (${shippingAllowed} == "false") {
			AssertElementPresent(
				key_columnName = "shipping-allowed",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_TIMES");
		}

		LexiconTable.viewTableEntryInfo(
			columnName = "two-letter-iso-code",
			tableEntry = ${countryName},
			tableEntryInfo = ${twoLetterISOCode});

		if (${countryStatus} == "Active") {
			AssertElementPresent(
				key_columnName = "active",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_CHECK");
		}
		else if (${countryStatus} == "Inactive") {
			AssertElementPresent(
				key_columnName = "active",
				key_tableEntry = ${countryName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_TIMES");
		}

		if (isSet(countryPriority)) {
			LexiconTable.viewTableEntryInfo(
				columnName = "priority",
				tableEntry = ${countryName},
				tableEntryInfo = ${countryPriority});
		}
	}

	@description = "Assert values in region table. Need to set regionName, regionCode, and regionStatus"
	macro viewRegionsInTable {
		LexiconTable.viewTableEntryTitle(tableEntry = ${regionName});

		LexiconTable.viewTableEntryInfo(
			columnName = "region-code",
			tableEntry = ${regionName},
			tableEntryInfo = ${regionCode});

		if (${regionStatus} == "Active") {
			AssertElementPresent(
				key_columnName = "active",
				key_tableEntry = ${regionName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_CHECK");
		}
		else if (${regionStatus} == "Inactive") {
			AssertElementPresent(
				key_columnName = "active",
				key_tableEntry = ${regionName},
				locator1 = "LexiconTable#TABLE_ENTRY_INFO_TIMES");
		}

		if (isSet(regionPriority)) {
			LexiconTable.viewTableEntryInfo(
				columnName = "priority",
				tableEntry = ${regionName},
				tableEntryInfo = ${regionPriority});
		}
	}

}