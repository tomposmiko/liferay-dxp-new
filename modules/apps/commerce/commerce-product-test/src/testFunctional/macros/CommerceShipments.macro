definition {

	macro assertOptionsInShipmentSteps {
		AssertElementPresent(
			key_ercColumnValue = ${key_ercColumnValue},
			locator1 = "CommerceOrders#SHIPMENT_ITEM_ERC_COLUMN");

		AssertElementNotPresent(
			key_text = "Edit",
			locator1 = "Icon#ANY_VERTICAL_ELLIPSIS");
	}

	macro assertShipmentItemWarehouseAndQuantityInShipment {
		AssertTextEquals(
			key_columnNumber = 4,
			key_entryName = ${shipmentItemSku},
			locator1 = "CommerceEntry#TABLE_CELL_BY_COLUMN_ORDER",
			value1 = ${warehouseName});

		AssertTextEquals(
			key_columnNumber = 6,
			key_entryName = ${shipmentItemSku},
			locator1 = "CommerceEntry#TABLE_CELL_BY_COLUMN_ORDER",
			value1 = ${quantityInShipment});
	}

	macro editShipmentCarrierDetails {
		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			key_fieldLabel = "Carrier",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${carrierDetail});

		if (isSet(trackingNumber)) {
			Type(
				key_fieldLabel = "Tracking Number",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${trackingNumber});
		}
		else {
			Type(
				key_fieldLabel = "Tracking Number",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "Test Tracking Number");
		}

		if (isSet(shippingMethod)) {
			Select(
				key_fieldLabel = "Shipping Method",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = ${shippingMethod});
		}

		if (isSet(trackingURL)) {
			Type(
				locator1 = "CommerceOrders#CARRIER_DETAILS_URL_TEXTAREA",
				value1 = ${trackingURL});
		}

		Button.clickSubmitButton();
	}

	macro editShipmentCustomFields {
		Click(
			key_customFieldType = ${customFieldType},
			locator1 = "CustomFields#CUSTOM_FIELD_TYPE");

		Type(
			locator1 = "TextInput#CUSTOM_FIELD",
			value1 = ${textValue});

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro moveItemQuantitiesInShipment {
		Variables.assertDefined(parameterList = "${productSkuList},${warehouseName}");

		for (var productSku : list ${productSkuList}) {
			WaitForPageLoad();

			CommerceNavigator.gotoEntry(entryName = ${productSku});

			SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

			Type(
				key_warehouseName = ${warehouseName},
				locator1 = "CommerceOrders#ORDER_QUANTITY_IN_SHIPMENT_BY_WAREHOUSE",
				value1 = 1);

			Button.click(button = "Save");

			SelectFrameTop();

			Click(locator1 = "Icon#CLOSE");

			Refresh();
		}
	}

	macro moveOrderItemsInShipment {
		Variables.assertDefined(parameterList = ${productSkuList});

		Click(locator1 = "Button#PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		for (var productSku : list ${productSkuList}) {
			Check.checkToggleSwitch(
				key_productSku = ${productSku},
				locator1 = "Checkbox#ADD_SHIPMENT_ITEMS_CHECKBOX");
		}

		Button.click(button = "Submit");

		Refresh.refreshNoSPARefresh();

		SelectFrameTop();
	}

}