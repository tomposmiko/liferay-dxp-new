definition {

	macro addAnyProductRelation {
		Click(locator1 = "Button#PLUS");

		Click(
			key_selectAction = "Add ${key_relation}",
			locator1 = "FormViewBuilder#FIELD_ELLIPSIS_ACTION_FIELDSET");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_IFRAME");

		Type(
			locator1 = "CommerceEntry#SEARCH_PRODUCT_RELATIONS",
			value1 = ${key_product});

		KeyPress(
			locator1 = "CommerceEntry#SEARCH_PRODUCT_RELATIONS",
			value1 = "\RETURN");

		Check.checkToggleSwitch(
			locator1 = "CommerceAccelerators#SELECT_PRODUCT_RELATIONS",
			productName = ${key_product});

		SelectFrameTop();

		Button.clickAdd();

		Alert.viewSuccessMessage();
	}

	macro addProductRelation {
		Click(locator1 = "Button#PLUS");

		Click(
			key_selectAction = "Add Up-Sell Product",
			locator1 = "FormViewBuilder#FIELD_ELLIPSIS_ACTION_FIELDSET");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_IFRAME");

		Type(
			locator1 = "CommerceEntry#SEARCH_PRODUCT_RELATIONS",
			value1 = ${productNameRelation});

		KeyPress(
			locator1 = "CommerceEntry#SEARCH_PRODUCT_RELATIONS",
			value1 = "\RETURN");

		Check.checkToggleSwitch(
			locator1 = "CommerceAccelerators#SELECT_PRODUCT_RELATIONS",
			productName = ${productNameRelation});

		SelectFrameTop();

		Button.clickAdd();

		Alert.viewSuccessMessage();
	}

	macro assignAllRelationsToProductsEntry {
		Click(locator1 = "CommerceEntry#ADD_BUTTON");

		WaitForSPARefresh();

		CommerceItemSelector.selectAlleEntries();

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");
	}

	macro assignMultipleRelationToProductsEntry {
		Click(locator1 = "CommerceEntry#ADD_BUTTON");

		WaitForSPARefresh();

		for (var entriesNames : list ${entriesList}) {
			CommerceItemSelector.selectEntry(entryName = ${entriesNames});
		}

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");
	}

	macro assignSingleRelationToEligibility {
		var searchTerm = '''"${entryName}"''';

		Type(
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD",
			value1 = ${searchTerm});

		WaitForElementPresent(
			key_entryName = ${entryName},
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD_SELECT");

		ClickNoError(
			key_entryName = ${entryName},
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD_SELECT");
	}

	macro assignSingleRelationToProductsEntry {
		var searchTerm = '''"${entryName}"''';

		Type(
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD",
			value1 = ${searchTerm});

		if (IsElementNotPresent(key_entryName = ${entryName}, key_title = ${title}, locator1 = "CommerceEntry#ADD_RELATION_FIELD_SELECT")) {
			echo("The element is not present, retrying...");

			Click(locator1 = "WorkflowMetricsProcessListView#METRICS_WORKFLOW_SEARCH_BAR_BUTTON");

			Type(
				key_title = ${title},
				locator1 = "CommerceEntry#ADD_RELATION_FIELD",
				value1 = ${searchTerm});
		}

		WaitForElementPresent(
			key_entryName = ${entryName},
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD_SELECT");

		ClickNoError(
			key_entryName = ${entryName},
			key_title = ${title},
			locator1 = "CommerceEntry#ADD_RELATION_FIELD_SELECT");
	}

	macro productRelationSetPriority {
		Click(
			key_value = ${productNameRelation},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_IFRAME");

		Type(
			key_fieldLabel = "Priority",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = ${priorityValue});

		Button.clickSubmitButton();
	}

}