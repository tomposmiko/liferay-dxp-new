definition {

	macro addChannelAccountManagersEntry {
		Variables.assertDefined(parameterList = "${channelName},${userName}");

		Click(
			key_termType = "defaultUsers",
			locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_PLUS");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Select(
			key_selectFieldLabel = "Channel",
			locator1 = "CommerceEntry#ANY_SELECT",
			value1 = ${channelName});

		Select(
			key_selectFieldLabel = "User",
			locator1 = "CommerceEntry#ANY_SELECT",
			value1 = ${userName});

		Button.clickSave();

		if (isSet(assertError) && (${assertError} == "true")) {
			Alert.viewErrorMessage(errorMessage = "This user is already defined for the selected channel.");
		}

		SelectFrame.selectFrameTop();
	}

	macro deleteAccountChannelDefaultsEntry {
		Variables.assertDefined(parameterList = "${channelName},${defaultEntryName},${defaultEntryLabel}");

		Click(
			key_firstColumnValue = ${channelName},
			key_secondColumnValue = ${defaultEntryName},
			key_table = ${defaultEntryLabel},
			locator1 = "CommerceEntry#TABLE_ASSERT_TWO_COLUMNS_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		SelectFrameTop();
	}

	macro editChannelAccountManagersEntry {
		Variables.assertDefined(parameterList = "${channelName},${userFullName}");

		Click(
			key_firstColumnValue = ${channelName},
			key_secondColumnValue = ${userFullName},
			key_table = "defaultUsers",
			locator1 = "CommerceEntry#TABLE_ASSERT_TWO_COLUMNS_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Edit");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (isSet(newChannelName)) {
			Select(
				key_selectFieldLabel = "Channel",
				locator1 = "CommerceEntry#ANY_SELECT",
				value1 = ${newChannelName});
		}

		if (isSet(newUserName)) {
			Select(
				key_selectFieldLabel = "User",
				locator1 = "CommerceEntry#ANY_SELECT",
				value1 = ${newUserName});
		}

		Button.clickSave();

		if (isSet(assertError) && (${assertError} == "true")) {
			Alert.viewErrorMessage(errorMessage = "This user is already defined for the selected channel.");
		}

		SelectFrame.selectFrameTop();
	}

	macro editDefaultPriceList {
		Variables.assertDefined(parameterList = "${currentChannelName},${currentPriceListName}");

		Click(
			key_firstColumnValue = ${currentChannelName},
			key_secondColumnValue = ${currentPriceListName},
			key_table = "PriceLists",
			locator1 = "CommerceEntry#TABLE_ASSERT_TWO_COLUMNS_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Edit");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (isSet(newChannelName)) {
			Select(
				key_selectFieldLabel = "Channel",
				locator1 = "CommerceEntry#ANY_SELECT",
				value1 = ${newChannelName});
		}

		if (isSet(override) && (${override} == "true")) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Override Eligibility",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		if (isSet(newPriceListName)) {
			Select(
				key_selectFieldLabel = "Price List",
				locator1 = "CommerceEntry#ANY_SELECT",
				value1 = ${newPriceListName});
		}

		Button.clickSave();

		if (isSet(assertError) && (${assertError} == "true")) {
			Alert.viewErrorMessage(errorMessage = "Error:There is already a price list defined for the selected channel.");
		}

		SelectFrameTop();
	}

	macro setAccountChannelDefaults {
		CommerceNavigator.gotoMiniumAccountOrderDefaults(accountName = ${accountName});

		if (isSet(paymentMethod)) {
			WaitForPageLoad();

			Click(
				key_firstColumnValue = ${channelName},
				key_secondColumnValue = ${defaultPaymentMethod},
				key_table = "PaymentMethod",
				locator1 = "CommerceEntry#TABLE_ASSERT_TWO_COLUMNS_EDIT_BUTTON");

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			Click.clickAtNotVisible(
				key_radioOption = ${paymentMethod},
				locator1 = "CommerceEntry#RADIO_BUTTON");

			Click(locator1 = "Button#SAVE");

			IFrame.selectTopFrame();

			AssertElementPresent(
				key_columnNumber = 1,
				key_productName = ${channelName},
				key_value = ${paymentMethod},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
		}

		if (isSet(shippingOption) && isSet(channelName)) {
			Click(
				key_firstColumnValue = ${channelName},
				key_secondColumnValue = ${shippingMethodEntry},
				key_table = "ShippingOption",
				locator1 = "CommerceEntry#TABLE_ASSERT_TWO_COLUMNS_EDIT_BUTTON");

			SelectFrameTop();

			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			if (${shippingOption} == "Use Priority Settings") {
				var shippingMethod = "Use Priority Settings";
				var shippingOption = "Use Priority Settings";

				Click.clickAtNotVisible(
					key_radioOption = "Use Priority Settings",
					locator1 = "CommerceEntry#RADIO_BUTTON");
			}
			else {
				Click.clickAtNotVisible(
					key_radioOption = "${shippingMethod} / ${shippingOption}",
					locator1 = "CommerceEntry#RADIO_BUTTON");
			}

			Button.clickSave();

			IFrame.selectTopFrame();

			AssertElementPresent(
				key_columnNumber = 1,
				key_productName = ${channelName},
				key_value = ${shippingMethodEntry},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");

			AssertElementPresent(
				key_columnNumber = 2,
				key_productName = ${channelName},
				key_value = ${shippingOption},
				locator1 = "CommerceEntry#TABLE_SEARCH_BY_NAME_AND_COLUMN_CONTENT");
		}
	}

	macro setDefaultPriceList {
		WaitForElementPresent(
			key_title = "Add Default Price List",
			locator1 = "Button#ANY_TITLE");

		Click.javaScriptClick(
			key_title = "Add Default Price List",
			locator1 = "Button#ANY_TITLE");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		if (isSet(channelEntry) && (${channelEntry} != "")) {
			Select(
				key_fieldLabel = "Channel",
				locator1 = "CommerceEntry#LABEL_GENERIC_SELECT",
				value1 = ${channelEntry});
		}

		if (isSet(override) && (${override} == "true")) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Override Eligibility",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		Select(
			key_fieldLabel = "Price List",
			locator1 = "CommerceEntry#LABEL_GENERIC_SELECT",
			value1 = ${priceListTitle});

		Button.clickSave();

		if (isSet(assertError) && (${assertError} == "true")) {
			Alert.viewErrorMessage(errorMessage = "Error:There is already a price list defined for the selected channel.");
		}

		SelectFrameTop();
	}

	macro viewDefaultPriceListEntries {
		if (isSet(priceListEntries)) {
			if (isSet(row) && (${row} != "")) {
				for (var priceListEntry : list ${priceListEntries}) {
					AssertElementPresent(
						key_entryDetails = ${priceListEntry},
						key_row = ${row},
						key_termType = ${priceListLabel},
						locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_ENTRY_DETAILS");
				}
			}
			else {
				for (var priceListEntry : list ${priceListEntries}) {
					AssertElementPresent(
						key_entryDetails = ${priceListEntry},
						key_row = 1,
						key_termType = ${priceListLabel},
						locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_ENTRY_DETAILS");
				}
			}
		}
		else {
			AssertElementPresent(
				key_termType = ${priceListLabel},
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_EMPTY_SEARCH_CONTAINER");
		}
	}

}