definition {

	macro addTermsAndConditions {
		LexiconEntry.gotoAdd();

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${termsAndConditionsName});

		Select(
			locator1 = "Select#TYPE",
			value1 = ${termsAndConditionsType});

		Type(
			locator1 = "CommerceEntry#PRIORITY_FIELD",
			value1 = ${valuePosition});

		Button.clickSubmitButton();

		if (${active} == "true") {
			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");

			Button.clickPublish();

			Alert.viewSuccessMessage();
		}
	}

	macro assertTermsAndConditionsEntry {
		AssertTextEquals(
			locator1 = "CommerceEntry#NAME_FIELD_SPECIAL",
			value1 = ${termsAndConditionsName});

		if (isSet(termsAndConditionsDescription)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			AssertTextEquals(
				locator1 = "CKEditor#BODY",
				value1 = ${termsAndConditionsDescription});
		}

		if (isSet(valuePosition)) {
			AssertTextEquals(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${valuePosition});
		}
	}

	macro cancelAddTermsAndConditions {
		LexiconEntry.gotoAddNoSelectFrame();

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		Type(
			locator1 = "TextInput#NAME",
			value1 = ${termsAndConditionsName});

		Select(
			locator1 = "Select#TYPE",
			value1 = ${termsAndConditionsType});

		Type(
			locator1 = "CommerceEntry#PRIORITY_FIELD",
			value1 = ${valuePosition});

		Click(locator1 = "Button#CANCEL_SPECIAL");
	}

	macro changeLocale {
		Click(locator1 = "Button#LOCALIZATION_GENERIC_1");

		Click(
			key_locale = ${locale},
			locator1 = "Translation#LOCALIZATION_NAME");
	}

	macro deleteTermsAndConditions {
		CommerceNavigator.searchEntry(entryName = ${termsAndConditionsName});

		Click(
			key_value = ${termsAndConditionsName},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		Alert.viewSuccessMessage();
	}

	macro editTermsAndConditions {
		if (isSet(deactivate)) {
			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");
		}

		if (isSet(termsAndConditionsName)) {
			Type(
				locator1 = "CommerceEntry#NAME_FIELD_SPECIAL",
				value1 = ${termsAndConditionsName});
		}

		if (isSet(termsAndConditionsDescription)) {
			SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME");

			Type(
				locator1 = "CKEditor#BODY",
				value1 = ${termsAndConditionsDescription});

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(valuePosition)) {
			Type(
				locator1 = "CommerceEntry#PRIORITY_FIELD",
				value1 = ${valuePosition});
		}

		Button.clickPublish();

		Alert.viewSuccessMessage();
	}

	macro gotoEntryMenuItem {
		Click(
			key_value = ${termsAndConditionsName},
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = ${menuItem});
	}

	macro openTermsAndConditionsAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_commerce_term_web_internal_portlet_CommerceTermEntryPortlet");
	}

	macro viewDeleteTermsAndConditionsEntry {
		AssertElementNotPresent(
			key_termsAndConditionsName = ${termsAndConditionsName},
			locator1 = "CommercePaymentTerms#ORDER_DETAILS_TERMS_AND_CONDITIONS_NAME",
			value1 = ${termsAndConditionsName});
	}

	macro viewNoPG {
		AssertTextEquals(
			locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER",
			value1 = "Sorry, no results were found.");
	}

	macro viewTermsAndConditionsEntry {
		AssertTextEquals.assertPartialText(
			key_termsAndConditionsName = ${termsAndConditionsName},
			locator1 = "CommercePaymentTerms#ORDER_DETAILS_TERMS_AND_CONDITIONS_NAME",
			value1 = ${termsAndConditionsName});

		AssertTextEquals.assertPartialText(
			key_termsAndConditionsType = ${termsAndConditionsType},
			locator1 = "CommercePaymentTerms#ORDER_DETAILS_TERMS_AND_CONDITIONS_TYPE",
			value1 = ${termsAndConditionsType});

		AssertTextEquals.assertPartialText(
			key_valuePosition = ${valuePosition},
			locator1 = "CommercePaymentTerms#ORDER_DETAILS_TERMS_AND_CONDITIONS_PRIORITY",
			value1 = ${valuePosition});

		AssertTextEquals.assertPartialText(
			key_termsAndConditionsActiveStatus = ${termsAndConditionsActiveStatus},
			locator1 = "CommercePaymentTerms#ORDER_DETAILS_TERMS_AND_CONDITIONS_ACTIVE_STATUS",
			value1 = ${termsAndConditionsActiveStatus});
	}

	macro viewTermsAndConditionsEntrySortByPriority {
		AssertTextPresent(
			key_rowNumber = ${rowNumber},
			key_termsAndConditionsName = ${termsAndConditionsName},
			key_valuePosition = ${valuePosition},
			locator1 = "CommercePaymentTerms#ENTRY_LIST_BY_SORT",
			value1 = ${valuePosition});
	}

}