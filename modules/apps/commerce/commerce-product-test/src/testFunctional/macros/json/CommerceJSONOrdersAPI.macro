definition {

	macro _addCommerceOrder {
		Variables.assertDefined(parameterList = "${accountEntryName},${orderStatus},${paymentStatus}");

		var accountEntryId = JSONAccountEntryAPI._getAccountEntryId(accountEntryName = ${accountEntryName});
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (!(isSet(billingAddressName))) {
			var billingAddressId = 0;
		}
		else {
			var billingAddressId = CommerceJSONAccountsAPI._getAccountAddressIdByAddressName(
				accountEntryId = ${accountEntryId},
				addressName = ${billingAddressName});
		}

		var commerceChannelIds = CommerceJSONChannelsAPI._getCommerceChannelIds();
		var orderItemsList = "";

		if (isSet(orderItems)) {
			if (!(isSet(orderItemsCustomFields))) {
				var orderItemsCustomFields = "";
			}

			for (var orderItem : list ${orderItems}) {
				var itemSku = StringUtil.extractFirst(${orderItem}, ":");
				var itemQuantity = StringUtil.extractLast(${orderItem}, ":");
				var itemSkuId = CommerceJSONProductsAPI._getSKUId(productSKU = ${itemSku});
				var orderItemCustomFieldsList = "";

				if (${orderItemsCustomFields} != "") {
					var orderItemCustomFields = StringUtil.extractFirst(${orderItemsCustomFields}, ";");

					var orderItemsCustomFields = StringUtil.replaceFirst(${orderItemsCustomFields}, "${orderItemCustomFields};", "");

					for (var orderItemCustomField : list ${orderItemCustomFields}) {
						var orderItemCustomFieldKey = StringUtil.extractFirst(${orderItemCustomField}, ":");
						var orderItemCustomFieldValue = StringUtil.extractLast(${orderItemCustomField}, ":");

						if (${orderItemCustomFieldsList} != "") {
							var customFieldsComma = ",";
						}
						else {
							var customFieldsComma = "";
						}

						var orderItemCustomFieldsList = '''
							${orderItemCustomFieldsList}${customFieldsComma}
							{
								"customValue": {
								"data": "${orderItemCustomFieldValue}"
								},
								"name": "${orderItemCustomFieldKey}"
							}
						''';

						echo("Key: ${orderItemCustomFieldKey}");

						echo("Value: ${orderItemCustomFieldValue}");
					}
				}

				if (${orderItemsList} != "") {
					var comma = ",";
				}
				else {
					var comma = "";
				}

				var orderItemsList = '''
						${orderItemsList}${comma}
						{
							"customFields": [${orderItemCustomFieldsList}],
							"quantity": "${itemQuantity}",
      						"skuId": "${itemSkuId}"
						}
				''';
			}
		}

		if (!(isSet(paymentMethod))) {
			var paymentMethod = "";
		}
		else {
			var paymentMethod = CommerceUtilities.convertStringToKey(string = ${paymentMethod});
		}

		if (!(isSet(paymentStatus))) {
			var paymentStatus = 1;
		}

		if (!(isSet(orderStatus))) {
			var orderStatus = 2;
		}

		if (!(isSet(shippingAddressName))) {
			var shippingAddressId = 0;
		}
		else {
			var shippingAddressId = CommerceJSONAccountsAPI._getAccountAddressIdByAddressName(
				accountEntryId = ${accountEntryId},
				addressName = ${shippingAddressName});
		}

		if (isSet(shippingOption)) {
			if (!(isSet(shippingMethod))) {
				if ((${shippingOption} == "Standard Delivery") || (${shippingOption} == "Expedited Delivery")) {
					var shippingMethod = "fixed";
				}
			}
			else {
				if (${shippingMethod} == "Flat Rate") {
					var shippingMethod = "fixed";
				}
				else if (${shippingMethod} == "Variable Rate") {
					var shippingMethod = "by-weight";
				}
			}

			var shippingOption = CommerceUtilities.convertStringToKey(string = ${shippingOption});
		}
		else {
			var shippingMethod = "";
			var shippingOption = "";
		}

		echo("Account id: ${accountEntryId}");

		echo("Channel id: ${commerceChannelIds}");

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"accountId": "${accountEntryId}",
					"billingAddressId": ${billingAddressId},
					"channelId": "${commerceChannelIds}",
					"currencyCode": "USD",
					"paymentStatus": "${paymentStatus}",
					"paymentMethod": "${paymentMethod}",
					"orderItems": [${orderItemsList}],
					"orderStatus": ${orderStatus},
					"shippingAddressId": ${shippingAddressId},
					"shippingMethod": "${shippingMethod}",
					"shippingOption": "${shippingOption}"
				}'
		''';

		var orderId = JSONCurlUtil.post(${curl}, "$..['id']");

		echo("Order id: ${orderId}");

		return ${orderId};
	}

	macro _addCommerceOrderItem {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (!(isSet(quantity))) {
			var quantity = 1;
		}

		var skuId = CommerceJSONProductsAPI._getSKUId(productSKU = ${productSKU});
		var orderId = CommerceJSONOrdersAPI._getCommerceOrder();

		echo("SKU id: ${skuId}");

		echo("Order id: ${orderId}");

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders/${orderId}/orderItems \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"quantity": "${quantity}",
					"skuId": "${skuId}"
				}'
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

	macro _addOrderRule {
		Variables.assertDefined(parameterList = "${orderRuleName},${orderRuleType},${applyTo}");

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var applyTo = StringUtil.lowerCase(${applyTo});
		var orderRuleType = StringUtil.lowerCase(${orderRuleType});

		var orderRuleType = StringUtil.replace(${orderRuleType}, " ", "-");

		if (!(isSet(amount))) {
			var amount = "0.00";
		}

		if (!(isSet(currencyCode))) {
			var currencyCode = "USD";
		}

		if (!(isSet(orderRuleDescription))) {
			var orderRuleDescription = "";
		}

		if (!(isSet(priority))) {
			var priority = 0;
		}

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/order-rules \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"active": true,
					"description": "${orderRuleDescription}",
					"name": "${orderRuleName}",
					"neverExpire": true,
					"priority": ${priority},
					"type": "${orderRuleType}",
					"typeSettings": "${orderRuleType}-field-amount=${amount}\n${orderRuleType}-field-apply-to=${orderRuleType}-field-apply-to-order-${applyTo}\n${orderRuleType}-field-currency-code=${currencyCode}\n"
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

	macro _addOrderType {
		Variables.assertDefined(parameterList = ${orderTypeName});

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (!(isSet(active))) {
			var active = "false";
		}

		if (!(isSet(expirationDate))) {
			var displayDateYear = DateUtil.getCurrentYear();

			var displayDateYear = ${displayDateYear} + 1;

			var expirationDate = "${displayDateYear}-01-01T01:01:00Z";
		}

		if (!(isSet(displayOrder))) {
			var displayOrder = 0;
		}

		if (!(isSet(neverExpire))) {
			var neverExpire = "true";
		}

		if (!(isSet(orderTypeDescription))) {
			var orderTypeDescription = "Test Order Type Description";
		}

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/order-types \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
				-H 'Content-Type: application/json' \
				-d '{
					"active": ${active},
					"customFields": {},
					"description": {
						"en_US": "${orderTypeDescription}"
					},
					"displayOrder": ${displayOrder},
					"expirationDate": "${expirationDate}",
					"externalReferenceCode": "",
					"name": {
						"en_US": "${orderTypeName}"
					},
					"neverExpire": ${neverExpire},
					"workflowStatusInfo": {
						"code": 0,
						"label": "approved",
						"label_i18n": "Approved"
					}
				}'
		''';

		JSONCurlUtil.post(${curl});
	}

	macro _deleteAllCommerceOrders {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var ordersCount = CommerceJSONOrdersAPI._getCommerceOrdersCount();

		if (${ordersCount} != 0) {
			var orderIds = CommerceJSONOrdersAPI._getCommerceOrderIds(orderCount = ${ordersCount});

			for (var orderId : list ${orderIds}) {
				echo("Deleting Commerce order with id: ${orderId}");

				var curl = '''
					${baseURL}/o/headless-commerce-admin-order/v1.0/orders/${orderId} \
						-u test@liferay.com:test \
						-H 'accept: application/json' \
				''';

				JSONCurlUtil.delete(${curl});
			}
		}
		else {
			echo("No Commerce Orders to be deleted");
		}
	}

	macro _deleteAllCommerceOrdersAndCheck {
		CommerceJSONOrdersAPI._deleteAllCommerceOrders();

		var orderCount = CommerceJSONOrdersAPI._getCommerceOrdersCount();

		TestUtils.assertEquals(
			actual = ${orderCount},
			expected = 0);
	}

	macro _getCommerceOrder {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var orderId = JSONCurlUtil.get(${curl}, "$..['id']");

		echo("The Commerce order id is: ${orderId}");

		return ${orderId};
	}

	macro _getCommerceOrderIds {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (isSet(orderCount)) {
			var ordersCount = ${orderCount};
		}
		else {
			var ordersCount = 100;
		}

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders?pageSize=${ordersCount} \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var orderIds = JSONCurlUtil.get(${curl}, "$..['id']");

		return ${orderIds};
	}

	macro _getCommerceOrderItemCustomFieldValue {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var orderId = CommerceJSONOrdersAPI._getCommerceOrder();

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders/${orderId}/orderItems \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var orderItemCustomFieldValue = JSONCurlUtil.get(${curl}, "$..items[?(@['sku'] == '${sku}')].customFields[?(@['name'] == '${customFieldName}')].customValue.data");

		echo("The Order Item Custom Field Value is: ${orderItemCustomFieldValue}");

		return ${orderItemCustomFieldValue};
	}

	macro _getCommerceOrdersCount {
		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var curl = '''
			${baseURL}/o/headless-commerce-admin-order/v1.0/orders \
				-u test@liferay.com:test \
				-H 'accept: application/json' \
		''';

		var ordersCount = JSONCurlUtil.get(${curl}, "$['totalCount']");

		echo("The Commerce orders count is: ${ordersCount}");

		return ${ordersCount};
	}

	macro _updateCommerceOrderERC {
		Variables.assertDefined(parameterList = ${externalReferenceCode});

		var baseURL = ${baseURL};

		if (!(isSet(baseURL))) {
			var baseURL = PropsUtil.get("portal.url");
		}

		if (!(isSet(commerceOrderId))) {
			var commerceOrderId = CommerceJSONOrdersAPI._getCommerceOrder();
		}

		var curl = '''
			${baseURL}/api/jsonws/commerce.commerceorder/update-commerce-order-external-reference-code \
				-u test@liferay.com:test \
				-d externalReferenceCode='${externalReferenceCode}' \
				-d commerceOrderId=${commerceOrderId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post(${curl});
	}

}