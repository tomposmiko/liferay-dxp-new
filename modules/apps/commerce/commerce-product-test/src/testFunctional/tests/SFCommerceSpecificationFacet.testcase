@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		CommerceConfiguration.commerceSetUp(minium = "true");
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-8403"
	@priority = 5
	test VerifyDisplayFrequencies {
		property portal.acceptance = "true";

		var facetTermList = "1 Year Unlimited Mileage Warranty,Limited Lifetime,3 Year Unlimited Mileage Warranty,Steel,Rubber,Aluminum,Cast Iron,Neoprene,Ceramic,Plastic";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			displayFrequencies = "disable",
			portletName = "Specification Facet");

		IFrame.closeFrame();

		for (var facetTerm : list ${facetTermList}) {
			AssertElementNotPresent(
				key_facetType = "Specification Facet",
				key_termValue = ${facetTerm},
				locator1 = "Search#FACET_TERM_FREQUENCIES");
		}
	}

	@description = "This is a test for COMMERCE-8401"
	@priority = 5
	test VerifyDisplayTemplate {
		property portal.acceptance = "true";

		var warrantyTagNameList = "1 Year Unlimited Mileage Warranty,Limited Lifetime,3 Year Unlimited Mileage Warranty";
		var materialTagNameList = "Steel,Rubber,Aluminum,Cast Iron,Neoprene,Ceramic,Plastic";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Cloud Layout",
			portletName = "Specification Facet");

		IFrame.closeFrame();

		for (var tagName : list ${warrantyTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_CLOUD_LAYOUT",
				tagName = ${tagName});
		}

		for (var tagName : list ${materialTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_CLOUD_LAYOUT",
				tagName = ${tagName});
		}

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Compact Layout",
			portletName = "Specification Facet");

		IFrame.closeFrame();

		for (var tagName : list ${warrantyTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = ${tagName});
		}

		for (var tagName : list ${materialTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = ${tagName});
		}

		CommerceWidget.updateFacetConfiguration(
			displayTemplate = "Label Layout",
			portletName = "Specification Facet");

		IFrame.closeFrame();

		for (var tagName : list ${warrantyTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_LABEL_LAYOUT",
				tagName = ${tagName});
		}

		for (var tagName : list ${materialTagNameList}) {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_LABEL_LAYOUT",
				tagName = ${tagName});
		}
	}

	@description = "This is a test for COMMERCE-8401"
	@priority = 4
	test VerifyFrequencyThreshold {
		property portal.acceptance = "false";

		var warrantyLabelNameList = "Limited Lifetime,3 Year Unlimited Mileage Warranty";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			frequencyThreshold = 30,
			portletName = "Specification Facet");

		IFrame.closeFrame();

		AssertElementPresent(
			key_facetLabel = "1 Year Unlimited Mileage Warranty",
			locator1 = "CommerceWidget#FACET_DEFAULT_LABEL");

		for (var facetLabel : list ${warrantyLabelNameList}) {
			AssertElementNotPresent(
				key_facetLabel = ${facetLabel},
				locator1 = "CommerceWidget#FACET_DEFAULT_LABEL");
		}
	}

	@description = "This is a test for COMMERCE-8399."
	@priority = 3
	test VerifyMaxTermsFieldValue {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			maxTerms = 101,
			portletName = "Specification Facet");

		AssertElementPresent(
			errorMessage = "Maximum terms cannot exceed 100.",
			locator1 = "CommerceWidget#MAX_TERMS_ERROR_MESSAGE");
	}

	@description = "This is for COMMERCE-8384."
	test VerifySpecificationFacetSetupTab {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoSite(site = "Minium");

		Portlet.gotoPortletOptions(
			portletName = "Specification Facet",
			portletOption = "Configuration");

		IFrame.selectModalFrame();

		AssertElementPresent(
			key_navItem = "Setup",
			locator1 = "NavBar#ACTIVE_NAV_ITEM_LINK");

		AssertElementPresent(locator1 = "Select#DISPLAY_TEMPLATE");

		AssertElementPresent(
			key_fieldName = "maxTerms",
			locator1 = "FormFields#TEXT_FIELD");

		AssertElementPresent(
			key_fieldName = "frequencyThreshold",
			locator1 = "FormFields#TEXT_FIELD");

		IFrame.closeFrame();
	}

	@priority = 5
	test View100Terms {
		property portal.acceptance = "true";

		CommerceJSONSpecificationsAPI._addCommerceProductsWithSpecifications(
			catalogName = "Minium",
			specificationKey = "material");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceWidget.updateFacetConfiguration(
			maxTerms = 100,
			portletName = "Specification Facet");

		IFrame.closeFrame();

		CommerceWidget.assertSpecificationPanel2FacetsCount(
			expectedLabels = 100,
			specificationGroup = "Material");
	}

}