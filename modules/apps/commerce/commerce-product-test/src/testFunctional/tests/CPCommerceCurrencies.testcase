@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Order Management";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-5839. As a system admin i want to be able to create / update and delete a new currency"
	@priority = 5
	test CreateAndUpdateNewCurrency {
		property portal.acceptance = "true";

		// TODO Review

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Currencies");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewCurrenciesEntry(
			code = "TCY",
			entryName = "Test Currency",
			exchangeRate = "1.5",
			formatPattern = "$ ###,##0.00",
			isPrimary = "false",
			symbol = "&");

		Button.clickSave();

		CommerceNavigator.gotoEntry(entryName = "Test Currency");

		for (var current : list "Name/Test Currency Edited,Code/TCYE,Exchange Rate with US Dollar/1") {
			var fieldLabel = StringUtil.extractFirst(${current}, "/");
			var value = StringUtil.extractLast(${current}, "/");

			Type(
				key_fieldLabel = ${fieldLabel},
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = ${value});
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			key_columnClassName = "exchange-rate",
			key_entryName = "Test Currency Edited",
			locator1 = "CommerceEntry#CURRENCY_COLUMN_VALUE",
			value1 = 1);

		Click(
			key_itemName = "Test Currency Edited",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
	}

	@description = "This is a test for COMMERCE-5843. As a system administrator I want disabled currencies not to be available in Price Lists, Catalogs and Channels"
	@ignore = "true"
	@priority = 3
	test DeactivateCurrency {

		// TODO COMMERCE-5843 DeactivateCurrency Pending Implementation

	}

	@description = "This is a test for COMMERCE-5842. As a system administrator I want currencies to be sorted by priority"
	@priority = 3
	test SortCurrenciesByPriority {
		property portal.acceptance = "false";

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Currencies");

		AssertTextEquals(
			key_entryName = "US Dollar",
			key_rowNumber = 1,
			locator1 = "CommerceEntry#ANY_CURRENCY_PRIORITY_ELEMENT",
			value1 = "1.0");

		ClickNoError(
			key_entryName = "Euro",
			locator1 = "CommerceNavigation#ENTRY_NAME");

		Type(
			locator1 = "CommerceEntry#PRIORITY_FIELD",
			value1 = "0.9");

		Button.clickSave();

		CommerceUtilities.checkSuccessAlertAppearsAndDisappears();

		AssertTextEquals(
			key_entryName = "Euro",
			key_rowNumber = 1,
			locator1 = "CommerceEntry#ANY_CURRENCY_PRIORITY_ELEMENT",
			value1 = "0.9");

		AssertTextEquals(
			key_entryName = "US Dollar",
			key_rowNumber = 2,
			locator1 = "CommerceEntry#ANY_CURRENCY_PRIORITY_ELEMENT",
			value1 = "1.0");

		AssertTextEquals(
			key_entryName = "Canadian Dollar",
			key_rowNumber = 5,
			locator1 = "CommerceEntry#ANY_CURRENCY_PRIORITY_ELEMENT",
			value1 = "4.0");

		ClickNoError(
			key_entryName = "US Dollar",
			locator1 = "CommerceNavigation#ENTRY_NAME");

		Type(
			locator1 = "CommerceEntry#PRIORITY_FIELD",
			value1 = 12);

		Button.click(button = "Save");

		CommerceUtilities.checkSuccessAlertAppearsAndDisappears();

		AssertElementPresent(
			key_menuTab = "Currencies",
			locator1 = "CommerceEntry#MENU_TAB");

		AssertTextEquals(
			key_entryName = "US Dollar",
			locator1 = "CommerceEntry#LAST_CURRENCY_PRIORITY_ELEMENT",
			value1 = "12.0");
	}

	test ViewInstanceCurrenciesAvailable {
		property environment.acceptance = "true";
		property operating.system.types = "alpine,amazonlinux,centos,debian,fedora,orcllinux,osx,redhat,rockylinux,solaris,suse,ubuntu,windows";
		property portal.acceptance = "false";
		property portal.upstream = "true";

		CommerceNavigator.gotoPortlet(
			category = "Store Management",
			portlet = "Currencies");

		CommerceEntry.viewCurrenciesEntry(currenciesList = "US Dollar,Australian Dollar,British Pound,Canadian Dollar,Chinese Yuan Renminbi,Euro,Hong Kong Dollar,Japanese Yen,Indian Rupee,Brazilian Real");
	}

}