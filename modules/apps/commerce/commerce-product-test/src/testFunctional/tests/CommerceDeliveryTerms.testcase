@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Order Management";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "COMMERCE-9315. User can create a Delivery Term"
	@priority = 3
	test CanCreateDeliveryTerm {
		property portal.acceptance = "false";

		task ("Given the Sales Manager navigates to the Terms and Conditions page") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");
		}

		task ("When the Sales Manager creates a new entry with 'Delivery Term' Type") {
			CommercePaymentTerms.addTermsAndConditions(
				termsAndConditionsName = "Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = "0.0");

			CommercePaymentTerms.openTermsAndConditionsAdmin();
		}

		task ("Then a new Term is successfully created") {
			CommercePaymentTerms.viewTermsAndConditionsEntry(
				termsAndConditionsActiveStatus = "No",
				termsAndConditionsName = "Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = 0);
		}
	}

	@description = "COMMERCE-9317. User can delete a Delivery Term"
	@priority = 5
	test CanDeleteDeliveryTerm {
		property portal.acceptance = "true";

		task ("Given an existing Delivery Terms entry") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndConditions(
				termsAndConditionsName = "Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = "0.0");

			CommercePaymentTerms.openTermsAndConditionsAdmin();
		}

		task ("When the Sales Manager tries to delete a Delivery Terms entry") {
			CommercePaymentTerms.openTermsAndConditionsAdmin();

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Delete",
				termsAndConditionsName = "Terms and Condition Entry");
		}

		task ("Then the entry is successfully removed") {
			CommercePaymentTerms.viewDeleteTermsAndConditionsEntry(termsAndConditionsName = "Terms and Condition Entry");
		}
	}

	@description = "COMMERCE-9316. User can edit a Delivery Term"
	@priority = 5
	test CanEditDeliveryTerm {
		property portal.acceptance = "true";

		task ("Given the Sales Manager navigates to the Terms and Conditions page") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");
		}

		task ("When the Sales Manager navigates to that entry details page") {
			CommercePaymentTerms.addTermsAndConditions(
				termsAndConditionsName = "Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = "0.0");

			CommercePaymentTerms.openTermsAndConditionsAdmin();
		}

		task ("And the Sales Manager edit the fields on the page") {
			Refresh();

			CommerceEntry.clickEntryDropdownMenuItem(
				entryName = "Terms and Condition Entry",
				menuItem = "Edit");

			CommercePaymentTerms.editTermsAndConditions(
				termsAndConditionsName = "Edited Terms and Condition Entry",
				valuePosition = "1.0");
		}

		task ("But the Type field cannot be edited") {
			AssertElementPresent(
				key_entryName = "Type",
				locator1 = "CommerceEntry#VIEW_DISABLED_ENTRY");
		}

		task ("Then the fields are successfully updated") {
			WaitForPageLoad();

			CommercePaymentTerms.openTermsAndConditionsAdmin();

			CommercePaymentTerms.viewTermsAndConditionsEntry(
				termsAndConditionsActiveStatus = "No",
				termsAndConditionsName = "Edited Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = 1);
		}
	}

	@description = "COMMERCE-9318. User can not add Delivery Terms with same priority"
	@priority = 5
	test DeliveryTermMustBeUnique {
		property portal.acceptance = "true";

		task ("Given an existing Delivery Terms entry with priority set as '1.0'") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndConditions(
				termsAndConditionsName = "Terms and Condition Entry",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = "1.0");

			CommercePaymentTerms.openTermsAndConditionsAdmin();
		}

		task ("When the Sales Manager adds a new 'Delivery Terms' entry with priority set as '1.0'") {
			CommercePaymentTerms.addTermsAndConditions(
				termsAndConditionsName = "Terms and Condition Entry 2",
				termsAndConditionsType = "Delivery Terms",
				valuePosition = "1.0");
		}

		task ("Then an error is shown on the modal") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			Alert.viewErrorMessage(errorMessage = "Error:Please enter a valid priority.");
		}
	}

}