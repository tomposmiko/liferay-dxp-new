@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp(storeFront = "true");
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-7335. Can view pagination on Specification Group"
	@priority = 3
	test CanViewSpecificationGroupPagination {
		property portal.acceptance = "false";

		task ("Given 5 specification groups entries are set") {
			for (var specificationGroupNum : list "1,2,3,4,5") {
				CommerceJSONSpecificationGroupsAPI._addCommerceSpecificationGroup(specificationGroupTitle = "Specification Group ${specificationGroupNum}");
			}
		}

		task ("When pagination is changed to 4") {
			CommerceNavigator.goToSpecificationsAdmin();

			CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

			Pagination.changePagination(itemsPerPage = 4);
		}

		task ("Then only 4 entries are displayed") {
			Pagination.viewResults(results = "Showing 1 to 4 of 5 entries.");

			for (var specificationGroupNum : list "1,2,3,4") {
				LexiconEntry.viewEntryName(rowEntry = "Specification Group ${specificationGroupNum}");
			}

			LexiconEntry.viewNoEntry(rowEntry = "Specification Group 5");
		}

		task ("When pagination is changed to the next page") {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		task ("Then only 1 entry is displayed") {
			Pagination.viewResults(results = "Showing 5 to 5 of 5 entries.");

			LexiconEntry.viewEntryName(rowEntry = "Specification Group 5");

			for (var specificationGroupNum : list "1,2,3,4") {
				LexiconEntry.viewNoEntry(rowEntry = "Specification Group ${specificationGroupNum}");
			}
		}
	}

	@description = "This is a test for COMMERCE-6283. EditSpecificationGroup"
	@priority = 5
	test EditSpecificationGroup {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		CommerceEntry.gotoMenuTab(menuTab = "Specification Groups");

		Click(
			locator1 = "Icon#SVG_ELLIPSIS",
			value1 = "Quantity");

		MenuItem.clickNoError(menuItem = "Edit");

		Type(
			key_fieldLabel = "Title",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Test");

		Type(
			key_fieldLabel = "Key",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "test");

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_rowEntry = "Test",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
	}

	@description = "This is a test for COMMERCE-6284. EditSpecificationLabel"
	@priority = 5
	test EditSpecificationLabel {
		property portal.acceptance = "true";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		Click(
			locator1 = "Icon#SVG_ELLIPSIS",
			value1 = "Dimension");

		MenuItem.clickNoError(menuItem = "Edit");

		Type(
			key_fieldLabel = "Label",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Test");

		Type(
			key_fieldLabel = "Key",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "test");

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_rowEntry = "Test",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
	}

	@description = "This is a test for COMMERCE-6282. RemoveSpecificationGroup"
	@priority = 3
	test RemoveSpecificationGroup {
		property portal.acceptance = "false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

		Click(
			key_rowEntry = "Quantity",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		AssertElementNotPresent(
			key_rowEntry = "Quantity",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
	}

	@description = "This is a test for COMMERCE-6281. RemoveSpecificationLabel"
	@priority = 3
	test RemoveSpecificationLabel {
		property portal.acceptance = "false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		Click(
			key_itemName = "Dimensions",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(
			key_itemName = "Dimensions",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");
	}

}