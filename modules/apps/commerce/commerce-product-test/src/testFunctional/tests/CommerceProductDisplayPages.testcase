@component-name = "portal-commerce"
definition {

	property portal.release = "quarantine";
	property portal.upstream = "quarantine";
	property testray.main.component.name = "Product Info Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		Navigator.openURL();

		if (IsElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE")) {
			User.logoutPG();
		}

		User.firstLoginPG();

		CommerceConfiguration.commerceAdminTearDown();

		CommerceConfiguration.commerceInitializersTearDown();
	}

	@description = "This is a test for COMMERCE-7833. Verify user is redirected to the Product Detail page when they click on a product in the catalog if Default Product Display Page is not set"
	@priority = "3"
	test AssertOldLogicIsAppliedIfDefaultProductDisplayPageIsNotSet {
		task ("Given a Minium site") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");
		}

		task ("And given no default product display page is set") {
			CommerceChannels.openChannelsAdmin();

			CommerceNavigator.gotoEntry(entryName = "Minium Portal");

			CommerceEntry.gotoMenuTab(menuTab = "Product Display Pages");

			CommerceEntry.assertDefaultProductDisplayPage(pageName = "None");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No Items were found.");
		}

		task ("When I click on a product in the catalog page") {
			ApplicationsMenu.gotoSite(site = "Minium");

			CommerceNavigator.gotoProductDetails(productName = "U-Joint");
		}

		task ("Then I should be redirected to the product detail page") {
			FrontStore.viewProductDetail(FSProductName = "U-Joint");
		}
	}

	@description = "This is a test for COMMERCE-7834. Verify user is redirected to a public widget page with Product Details widget when clicking on a catalog product after the page is defined as the Default Product Display Page."
	@priority = "3"
	test ViewDefaultProductDisplayPageWithPublicWidgetPage {
		task ("Given a Minium site") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");
		}

		task ("And given the Minium site has a widget page with a Product Details widget") {
			JSONLayout.addPublicLayout(
				groupName = "Minium",
				layoutName = "Test Public Widget Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Minium",
				layoutName = "Test Public Widget Page",
				widgetName = "Product Details");
		}

		task ("And given the widget page is set as the Default Product Display Page") {
			CommerceChannels.openChannelsAdmin();

			CommerceNavigator.gotoEntry(entryName = "Minium Portal");

			CommerceEntry.gotoMenuTab(menuTab = "Product Display Pages");

			CommerceChannels.addProductDisplayPage(
				pageName = "Test Public Widget Page",
				pageType = "Public");
		}

		task ("When I click on a product in the catalog page") {
			ApplicationsMenu.gotoSite(site = "Minium");

			CommerceNavigator.gotoProductDetails(productName = "U-Joint");
		}

		task ("Then I should be redirected to the widget page with the Product Details widget showing the product details") {
			FrontStore.viewProductDetail(FSProductName = "U-Joint");

			ControlMenu.viewHeaderTitle(headerTitle = "Test Public Widget Page");

			AssertLocation(value1 = "http://localhost:8080/web/minium/p/u-joint");
		}
	}

}