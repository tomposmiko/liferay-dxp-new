@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "quarantine";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		CommerceConfiguration.commerceStoreFrontSetUp();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	@description = "This is a test for COMMERCE-9191. CheckTheFirstStatusForSingleApproverWorkflow"
	@priority = "3"
	test CheckTheFirstStatusForSingleApproverWorkflow {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#CheckTheFirstStatusForSingleApproverWorkflow";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		CommerceEntry.gotoMenuTab(menuTab = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Commerce Product");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			compileDescription = "false",
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple",
			publishProduct = "false");

		task ("Disable Single Approver for avoid issue on CI") {
			ApplicationsMenu.gotoPortlet(
				category = "Workflow",
				panel = "Applications",
				portlet = "Process Builder");

			CommerceEntry.gotoMenuTab(menuTab = "Configuration");

			Workflow.configureWorkflow(
				workflowDefinition = "No Workflow",
				workflowResourceValue = "Commerce Product");
		}
	}

	@description = "This is a test for COMMERCE-9190. DuplicateADraftProduct"
	@priority = "3"
	test DuplicateADraftProduct {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#DuplicateADraftProduct";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			compileDescription = "false",
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple",
			publishProduct = "false");

		Click(
			key_itemName = "",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		Click(
			key_optionValue = "Duplicate",
			locator1 = "CommerceFrontStore#FS_PRODUCT_OPTION");

		CommerceEntry.addProductsEntry(
			productCatalog = "Master",
			productFullDescription = "",
			productName = "Copy of Simple T-Shirt",
			productShortDescription = "",
			publishProduct = "false");

		AssertElementPresent(
			key_status = "Draft",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");
	}

	@description = "This is a test for COMMERCE-9189. DuplicateAnApprovedProduct"
	@priority = "3"
	test DuplicateAnApprovedProduct {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#DuplicateAnApprovedProduct";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple");

		Click(
			key_itemName = "",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		Click(
			key_optionValue = "Duplicate",
			locator1 = "CommerceFrontStore#FS_PRODUCT_OPTION");

		CommerceEntry.addProductsEntry(
			productCatalog = "Master",
			productFullDescription = "",
			productName = "Copy of Simple T-Shirt",
			productShortDescription = "",
			publishProduct = "false");

		AssertElementPresent(
			key_status = "Draft",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");
	}

	test ProductPublishing {
		property environment.acceptance = "quarantine";
		property portal.acceptance = "quarantine";
		property test.name.skip.portal.instance = "CPCommerceProducts#ProductPublishing";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Options");

		Pause(locator1 = "2000");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "Option Description",
			optionFieldType = "Select from List",
			optionName = "Color",
			optionValuesList = "Black,Blue,White",
			valuePriority = "1");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productName = "Simple T-Shirt",
			productType = "Simple");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "Color",
			title = "Add Option");

		CommerceEntry.gotoMenuTab(menuTab = "SKUs");

		CommerceSKUs.addSKU(optionValuesList = "Black:10.0,Blue:20.0,White:30.0");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceProductImages.addProductImages(optionValuesList = "Black,Blue,White");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

		CommerceEntry.createNewSpecificationGroups(
			specificationDescription = "SpecificationGroups",
			specificationTitle = "SpecificationGroups");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		CommerceEntry.createNewSpecificationLabels(
			specificationDescription = "SpecificationLabel",
			specificationGroupTitle = "SpecificationGroups",
			specificationTitle = "SpecificationLabel");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoEntry(entryName = "Simple T-Shirt");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "SpecificationLabel",
			title = "Specifications");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceEntry.viewProductOptions(
			optionList = "Black,Blue,White",
			optionName = "Color");

		CommerceEntry.gotoMenuTab(menuTab = "SKUs");

		CommerceEntry.viewProductSkus(skusList = "WHITESKU:30.00,BLUESKU:20.00,BLACKSKU:10.00");
	}

	@description = "This is a test for COMMERCE-9181. SaveAsDraftAnAlreadyDraftProduct"
	@priority = "3"
	test SaveAsDraftAnAlreadyDraftProduct {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#SaveAsDraftAnAlreadyDraftProduct";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			compileDescription = "false",
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple",
			publishProduct = "false");

		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "Simple T-Shirt 01");

		Click(
			key_text = "Save as Draft",
			locator1 = "Button#ANY");

		AssertElementPresent(
			key_status = "Draft",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");

		AssertTextEquals(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "Simple T-Shirt 01");
	}

	@description = "This is a test for COMMERCE-9183. SaveAsDraftAnApprovedProduct"
	@priority = "3"
	test SaveAsDraftAnApprovedProduct {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#SaveAsDraftAnApprovedProduct";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple");

		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "Simple T-Shirt 01");

		Click(
			key_text = "Save as Draft",
			locator1 = "Button#ANY");

		AssertElementPresent(
			key_status = "Draft",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");

		AssertTextEquals(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "Simple T-Shirt 01");
	}

	test TranslateProductName {
		property portal.acceptance = "quarantine";
		property test.name.skip.portal.instance = "CPCommerceProducts#TranslateProductName";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "Shock Absorber");

		CommerceNavigator.gotoEntry(entryName = "Shock Absorber");

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "es-ES");

		Type(
			locator1 = "TextInput#NAME",
			value1 = "Amortiguador");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		CommerceAcceleratorsInitializer.addPortlet(portletName = "Language Selector");

		LanguagePortlet.selectLanguagePG(
			locale = "es_ES",
			textIcon = "español-España");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "Amortiguador");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "U-Joint");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "Transmission Cooler Line Assembly");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "english-United States");
	}

	@description = "This is a test for COMMERCE-9182. VerifyDraftProductNotAppearOnMiniumCatalogPage"
	@priority = "3"
	test VerifyDraftProductNotAppearOnMiniumCatalogPage {
		property custom.properties = "jsonws.web.service.paths.excludes=${line.separator}company.security.strangers.verify=false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		Click(
			key_navUnderline = "Members",
			locator1 = "NavUnderline#NAV_UNDERLINE_LINK");

		CommerceAcceleratorsInitializer.inviteNewMemberWithRoleToAccount(
			emailAddress = "buyer@liferay.com",
			role = "Buyer");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		CommerceLogin.editPasswordCP(
			newPassword = "testt",
			requirePasswordReset = "true",
			userScreenName = "buyer");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Minium",
			productName = "Simple T-Shirt",
			productType = "Simple",
			publishProduct = "false");

		User.logoutPG();

		CommerceLogin.miniumLogin(
			password = "testt",
			resetPassword = "test",
			urlAppend = "web/minium",
			userEmailAddress = "buyer@liferay.com");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Simple T-Shirt");

		Button.clickSubmitButton();

		AssertElementNotPresent(
			key_productName = "Simple T-Shirt",
			locator1 = "CommerceAccelerators#MINIUM_CARD_NAME");

		User.logoutPG();

		User.firstLoginPG();

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		AppBuilderAdmin.searchByItem(itemName = "Simple T-Shirt");

		CommerceNavigator.gotoEntry(entryName = "Simple T-Shirt");

		CommerceEntry.publishEntry(status = "Approved");

		User.logoutPG();

		CommerceLogin.miniumLogin(
			password = "test",
			urlAppend = "web/minium",
			userEmailAddress = "buyer@liferay.com");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Simple T-Shirt");

		Button.clickSubmitButton();

		AssertElementPresent(
			key_productName = "Simple T-Shirt",
			locator1 = "CommerceAccelerators#MINIUM_CARD_NAME");
	}

	@description = "This is a test for COMMERCE-9179. VerifyDraftStatus"
	@priority = "3"
	test VerifyDraftStatus {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#VerifyDraftStatus";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			compileDescription = "false",
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple",
			publishProduct = "false");

		AssertElementPresent(
			key_text = "Publish",
			locator1 = "Button#ANY");

		AssertElementPresent(
			key_text = "Save as Draft",
			locator1 = "Button#ANY");
	}

	@description = "This is a test for COMMERCE-9180. VerifyDraftStatusNormalWorkflow"
	@priority = "3"
	test VerifyDraftStatusNormalWorkflow {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceProducts#VerifyDraftStatusNormalWorkflow";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productCatalog = "Master",
			productName = "Simple T-Shirt",
			productType = "Simple");
	}

}