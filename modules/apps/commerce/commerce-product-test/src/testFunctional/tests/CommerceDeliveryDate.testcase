@component-name = "portal-commerce"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=${line.separator}company.security.strangers.verify=false";
	property osgi.module.configuration.file.names = "com.liferay.commerce.configuration.CommerceOrderImporterTypeConfiguration.config";
	property osgi.module.configurations = "enabled=&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp(minium = "true");

		task ("Setup: Create an account with a buyer user") {
			CommerceEntry.addAccountEntryUser(
				accountName = "Commerce Account",
				accountType = "Business",
				agreeToTermsAndAnswerReminderQuery = "true",
				createNewAccount = "true",
				requireReset = "false",
				userEmailAddress = "buyer@liferay.com",
				userFirstName = "Buyer",
				userLastName = "User",
				userRole = "Buyer",
				userScreenName = "buyeruser",
				userSiteMembership = "Minium");
		}
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "COMMERCE-9323. The 'Checkout Requested Delivery Date' toggle is present and disabled"
	@priority = "3"
	test AssertCheckoutRequestDeliveryDateToggleIsPresentAndDisabled {
		task ("When a channel's configuration page is reached") {
			CommerceChannels.openChannelsAdmin();

			CommerceNavigator.gotoEntry(entryName = "Minium Portal");
		}

		task ("Then the 'Checkout Requested Delivery Date' toggle is present in the 'Orders' card") {
			AssertElementPresent(
				key_toggleSwitchLabel = "Requested Delivery Date at Checkout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		task ("And the 'Checkout Requested Delivery Date' toggle is disabled by default") {
			AssertNotChecked.assertNotCheckedNotVisible(
				key_toggleSwitchLabel = "Requested Delivery Date at Checkout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
	}

	@description = "COMMERCE-9324. A buyer user can set the requested delivery date during the checkout process"
	@priority = "3"
	test CanSetDeliveryDate {
		task ("Given Minium channel's configuration page is reached") {
			CommerceChannels.openChannelsAdmin();

			CommerceNavigator.gotoEntry(entryName = "Minium Portal");
		}

		task ("And given the 'Checkout Requested Delivery Date' toggle is enabled") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Requested Delivery Date at Checkout",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		task ("And given the configuration is saved") {
			Button.clickSave();
		}

		task ("When a checkout process is started by a user with role 'Buyer'") {
			User.logoutPG();

			CommerceLogin.miniumLogin(
				password = "test",
				urlAppend = "web/minium",
				userEmailAddress = "buyer@liferay.com");
		}

		task ("And when an item is added to cart from Minium site") {
			FrontStore.addInitializerProductToCart(
				productName = "U-Joint",
				productQuantity = "1");
		}

		task ("And when the checkout process is started") {
			CommerceCheckout.gotoCheckout();

			CommerceCheckout.setAddress(
				newAddressAddress = "Test Address",
				newAddressCity = "Test City",
				newAddressCountry = "United States",
				newAddressName = "Address Name",
				newAddressZipCode = "Test Zip Code",
				shippingMethod = "Standard");

			Button.click(button = "Continue");

			CommerceCheckout.setStandardShippingOption();
		}

		task ("Then the user can set a requested delivery date in the blank input when reaching checkout's 'Order Summary' step") {
			CommerceCheckout.setDeliveryDate(
				displayDateDay = DateUtil.getCurrentDate(),
				displayDateMonth = DateUtil.getCurrentMonth(),
				displayDateYear = DateUtil.getCurrentYear());
		}

		task ("And then the checkout process completes successfully ") {
			AssertTextEquals(
				locator1 = "CommerceAccelerators#CHECKOUT_SUCCESS_MESSAGE",
				value1 = "Success! Your order has been processed.");
		}
	}

}