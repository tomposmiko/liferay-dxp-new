@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "This is a test for COMMERCE-8332. Assert default delivery term can be added"
	@priority = "4"
	test AddADefaultDeliveryTerm {
		property portal.acceptance = "false";

		task ("Given I create two accounts") {
			for (var entryNumber : list "1,2") {
				JSONAccountEntry.addAccountEntry(
					accountEntryName = "Test Account ${entryNumber}",
					accountEntryType = "Business");
			}
		}

		task ("Given that I created two Delivery terms entries with different priorities into Terms and Conditions") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "AA Terms and Condition Entry",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "ZZ Terms and Condition Entry",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "2");
		}

		task ("When I go into the "Order Defaults" tab inside the Account and click on the Set Default Delivery Commerce Term Entry") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Click(
				key_termType = "Delivery",
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_PLUS");
		}

		task ("Then a dropdown appears with all the delivery term entries we created before, and the entries are sorted by priority") {
			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Accounts.viewDefaultCommerceTermsListByPriority(rowList = "ZZ Terms and Condition Entry:1,AA Terms and Condition Entry:2");
		}

		task ("When I go into the "Order Defaults" tab inside the Account and click on the Set Default Delivery Commerce Term Entry") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then I can select one single entry") {
			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "AA Terms and Condition Entry",
				termType = "Delivery");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,AA Terms and Condition Entry,Yes,No",
				termType = "Delivery");
		}

		task ("When I go into the "Order Defaults" tab inside the Account") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 2");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default entry that is already selected is Use Priority Settings") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(termType = "Delivery");
		}

		task ("And when I select one entry") {
			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "AA Terms and Condition Entry",
				termType = "Delivery");
		}

		task ("And Remove the default delivery terms, "Use Priority Settings" is displayed instead of the T&C entry") {
			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.removeDefaultCommerceTerms(
				entryDetails = "AA Terms and Condition Entry",
				termType = "Delivery");
		}
	}

	@description = "This is a test for COMMERCE-8319. Assert default payment term can be added"
	@priority = "4"
	test CanAddADefaultPaymentTerm {
		property portal.acceptance = "false";

		task ("Given I create two accounts") {
			for (var entryNumber : list "1,2") {
				JSONAccountEntry.addAccountEntry(
					accountEntryName = "Test Account ${entryNumber}",
					accountEntryType = "Business");
			}
		}

		task ("Given that I created two Payment terms entries with different priorities into Terms and Conditions") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "BB Terms and Condition Entry",
				termsAndConditionType = "Payment Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "AA Terms and Condition Entry",
				termsAndConditionType = "Payment Terms",
				valuePosition = "2");
		}

		task ("When I go into the "Order Defaults" tab inside the Account and click on the Set Default Payment Commerce Term Entry") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Click(
				key_termType = "Payment",
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_PLUS");
		}

		task ("Then a dropdown appears with all the payment term entries we created before, and the entries are sorted by priority") {
			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Accounts.viewDefaultCommerceTermsListByPriority(rowList = "AA Terms and Condition Entry:1,BB Terms and Condition Entry:2");
		}

		task ("When I go into the "Order Defaults" tab inside the Account and click on the Set Default Payment Commerce Term Entry") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then I can select one single entry") {
			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "BB Terms and Condition Entry",
				termType = "Payment");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,BB Terms and Condition Entry,Yes,No",
				termType = "Payment");
		}

		task ("When I go into the "Order Defaults" tab inside the Account") {
			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Test Account 2");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default entry that is already selected is Use Priority Settings") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(termType = "Payment");
		}

		task ("And when I select one entry") {
			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "AA Terms and Condition Entry",
				termType = "Payment");
		}

		task ("And Remove the default payment terms, "Use Priority Settings" is displayed instead of the T&C entry") {
			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.removeDefaultCommerceTerms(
				entryDetails = "AA Terms and Condition Entry",
				termType = "Payment");
		}
	}

	@description = "This is a test for COMMERCE-8333. Deleting an account default delivery term will revert to Use Priority Settings"
	@priority = "4"
	test RemoveADeliveryTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given two Delivery Terms and Condition entries with different priorities.") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 2",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "2");
		}

		task ("And given I create an account with a specific default delivery term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "Terms and Condition Entry 1",
				termType = "Delivery");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,Terms and Condition Entry 1,Yes,No",
				termType = "Delivery");
		}

		task ("When I delete the default delivery term that was linked to an account") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Delete",
				termsAndConditionName = "Terms and Condition Entry 1");

			CommercePaymentTerms.viewDeleteTermsAndConditionEntry(termsAndConditionName = "Terms and Condition Entry 1");
		}

		task ("And I edit the account") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default delivery is not present anymore.") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(termType = "Delivery");

			AssertElementPresent(
				key_termType = "Delivery",
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_EMPTY_SEARCH_CONTAINER");
		}
	}

	@description = "This is a test for COMMERCE-8320. Delete an account default payment term will revert to "Use Priority Settings"."
	@priority = "4"
	test RemoveAPaymentTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given that I create two Terms and Conditions Payment Terms entries with different priorities.") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Payment Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 2",
				termsAndConditionType = "Payment Terms",
				valuePosition = "2");
		}

		task ("And given I create an account with a specific default payment term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "Terms and Condition Entry 1",
				termType = "Payment");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,Terms and Condition Entry 1,Yes,No",
				termType = "Payment");
		}

		task ("When I delete the default payment term that was linked to an account") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Delete",
				termsAndConditionName = "Terms and Condition Entry 1");

			CommercePaymentTerms.viewDeleteTermsAndConditionEntry(termsAndConditionName = "Terms and Condition Entry 1");
		}

		task ("And when I edit the account") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default payment is not present anymore.") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(termType = "Payment");

			AssertElementPresent(
				key_termType = "Payment",
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_EMPTY_SEARCH_CONTAINER");
		}
	}

	@description = "This is a test for COMMERCE-8334. If the delivery term set for the account is changed to inactive, the default term remains shown but inactive"
	@priority = "4"
	test SetAnInactiveDeliveryTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given a new "Terms and Conditions" entry with the status to "Active".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "1");

			Click(locator1 = "Button#BACK");
		}

		task ("And given an account with a specific default delivery term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "Terms and Condition Entry 1",
				termType = "Delivery");
		}

		task ("When I set the delivery term that was linked to an account as "inactive".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Edit",
				termsAndConditionName = "Terms and Condition Entry 1");

			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");

			Button.clickPublish();

			Alert.viewSuccessMessage();
		}

		task ("And go into the account edit order page") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the Delivery Term is inactive") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,Terms and Condition Entry 1,No,No",
				termType = "Delivery");
		}
	}

	@description = "This is a test for COMMERCE-8328. If the payment term set for the account is changed to inactive, the default term remains shown but inactive"
	@priority = "4"
	test SetAnInactivePaymentTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given a new "Terms and Conditions" entry with status to "Active".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Payment Terms",
				valuePosition = "1");

			Click(locator1 = "Button#BACK");
		}

		task ("And given an account with a specific default payment term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultCommerceTermsEntry(
				termEntry = "Terms and Condition Entry 1",
				termType = "Payment");
		}

		task ("When I set the payment term that was linked to an account as "inactive".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Edit",
				termsAndConditionName = "Terms and Condition Entry 1");

			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");

			Button.clickPublish();

			Alert.viewSuccessMessage();
		}

		task ("And I go into the account edit order page") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the Payment Term is inactive") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				termEntry = "All Channels,Terms and Condition Entry 1,No,No",
				termType = "Payment");
		}
	}

}