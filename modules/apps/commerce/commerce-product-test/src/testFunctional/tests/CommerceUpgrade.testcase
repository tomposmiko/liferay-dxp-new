@component-name = "portal-commerce"
definition {

	property database.types = "db2,mariadb,mysql,oracle,postgresql";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		SearchAdministration.executeReindex();
	}

	@description = "This is a use case for COMMERCE-8643"
	@priority = 5
	test ViewCommerceAppsAfterUpgrade7310 {
		property data.archive.type = "data-archive-commerce";
		property portal.version = "7.3.10";

		var shippingAddressAddress = "Test Address";
		var shippingAddressCity = "Test City";
		var shippingAddressZipCode = "Test Zip Code";
		var shippingAddressName = "Address Name";
		var shippingaddressCountry = "United States";

		task ("Assert that the number of products after the Upgrade is correct (50)") {
			CommerceNavigator.gotoPortlet(
				category = "Product Management",
				portlet = "Products");

			CommerceEntry.viewPaginationResults(results = "Showing 1 to 10 of 50 entries.");
		}

		task ("Assert that Master and Minium catalogs are present after the Upgrade") {
			CommerceNavigator.gotoPortlet(
				category = "Product Management",
				portlet = "Catalogs");

			for (var catalogs : list "Master,Minium") {
				AssertElementPresent(
					key_entryName = ${catalogs},
					locator1 = "CommerceNavigation#ENTRY_NAME");
			}
		}

		task ("Assert that Minium Portal channel is present after the Upgrade") {
			CommerceNavigator.gotoPortlet(
				category = "Store Management",
				portlet = "Channels");

			AssertElementPresent(
				key_entryName = "Minium Portal",
				locator1 = "CommerceNavigation#ENTRY_NAME");
		}

		task ("Assert that Master Base Price List and Minium Base Price List are present after the Upgrade") {
			CommerceNavigator.gotoPortlet(
				category = "Pricing",
				portlet = "Price Lists");

			for (var priceLists : list "Master Base Price List,Minium Base Price List") {
				AssertElementPresent(
					key_entryName = ${priceLists},
					locator1 = "CommerceNavigation#ENTRY_NAME");
			}
		}

		task ("Review the 2 orders created before the Upgrade on 7.3.10") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Orders");

			CommerceNavigator.gotoOrderEntryViaAdmin(status = "Open");

			CommerceOrders.viewOrdersEntry(
				productListPrice = "50.00",
				productName = "ABS Sensor",
				productQuantity = 2,
				productSku = "MIN93015",
				productTotalPrice = "100.00");

			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Orders");

			CommerceNavigator.gotoOrderEntryViaAdmin(status = "Processing");

			CommerceOrders.viewOrdersEntry(
				addressAddress = ${shippingAddressAddress},
				addressCity = ${shippingAddressCity},
				addressZipCode = ${shippingAddressZipCode},
				paymentMethod = "Money Order",
				productListPrice = "50.00",
				productName = "ABS Sensor",
				productQuantity = 2,
				productSku = "MIN93015",
				productTotalPrice = "100.00");

			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Shipments");

			Click(
				key_text = "Processing",
				locator1 = "Icon#ANY_VERTICAL_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Edit");

			AssertTextEquals.assertPartialText(
				key_detail = "Shipping Method",
				locator1 = "CommerceOrders#SHIPMENT_CARRIER_DETAILS",
				value1 = "Flat Rate");

			CommerceShipments.assertShipmentItemWarehouseAndQuantityInShipment(
				quantityInShipment = 2,
				shipmentItemSku = "MIN93015",
				warehouseName = "Italy");

			for (var address : list "${shippingAddressAddress},${shippingAddressCity},${shippingAddressName},${shippingAddressZipCode}") {
				AssertTextEquals.assertPartialText(
					key_titleName = "Shipping Address",
					locator1 = "CommerceOrders#ORDER_GENERAL_DETAILS_DESCRIPTION",
					value1 = ${address});
			}
		}
	}

}