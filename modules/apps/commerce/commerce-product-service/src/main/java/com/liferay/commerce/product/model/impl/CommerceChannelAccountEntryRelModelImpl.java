/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.product.model.impl;

import com.liferay.commerce.product.model.CommerceChannelAccountEntryRel;
import com.liferay.commerce.product.model.CommerceChannelAccountEntryRelModel;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.Validator;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceChannelAccountEntryRel service. Represents a row in the &quot;CChannelAccountEntryRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CommerceChannelAccountEntryRelModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceChannelAccountEntryRelImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceChannelAccountEntryRelImpl
 * @generated
 */
@JSON(strict = true)
public class CommerceChannelAccountEntryRelModelImpl
	extends BaseModelImpl<CommerceChannelAccountEntryRel>
	implements CommerceChannelAccountEntryRelModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce channel account entry rel model instance should use the <code>CommerceChannelAccountEntryRel</code> interface instead.
	 */
	public static final String TABLE_NAME = "CChannelAccountEntryRel";

	public static final Object[][] TABLE_COLUMNS = {
		{"mvccVersion", Types.BIGINT}, {"ctCollectionId", Types.BIGINT},
		{"CChannelAccountEntryRelId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"accountEntryId", Types.BIGINT},
		{"classNameId", Types.BIGINT}, {"classPK", Types.BIGINT},
		{"commerceChannelId", Types.BIGINT},
		{"overrideEligibility", Types.BOOLEAN}, {"priority", Types.DOUBLE},
		{"type_", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ctCollectionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("CChannelAccountEntryRelId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("accountEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classNameId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceChannelId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("overrideEligibility", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("priority", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("type_", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CChannelAccountEntryRel (mvccVersion LONG default 0 not null,ctCollectionId LONG default 0 not null,CChannelAccountEntryRelId LONG not null,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,accountEntryId LONG,classNameId LONG,classPK LONG,commerceChannelId LONG,overrideEligibility BOOLEAN,priority DOUBLE,type_ INTEGER,primary key (CChannelAccountEntryRelId, ctCollectionId))";

	public static final String TABLE_SQL_DROP =
		"drop table CChannelAccountEntryRel";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceChannelAccountEntryRel.priority DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CChannelAccountEntryRel.priority DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean ENTITY_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean FINDER_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean COLUMN_BITMASK_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACCOUNTENTRYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CLASSNAMEID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CLASSPK_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMMERCECHANNELID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TYPE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRIORITY_COLUMN_BITMASK = 32L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.product.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.product.model.CommerceChannelAccountEntryRel"));

	public CommerceChannelAccountEntryRelModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceChannelAccountEntryRelId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceChannelAccountEntryRelId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceChannelAccountEntryRelId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceChannelAccountEntryRel.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceChannelAccountEntryRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceChannelAccountEntryRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommerceChannelAccountEntryRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceChannelAccountEntryRel, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(CommerceChannelAccountEntryRel)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceChannelAccountEntryRel, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceChannelAccountEntryRel, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceChannelAccountEntryRel)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceChannelAccountEntryRel, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommerceChannelAccountEntryRel, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map
		<String, Function<CommerceChannelAccountEntryRel, Object>>
			_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<CommerceChannelAccountEntryRel, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceChannelAccountEntryRel, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String,
					 Function<CommerceChannelAccountEntryRel, Object>>();
		Map<String, BiConsumer<CommerceChannelAccountEntryRel, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CommerceChannelAccountEntryRel, ?>>();

		attributeGetterFunctions.put(
			"mvccVersion", CommerceChannelAccountEntryRel::getMvccVersion);
		attributeSetterBiConsumers.put(
			"mvccVersion",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setMvccVersion);
		attributeGetterFunctions.put(
			"ctCollectionId",
			CommerceChannelAccountEntryRel::getCtCollectionId);
		attributeSetterBiConsumers.put(
			"ctCollectionId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setCtCollectionId);
		attributeGetterFunctions.put(
			"commerceChannelAccountEntryRelId",
			CommerceChannelAccountEntryRel::
				getCommerceChannelAccountEntryRelId);
		attributeSetterBiConsumers.put(
			"commerceChannelAccountEntryRelId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::
					setCommerceChannelAccountEntryRelId);
		attributeGetterFunctions.put(
			"companyId", CommerceChannelAccountEntryRel::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setCompanyId);
		attributeGetterFunctions.put(
			"userId", CommerceChannelAccountEntryRel::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setUserId);
		attributeGetterFunctions.put(
			"userName", CommerceChannelAccountEntryRel::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<CommerceChannelAccountEntryRel, String>)
				CommerceChannelAccountEntryRel::setUserName);
		attributeGetterFunctions.put(
			"createDate", CommerceChannelAccountEntryRel::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<CommerceChannelAccountEntryRel, Date>)
				CommerceChannelAccountEntryRel::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", CommerceChannelAccountEntryRel::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<CommerceChannelAccountEntryRel, Date>)
				CommerceChannelAccountEntryRel::setModifiedDate);
		attributeGetterFunctions.put(
			"accountEntryId",
			CommerceChannelAccountEntryRel::getAccountEntryId);
		attributeSetterBiConsumers.put(
			"accountEntryId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setAccountEntryId);
		attributeGetterFunctions.put(
			"classNameId", CommerceChannelAccountEntryRel::getClassNameId);
		attributeSetterBiConsumers.put(
			"classNameId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setClassNameId);
		attributeGetterFunctions.put(
			"classPK", CommerceChannelAccountEntryRel::getClassPK);
		attributeSetterBiConsumers.put(
			"classPK",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setClassPK);
		attributeGetterFunctions.put(
			"commerceChannelId",
			CommerceChannelAccountEntryRel::getCommerceChannelId);
		attributeSetterBiConsumers.put(
			"commerceChannelId",
			(BiConsumer<CommerceChannelAccountEntryRel, Long>)
				CommerceChannelAccountEntryRel::setCommerceChannelId);
		attributeGetterFunctions.put(
			"overrideEligibility",
			CommerceChannelAccountEntryRel::getOverrideEligibility);
		attributeSetterBiConsumers.put(
			"overrideEligibility",
			(BiConsumer<CommerceChannelAccountEntryRel, Boolean>)
				CommerceChannelAccountEntryRel::setOverrideEligibility);
		attributeGetterFunctions.put(
			"priority", CommerceChannelAccountEntryRel::getPriority);
		attributeSetterBiConsumers.put(
			"priority",
			(BiConsumer<CommerceChannelAccountEntryRel, Double>)
				CommerceChannelAccountEntryRel::setPriority);
		attributeGetterFunctions.put(
			"type", CommerceChannelAccountEntryRel::getType);
		attributeSetterBiConsumers.put(
			"type",
			(BiConsumer<CommerceChannelAccountEntryRel, Integer>)
				CommerceChannelAccountEntryRel::setType);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mvccVersion = mvccVersion;
	}

	@JSON
	@Override
	public long getCtCollectionId() {
		return _ctCollectionId;
	}

	@Override
	public void setCtCollectionId(long ctCollectionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ctCollectionId = ctCollectionId;
	}

	@JSON
	@Override
	public long getCommerceChannelAccountEntryRelId() {
		return _commerceChannelAccountEntryRelId;
	}

	@Override
	public void setCommerceChannelAccountEntryRelId(
		long commerceChannelAccountEntryRelId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_commerceChannelAccountEntryRelId = commerceChannelAccountEntryRelId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getAccountEntryId() {
		return _accountEntryId;
	}

	@Override
	public void setAccountEntryId(long accountEntryId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accountEntryId = accountEntryId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalAccountEntryId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("accountEntryId"));
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return "";
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_classNameId = classNameId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalClassNameId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("classNameId"));
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_classPK = classPK;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalClassPK() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("classPK"));
	}

	@JSON
	@Override
	public long getCommerceChannelId() {
		return _commerceChannelId;
	}

	@Override
	public void setCommerceChannelId(long commerceChannelId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_commerceChannelId = commerceChannelId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCommerceChannelId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("commerceChannelId"));
	}

	@JSON
	@Override
	public boolean getOverrideEligibility() {
		return _overrideEligibility;
	}

	@JSON
	@Override
	public boolean isOverrideEligibility() {
		return _overrideEligibility;
	}

	@Override
	public void setOverrideEligibility(boolean overrideEligibility) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_overrideEligibility = overrideEligibility;
	}

	@JSON
	@Override
	public double getPriority() {
		return _priority;
	}

	@Override
	public void setPriority(double priority) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_priority = priority;
	}

	@JSON
	@Override
	public int getType() {
		return _type;
	}

	@Override
	public void setType(int type) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_type = type;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalType() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("type_"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommerceChannelAccountEntryRel.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceChannelAccountEntryRel toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommerceChannelAccountEntryRel>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceChannelAccountEntryRelImpl commerceChannelAccountEntryRelImpl =
			new CommerceChannelAccountEntryRelImpl();

		commerceChannelAccountEntryRelImpl.setMvccVersion(getMvccVersion());
		commerceChannelAccountEntryRelImpl.setCtCollectionId(
			getCtCollectionId());
		commerceChannelAccountEntryRelImpl.setCommerceChannelAccountEntryRelId(
			getCommerceChannelAccountEntryRelId());
		commerceChannelAccountEntryRelImpl.setCompanyId(getCompanyId());
		commerceChannelAccountEntryRelImpl.setUserId(getUserId());
		commerceChannelAccountEntryRelImpl.setUserName(getUserName());
		commerceChannelAccountEntryRelImpl.setCreateDate(getCreateDate());
		commerceChannelAccountEntryRelImpl.setModifiedDate(getModifiedDate());
		commerceChannelAccountEntryRelImpl.setAccountEntryId(
			getAccountEntryId());
		commerceChannelAccountEntryRelImpl.setClassNameId(getClassNameId());
		commerceChannelAccountEntryRelImpl.setClassPK(getClassPK());
		commerceChannelAccountEntryRelImpl.setCommerceChannelId(
			getCommerceChannelId());
		commerceChannelAccountEntryRelImpl.setOverrideEligibility(
			isOverrideEligibility());
		commerceChannelAccountEntryRelImpl.setPriority(getPriority());
		commerceChannelAccountEntryRelImpl.setType(getType());

		commerceChannelAccountEntryRelImpl.resetOriginalValues();

		return commerceChannelAccountEntryRelImpl;
	}

	@Override
	public CommerceChannelAccountEntryRel cloneWithOriginalValues() {
		CommerceChannelAccountEntryRelImpl commerceChannelAccountEntryRelImpl =
			new CommerceChannelAccountEntryRelImpl();

		commerceChannelAccountEntryRelImpl.setMvccVersion(
			this.<Long>getColumnOriginalValue("mvccVersion"));
		commerceChannelAccountEntryRelImpl.setCtCollectionId(
			this.<Long>getColumnOriginalValue("ctCollectionId"));
		commerceChannelAccountEntryRelImpl.setCommerceChannelAccountEntryRelId(
			this.<Long>getColumnOriginalValue("CChannelAccountEntryRelId"));
		commerceChannelAccountEntryRelImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		commerceChannelAccountEntryRelImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		commerceChannelAccountEntryRelImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		commerceChannelAccountEntryRelImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		commerceChannelAccountEntryRelImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		commerceChannelAccountEntryRelImpl.setAccountEntryId(
			this.<Long>getColumnOriginalValue("accountEntryId"));
		commerceChannelAccountEntryRelImpl.setClassNameId(
			this.<Long>getColumnOriginalValue("classNameId"));
		commerceChannelAccountEntryRelImpl.setClassPK(
			this.<Long>getColumnOriginalValue("classPK"));
		commerceChannelAccountEntryRelImpl.setCommerceChannelId(
			this.<Long>getColumnOriginalValue("commerceChannelId"));
		commerceChannelAccountEntryRelImpl.setOverrideEligibility(
			this.<Boolean>getColumnOriginalValue("overrideEligibility"));
		commerceChannelAccountEntryRelImpl.setPriority(
			this.<Double>getColumnOriginalValue("priority"));
		commerceChannelAccountEntryRelImpl.setType(
			this.<Integer>getColumnOriginalValue("type_"));

		return commerceChannelAccountEntryRelImpl;
	}

	@Override
	public int compareTo(
		CommerceChannelAccountEntryRel commerceChannelAccountEntryRel) {

		int value = 0;

		if (getPriority() < commerceChannelAccountEntryRel.getPriority()) {
			value = -1;
		}
		else if (getPriority() > commerceChannelAccountEntryRel.getPriority()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CommerceChannelAccountEntryRel)) {
			return false;
		}

		CommerceChannelAccountEntryRel commerceChannelAccountEntryRel =
			(CommerceChannelAccountEntryRel)object;

		long primaryKey = commerceChannelAccountEntryRel.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceChannelAccountEntryRel> toCacheModel() {
		CommerceChannelAccountEntryRelCacheModel
			commerceChannelAccountEntryRelCacheModel =
				new CommerceChannelAccountEntryRelCacheModel();

		commerceChannelAccountEntryRelCacheModel.mvccVersion = getMvccVersion();

		commerceChannelAccountEntryRelCacheModel.ctCollectionId =
			getCtCollectionId();

		commerceChannelAccountEntryRelCacheModel.
			commerceChannelAccountEntryRelId =
				getCommerceChannelAccountEntryRelId();

		commerceChannelAccountEntryRelCacheModel.companyId = getCompanyId();

		commerceChannelAccountEntryRelCacheModel.userId = getUserId();

		commerceChannelAccountEntryRelCacheModel.userName = getUserName();

		String userName = commerceChannelAccountEntryRelCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceChannelAccountEntryRelCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceChannelAccountEntryRelCacheModel.createDate =
				createDate.getTime();
		}
		else {
			commerceChannelAccountEntryRelCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceChannelAccountEntryRelCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commerceChannelAccountEntryRelCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		commerceChannelAccountEntryRelCacheModel.accountEntryId =
			getAccountEntryId();

		commerceChannelAccountEntryRelCacheModel.classNameId = getClassNameId();

		commerceChannelAccountEntryRelCacheModel.classPK = getClassPK();

		commerceChannelAccountEntryRelCacheModel.commerceChannelId =
			getCommerceChannelId();

		commerceChannelAccountEntryRelCacheModel.overrideEligibility =
			isOverrideEligibility();

		commerceChannelAccountEntryRelCacheModel.priority = getPriority();

		commerceChannelAccountEntryRelCacheModel.type = getType();

		return commerceChannelAccountEntryRelCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceChannelAccountEntryRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommerceChannelAccountEntryRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceChannelAccountEntryRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CommerceChannelAccountEntryRel)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceChannelAccountEntryRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommerceChannelAccountEntryRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceChannelAccountEntryRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply(
					(CommerceChannelAccountEntryRel)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, CommerceChannelAccountEntryRel>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						CommerceChannelAccountEntryRel.class,
						ModelWrapper.class);

	}

	private long _mvccVersion;
	private long _ctCollectionId;
	private long _commerceChannelAccountEntryRelId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _accountEntryId;
	private long _classNameId;
	private long _classPK;
	private long _commerceChannelId;
	private boolean _overrideEligibility;
	private double _priority;
	private int _type;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<CommerceChannelAccountEntryRel, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CommerceChannelAccountEntryRel)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("mvccVersion", _mvccVersion);
		_columnOriginalValues.put("ctCollectionId", _ctCollectionId);
		_columnOriginalValues.put(
			"CChannelAccountEntryRelId", _commerceChannelAccountEntryRelId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("accountEntryId", _accountEntryId);
		_columnOriginalValues.put("classNameId", _classNameId);
		_columnOriginalValues.put("classPK", _classPK);
		_columnOriginalValues.put("commerceChannelId", _commerceChannelId);
		_columnOriginalValues.put("overrideEligibility", _overrideEligibility);
		_columnOriginalValues.put("priority", _priority);
		_columnOriginalValues.put("type_", _type);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put(
			"CChannelAccountEntryRelId", "commerceChannelAccountEntryRelId");
		attributeNames.put("type_", "type");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("mvccVersion", 1L);

		columnBitmasks.put("ctCollectionId", 2L);

		columnBitmasks.put("CChannelAccountEntryRelId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("accountEntryId", 256L);

		columnBitmasks.put("classNameId", 512L);

		columnBitmasks.put("classPK", 1024L);

		columnBitmasks.put("commerceChannelId", 2048L);

		columnBitmasks.put("overrideEligibility", 4096L);

		columnBitmasks.put("priority", 8192L);

		columnBitmasks.put("type_", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CommerceChannelAccountEntryRel _escapedModel;

}