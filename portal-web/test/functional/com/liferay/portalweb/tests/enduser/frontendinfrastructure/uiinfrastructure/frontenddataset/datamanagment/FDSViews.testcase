@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given access Datasets admin page") {
			ApplicationsMenu.gotoPortlet(
				category = "Object",
				panel = "Control Panel",
				portlet = "Datasets");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			GoBack();

			FrontendDataSetAdmin.tearDownCP();
		}
	}

	@description = "LPS-180896 Confirm that the dataset view deletion is recoverable"
	@priority = 5
	test CanCancelDeletionOnCancelButton {
		task ("The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "/c/fdsentries");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And select delete and in the modal, click the cancel button") {
			Click(
				key_name = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

			ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

			Button.clickCancel();
		}

		task ("Then the dataset View is not deleted") {
			AssertElementPresent(
				key_itemName = "View Test",
				locator1 = "FrontendDataSetAdmin#NAME_OF_VIEWS");
		}
	}

	@description = "LPS-180898. Confirm that the user can cancel deletion when clicking close (X) button"
	@priority = 3
	test CanCancelDeletionOnCloseButton {
		task ("When The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "/c/fdsentries");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And The user tries to delete the view") {
			Click(
				key_name = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

			ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

			AssertElementPresent(
				key_modalText = "Deleting a dataset view is an action that cannot be reversed. The content will be deleted and some dataset fragments may not be displayed.",
				locator1 = "FrontendDataSetAdmin#DELETE_DATA_SET_MODAL_BODY");
		}

		task ("And When the user clicks on the 'X' button in the modal") {
			Click(
				key_modalTitle = "Delete Dataset View",
				locator1 = "Button#CLOSE_MODAL");
		}

		task ("Then The dataset is present in the data set Admin page") {
			AssertElementPresent(
				entryName = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_NAME");
		}
	}

	@description = "LPS-180893. Confirm that a dataset view can be deleted"
	@priority = 5
	test CanDeleteView {
		task ("When The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "Channel");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And the user deletes a View created") {
			FrontendDataSetAdmin.deleteDataSetView(viewName = "View Test");
		}

		task ("Then Confirm that the Success message should appear") {
			Alert.viewSuccessMessage();
		}

		task ("And The dataset View is not present in the data set View page") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_STATE_INFO",
				value1 = "No Results Found");
		}
	}

}