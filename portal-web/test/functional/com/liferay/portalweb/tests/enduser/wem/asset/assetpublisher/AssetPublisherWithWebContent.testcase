@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Asset Publisher,Web Content Administration";
	property testray.main.component.name = "Asset Publisher";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Asset Publisher Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Asset Publisher Page",
			widgetName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Asset Publisher Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = 4
	test AddWebContentPGViaAP {
		var siteName = TestCase.getSiteName(siteName = ${siteName});

		Navigator.openSiteURL(siteName = ${siteName});

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title");
	}

	@priority = 4
	test AddWebContentWithGlobalScopeViaCPToLiferayAP {
		property test.name.skip.portal.instance = "AssetPublisherWithWebContent#AddWebContentWithGlobalScopeViaCPToLiferayAP";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Global",
			title = "WC WebContent Title");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page 1");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page 1",
			widgetName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Liferay",
			siteScopeType = "Current Site");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContent.deleteCP(
			siteURLKey = "global",
			webContentTitle = "WC WebContent Title Edit");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit");

		AssetPublisherPortlet.viewReadMoreLinkNotPresentPG();
	}

	@priority = 4
	test AddWebContentWithGlobalScopeViaCPToSiteAP {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Global",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Test Page 1");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Test Page 1",
			widgetName = "Asset Publisher");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Site Name",
			siteScopeType = "Current Site");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContent.deleteCP(
			siteURLKey = "global",
			webContentTitle = "WC WebContent Title Edit");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit");

		AssetPublisherPortlet.viewReadMoreLinkNotPresentPG();
	}

	@priority = 3
	test AddWebContentWithStructureAndGlobalScopeViaCPToLiferayAP {
		property test.name.skip.portal.instance = "AssetPublisherWithWebContent#AddWebContentWithStructureAndGlobalScopeViaCPToLiferayAP";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		Navigator.openURL();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page 1");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Test Page 1",
			widgetName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Liferay",
			siteScopeType = "Current Site");

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Text",
			assetTitle = "WC WebContent Title");
	}

	@priority = 3
	test AddWebContentWithStructureAndGlobalScopeViaCPToSiteAP {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		Navigator.openURL();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "Global");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Test Page 1");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Test Page 1",
			widgetName = "Asset Publisher");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Site Name",
			siteScopeType = "Current Site");

		Navigator.gotoSitePage(
			pageName = "Site Test Page 1",
			siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Text",
			assetTitle = "WC WebContent Title");
	}

	@priority = 4
	test DisplayWebContentTagViaAP {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Tags Navigation Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Tags Navigation Page",
			widgetName = "Tags Navigation");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Tags Navigation Page",
			widgetName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		AssetPublisherPortlet.configureShowMetadataFieldsPG(
			addMetadata = "true",
			metadataFieldList = "Tags",
			portletName = "Asset Publisher");

		IFrame.closeFrame();

		JSONWebcontent.addWebContent(
			assetTagNames = "tag name",
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewDefaultPG(tagNameList = "tag name");

		AssetPublisherPortlet.viewPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title",
			tagName = "tag name");
	}

	@priority = 4
	test SaveAsDraftWebContentPGViaAP {
		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addDraftPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "DRAFT",
			webContentTitle = "WC Webcontent Title");

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC Webcontent Title");
	}

	@description = "LPS-103624 - URLs are not well formed when changing language in classic Display Pages."
	@priority = 4
	test ViewInContextTranslatedWCWithFriendlyURL {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Asset Publisher Page",
			widgetName = "Language Selector");

		AssetPublisherPortlet.configureAssetLinkBehaviorPG(assetLinkBehavior = "View in Context");

		AssetPublisherPortlet.configureDisplaySettings(displaySettings = "Set as the Default Asset Publisher for This Page");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent English Content",
			webContentTitle = "WC WebContent English Title");

		WebContent.editDisplayPage(
			pageName = "Asset Publisher Page",
			pageType = "Public Pages");

		WebContent.editFriendlyURL(webContentFriendlyURL = "webcontentenglish");

		PortletEntry.changeLocale(locale = "de-DE");

		WebContent.addCP(
			webContentContent = "WC WebContent German Content",
			webContentTitle = "WC WebContent German Title");

		WebContent.editFriendlyURL(webContentFriendlyURL = "webcontentgerman");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.clickAssetTitle(assetTitle = "WC WebContent English Title");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent English Content",
			assetTitle = "WC WebContent English Title");

		AssertLocation.assertPartialLocation(value1 = "-/webcontentenglish");

		LanguagePortlet.selectLanguagePG(
			locale = "de-DE",
			textIcon = "deutsch-Deutschland");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent German Content",
			assetTitle = "WC WebContent German Title");

		AssertLocation.assertPartialLocation(value1 = "-/webcontentgerman");
	}

	@description = "This is a use case for LPS-49853."
	@priority = 5
	test ViewWebContentViaAPAsGuestWithViewPermission {
		property portal.acceptance = "true";

		var siteName = TestCase.getSiteName(siteName = ${siteName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_WEB_CONTENT_GENERAL_PERMISSIONS_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Guest",
			siteNameScope = ${siteName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_ARTICLE_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Guest",
			siteNameScope = ${siteName});

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content",
			site = ${siteName});

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			viewableBy = "Site Members",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetTypePG(
			assetSubtype = "Any",
			selectedAsset = "Web Content Article");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title");
	}

	@description = "This is a use case for LPS-80445."
	@priority = 5
	test ViewWebContentViaAPDeleteCategory {
		property portal.acceptance = "true";

		JSONCategory.addVocabulary(
			groupName = "Guest",
			title = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureCategoriesFilterPG(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		var categoryId = JSONCategory.getCategoryId(
			categoryName = "Category Name",
			groupName = "Guest",
			vocabularyName = "Vocabulary Name");

		JSONWebcontent.addWebContent(
			assetCategoryIds = ${categoryId},
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title");

		ProductMenu.gotoPortlet(
			category = "Categorization",
			portlet = "Categories");

		Vocabulary.deleteByMenuCP(vocabularyName = "Vocabulary Name");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title");

		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panel = "Filter");

		AssertElementNotPresent(
			key_categoryName = "Category Name",
			locator1 = "AssetCategorization#CATEGORY");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = "Web Content Title");

		Panel.expandPanel(panel = "Categorization");

		AssertElementNotPresent(locator1 = "AssetCategorization#VOCABULARY");
	}

}