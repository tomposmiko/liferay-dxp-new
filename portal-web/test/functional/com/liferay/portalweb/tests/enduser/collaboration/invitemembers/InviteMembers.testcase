@component-name = "portal-collaboration"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Invite Members";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP();

			Page.tearDownCP();

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@description = "This test is skipping portal instance setup due to LPS-75168"
	@priority = 4
	test ViewNewSiteMember {
		property test.name.skip.portal.instance = "InviteMembers#ViewNewSiteMember";

		ApplicationsMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Site Page 1");

		Navigator.gotoSitePage(
			pageName = "Site Page 1",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Invite Members");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		LexiconCard.viewCardNotPresent(card = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Site Page 1",
			siteName = "Site Name");

		InviteMembers.inviteMembers(inviteUserFullName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Pause(locator1 = 1000);

		AssertVisible(locator1 = "Notifications#PROFILE_BADGE_COUNT");

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		Notifications.viewRequest(requestsTitle = "Test Test invited you to join Site Name.");

		Notifications.acceptRequest(requestsTitle = "Test Test invited you to join Site Name.");

		Refresh();

		Notifications.viewNoRequest();

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Site Page 1",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.viewMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");
	}

}