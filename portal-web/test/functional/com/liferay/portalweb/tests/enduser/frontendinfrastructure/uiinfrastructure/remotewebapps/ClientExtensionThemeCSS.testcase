@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Page Administration";
	property testray.main.component.name = "Page Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ClientExtensionGeneral.tearDown();
		}
	}

	@description = "This is a test for LPS-162031. The site administrator could add a JS remote app."
	@priority = 3
	test JSCanBeCreated {
		task ("Given a site administrator accesses to the Remote Apps admin") {
			JSONGroup.addGroup(groupName = "Test Site Name");

			JSONDocument.addFileWithUploadedFile(
				dmDocumentTitle = "Text Color",
				groupName = "Test Site Name",
				mimeType = "application/javascript",
				sourceFileName = "TextColor.js");

			var url = JSONDocument.getLatestVersionURL(
				dmDocumentTitle = "Text Color",
				groupName = "Test Site Name");

			ClientExtensionGeneral.goToRemoteAppsPortlet();
		}

		task ("When the site administrator creates a JS remote app") {
			ClientExtensionGeneral.addType(type = "Add JS");

			ClientExtensionGeneral.addApp(
				entryName = "Text Color",
				entryURL = ${url});
		}

		task ("Then the site administrator sees the created JS remote app") {
			ClientExtensionGeneral.viewTableEntryName(entryName = "Text Color");

			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-162031. The site administrator could add a Theme CSS remote app."
	@priority = 3
	test ThemeCSSCanBeCreated {
		task ("Given a site administrator accesses to the Remote Apps admin") {
			JSONGroup.addGroup(groupName = "Test Site Name");

			JSONDocument.addFileWithUploadedFile(
				dmDocumentTitle = "Font Family",
				groupName = "Test Site Name",
				mimeType = "text/css",
				sourceFileName = "font_family.css");

			var url = JSONDocument.getLatestVersionURL(
				dmDocumentTitle = "Font Family",
				groupName = "Test Site Name");

			ClientExtensionGeneral.goToRemoteAppsPortlet();
		}

		task ("When the site administrator create a Theme CSS remote app") {
			ClientExtensionGeneral.addType(type = "Add Theme CSS");

			ClientExtensionGeneral.addApp(
				entryName = "Font Family",
				mainURL = ${url});
		}

		task ("Then the site administrator sees the created Theme CSS remote app") {
			ClientExtensionGeneral.viewTableEntryName(entryName = "Font Family");

			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

}