@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Wiki";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WikiNode.tearDownCP();

			WikiPage.tearDownCP();
		}
	}

	@priority = 5
	test AddFrontPage {
		property portal.acceptance = "true";

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageCP(
			wikiFrontPageContent = "Wiki FrontPage Content",
			wikiNodeName = "Main");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "FrontPage");

		WikiPage.viewFrontPageCP(
			portletName = "Wiki",
			wikiFrontPageContent = "Wiki FrontPage Content",
			wikiNodeName = "Main");
	}

	@priority = 4
	test AddNode {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.addCP(wikiNodeName = "Wiki Node Name");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.viewCP(
			numberOfWikiPages = 0,
			wikiNodeName = "Wiki Node Name");
	}

	@priority = 5
	test AddPageToNode {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.addCP(wikiNodeName = "Wiki Node Name");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Wiki Node Name");

		WikiNavigator.gotoAllPagesCP();

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.viewCP(
			numberOfWikiPages = 2,
			wikiNodeName = "Wiki Node Name");

		WikiNavigator.gotoCP(wikiPageTitle = "Wiki Page Title");

		WikiPage.viewCP(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");
	}

	@description = "This test covers LPS-89884. It ensures that a DL image can be added to a wiki page via URL."
	@priority = 5
	test AddPageWithDMImageViaURL {
		property test.name.skip.portal.instance = "CPWiki#AddPageWithDMImageViaURL";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		LexiconEntry.gotoAdd();

		WikiEntry.addPageTitle(wikiPageTitle = "New Wiki Page Title");

		ItemSelector.gotoItemSelectorViaCKEditor();

		ItemSelector.addFromURL(
			imageSourceURL = "http://localhost:8080/webdav/guest/document_library/Document_2.jpg",
			navTab = "URL",
			wikiAdmin = "true");

		CKEditor.viewEntryContentImage(contentImageName = "Document_2.jpg");

		PortletEntry.publish();

		WikiNavigator.gotoCP(wikiPageTitle = "New Wiki Page Title");

		AssertElementPresent(
			key_contentImageName = "Document_2.jpg",
			locator1 = "Wiki#CONTENT_IMAGE_NAME");
	}

	@priority = 5
	test CKEditorSmoke {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CPWiki#CKEditorSmoke";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Wiki",
			configurationName = "Wiki Service",
			configurationScope = "Site Scope");

		PortalSettings.configureWikiService(
			counter = 12,
			editor = "ckeditor_creole");

		PortalSettings.configureWikiService(
			counter = 13,
			editor = "creole");

		PortletEntry.save();

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		LexiconEntry.gotoAdd();

		WikiEntry.addPageTitle(wikiPageTitle = "CKEditor Wiki Page Title");

		CKEditor.addContent(content = "CKEditor Wiki Page Content");

		Button.clickPublish();

		Alert.viewSuccessMessage();

		WikiNavigator.gotoCP(wikiPageTitle = "CKEditor Wiki Page Title");

		WikiPage.viewCP(
			wikiPageContent = "CKEditor Wiki Page Content",
			wikiPageTitle = "CKEditor Wiki Page Title");
	}

	@priority = 4
	test ComparePageVersions {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoAllPagesCP();

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoAllPagesCP();

		WikiPage.editPageCP(
			wikiNodeName = "Main",
			wikiPageContentEdit = "Wiki Page Content Edit",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "Wiki Page Title");

		WikiPage.viewCP(
			wikiPageContent = "Wiki Page Content Edit",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoAllPagesCP();

		WikiPage.compareVersionsCP(
			wikiNodeName = "Main",
			wikiPageTitle = "Wiki Page Title",
			wikiPageVersionDiff = "Edit",
			wikiPageVersionNew = "1.1",
			wikiPageVersionOld = "1.0");
	}

	@priority = 5
	test DeleteFrontPage {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageCP(
			wikiFrontPageContent = "Wiki FrontPage Content",
			wikiNodeName = "Main");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.moveToRecycleBinCP(
			wikiNodeName = "Main",
			wikiPageTitle = "FrontPage");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.deleteCP(
			assetName = "FrontPage",
			assetType = "Wiki Page");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.viewDefaultCP(assetName = "FrontPage");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "FrontPage");

		WikiPage.viewFrontPageDefaultCP(wikiPageTitle = "FrontPage");
	}

	@priority = 5
	test DeleteNode {
		property portal.acceptance = "true";

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.addCP(wikiNodeName = "Wiki Node Name");

		WikiNode.deleteCP(wikiNodeName = "Wiki Node Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.viewCP(
			assetName = "Wiki Node Name",
			assetType = "Wiki Node",
			deleteUser = "Test Test");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.viewMainNode(wikiNodeName = "Main");
	}

	@priority = 5
	test EditNode {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.addCP(wikiNodeName = "Wiki Node Name");

		WikiNode.editCP(
			wikiNodeDescription = "Wiki Node Description",
			wikiNodeDescriptionEdit = "Wiki Node Description Edit",
			wikiNodeName = "Wiki Node Name",
			wikiNodeNameEdit = "Wiki Node Name Edit");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNode.viewCP(
			numberOfWikiPages = 0,
			wikiNodeName = "Wiki Node Name Edit");
	}

	@priority = 5
	test ImportLarAndViewPages {
		property testray.component.names = "Training";

		JSONGroup.addGroup(groupName = "Site Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Wiki");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Wiki");

		LAR.importPortlet(
			initializeLiferayEvent = "true",
			larFileName = "space-history-wiki.lar",
			uploadFrom = "dependencies");

		Navigator.gotoSitePage(
			pageName = "Wiki",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Wiki");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.viewFrontPagePG(wikiPageContent = "Located in Provincetown, MA, S.P.A.C.E. (Space Program Academy of Continuing Education) was founded in February of 2063 by its current Board of Governors members—Dr. Edith Adams, Dr. Harold Vance, Antony Carelli, and Victoria Allen—as a fully-accredited, internationally-run school for students interested in pursuing a wide range of space-related careers. S.P.A.C.E. also serves as a research center for faculty. S.P.A.C.E.’s foundation came about largely as a result of skyrocketing interest in space-related careers and the limitations on The Space Program.");

		for (var wikiPageTitle : list "FrontPage,Board of Governors,Board of Governors,The Space Program,Antony Carelli,Dr. Harold Vance,Victoria Allen,Dr. Asmund Grey") {
			WikiNavigator.gotoAllPagesPG();

			WikiNavigator.gotoPG(wikiPageTitle = ${wikiPageTitle});
		}

		WikiPage.viewPG(
			wikiPageContent = "Dr. Asmund Grey, first and current president of S.P.A.C.E., was born Asmund Andrew Grey March 22, 2029 to Drs. Albert and Anita Grey in Stratford-upon-Avon, England.",
			wikiPageTitle = "Dr. Asmund Grey");
	}

	@priority = 5
	test MovePageUnderNewParentPage {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content 1",
			wikiPageTitle = "Wiki Page 1");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content 2",
			wikiPageTitle = "Wiki Page 2");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoEntryMoveViaTable(wikiPageTitle = "Wiki Page 2");

		WikiNavigator.gotoChangeParent();

		WikiPage.selectNewParent(wikiParentName = "Wiki Page 1");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page 1");

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page 2");

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page 1");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content 1");

		WikiNavigator.gotoChildPagePG(wikiChildPageTitle = "Wiki Page 2");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content 2");
	}

	@priority = 5
	test RestoreDeletedPage {
		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content 1",
			wikiPageTitle = "Wiki Page 1 Original");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiTable.deleteEntry(wikiPageTitle = "Wiki Page 1 Original");

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content 1",
			wikiPageTitle = "Wiki Page 1 Original");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.viewCP(
			assetName = "Wiki Page 1 Original",
			assetType = "Wiki Page",
			deleteUser = "Test Test");

		LexiconTable.clickEllipsisItem(
			item = "Restore",
			tableEntry = "Wiki Page 1 Original");

		RecycleBinWarning.selectRename();

		RecycleBinWarning.renameEntry(renamedTrashEntryTitle = "Wiki Page 1 Restored");

		Button.clickSave();

		WikiNavigator.openWikiAdmin(siteURLKey = "guest");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page 1 Restored");

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page 1 Original");

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page 1 Restored");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content 1");
	}

	@ignore = "true"
	@priority = 4
	test ViewPageRSS {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Wiki");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page RSS");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Wiki");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page RSS");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content");

		WikiPage.viewRSS(
			site = "Guest",
			version = "1.0",
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page RSS");
	}

}