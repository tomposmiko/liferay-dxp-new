@component-name = "portal-collaboration"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Notifications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP();

			BlogsEntry.tearDownCP();

			Page.tearDownCP();

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@priority = 4
	test MarkNotificationAsReadAndAcceptRequest {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		var siteName = TestCase.getSiteName(siteName = ${siteName});

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Blogs Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 1,
			groupName = "Guest",
			layoutName = "Blogs Page",
			widgetName = "Blogs");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Invite Members Page");

		Navigator.gotoSitePage(
			pageName = "Invite Members Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Invite Members");

		Navigator.gotoSitePage(
			pageName = "Invite Members Page",
			siteName = "Test Site Name");

		InviteMembers.inviteMembers(inviteUserFullName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = 2);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry Title",
			user = "Test Test");

		Notifications.viewRequest(requestsTitle = "Test Test invited you to join Test Site Name.");

		Notifications.acceptRequest(requestsTitle = "Test Test invited you to join Test Site Name.");

		Refresh();

		Notifications.viewNoRequest();

		Notifications.viewNoNotifications();

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");
	}

	@description = "This test covers LPS-102749. It views a notification of the edited Web Content Article when staging is turned on."
	@priority = 4
	test StagingViewEditedArticleNotification {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONGroup.addGroup(groupName = "Subscribe Site");

		JSONLayout.addPublicLayout(
			groupName = "Subscribe Site",
			layoutName = "Staging Test Page");

		SitePages.openPagesAdmin(siteURLKey = "Subscribe Site");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			portlet = "Staging");

		Staging.activateStagingCP(siteName = "Subscribe Site");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openSiteURL(siteName = "Subscribe Site");

		ProductMenu.gotoLiveSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContent.subscribeToCurrentFolderCP();

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.openSiteURL(siteName = "Subscribe Site");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Staging.publishToLiveNowViaPortletCP();

		Navigator.openSiteURL(siteName = "Subscribe Site");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		Staging.publishToLiveNowViaPortletCP();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.viewBadgeCount(notificationCount = 2);

		Notifications.gotoNotifications();

		Notifications.viewUpdatedContent(
			assetType = "web content article",
			contentBody = "WC WebContent Title Edit",
			user = "Test Test");

		Notifications.navigateToContent(contentBody = "WC WebContent Title Edit");

		WebContent.viewTitle(
			onLive = "true",
			webContentTitle = "WC WebContent Title Edit");

		AssertConsoleTextNotPresent(value1 = "java.lang.IllegalArgumentException");
	}

	@description = "This test covers LPS-104398. It views a notification of a web content article created in a folder."
	@priority = 4
	test ViewFolderArticleNotification {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Site Page");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.subscribeToCurrentFolderCP();

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		JSONWebcontent.addFolder(
			folderName = "WC Folder Name",
			groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "web content article",
			contentBody = "WC WebContent Title",
			user = "Test Test");

		Notifications.navigateToContent(contentBody = "WC WebContent Title");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = 5
	test ViewNoNotification {
		Notifications.viewNoNotifications(activePanel = "Profile");

		Notifications.viewNoRequest();

		Notifications.viewNoNotificationEntry();
	}

}