@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		Staging.openStagingAdmin(siteURLKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name-staging");

		FragmentsAdmin.importCollectionFromDependenciesFolder(
			collectionZipFile = "fragment-collection.zip"
		);

		PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "test-site-name-staging");

		PageTemplatesAdmin.addCollection(collectionName = "Page Template Collection");

		PageTemplatesAdmin.add(pageTemplateName = "Page Template Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text"
		);

		Button.clickPublish();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Content pages created from page templates can be published to live and will not appear in live until published."
	@priority = "5"
	test PublishContentPage {
		property portal.acceptance = "true";

		SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

		ContentPages.addPage(
			collectionName = "Page Template Collection",
			pageName = "Test Content Page Name",
			pageTemplateName = "Page Template Name"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertTextPresent(value1 = "The requested resource could not be found.");

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);
	}
}