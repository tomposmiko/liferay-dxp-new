@component-name = "portal-wcm"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testcase.url = "http://localhost:8080";
	property testray.component.names = "Personalization and Customization";
	property testray.main.component.name = "Page Administration";

	static var randomSiteName = StringUtil.randomString(8);

	var siteURLKey = StringUtil.toLowerCase(${randomSiteName});
	static var randomUserEmailAddress = StringUtil.randomString(8);
	var userFirstName = StringUtil.randomString(8);
	var userLastName = StringUtil.randomString(8);
	var userScreenName = StringUtil.randomString(8);

	setUp {
		task ("Sign in") {
			User.firstLoginPG();
		}

		task ("Add a site") {
			HeadlessSite.addSite(siteName = ${randomSiteName});
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = ${randomSiteName},
				layoutName = "Test Page Name");
		}

		task ("Add a new user") {
			JSONUser.addUser(
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"),
				userFirstName = ${userFirstName},
				userLastName = ${userLastName},
				userScreenName = StringUtil.toLowerCase(${userScreenName}));

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}
	}

	@description = "The user with site member permissions can add and remove a portlet from customizable view."
	@priority = 4
	test AddAndRemoveWidgetAsSiteMember {
		task ("Enable customizable to page then select the first column") {
			PagesAdmin.openPagesAdmin(siteURLKey = ${siteURLKey});

			PageCustomizations.enableSectionCustomizableCP(
				columnId = 1,
				pageName = "Test Page Name");
		}

		task ("View Page without my customizations") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			PageCustomizations.configureCustomization(menuItem = "View Page without my customizations");
		}

		task ("Add an Asset Publisher and Language Selector widget to page") {
			for (var widgetName : list "Asset Publisher,Language Selector") {
				JSONLayout.addWidgetToPublicLayout(
					groupName = ${randomSiteName},
					layoutName = "Test Page Name",
					widgetName = ${widgetName});
			}
		}

		task ("Assign the user to site") {
			JSONUser.addUserToSite(
				groupName = ${randomSiteName},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Add a Web Content Display widget to page") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			Portlet.addPG(portletName = "Web Content Display");
		}

		task ("View portlets are shown") {
			for (var portletName : list "Web Content Display,Asset Publisher,Language Selector") {
				Portlet.viewSpecificPG(portletName = ${portletName});
			}
		}

		task ("Delete Language Selector widget") {
			Portlet.deletePG(portletName = "Language Selector");
		}

		task ("View Language Selector widget is not shown") {
			Portlet.viewNoSpecificPG(portletName = "Language Selector");
		}
	}

	@description = "A new user can add a widget portlet with customize permission."
	@priority = 4
	test AddWidgetAsUserWithCustomizePermission {
		var roleKey = StringUtil.randomString(8);

		task ("Enable customizable to page then select the first column") {
			PagesAdmin.openPagesAdmin(siteURLKey = ${siteURLKey});

			PageCustomizations.enableSectionCustomizableCP(
				columnId = 1,
				pageName = "Test Page Name");
		}

		task ("Add a new regular role") {
			JSONRole.addRegularRole(roleTitle = ${roleKey});
		}

		task ("Define the permissions of new role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "CUSTOMIZE",
				resourceName = "com.liferay.portal.kernel.model.Layout",
				roleTitle = ${roleKey});
		}

		task ("Assign the regular role to new user") {
			JSONRole.assignRoleToUser(
				roleTitle = ${roleKey},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Add a Navigation Menu widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = ${randomSiteName},
				layoutName = "Test Page Name",
				widgetName = "Menu Display");
		}

		task ("View Navigation Menu widget is shown") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			Portlet.viewSpecificPG(portletName = "Menu Display");
		}
	}

	@description = "The configurations applied to a customizable page should not affect all users."
	@priority = 4
	test PortletConfigurationChangesWithinCustomizableColumnShouldNotAffectAllUsers {
		task ("Enable customizable to page then select the first column") {
			PagesAdmin.openPagesAdmin(siteURLKey = ${siteURLKey});

			PageCustomizations.enableSectionCustomizableCP(
				columnId = 1,
				pageName = "Test Page Name");
		}

		task ("Add a Wiki widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = ${randomSiteName},
				layoutName = "Test Page Name",
				widgetName = "Wiki");
		}

		task ("View customize is enabled to page") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			PageCustomizations.viewCustomizablePagePG();
		}

		task ("View Page without my customizations") {
			PageCustomizations.configureCustomization(menuItem = "View Page without my customizations");

			Portlet.viewSpecificPG(portletName = "Wiki");
		}

		task ("Assign the user to site") {
			JSONUser.addUserToSite(
				groupName = ${randomSiteName},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Enable allow users to add wiki to any website") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			Portlet.configureSharingPG(
				checkAnyWebSiteToggle = "true",
				portletName = "Wiki");
		}

		task ("Sign in as Test Test") {
			User.logoutAndLoginPG(userLoginEmailAddress = "test@liferay.com");
		}

		task ("View allow user to add wiki to any website is disabled to Test Test") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			Portlet.viewConfigureSharingPG(
				checkedAnyWebSiteToggle = "false",
				portletName = "Wiki");
		}
	}

	@description = "User with site member and customize permission will only see portlets in customizable view."
	@priority = 4
	test SiteMemberWithCustomizablePagePermissionsWillOnlySeeWidgetsInCustomizableView {
		property test.name.skip.portal.instance = "PageCustomizations#SiteMemberWithCustomizablePagePermissionsWillOnlySeeWidgetsInCustomizableView";

		var roleKey = StringUtil.randomString(8);

		task ("Clean up permissions in server administration") {
			ApplicationsMenu.gotoPortlet(
				category = "System",
				panel = "Control Panel",
				portlet = "Server Administration");

			ServerAdministration.executeServerResourcesActions(actionsDescription = "Clean up permissions");
		}

		task ("Enable customizable to page then select the first column") {
			PagesAdmin.openPagesAdmin(siteURLKey = ${siteURLKey});

			PageCustomizations.enableSectionCustomizableCP(
				columnId = 1,
				pageName = "Test Page Name");
		}

		task ("View Page without my customizations") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			PageCustomizations.configureCustomization(menuItem = "View Page without my customizations");
		}

		task ("Add a Message Boards and Language Selector widgets to page") {
			for (var widgetName : list "Message Boards,Language Selector") {
				JSONLayout.addWidgetToPublicLayout(
					groupName = ${randomSiteName},
					layoutName = "Test Page Name",
					widgetName = ${widgetName});
			}
		}

		task ("Add a new regular role") {
			JSONRole.addRegularRole(roleTitle = ${roleKey});
		}

		task ("Define the permissions of new role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "CUSTOMIZE",
				resourceName = "com.liferay.portal.kernel.model.Layout",
				roleTitle = ${roleKey});
		}

		task ("Assign the regular role to new user") {
			JSONRole.assignRoleToUser(
				roleTitle = ${roleKey},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Assign the user to site") {
			JSONUser.addUserToSite(
				groupName = ${randomSiteName},
				userEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("View portlets are shown in page without customization") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			PageCustomizations.configureCustomization(menuItem = "View Page without my customizations");

			for (var portletName : list "Message Boards,Language Selector") {
				Portlet.viewSpecificPG(portletName = ${portletName});
			}
		}

		task ("Reset customization then view portlets are not shown") {
			PageCustomizations.configureCustomization(menuItem = "View My Customized Page");

			PageCustomizations.configureCustomization(menuItem = "Reset My Customizations");

			for (var portletName : list "Message Boards,Language Selector") {
				Portlet.viewNoSpecificPG(portletName = ${portletName});
			}
		}

		task ("Sign in as Test Test") {
			User.logoutAndLoginPG(userLoginEmailAddress = "test@liferay.com");
		}

		task ("Define new permissions of regular role") {
			Permissions.definePermissionsViaJSONAPI(
				resourceNameActionList = "com_liferay_message_boards_web_portlet_MBPortlet,ADD_TO_PAGE:com_liferay_site_navigation_language_web_portlet_SiteNavigationLanguagePortlet,ADD_TO_PAGE",
				roleTitle = ${roleKey});
		}

		task ("Sign in as new user") {
			User.logoutAndLoginPG(userLoginEmailAddress = StringUtil.toLowerCase("${randomUserEmailAddress}@liferay.com"));
		}

		task ("View portlets are shown in page without my customizations") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = ${randomSiteName});

			PageCustomizations.configureCustomization(menuItem = "View Page without my customizations");

			for (var portletName : list "Message Boards,Language Selector") {
				Portlet.viewSpecificPG(portletName = ${portletName});
			}
		}
	}

}