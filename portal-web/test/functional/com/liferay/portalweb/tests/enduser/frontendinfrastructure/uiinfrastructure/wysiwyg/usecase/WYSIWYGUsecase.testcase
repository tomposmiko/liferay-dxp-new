@component-name = "portal-frontend-infrastructure"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "User Interface";
	var pageName = "CKEditor Page";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();
		}
	}

	@priority = "4"
	test AddBlogsEntryWithImageViaBlogsImages {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "${pageName}");

		Navigator.gotoPage(pageName = "${pageName}");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "${pageName}");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Upload Image",
			uploadFileName = "Document_1.jpg"
		);

		Pause(locator1 = "1000");

		BlogsEntry.saveAsDraft();

		Click(locator1 = "BlogsEditEntry#DELETE_COVER_IMAGE_BUTTON");

		Click.pauseClickAt(locator1 = "AlloyEditor#EDITOR", key_editor = "content");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_BUTTON");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_MENUBAR_IMAGE");

		ItemSelector.selectBlogImage(
			imageFileName = "Document_1.jpg",
			navTab = "Blog Images"
		);

		PortletEntry.publish();

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsEntry.viewInlineImage(uploadFileName = "Document_1");
	}

	@priority = "4"
	test AddWebContentArticleWithImageViaURL {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		PortletEntry.inputTitle(title = "Web Content Title");

		Click.pauseClickAt(locator1 = "AlloyEditor#EDITOR", key_editor = "content");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_BUTTON");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_MENUBAR_IMAGE");

		ItemSelector.addFromURL(
			imageSourceURL = "https://raw.githubusercontent.com/liferay/liferay-portal/master/portal-web/test/functional/com/liferay/portalweb/dependencies/Document_1.jpg",
			navTab = "URL"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoPreviewEntryCP(webContentTitle = "Web Content Title");

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertElementPresent(locator1 = "//img[contains(@src,'Document_1.jpg')]");
	}

	@description = "This is a use case for LPS-61676."
	@priority = "4"
	test RemoveAppliedStylingInAlloyEditor {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		AlloyEditor.addContent(content = "This is a sentence");

		AlloyEditor.toggleStylingInAlloyEditor(boldContent = "This is a sentence");

		AlloyEditor.viewStylingInAlloyEditor(boldContent = "This is a sentence");

		AlloyEditor.toggleStylingInAlloyEditor(boldContent = "This is a sentence");

		AlloyEditor.viewNoStylingInAlloyEditor(boldContent = "This is a sentence");
	}

	@priority = "4"
	test ViewWikiFrontPageLeftToRight {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "${pageName}");

		Navigator.gotoPage(pageName = "${pageName}");

		Portlet.addPG(portletName = "Wiki");

		Navigator.gotoPage(pageName = "${pageName}");

		WikiPage.addLocalizedFrontPagePG(
			emptyPageMessage = "This page is empty. Edit it to add some text.",
			successMessage = "Your request completed successfully.",
			wikiPageContent = "Wiki Left to Right Content"
		);

		Navigator.gotoPage(pageName = "${pageName}");

		WikiPage.viewLocalizedFrontPagePG(
			wikiPageContent = "Wiki Left to Right Content"
		);
	}

	@priority = "4"
	test ViewWikiFrontPageRightToLeft {
		property test.name.skip.portal.instance = "WYSIWIGUsecase#ViewWikiFrontPageRightToLeft";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "${pageName}");

		Navigator.gotoPage(pageName = "${pageName}");

		Portlet.addPG(portletName = "Language Selector");

		Navigator.gotoPage(pageName = "${pageName}");

		Portlet.addPG(portletName = "Wiki");

		LanguagePortlet.selectLanguagePG(locale = "iw_IL", textIcon = "עברית-ישראל");

		WikiPage.addLocalizedFrontPagePG(
			emptyPageMessage = "דף זה ריק. ערוך אותו על מנת להוסיף טקסט",
			rtl = "true",
			successMessage = "בקשתך עברה בהצלחה",
			wikiPageContent = "Wiki Right to Left תוֹכֶן"
		);

		Navigator.gotoPage(pageName = "${pageName}");

		WikiPage.viewLocalizedFrontPagePG(
			rightToLeft = "true",
			wikiPageContent = "Wiki Right to Left תוֹכֶן"
		);

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States"
		);
	}
}