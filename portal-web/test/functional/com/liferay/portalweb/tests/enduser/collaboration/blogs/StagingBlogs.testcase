@component-name = "portal-collaboration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Staging Blogs Page");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();
		}
	}

	@description = "This test covers LPS-79000. It ensures that users can only publish an Approved blog entry. Draft entries should not have the Publish option."
	@priority = "5"
	test PublishDraftViaSAP {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addDraft(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.assertNoPublishOption(entryTitle = "Blogs Entry Title");
	}

	@description = "This test covers LPS-77658. It publishes a blog entry to live via Single Asset Publishing."
	@priority = "4"
	test PublishEntryViaSAP {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Blogs");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		BlogsEntry.viewNoPG(entryTitle = "Blogs Entry Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "Cards");

		Staging.publishViaSAP(
			assetTitle = "Blogs Entry Title",
			confirmMessage = "Are you sure you want to publish to live?"
		);

		ProductMenu.gotoLiveSite();

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "3"
		);

		Notifications.gotoNotifications();

		Notifications.viewSuccessfulPublication(
			contentBody = "Publication Process Finished Successfully",
			portletName = "Blogs Portlet",
			publicationType = "Local"
		);
	}

	@description = "This is a use case for LPS-78833."
	@priority = "5"
	test PublishEntryWithDeletedSmallImage {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Panel.expandPanel(panel = "Configuration");

		BlogsEntry.addSmallImage(
			navTab = "Documents and Media",
			uploadFileName = "Document_3.jpg"
		);

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Site Page Name",
			siteName = "Site Name"
		);

		Navigator.gotoStagedView();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		AssertElementPresent(
			locator1 = "Blogs#ICON_VIEW_ENTRY_TITLE",
			key_entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Site Page Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEditCP(entryTitle = "Blogs Entry Title");

		Panel.expandPanel(panel = "Configuration");

		BlogsEntry.removeSmallImage(uploadFileName = "Document_3.jpg");

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Site Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Site Page Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEditCP(entryTitle = "Blogs Entry Title");

		AssertElementNotPresent(
			locator1 = "BlogsEntry#SMALL_IMAGE",
			key_smallImage = "Document_3.jpg"
		);

		AssertTextEquals(
			locator1 = "Button#SELECT_FILE_SMALL_IMAGE",
			value1 = "Select File"
		);

		ProductMenu.gotoLiveSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		AssertElementPresent(
			locator1 = "Blogs#ICON_VIEW_ENTRY_TITLE",
			key_entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoNavItem(navItem = "Images");

		AssertElementNotPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${rowEntry}",
			key_cardText = "Document_3.jpg"
		);

		AssertElementNotPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${rowEntry}",
			key_cardText = "Document_3 (1).jpg"
		);
	}

	@description = "This is a use case for LPS-80543."
	@priority = "5"
	test ViewBlogsAsAGuestAndSiteMember {
		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1",
			navTab = "Upload Image",
			uploadFileName = "Document_1.jpg"
		);

		Button.clickPublish();

		Pause(locator1 = "3000");

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addTitle(entryTitle = "Blogs Entry Title 2");

		BlogsEntry.addContentWithInlineImage(
			entryContent = "Blogs Entry Content 2",
			navTab = "Upload Image",
			uploadFileName = "Document_2.jpg"
		);

		Pause(locator1 = "3000");

		PortletEntry.publish();

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content 3",
			entryTitle = "Blogs Entry Title 3"
		);

		BlogsEntry.addEntryExternalURL(entryExternalURL = "www.liferay.com");

		PortletEntry.publish();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoSitePage(pageName = "Staging Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1",
			uploadFileName = "Document_1.jpg"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content 2",
			entryTitle = "Blogs Entry Title 2"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 2",
			entryInlineImage = "Document_2.jpg",
			entryTitle = "Blogs Entry Title 2"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 3"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 3",
			entryExternalURL = "https://www.liferay.com",
			entryTitle = "Blogs Entry Title 3"
		);

		User.logoutPG();

		Navigator.gotoSitePage(pageName = "Staging Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 1",
			entryTitle = "Blogs Entry Title 1",
			uploadFileName = "Document_1.jpg"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content 2",
			entryTitle = "Blogs Entry Title 2"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 2",
			entryInlineImage = "Document_2.jpg",
			entryTitle = "Blogs Entry Title 2"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content 3",
			entryTitle = "Blogs Entry Title 3"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content 3",
			entryExternalURL = "https://www.liferay.com",
			entryTitle = "Blogs Entry Title 3"
		);
	}
}