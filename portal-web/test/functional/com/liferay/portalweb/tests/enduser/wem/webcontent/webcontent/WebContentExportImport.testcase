@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			WebContentStructures.tearDownCP(siteScopeName = "Global");
		}
	}

	@description = "This is a use case for LPS-82492."
	@priority = "5"
	test AddCreatedStructureForImportedTemplate {
		property testray.component.names = "Training";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "Content List");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "contents");

		DynamicDataMapping.editFieldTip(
			fieldFieldLabel = "Web Content",
			fieldTip = "Choose as many content pieces as you would like to feature.");

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Web Content");

		WebContentStructures.saveCP(structureName = "Content List");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.importPortlet(
			larFileName = "content-display-templates.lar",
			uploadFrom = "dependencies");

		Refresh();

		NavItem.gotoTemplates();

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		for (var templateName : list "Carousel Display,Thumbnail Display,Content List Display") {
			WebContentNavigator.gotoViewTemplate(templateName = "${templateName}");

			WebContentTemplates.inputTemplateAddScreenFields(structureName = "Content List");

			DDLDataDefinition.save();
		}

		for (var templateName : list "Carousel Display,Thumbnail Display,Content List Display") {
			WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

			Navigator.gotoNavItem(navItem = "Templates");

			WebContentTemplates.viewCP(
				structureName = "Content List",
				templateDescription = "",
				templateName = "${templateName}");
		}
	}

	@description = "This is a use case for LPS-82492."
	@priority = "5"
	test AddWebContentFromImportedStructureAndTemplate {
		property testray.component.names = "Training";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.importPortlet(
			larFileName = "frontPage-structures.lar",
			uploadFrom = "dependencies");

		Refresh();

		NavItem.gotoStructures();

		for (var structureName : list "3 Columns with Images,Footer Content,1 Column Banner") {
			WebContentStructures.viewCP(structureName = "${structureName}");
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.importPortlet(
			larFileName = "space-templates.lar",
			uploadFrom = "dependencies");

		for (var templateName : list "3 Columns with Images Template,Footer Content Template,1 Column Banner Template,News,Events") {
			Navigator.gotoNavItem(navItem = "Templates");

			WebContentTemplates.viewCP(
				templateDescription = "",
				templateName = "${templateName}");

			WebContent.openWebContentAdmin(siteURLKey = "test-site-name");
		}

		WebContentNavigator.gotoAddWithStructureCP(structureName = "1 Column Banner");

		WebContent.addWithStructureCP(
			description = "The Structured Banner for the S.P.A.C.E. FrontPage",
			fieldName = "BannerTitle",
			fieldName2 = "BannerHeading",
			webContentImage = "Spaceport.jpg",
			webContentTextBox = "Space Program Academy of Continuing Education",
			webContentTextBox2 = "Dare to dream out of this world",
			webContentTitle = "S.P.A.C.E. Banner");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "S.P.A.C.E. Banner");

		WebContent.viewWithStructureCP(
			description = "The Structured Banner for the S.P.A.C.E. FrontPage",
			fieldName = "BannerTitle",
			fieldName2 = "BannerHeading",
			webContentImage = "Spaceport.jpg",
			webContentTextBox = "Space Program Academy of Continuing Education",
			webContentTextBox2 = "Dare to dream out of this world",
			webContentTitle = "S.P.A.C.E. Banner");
	}

	@description = "This is a use case for LPS-88889."
	@priority = "4"
	test ExportLARWithDeletedDocumentLink {
		property testray.component.names = "Web Content Administration";

		Site.openSiteSettingsAdmin(siteURLKey = "test-site-name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Documents and Media",
			templateName = "WC Template Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			fieldName = "DocumentsAndMedia",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentDocumentsAndMedia = "DM Document Title.txt",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Site.openSiteSettingsAdmin(siteURLKey = "test-site-name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");

		AssertConsoleTextNotPresent(value1 = "com.liferay.exportimport.kernel.lar.PortletDataException");
	}

	@priority = "4"
	test ExportLARWithNestedWebContent {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.addFieldNested(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "webContent");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Basic Web Content");

		WebContent.addWithStructureCP(
			structureName = "Basic Web Content",
			templateName = "Basic Web Content",
			webContentTitle = "Basic WebContent Title");

		PortletEntry.publish();

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			fieldName = "webContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Basic WebContent Title",
			webContentTitle = "WC WebContent Title");

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "WC WebContent Text");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");
	}

	@description = "This is a use case for LPS-95441."
	@priority = "3"
	test ExportWebContentWithEditedStructure {
		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description",
			structureName = "Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "TestName");

		WebContentStructures.saveCP(structureName = "Structure Name");

		WebContentStructures.viewCP(
			structureDescription = "Structure Description",
			structureName = "Structure Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Structure Name");

		WebContent.addWithStructureCP(
			description = "WC WebContent 1 Description",
			fieldName = "TestName",
			webContentTitle = "WC WebContent 1 Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 1 Title");

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Structure Name");

		DynamicDataMapping.deleteField(fieldFieldLabel = "Text");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "TestName");

		WebContentStructures.saveCP(structureName = "Structure Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");
	}

	@priority = "5"
	test ImportAndUseGlobalStructureAndTemplate {
		property testray.component.names = "Training";

		WebContent.openWebContentAdmin(siteURLKey = "global");

		LAR.importPortlet(
			larFileName = "structure-templates.lar",
			uploadFrom = "dependencies");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "3 Column with Images");

		WebContent.addWithStructureCP(
			fieldName = "title",
			webContentTextBox = "Green Waste",
			webContentTextBoxList = "Mowed Lawns,Mulched Branches,Compost Bin",
			webContentTitle = "Agricultural Science Front Page");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Agricultural Science Front Page");

		WebContent.viewWithStructureCP(
			fieldName = "title",
			webContentTextBox = "Green Waste",
			webContentTextBoxList = "Mowed Lawns,Mulched Branches,Compost Bin",
			webContentTitle = "Agricultural Science Front Page");
	}

	@priority = "4"
	test ImportLAR {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.exportPortlet(larFileName = "WebContent_portlet2.lar");

		JSONGroup.deleteGroupByName(groupName = "Test Site Name");

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.importPortlet(larFileName = "WebContent_portlet2.lar");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name");

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");
	}

	@priority = "4"
	test ImportLARLinkToPageValidation {
		property testray.component.names = "Web Content Administration";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Test Structure Description",
			structureName = "Test Structure");

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage");

		WebContentStructures.saveCP(structureName = "Test Structure");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Test Structure",
			templateDescription = "Test Template Description",
			templateName = "Test Template");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Test Structure");

		WebContent.addWithStructureCP(
			linkedPageName = "Test Page",
			structureName = "Test Structure",
			templateName = "Test Template",
			webContentTitle = "WC Title");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC Title");

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");

		JSONGroup.addGroup(groupName = "Site Name");

		WebContent.openWebContentAdmin(siteURLKey = "site-name");

		LAR.importPortlet(
			importValidationMissingItem = "Linked Page",
			larFileName = "WebContent_portlet.lar",
			linkedPageName = "Test Page",
			siteName = "Site Name");
	}

	@ignore = "true"
	@priority = "5"
	test ImportTrainingLAR {
		property testray.component.names = "Training";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		LAR.importPortlet(
			larFileName = "space-content-7.0.lar",
			siteName = "Site Name",
			uploadFrom = "dependencies");

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Look and Feel Configuration");

		IFrame.selectConfigurationFrame();

		Portlet.selectApplicationDecorator(decorator = "Barebone");

		PortletEntry.save();

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		Portlet.viewApplicationDecorator(decorator = "Barebone");
	}

	@priority = "5"
	test MoveImportedWebContentArticlesToFolders {
		property testray.component.names = "Training,Web Content Administration";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.addCP(
			folderDescription = "News Folder Description",
			folderName = "News");

		WebContentFolder.addCP(
			folderDescription = "Events Folder Description",
			folderName = "Events");

		LAR.importPortlet(
			larFileName = "space-web-content.lar",
			uploadFrom = "dependencies");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		for (var webContentTitle : list "When It All Began...,Stravinksy in Space?,Student Spotlight,Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}

		WebContent.moveArticlesToFolderCP(
			folderName = "News",
			webContentArticlesList = "When It All Began...,Stravinksy in Space?,Student Spotlight");

		WebContent.moveArticlesToFolderCP(
			folderName = "Events",
			webContentArticlesList = "Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "News",
			webContentTitle = "News");

		for (var webContentTitle : list "When It All Began...,Stravinksy in Space?,Student Spotlight") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "Events",
			webContentTitle = "Events");

		for (var webContentTitle : list "Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}
	}

}