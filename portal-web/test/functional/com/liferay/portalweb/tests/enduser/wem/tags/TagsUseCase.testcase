@component-name = "portal-tags"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Tags";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Tag.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test AddAutoAssertionTagViaBlogs {
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		for (var tagName : list "tag name 1,tag name 2,tag name 3") {
			Navigator.openSiteURL(siteName = "Site Name");

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Tag.addAutoAssertionTagViaBlogsPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagName = "tag name 3"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title"
		);

		BlogsEntry.viewTagPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagName = "tag name 3"
		);
	}

	@priority = "4"
	test AddFrontPageTag {
		property testray.component.names = "Tags,Wiki";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Wiki");

		WikiPage.addFrontPagePG(
			pageAddTag = "true",
			tagName = "wiki tag name",
			wikiPageContent = "Wiki FrontPage Content"
		);
	}

	@priority = "4"
	test AddMultipleTagsViaBlogs {
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntryWithTags(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagNameList = "tag name 1,tag name 2,tag name 3"
		);

		for (var tagName : list "tag name 1,tag name 2,tag name 3") {
			Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

			BlogsNavigator.gotoEntryPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title"
			);

			BlogsEntry.viewTagPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title",
				tagName = "${tagName}"
			);
		}
	}

	@priority = "5"
	test AddSelectTagViaBlogs {
		property portal.acceptance = "true";
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		for (var tagName : list "tag1,tag2,tag3") {
			Navigator.openSiteURL(siteName = "Site Name");

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Blogs.addEntryWithTags(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagNameList = "tag1,tag3"
		);

		for (var tagName : list "tag1,tag3") {
			Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

			var key_entryTitle = "Entry Title";

			AssertClick(locator1 = "BlogsEntry#TITLE_LINK", value1 = "Entry Title");

			BlogsEntry.viewTagPG(entryTitle = "Entry Title", tagName = "${tagName}");
		}
	}

	@priority = "5"
	test AddTagViaBlogs {
		property portal.acceptance = "true";
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Refresh();

		Blogs.addEntryWithTag(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagName = "tag name"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title"
		);

		BlogsEntry.viewTagPG(entryTitle = "Entry Title", tagName = "tag name");
	}

	@priority = "5"
	test DisplayTagCloud {
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tags Navigation Page");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Tags Navigation");

		TagsNavigationPortlet.configureFlaggableSettingsPG(
			showAssetCount = "true",
			showUnusedTags = "true"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.configureDisplayStylePG(displayTemplate = "Cloud");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Asset Publisher");

		for (var tagName : list "first tag,second tag,third tag") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "first tag,second tag",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentSize = "0KB",
			dmDocumentTitle = "DM Document Title",
			tagNameList = "first tag"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewTagCloud(
			tagName = "first tag (2)",
			tagPopularityLevel = "6"
		);

		TagsNavigationPortlet.viewTagCloud(
			tagName = "second tag (1)",
			tagPopularityLevel = "3"
		);

		TagsNavigationPortlet.viewTagCloud(
			tagName = "third tag (0)",
			tagPopularityLevel = "1"
		);
	}

	@priority = "3"
	test DisplayTagUsageStatistics {
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tags Navigation Page");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Tags Navigation");

		TagsNavigationPortlet.configureDisplayStylePG(displayTemplate = "Number");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.configureFlaggableSettingsPG(showAssetCount = "true");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Asset Publisher");

		for (var tagName : list "first tag,second tag,third tag") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "first tag,second tag",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentSize = "0KB",
			dmDocumentTitle = "DM Document Title",
			tagNameList = "first tag"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.clickTagView(
			tagAssetCount = "first tag (2)",
			tagName = "first tag"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.clickTagView(
			tagAssetCount = "second tag (1)",
			tagName = "second tag"
		);
	}

	@priority = "3"
	test DisplayUnusedTags {
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tags Navigation Page");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Tags Navigation");

		for (var tagName : list "tag name 1,tag name 2,tag name 3") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.configureFlaggableSettingsPG(showUnusedTags = "true");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewDefaultPG(
			tagNameList = "tag name 1,tag name 2,tag name 3"
		);
	}

	@priority = "3"
	test RemoveSelectTagViaBlogs {
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntryWithTags(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagNameList = "tag name 1,tag name 2,tag name 3"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		for (var tagName : list "tag name 1,tag name 2,tag name 3") {
			Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

			BlogsNavigator.gotoEntryPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title"
			);

			BlogsEntry.viewTagPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title",
				tagName = "${tagName}"
			);
		}

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		BlogsNavigator.gotoEditPG(entryTitle = "Entry Title");

		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list "tag name 1,tag name 3") {
			AssetCategorization.removeTag(tagName = "${tagName}");
		}

		PortletEntry.publish();

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title"
		);

		AssertTextNotPresent(value1 = "tag name 1");

		AssertTextNotPresent(value1 = "tag name 3");
	}

	@priority = "5"
	test RemoveTagViaBlogs {
		property portal.acceptance = "true";
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntryWithTags(
			entryContent = "Entry Content",
			entryTitle = "Entry Title",
			tagNameList = "tag name 1,tag name 2,tag name 3"
		);

		for (var tagName : list "tag name 1,tag name 2,tag name 3") {
			Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

			BlogsNavigator.gotoEntryPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title"
			);

			BlogsEntry.viewTagPG(
				entryContent = "Entry Content",
				entryTitle = "Entry Title",
				tagName = "${tagName}"
			);
		}

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		BlogsNavigator.gotoEditPG(entryTitle = "Entry Title");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.removeTag(tagName = "tag name 1");

		PortletEntry.publish();

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Entry Content",
			entryTitle = "Entry Title"
		);

		AssertTextNotPresent(value1 = "tag name 1");
	}

	@priority = "3"
	test SearchMultipleTagsViaBlogs {
		property testray.component.names = "Blogs,Tags";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		SitePages.addPublicPage(pageName = "search", pageTemplateName = "Search");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Blogs.addEntryWithTag(
			entryContent = "Entry Content 1",
			entryTitle = "Entry Title 1",
			tagName = "blue"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Blogs.addEntryWithTag(
			entryContent = "Entry Content 2",
			entryTitle = "Entry Title 2",
			tagName = "blue green"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Blogs.addEntryWithTag(
			entryContent = "Entry Content 3",
			entryTitle = "Entry Title 3",
			tagName = "yellow"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		SearchPortlets.searchEmbedded(searchTerm = "blue");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Entry Title 1",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "yellow");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Entry Title 3",
			searchAssetType = "Blogs Entry"
		);
	}

	@priority = "3"
	test ViewDuplicateTagWarningMessage {
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		Panel.expandPanel(panel = "Metadata");

		AssetCategorization.addTag(tagName = "tagname");

		AssetCategorization.addDuplicateTag(tagName = "tagname");
	}

	@priority = "5"
	test ViewTagCloudDisplayConfiguration {
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tag Cloud Page");

		Navigator.gotoPage(pageName = "Tag Cloud Page");

		Portlet.addPG(portletName = "Tag Cloud");

		Navigator.gotoPage(pageName = "Tag Cloud Page");

		TagsNavigationPortlet.viewTagCloudConfiguration(displayTemplate = "Cloud");
	}

	@priority = "5"
	test ViewTagCloudIncrease {
		property portal.acceptance = "true";
		property testray.component.names = "Tags";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tags Navigation Page");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Tags Navigation");

		TagsNavigationPortlet.configureFlaggableSettingsPG(
			showAssetCount = "true",
			showUnusedTags = "true"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.configureDisplayStylePG(displayTemplate = "Cloud");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Asset Publisher");

		for (var tagName : list "first tag,second tag,third tag") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Tags"
			);

			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "first tag,second tag",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentSize = "0KB",
			dmDocumentTitle = "DM Document Title",
			tagNameList = "first tag"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewTagCloud(
			tagName = "first tag (2)",
			tagPopularityLevel = "6"
		);

		TagsNavigationPortlet.viewTagCloud(
			tagName = "second tag (1)",
			tagPopularityLevel = "3"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "first tag,second tag",
			webContentContent = "Web Content2 Content",
			webContentTitle = "Web Content2 Title"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewTagCloud(
			tagName = "first tag (3)",
			tagPopularityLevel = "6"
		);

		TagsNavigationPortlet.viewTagCloud(
			tagName = "second tag (2)",
			tagPopularityLevel = "4"
		);
	}
}