@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Roles";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			PortalSettings.tearDownCP();

			JSONUser.tearDownNonAdminUsers();

			Role.tearDownCP();

			Organization.tearDownCP();

			Site.tearDownCP();

			BlogsEntry.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test ViewBlogsEntryRegRoleInline {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CPRolesCPBlogs#ViewBlogsEntryRegRoleInline";

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_blogs_web_portlet_BlogsAdminPortlet",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntryPermissionsCP(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		BlogsEntry.viewDefaultCP(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoBlogsEntryPermissionsCP(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		AssertElementNotPresent(
			key_entryTitle = "Blogs Entry Title",
			locator1 = "BlogsEntry#TITLE_LINK");

		LexiconCard.viewCardTitle(card = "Blogs Entry Title");
	}

	@priority = "4"
	test ViewBlogsPortletRegRole {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_blogs_web_portlet_BlogsAdminPortlet",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		BlogsConfiguration.viewNoPermissionCP();
	}

	@priority = "4"
	test ViewBlogsPortletSiteRole {
		Permissions.setUpSiteRoleLoginUserCP(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_blogs_web_portlet_BlogsAdminPortlet",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		BlogsConfiguration.viewNoPermissionCP();
	}

}