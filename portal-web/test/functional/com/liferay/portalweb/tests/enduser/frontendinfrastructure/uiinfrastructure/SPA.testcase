@component-name = "portal-frontend-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Verify loading bar can be visible during new location based SPA load event"
	@priority = 5
	@refactordone
	test NewURLLoadEventCanDisplayLoadingBar {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "SPA#NewURLLoadEventCanDisplayLoadingBar";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		AssertVisible.assertVisibleNoSPAWait(locator1 = "//html[contains(@class,'lfr-spa-loading')]");
	}

	@description = "LRQA-29748: Set the user notification timeout to 1 second"
	@priority = 4
	test SPANotificationSetTimeout {
		property test.name.skip.portal.instance = "SPAInfrastructure#SetTimeout";

		task ("Given: set the user notification timeout to 1 second") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Infrastructure",
				configurationName = "Frontend SPA Infrastructure",
				configurationScope = "System Scope");

			Type(
				key_text = "User Notification Timeout",
				locator1 = "TextInput#ANY",
				value1 = 1000);

			SystemSettings.saveConfiguration();

			Refresh();
		}

		task ("When: Activate the slow script/portlet to cause a SPA timeout") {
			ServerAdministration.openServerAdmin();

			var script = '''
				sleep(1000);
				out.println('Timeout notification warning triggered');
			''';

			ServerAdministration.executeScript(
				language = "Groovy",
				script = ${script});
		}

		task ("And When: pause for 1 second") {

			// We need this pause to wait for notification timeout. See LRQA-29748

			Pause(locator1 = 1000);
		}

		task ("Then: notification timeout pop up immediately appears") {
			AssertTextEquals(
				locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
				value1 = "Timeout notification warning triggered");
		}
	}

}