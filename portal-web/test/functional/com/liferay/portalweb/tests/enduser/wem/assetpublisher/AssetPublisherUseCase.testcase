@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Asset Publisher";
	var globalSiteName = "Global";
	var pageName = "Asset Publisher Page";
	var portletName = "Asset Publisher";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Asset Publisher Page");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Asset Publisher Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Page.tearDownCP();

			WebContent.tearDownCP();

			WebContent.tearDownCP(siteScopeName = "Global");

			DMDocumentType.tearDownCP();

			BlogsEntry.tearDownCP();

			Vocabulary.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test AddAndEditAssetsViaVirtualHostOrganizations {
		property custom.properties = "virtual.hosts.valid.hosts=localhost,127.0.0.1,www.able.com,www.baker.com";
		property test.name.skip.portal.instance = "AssetPublisherUseCase#AddAndEditAssetsViaVirtualHostOrganizations";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "Organization Name",
			page = "Public Pages"
		);

		ProductMenu.gotoSite(site = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		for (var sitePageName : list "Home,Documents and Media,News") {
			SitePages.addPrivatePage(pageName = "${sitePageName}");
		}

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search"
		);

		SearchAdministration.executeSearchActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "Test",
			userLastName = "Test",
			userName = "Test Test",
			userScreenName = "test"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Site Settings"
		);

		Site.addVirtualHostsURLCP(
			publicPageVirtualHostURL = "www.able.com",
			publicVirtualHosts = "true"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Site Settings"
		);

		Site.addVirtualHostsURLCP(
			privatePageVirtualHostURL = "www.baker.com",
			privateVirtualHosts = "true"
		);

		User.logoutPG();

		User.firstLoginPG(
			password = "test",
			samlEnabled = "true",
			userEmailAddress = "test@liferay.com",
			virtualHostsURL = "http://www.baker.com:8080"
		);

		for (var sitePageName : list "Home,Documents and Media,News") {
			AssertElementPresent(locator1 = "Home#PAGE", key_pageName = "${sitePageName}");
		}

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		for (var sitePageName : list "Documents and Media,News") {
			AssertElementNotPresent(
				locator1 = "Home#PAGE",
				key_pageName = "${sitePageName}"
			);
		}

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@liferay.com",
			virtualHostsURL = "http://www.able.com:8080"
		);

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Page");

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		Portlet.addPG(portletName = "Web Content Display");

		Refresh();

		Portlet.addPG(portletName = "Asset Publisher");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		WebContent.viewPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = "WC WebContent Title");

		AssertElementNotPresent(locator1 = "SignIn#PORTLET_TITLE");

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = "WC WebContent Title");

		WebContent.addCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);

		Button.clickPublish();

		Navigator.gotoSpecificURLPage(
			pageName = "Web Content Page",
			url = "http://www.able.com:8080"
		);

		WebContent.viewPGViaAP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);

		User.firstLoginPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Organization Name"
		);

		WebContent.viewPGViaAP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test AssertAssetListScopeViaAssetPublisher {
		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "Global Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "Global Document Type Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "Local Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "Local Document Type Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureManualAssetSelectionPG();

		AssetPublisherPortlet.viewManualAssetTypesPG(
			assetEntryTypes = "Global Document Type Name,Local Document Type Name"
		);
	}

	@priority = "4"
	test AssertGuestRefreshNoConsoleErrors {
		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title"
		);

		User.logoutPG();

		Refresh();

		AssertConsoleTextNotPresent(value1 = "NoSuchResourceActionException");
	}

	@priority = "3"
	test AssetPublisherCategoriesLocalization {
		property test.name.skip.portal.instance = "AssetPublisherUseCase#AssetPublisherCategoriesLocalization";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(
			locale = "de_DE",
			locale2 = "fr_FR",
			localization2Name = "Nom Vocabulaire",
			localizationName = "Vokabular Namen",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.addCategoryLocalizationCP(
			categoryName = "Vocabulary1 Category",
			locale = "de_DE",
			locale2 = "fr_FR",
			localization2Name = "Nom de la Cat√©gorie",
			localizationName = "Kategorienamen",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.viewCategoryToVocabularyCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Language Selector");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "Web Content1 Content",
			webContentTitle = "Web Content1 Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content1 Title");

		WebContent.selectCategory(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content1 Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "de-DE");

		WebContent.addCP(
			webContentContent = "Netz Content1 Inhalt",
			webContentTitle = "Netz Content1 Titel"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "fr-FR");

		WebContent.addCP(
			webContentContent = "Contenu de Contenu Web1",
			webContentTitle = "Titre de Contenu Web1"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewPGViaAP(
			webContentContent = "Web Content1 Content",
			webContentTitle = "Web Content1 Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureShowMetadataFieldsPG(
			addMetadata = "true",
			metadataFieldList = "Categories",
			portletName = "Asset Publisher",
			webContentContent = "Web Content1 Content",
			webContentTitle = "Web Content1 Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content1 Content",
			assetTitle = "Web Content1 Title"
		);

		AssetPublisherPortlet.viewAssetMetadataPG(
			addMetadata = "true",
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		LanguagePortlet.selectLanguagePG(
			locale = "de-DE",
			textIcon = "Deutsch-Deutschland"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Netz Content1 Inhalt",
			assetTitle = "Netz Content1 Titel"
		);

		AssetPublisherPortlet.viewAssetMetadataPG(
			addMetadata = "true",
			categoryName = "Kategorienamen",
			vocabularyName = "Vokabular Namen"
		);

		LanguagePortlet.selectLanguagePG(locale = "fr_FR", textIcon = "fran√ßais-France");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Contenu de Contenu Web1",
			assetTitle = "Titre de Contenu Web1"
		);

		AssetPublisherPortlet.viewAssetMetadataPG(
			addMetadata = "true",
			categoryName = "Nom de la Cat√©gorie",
			vocabularyName = "Nom Vocabulaire"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States"
		);
	}

	@priority = "5"
	test AssetPublisherCategoriesNavigation {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(
			vocabularyDescription = "This is the Vocabulary1 description",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.addCP(
			categoryDescription = "This is the Vocabulary1 Category description",
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.viewCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC WebContent1 Content",
			webContentTitle = "WC WebContent1 Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent1 Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC WebContent2 Content",
			webContentTitle = "WC WebContent2 Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent2 Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC WebContent3 Content",
			webContentTitle = "WC WebContent3 Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent3 Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC WebContent4 Content",
			webContentTitle = "WC WebContent4 Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent4 Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC WebContent5 Content",
			webContentTitle = "WC WebContent5 Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent5 Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Categories Navigation");

		AssetPublisherPortlet.configurePaginationPG(
			paginationNumber = "3",
			paginationType = "Regular"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			nextPageClick = "true",
			pageMod = "1 - 3 of 5",
			pageNumber = "1 of 2",
			paginationNumber = "3",
			paginationType = "Regular"
		);

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			pageMod = "4 - 5 of 5",
			pageNumber = "2 of 2",
			paginationNumber = "3",
			paginationType = "Regular"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetDisplayOrderPG(
			fieldNameOrder = "Modified Date",
			sortOrder = "Ascending"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Category.viewFilterViaCategoriesNavigationPG(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent4 Content",
			assetTitle = "WC WebContent4 Title"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent5 Content",
			assetTitle = "WC WebContent5 Title"
		);

		Category.viewRemoveFilterViaAP(
			categoryName = "Vocabulary1 Category",
			vocabularyName = "Vocabulary Name"
		);

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			nextPageClick = "true",
			pageMod = "1 - 3 of 5",
			pageNumber = "1 of 2",
			paginationNumber = "3",
			paginationType = "Regular"
		);

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			pageMod = "4 - 5 of 5",
			pageNumber = "2 of 2",
			paginationNumber = "3",
			paginationType = "Regular"
		);
	}

	@priority = "5"
	test AssetPublisherFilterAndOrderByFieldType {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media,HTML,Image,Integer,Link to Page,Number,Radio,Select,Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Boolean,Date,Decimal,Documents and Media,HTML,Image,Integer,Link to Page,Number,Radio,Select,Text,Text Box",
			templateFile = "simple_all_fields_template.txt",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentInteger = "4",
			webContentNumber = "123",
			webContentTitle = "Web Content1 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content1 Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content1 Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "de-DE");

		WebContent.addCP(webContentTitle = "Netz Inhalt1 Titel");

		Type(locator1 = "TextInput#DDM", value1 = "3", key_fieldName = "Integer");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentInteger = "1",
			webContentNumber = "345",
			webContentTitle = "Web Content2 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content2 Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content2 Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "de-DE");

		WebContent.addCP(webContentTitle = "Netz Inhalt2 Titel");

		Type(locator1 = "TextInput#DDM", value1 = "8", key_fieldName = "Integer");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentInteger = "5",
			webContentNumber = "567",
			webContentTitle = "Web Content3 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content3 Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content3 Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "de-DE");

		WebContent.addCP(webContentTitle = "Netz Inhalt3 Titel");

		Type(locator1 = "TextInput#DDM", value1 = "5", key_fieldName = "Integer");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content4 Content",
			webContentTitle = "Web Content4 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content4 Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureFilterByFieldPG(
			assetSubtype = "WC Structure Name",
			fieldFilter = "Integer",
			selectedAsset = "Web Content Article"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetDisplayOrderPG(
			fieldNameOrder = "Integer",
			sortOrder = "Ascending"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewOrderedFieldPG(
			firstAsset = "Web Content2 Title",
			secondAsset = "Web Content1 Title",
			thirdAsset = "Web Content3 Title"
		);

		Portlet.addPG(portletName = "Language Selector");

		LanguagePortlet.selectLanguagePG(
			locale = "de-DE",
			textIcon = "Deutsch-Deutschland"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewOrderedFieldPG(
			firstAsset = "Netz Inhalt1 Titel",
			secondAsset = "Netz Inhalt3 Titel",
			thirdAsset = "Netz Inhalt2 Titel"
		);

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure1 Description",
			structureName = "WC Structure1 Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure1 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure1 Name",
			templateDescription = "WC Template11 Description",
			templateFieldNames = "Text",
			templateName = "WC Template11 Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure1 Name");

		WebContent.addWithStructureCP(
			webContentText = "Web Content5 Text",
			webContentTitle = "Web Content5 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content5 Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetTypePG(
			assetSubtype = "Any",
			selectedAsset = "Web Content Article"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content5 Text",
			assetTitle = "Web Content5 Title"
		);

		AssetPublisherPortlet.configureAssetTypePG(
			selectContent = "WC Structure1 Name",
			selectedAsset = "Web Content Article",
			selectMoreThanOneSubtype = "true"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewOrderedFieldPG(
			firstAsset = "Web Content1 Title",
			secondAsset = "Web Content2 Title",
			thirdAsset = "Web Content3 Title"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content4 Content",
			assetTitle = "Web Content4 Title"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content5 Text",
			assetTitle = "Web Content5 Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewFilterAndFieldsPG(
			assetSubtype = "Marketing Banner",
			assetSubtypeFields = "Select,Campaign Theme,Business Goal,Needs Legal Review,Banner Name",
			selectedAsset = "Document"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewFilterAndFieldsPG(
			assetSubtype = "Online Training",
			assetSubtypeFields = "Product,Version,Topics,Level,Lesson Title,Author",
			selectedAsset = "Document"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewFilterAndFieldsPG(
			assetSubtype = "Sales Presentation",
			assetSubtypeFields = "Date,Meeting Name,Time,Location,Product,Version,Areas of Interest,Competitors,Prospect Name",
			selectedAsset = "Document"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewFilterAndFieldsPG(
			assetSubtype = "Contract",
			assetSubtypeFields = "Effective Date,Expiration Date,Contract Type,Status,Legal Reviewer,Signing Authority,Deal Name",
			selectedAsset = "Document"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media,HTML,Image,Integer,Link to Page,Number,Radio,Select,Text,Text Box") {
			DynamicDataMapping.editFieldIndexable(fieldFieldLabel = "${structureFieldName}");
		}

		WebContentStructures.saveCP();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewFilterAndFieldsPG(
			assetSubtype = "WC Structure Name",
			assetSubtypeFields = "Date,Meeting Name,Time,Location,Product,Version,Areas of Interest,Competitors,Prospect Name",
			noneIndexable = "true",
			selectedAsset = "Web Content Article"
		);
	}

	@priority = "3"
	test AssetPublisherHasOpenOfficeFileTypeLinks {
		property test.name.skip.portal.instance = "AssetPublisherUseCase#AssetPublisherHasOpenOfficeFileTypeLinks";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Connectors",
			configurationName = "OpenOffice Integration",
			configurationScope = "System Scope"
		);

		FormFields.enableCheckbox(fieldName = "serverEnabled");

		SystemSettings.saveConfiguration();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		AssetPublisherPortlet.configureDisplayConversionsPG(
			check = "true",
			documentTypes = "doc,odt,pdf,rtf,sxw,txt"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewConversionLinksPGViaAP(
			documentTypes = "doc,odt,pdf,rtf,sxw,txt",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureDisplayConversionsPG(
			check = "true",
			documentTypes = "doc,pdf,txt"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureDisplayConversionsPG(
			documentTypes = "odt,rtf,sxw",
			uncheck = "true"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewConversionLinksPGViaAP(
			documentTypes = "doc,pdf,txt",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewNoConversionLinksPGViaAP(
			documentTypes = "odt,rtf,sxw",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureDisplayConversionsPG(
			documentTypes = "doc,odt,pdf,rtf,sxw,txt",
			uncheck = "true"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewNoConversionLinksPGViaAP(
			documentTypes = "doc,odt,pdf,rtf,sxw,txt",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "5"
	test AssetPublisherSiteAndGlobalScopeAccessibility {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "AssetPublisherUseCase#AssetPublisherSiteAndGlobalScopeAccessibility";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		for (var siteName : list "${siteName},Site Name,Global") {
			ProductMenu.gotoSite(site = "${siteName}");

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "${siteName} WC Content",
				webContentTitle = "${siteName} WC Title"
			);

			PortletEntry.publish();
		}

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Site Name WC Content",
			assetTitle = "Site Name WC Title"
		);

		AssetPublisherPortlet.configureAddSiteScopes(globalSite = "Global");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		for (var siteName : list "${siteName},Site Name,Global") {
			AssetPublisherPortlet.viewAssetPG(
				assetContent = "${siteName} WC Content",
				assetTitle = "${siteName} WC Title"
			);
		}

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Liferay WC Content",
			assetTitle = "Liferay WC Title"
		);
	}

	@priority = "4"
	test AssetPublisherTogglingBetweenSites {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page");

		for (var siteName1 : list "${siteName},Site Name,Global") {
			ProductMenu.gotoSite(site = "${siteName1}");

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "${siteName1} WC Content",
				webContentTitle = "${siteName1} WC Title"
			);

			PortletEntry.publish();
		}

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Site Name WC Content",
			assetTitle = "Site Name WC Title"
		);

		AssetPublisherPortlet.configureAddSiteScopes(globalSite = "Global");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		AssetPublisherPortlet.removeSiteScope(removeSiteScopes = "Site Name");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Global WC Content",
			assetTitle = "Global WC Title"
		);

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		AssetPublisherPortlet.configureAddSiteScopes(otherSite = "${siteName}");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		AssetPublisherPortlet.removeSiteScope(removeSiteScopes = "Global");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "${siteName} WC Content",
			assetTitle = "${siteName} WC Title"
		);
	}

	@priority = "4"
	test DisplayAssetsFilterByTagsOrCategoryViaAssetPublisher {
		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Tag.addCP(tagName = "tagname");

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name",
			webContentContent = "Web Content Category Content",
			webContentTitle = "Web Content Category Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "tagname",
			webContentContent = "Web Content Tag Content",
			webContentTitle = "Web Content Tag Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureCategoriesFilterPG(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Tag Content",
			assetTitle = "Web Content Tag Title"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Category Content",
			assetTitle = "Web Content Category Title"
		);

		AssetPublisherPortlet.editConfigureTagsFilterPG(tagNameList = "tagname");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Category Content",
			assetTitle = "Web Content Category Title"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Tag Content",
			assetTitle = "Web Content Tag Title"
		);
	}

	@priority = "4"
	test ViewAPPortletAsNewUserSiteAdministratorViaUserSite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Asset Publisher Page");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Site Administrator",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(userEmailAddress = "userea@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.viewDynamicAssetSelectionConfigurationPG();

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.configureManualAssetSelectionPG();

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewManualAssetSelectionConfigurationPG(
			portletName = "Asset Publisher"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "5"
	test ViewAssetPaginationAndShowContentAddButtonViaAP {
		property testray.component.names = "Training";

		AssetPublisherPortlet.configureAssetLinkBehaviorPG(
			assetLinkBehavior = "View in Context",
			disableConfiguration = "Show Add Content Button"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configurePaginationPG(
			paginationNumber = "5",
			paginationType = "Regular"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewPlusIconNotPresentPG();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.addMultipleArticlesCP(articleCount = "7");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 1",
			assetTitle = "WC Title 1"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 2",
			assetTitle = "WC Title 2"
		);

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			nextPageClick = "true",
			pageMod = "1 - 5 of 7",
			pageNumber = "1 of 2",
			paginationNumber = "5"
		);

		AssetPublisherPortlet.viewPaginatedAssetsPG(
			pageMod = "6 - 7 of 7",
			pageNumber = "2 of 2",
			paginationNumber = "5"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 3",
			assetTitle = "WC Title 3"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 4",
			assetTitle = "WC Title 4"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 5",
			assetTitle = "WC Title 5"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 6",
			assetTitle = "WC Title 6"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC Content 7",
			assetTitle = "WC Title 7"
		);
	}

	@priority = "3"
	test ViewAuthorChangeViaAP {
		AssetPublisherPortlet.configureShowMetadataFieldsPG(
			addMetadata = "true",
			metadataFieldList = "Author",
			portletName = "Asset Publisher"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		JSONRole.addRegularRole(roleKey = "WC Author", roleTitle = "WC Author");

		for (var resourceActionIndex : list "ADD_FOLDER,ADD_FEED,ADD_ARTICLE,VIEW,UPDATE,SUBSCRIBE,PERMISSIONS,ADD_TEMPLATE,ADD_STRUCTURE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal",
				roleTitle = "WC Author"
			);
		}

		for (var resourceActionIndex : list "VIEW,UPDATE_DISCUSSION,UPDATE,SUBSCRIBE,PERMISSIONS,EXPIRE,DELETE_DISCUSSION,DELETE,ADD_DISCUSSION") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "WC Author"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "WC Author"
		);

		for (var resourceActionIndex : list "VIEW,PREFERENCES,PERMISSIONS,CONFIGURATION,ACCESS_IN_CONTROL_PANEL") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
				roleTitle = "WC Author"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		for (var userScreenName : list "author1,author2") {
			var userEmailAddress = "${userScreenName}ea@liferay.com";
			var userFirstName = "${userScreenName}";
			var userLastName = "${userScreenName}";

			User.addCP(
				userEmailAddress = "${userEmailAddress}",
				userFirstName = "${userFirstName}",
				userLastName = "${userLastName}",
				userScreenName = "${userScreenName}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "${userEmailAddress}",
				userScreenName = "${userScreenName}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Roles"
			);

			Role.assignRegRoleCP(
				roleTitle = "WC Author",
				userScreenName = "${userScreenName}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "author1ea@liferay.com",
			userLoginFullName = "author1 author1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewPGViaAP(
			author = "author1",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "author2ea@liferay.com",
			userLoginFullName = "author2 author2"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewPGViaAP(
			author = "author2",
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ViewBlogsEntriesViaRelatedAssets {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title"
		);

		Panel.expandPanel(panel = "Related Assets");

		BlogsEntry.addRelatedAsset(
			assetTitle = "Blogs Entry1 Title",
			assetType = "Blogs Entry"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_TITLE_IMAGE_2");

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_TITLE_2");

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_EDIT_2");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title"
		);

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title"
		);

		BlogsEntry.viewRelatedAssetPG(
			assetTitle = "Blogs Entry1 Title",
			assetType = "Blogs Entry",
			entryTitle = "Blogs Entry2 Title"
		);

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_TITLE_IMAGE_2");

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_TITLE_2");

		AssertElementNotPresent(locator1 = "Relatedassets#ASSET_EDIT_2");
	}

	@priority = "4"
	test ViewDeletedWCDArticleAsAdminAndGuestCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.selectWebContent(
			portletName = "Web Content Display",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.viewDeletedArticle();

		User.logoutPG();

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewNoContentAsGuestPGViaWCD(portletName = "Web Content Display");

		User.loginPG();
	}

	@priority = "3"
	test ViewRelatedAssetsViaRelatedAssetsPortlet {
		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Related Assets");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Panel.expandPanel(panel = "Related Assets");

		BlogsEntry.addRelatedAsset(
			assetTitle = "WC WebContent Title",
			assetType = "Basic Web Content"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		RelatedAssets.viewDefaultPG();

		AssetPublisherPortlet.viewPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title",
			relatedAssetTitle = "Blogs Entry Title"
		);

		RelatedAssets.viewPG(assetTitle = "Blogs Entry Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		RelatedAssets.viewDefaultPG();

		AssetPublisherPortlet.viewPG(
			assetContent = "Blogs Entry Content",
			assetTitle = "Blogs Entry Title",
			relatedAssetTitle = "WC WebContent Title"
		);

		RelatedAssets.viewPG(assetTitle = "WC WebContent Title");
	}

	@priority = "3"
	test ViewRelatedAssetViaDMPortlet {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Documents and Media Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.docx",
			dmDocumentRelatedAsset = "true",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPGDetails(
			assetTitle = "Blogs Entry Title",
			dmDocumentDescription = "DM Document Description",
			dmDocumentRelatedAsset = "true",
			dmDocumentSize = "12KB",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test",
			dmDocumentVersionNumber = "1.0",
			portletName = "Documents and Media",
			searchTerm = "DM Document Title",
			workflow = "APPROVED"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.editPG(
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentFileEdit = "Document_2.docx",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPGDetails(
			assetTitle = "Blogs Entry Title",
			dmDocumentDescription = "DM Document Description Edit",
			dmDocumentRelatedAsset = "true",
			dmDocumentSize = "12KB",
			dmDocumentTitle = "DM Document Title Edit",
			dmDocumentUploader = "Test Test",
			dmDocumentVersionNumber = "1.1",
			portletName = "Documents and Media",
			searchTerm = "DM Document Title",
			workflow = "APPROVED"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRelatedAssetPG(
			assetTitle = "Blogs Entry Title",
			dmDocumentTitle = "DM Document Title Edit"
		);

		BlogsEntry.viewAsRelatedAssetPG(
			assetTitle = "DM Document Title Edit",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);
	}

	@priority = "4"
	test ViewWebContentWithConfiguredDisplayPageViaAP {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoSite(site = "${siteName}");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Asset Publisher Page 2");

		Navigator.gotoPage(pageName = "Asset Publisher Page 2");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetLinkBehaviorPG(
			assetLinkBehavior = "View in Context"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page 2");

		AssetPublisherPortlet.configureDisplaySettings(
			displaySettings = "Set as the Default Asset Publisher for This Page"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.editDisplayPagePGViaAP(
			assetTitle = "WC WebContent Title",
			displayPageName = "Asset Publisher Page 2",
			pageType = "Public Pages"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewLinkedAssetPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);
	}
}