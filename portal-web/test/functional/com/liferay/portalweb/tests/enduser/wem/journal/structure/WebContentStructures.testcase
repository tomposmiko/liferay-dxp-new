@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test AddStructures {
		property testray.component.names = "Training,Web Content Administration";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1");

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 1");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2");

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 2");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3");

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 3");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1");

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 1");

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2");

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 2");

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3");

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 3");

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}
	}

	@description = "This is a use case for LPS-77387."
	@priority = "4"
	test AddStructureViaLocaleURL {
		property test.name.skip.portal.instance = "WebContentStructures#AddStructureViaLocaleURL";
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/en/");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		Navigator.ensureLocaleURL(locale = "en");

		WebContentStructures.addName(structureName = "WC Structure Name");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		SelectFrame(value1 = "relative=top");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		AssertElementNotPresent(
			key_ddlDataDefinitionName = "WC Structure Name",
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_2");
	}

	@priority = "4"
	test EditSubstructureDefaultValues {
		property testray.component.names = "Web Content Administration";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name1");

		for (var structureFieldName : list "Text,Text Box,Image,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", ""));
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		LexiconEntry.gotoAdd();

		WebContentStructures.addName(structureName = "2");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		WebContentStructures.addSubstructure(
			parentStructureName = "WC Structure Name1",
			structureName = "2");

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer");

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.editSubstructureDefaultValuesCP(
			editSubstructureFieldNames = "Text",
			substructureName = "2");
	}

	@priority = "4"
	test ValidateDDMNavigation {
		property testray.component.names = "Web Content Administration";
		property test.name.skip.portal.instance = "WebContentStructures#ValidateDDMNavigation";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "global");

		NavItem.gotoStructures();

		WebContentNavigator.gotoManageTemplatesViaStructures(structureName = "Basic Web Content");

		WebContentTemplates.addCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template");

		WebContentTemplates.gotoTemplateEllipsisItem(
			item = "Edit",
			templateName = "Test WC Template");

		Navigator.gotoBack();

		SiteAdmin.viewPortletTitle(portletTitle = "Templates for Structure: Basic Web Content");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template");

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "",
			templateName = "Basic Web Content");

		NavItem.gotoStructures();

		SiteAdmin.viewPortletTitle(portletTitle = "Web Content");

		WebContentStructures.viewTableEntryCP(
			structureDescription = "Basic Web Content",
			structureName = "Basic Web Content");
	}

	@priority = "4"
	test ViewFavoriteStructure {
		property testray.component.names = "Web Content Administration";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		var n = "0";

		while ("${n}" != "15") {
			WebContentStructures.addCP(
				structureDescription = "WC Structure Description",
				structureName = "WC Structure Name ${n}");

			DynamicDataMapping.addField(
				field = "HTML",
				fieldFieldLabel = "HTML",
				fieldName = "HTML");

			WebContentStructures.saveCP(structureName = "${structureName}");

			var n = ${n} + 1;
		}

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoMoreStructuresViaPlusButton(pageMod = "8 of 17");

		for (var structureName : list "Basic Web Content,WC Structure Name 0,WC Structure Name 1,WC Structure Name 2,WC Structure Name 3,WC Structure Name 4,WC Structure Name 5,WC Structure Name 6,WC Structure Name 7,WC Structure Name 8,WC Structure Name 9,WC Structure Name 10,WC Structure Name 11,WC Structure Name 12,WC Structure Name 13,WC Structure Name 14") {
			WebContentStructures.viewStructuresViaMoreIFrame(structureName = "${structureName}");
		}

		WebContentStructures.viewNoFavoriteStructure();

		WebContentStructures.addFavoriteStructure(structureName = "WC Structure Name 9");

		WebContentStructures.viewFavoriteStructureViaIFrame(
			indexNumber = "1",
			structureName = "WC Structure Name 9");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentStructures.viewFavoriteStructureViaPlusButton(structureName = "WC Structure Name 9");
	}

}