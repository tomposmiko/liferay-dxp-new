@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property portlet.plugins.includes = "test-localized-portlet";
	property testray.component.names = "Site Localization";
	property testray.main.component.name = "Site Localization";
	var pageName = "Test Localization";
	var portletName = "Test Localized Portlet";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "${pageName}");

		Navigator.gotoPage(pageName = "${pageName}");

		Portlet.addPG(pageName = "${pageName}", portletName = "${portletName}");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();
		}
	}

	@priority = "4"
	test CheckLocalizationChinese {
		Click(locator1 = "TestLocalized#CHINESE_LOCALIZATION");

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_1",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_2",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_3",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_4",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_5",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_6",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_7",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_8",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_9",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_10",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_11",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_12",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_13",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_14",
			value1 = "PASSED"
		);

		AssertTextNotPresent(value1 = "FAILED");
	}

	@priority = "4"
	test CheckLocalizationFrench {
		Click(locator1 = "TestLocalized#FRENCH_LOCALIZATION");

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_1",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_2",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_3",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_4",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_5",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_6",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_7",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_8",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_9",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_10",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_11",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_12",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_13",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_14",
			value1 = "PASSED"
		);

		AssertTextNotPresent(value1 = "FAILED");
	}

	@priority = "4"
	test CheckLocalizationSpanish {
		Click(locator1 = "TestLocalized#SPANISH_LOCALIZATION");

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_1",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_2",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_3",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_4",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_5",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_6",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_7",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_8",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_9",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_10",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_11",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_12",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_13",
			value1 = "PASSED"
		);

		AssertTextEquals(
			locator1 = "TestLocalized#LOCALIZATION_TEST_14",
			value1 = "PASSED"
		);

		AssertTextNotPresent(value1 = "FAILED");
	}
}