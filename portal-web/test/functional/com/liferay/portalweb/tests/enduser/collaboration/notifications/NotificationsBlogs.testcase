@component-name = "portal-collaboration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property custom.properties = "default.layout.template.id=1_column";
	property testray.component.names = "Blogs,Notifications";
	property testray.main.component.name = "Notifications";
	var pageName = "Blogs Page";
	var portletName = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Blogs Page", sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Blogs Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleTitle = "Administrator", userScreenName = "usersn");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Blogs.tearDownSubscribePG();

			Blogs.tearDownCP();

			NotificationsPortlet.tearDownUserDeliveries();

			Page.tearDownCP();

			User.tearDownCP();
		}
	}

	@priority = "4"
	test DeleteNotifications {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		for (var entryCount : list "1,2") {
			Blogs.addEntry(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title"
			);
		}

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "2"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry1 Title",
			user = "userfn userln"
		);

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry2 Title",
			user = "userfn userln"
		);

		Notifications.deleteNotification(contentBody = "Blogs Entry1 Title");

		Notifications.deleteNotification(contentBody = "Blogs Entry2 Title");

		Notifications.viewDefaultContent();

		Notifications.viewNoNotifications(activePanel = "Notifications");
	}

	@priority = "4"
	test MarkAllNotificationsAsRead {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		for (var entryCount : list "1,2,3") {
			Blogs.addEntry(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title"
			);
		}

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "3"
		);

		Notifications.gotoNotifications();

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Mark All Notifications as Read");

		Notifications.viewNoNotifications(activePanel = "Notifications");
	}

	@priority = "4"
	test ViewMultipleNotifications {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		for (var entryCount : list "1,2,3") {
			Blogs.addEntry(
				entryContent = "Blogs Entry${entryCount} Content",
				entryTitle = "Blogs Entry${entryCount} Title"
			);
		}

		Notifications.viewNoNotifications(activePanel = "Profile");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "3"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry1 Title",
			user = "userfn userln"
		);

		Notifications.navigateToContent(contentBody = "Blogs Entry1 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "2"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry2 Title",
			user = "userfn userln"
		);

		Notifications.navigateToContent(contentBody = "Blogs Entry2 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "Blogs Entry",
			contentBody = "Blogs Entry3 Title",
			user = "userfn userln"
		);

		Notifications.navigateToContent(contentBody = "Blogs Entry3 Title");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry3 Content",
			entryTitle = "Blogs Entry3 Title"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "0"
		);
	}

	@priority = "4"
	test ViewNoWebsiteNotificationForNewBlogsEntry {
		NotificationsPortlet.gotoNotificationDelivery();

		AssertElementPresent(locator1 = "IFrame#DIALOG");

		IFrame.selectConfigurationFrame();

		NotificationsPortlet.disableUserDeliveries(
			actionType = "Add",
			contentType = "Blogs",
			notificationType = "Website"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@priority = "4"
	test ViewNoWebsiteNotificationForUpdatedBlogsEntry {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.editEntryPG(
			entryContent = "Blogs Entry Content",
			entryContentEdit = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title",
			entryTitleEdit = "Blogs Entry Title Edit"
		);

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "0");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title Edit"
		);
	}

	@priority = "4"
	test ViewWebsiteNotificationForNewBlogsEntry {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "blogs entry",
			contentBody = "Blogs Entry Title",
			user = "userfn userln"
		);

		Notifications.navigateToContent(contentBody = "Blogs Entry Title");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@priority = "4"
	test ViewWebsiteNotificationForNewCommentViaBlogs {
		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Comments.subscribePG();

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsEntryComment.add(entryComment = "Blogs Entry Comment");

		Notifications.viewBadgeCount(notificationCount = "0");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			assetType = "comment",
			content = "Blogs Entry Title",
			contentBody = "Blogs Entry Comment",
			user = "userfn userln"
		);

		Notifications.navigateToContent(contentBody = "Blogs Entry Comment");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsEntryComment.viewPG(
			commentCount = "1",
			entryComment = "Blogs Entry Comment",
			userFullName = "userfn userln"
		);

		Notifications.viewBadgeCount(notificationCount = "0");
	}
}