@component-name = "portal-page-audit"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Page Audit";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		task ("Create content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");

			JSONLayout.publishLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page");
		}

		task ("Create a Role") {
			JSONRole.addRegularRole(
				roleKey = "Page Audit Test Role",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create an User") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Assign create role to new user") {
			JSONRole.assignRoleToUser(
				roleTitle = "Page Audit Test Role",
				userEmailAddress = "userea@liferay.com");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		TestUtils.hardRefresh();

		JSONUser.tearDownNonAdminUsers();

		JSONRole.deleteRole(roleTitle = "Page Audit Test Role");

		JSONGroup.deleteGroupByName(groupName = "Test Site Name");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions to edit Instance Settings When there is no canonical URL, or it doesn't coincide with the page's URL Then the users will see the invalid canonical URL, and a text with a link to the instance settings: If the problem is that the canonical URL doesn't match the URL of the page, try changing the configuration for using localized canonical URLs from Instance settings > Pages > SEO. "
	@priority = 4
	@uitest
	test CheckInvalidCanonicalURL {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckInvalidCanonicalURL";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Invalid Canonical URL");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Invalid Canonical URL");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with NO permissions to edit Instance Settings When there is no canonical URL, or it doesn't coincide with the page's URL Then the users will see the invalid canonical URL, and a text: If the problem is that the canonical URL doesn't match the URL of the page, try changing the configuration for using localized canonical URLs from Instance settings > Pages > SEO. "
	@priority = 4
	test CheckInvalidCanonicalURLWithoutPermission {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckInvalidCanonicalURL";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Open Page Audit panel and run it") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();
		}

		task ("Open detailed view and check text") {
			PageAudit.goToDetailView(failingCheckName = "Invalid Canonical URL");

			AssertElementPresent(
				key_text = "try changing the configuration for using localized canonical URLs from Instance Settings > Pages > SEO.",
				locator1 = "PageAudit#FAILING_CHECK_DETAIL_TEXT");

			AssertElementNotPresent(
				key_text = "Instance Settings > Pages > SEO",
				locator1 = "Link#ANY");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions for editing the page When the page has any invalid hreflang link Then the users will see the matching failing elements, with the incorrect hreflang links"
	@priority = 4
	@uitest
	test CheckInvalidHreflang {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckInvalidHreflang";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Invalid Hreflang");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Invalid Hreflang");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_ELEMENT_NAME",
				value1 = "link");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions for editing the page When  the link texts are not title as the link text Then the users will see the link text and the link destination URL"
	@priority = 4
	@uitest
	test CheckLinksTexts {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckLinksTexts";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Link Texts");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Link Texts");

			AssertElementPresent(
				failingText = "Link Text",
				locator1 = "PageAudit#FAILING_ELEMENT_TEXT");

			AssertElementPresent(
				failingText = "Link Destination URL",
				locator1 = "PageAudit#FAILING_ELEMENT_TEXT");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions for editing the page When there is no meta description for the page Then the users will see a text with a link to the configuration section: Add a meta-description from the Configuration section of this page."
	@priority = 4
	@uitest
	test CheckMissingMetaDescription {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckMissingMetaDescription";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Missing Meta Description");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Missing Meta Description");

			AssertElementPresent(
				failingText = "Add a description",
				locator1 = "PageAudit#FAILING_ELEMENT_TEXT");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with NO permissions for editing the page When there is no meta description for the page Then the users will see a text: Add a meta-description from the Configuration section of this page."
	@priority = 4
	test CheckMissingMetaDescriptionWithoutPermission {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckInvalidCanonicalURL";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Open Page Audit panel and run it") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();
		}

		task ("Open detailed view and check text") {
			PageAudit.goToDetailView(failingCheckName = "Missing Meta Description");

			AssertElementPresent(
				key_text = "Add a description from the configuration section of this page.",
				locator1 = "PageAudit#FAILING_CHECK_DETAIL_TEXT");

			AssertElementNotPresent(
				key_text = "Add a description",
				locator1 = "Link#ANY");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions for editing the page When there is no title for the page Then the users will see a text with a link to the configuration section: Add a title from the Configuration section of this page."
	@priority = 4
	@uitest
	test CheckMissingTitleElement {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckMissingTitleElement";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Missing <title> Element");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Missing <title> Element");

			AssertElementPresent(
				failingText = "Add a title",
				locator1 = "PageAudit#FAILING_ELEMENT_TEXT");
		}
	}

	@description = "LPS-137227 Given a content page	When a user with permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInContentPageWithEditBlogsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.blogs.model.BlogsEntry",
				roleTitle = "Page Audit Test Role");
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page When a user with permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInContentPageWithEditDocumentsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
				roleTitle = "Page Audit Test Role");
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page When the user with permissions to edit pages visits the view mode	Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInContentPageWithEditPagesPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.portal.kernel.model.Layout",
				roleTitle = "Page Audit Test Role");
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page	When a user with permissions to edit web content visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInContentPageWithEditWebContentPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page	When a user with NO permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInContentPageWithoutEditBlogsPermission {
		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page	When a user with NO permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInContentPageWithoutEditDocumentsPermission {
		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page	When the user with NO permissions to edit pages visits the view mode Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInContentPageWithoutEditPagesPermission {
		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a content page	When a user with NO permissions to edit web content visits the page	Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInContentPageWithoutEditWebContentPermission {
		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInDisplayPageWithEditBlogsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			for (var resourceActionIndex : list "UPDATE,VIEW") {
				Permissions.definePermissionViaJSONAPI(
					resourceAction = ${resourceActionIndex},
					resourceName = "com.liferay.blogs.model.BlogsEntry",
					roleTitle = "Page Audit Test Role");
			}
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Blogs Entry",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Blog Entry") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Blogs Entry Title");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInDisplayPageWithEditDocumentsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			for (var resourceActionIndex : list "UPDATE,VIEW") {
				Permissions.definePermissionViaJSONAPI(
					resourceAction = ${resourceActionIndex},
					resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
					roleTitle = "Page Audit Test Role");
			}
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Document",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Document");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Document") {
			JSONDocument.addFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "DM Document Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "DM Document Title");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When the user with permissions to edit pages visits the view mode Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInDisplayPageWithEditPagesPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.portal.kernel.model.Layout",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Blogs Entry",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Blog Entry") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Blogs Entry Title");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with permissions to edit web content visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInDisplayPageWithEditWebContentPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Web Content");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Web Content") {
			JSONWebcontent.addWebContent(
				content = "Web Content Content Title",
				groupName = "Test Site Name",
				title = "Web Content Title");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Web Content Title");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with NO permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInDisplayPageWithoutEditBlogsPermission {
		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Blogs Entry",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Blog Entry") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Blogs Entry Title");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with NO permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInDisplayPageWithoutEditDocumentsPermission {
		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Document",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Document");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Document") {
			JSONDocument.addFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "DM Document Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "DM Document Title");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page When the user with NO permissions to edit pages visits the view mode Then the issue icon for displaying the page audit panel is not shown"
	@priority = 3
	test CheckPageAuditIconInDisplayPageWithoutEditPagesPermission {
		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Blogs Entry",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Blog Entry") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content",
				entryTitle = "Blogs Entry Title",
				groupName = "Test Site Name");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Blogs Entry Title");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a display page	When a user with NO permissions to edit web content visits the page	Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInDisplayPageWithoutEditWebContentPermission {
		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Web Content");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Create a Web Content") {
			JSONWebcontent.addWebContent(
				content = "Web Content Content Title",
				groupName = "Test Site Name",
				title = "Web Content Title");
		}

		task ("Add 'Asset Publisher' to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssetPublisherPortlet.clickAssetTitle(assetTitle = "Web Content Title");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "Given a widget page When a user with permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInWidgetPageWithEditBlogsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.blogs.model.BlogsEntry",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When a user with permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInWidgetPageWithEditDocumentsPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When the user with permissions to edit pages visits the view mode Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInWidgetPageWithEditPagesPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.portal.kernel.model.Layout",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When a user with permissions to edit web content visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 4
	test CheckPageAuditIconInWidgetPageWithEditWebContentPermission {
		property portal.acceptance = "true";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When a user with NO permissions to edit blogs visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInWidgetPageWithoutEditBlogsPermission {
		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When a user with NO permissions to edit documents visits the page Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInWidgetPageWithoutEditDocumentsPermission {
		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page When the user with NO permissions to edit pages visits the view mode Then the issue icon for displaying the page audit panel is not shown"
	@priority = 3
	test CheckPageAuditIconInWidgetPageWithoutEditPagesPermission {
		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-137227 Given a widget page	When a user with NO permissions to edit web content visits the page	Then the issue icon for displaying the page audit panel shows"
	@priority = 3
	test CheckPageAuditIconInWidgetPageWithoutEditWebContentPermission {
		task ("Create Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Widget Page Name",
				widgetName = "Asset Publisher");
		}

		task ("Login with user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Assert if Audit Page icon is not present") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-widget-page-name");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with permissions for editing the page When the page is blocked from indexing Then the users will see a text with a link to the configuration section: Change the robots.txt setting from the Configuration section of this page."
	@priority = 4
	@uitest
	test CheckPageBlockedFromIndexing {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckPageBlockedFromIndexing";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();

			PageAudit.goToDetailView(failingCheckName = "Page Blocked from Indexing");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Page Blocked from Indexing");

			AssertElementPresent(
				failingText = "Change the robots.txt setting",
				locator1 = "PageAudit#FAILING_ELEMENT_TEXT");
		}
	}

	@description = "LPS-132234 Given the page audit panel detail view and a user with NO permissions for editing the page When the page is blocked from indexing Then the users will see a text: Change the robots.txt setting from the Configuration section of this page."
	@priority = 4
	test CheckPageBlockedFromIndexingWithoutPermission {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#CheckInvalidCanonicalURL";

		task ("Add permissions to Role") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "UPDATE",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Page Audit Test Role");
		}

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(url = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings();
		}

		task ("Login with new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Open Page Audit panel and run it") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.runPageAudit();
		}

		task ("Open detailed view and check text") {
			PageAudit.goToDetailView(failingCheckName = "Page Blocked from Indexing");

			AssertElementPresent(
				key_text = "Change the robots.txt setting from the configuration section of this page.",
				locator1 = "PageAudit#FAILING_CHECK_DETAIL_TEXT");

			AssertElementNotPresent(
				key_text = "Change the robots.txt  setting",
				locator1 = "Link#ANY");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a content page, the issue icon for displaying the page audit panel shows"
	@priority = 5
	test PageAuditContentPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditContentPage";

		task ("Navigate to content page") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPageAuditSidebar();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a display page, the issue icon for displaying the page audit panel shows"
	@priority = 5
	test PageAuditDisplayPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditDisplayPage";

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Web Content");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Add Web Content and check it in its display page") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Test Site Name",
				title = "WC Title");

			ContentDashboard.goToContentDashboard();

			LexiconTable.clickTableEntryColumnLink(
				columnName = "title",
				tableEntry = "");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPageAuditSidebar();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a widget page, the issue icon for displaying the page audit panel shows"
	@priority = 5
	test PageAuditWidgetPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditWidgetPage";

		task ("Add Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Widget Page");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/widget-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPageAuditSidebar();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}
	}

}