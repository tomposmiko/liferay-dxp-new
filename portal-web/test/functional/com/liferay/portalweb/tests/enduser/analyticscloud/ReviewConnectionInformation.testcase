@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Create DXP Site with Commerce") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium Demo");
		}

		task ("Connect the DXP to AC and finish the setup wizard") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(channelName = "Minium Demo Portal");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		// It is not possible to delete properties and data source after LRAC-13389. This functionality should return after LRAC-8040

		//ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.tearDownNonDefaultGroups();

			CommerceJSONChannelsAPI._deleteAllCommerceChannels();
		}
	}

	@description = "Story: LRAC-11044 | Automation ID: LRAC-12677 | Test Summary: Check that you can modify the sync of contacts in the people review sidebar"
	@priority = 4
	test CanModifyContactsSyncInPeopleReviewSidebar {
		task ("Go to the people page in the sidebar") {
			ACDXPSettings.navToSyncedContactDataMenu();
		}

		task ("Disable toggle to sync contacts and accounts") {
			Check.checkToggleSwitch(locator1 = "ACUtils#TOGGLE_ICON");
		}

		task ("Enable toggle to sync contacts") {
			ACDXPSettings.syncContactsData();
		}

		task ("Sync a account group") {
			ACDXPSettings.syncAccountsData(accountGroup = "European Accounts");
		}

		task ("Finish the wizard steps") {
			for (var n : list "1,2") {
				Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");
			}
		}

		task ("Go to the people page in the sidebar") {
			ACDXPSettings.navToSyncedContactDataMenu();
		}

		task ("Check that only sync contacts toggle is enable") {
			for (var syncFieldName : list "Sync All Contacts and Accounts,Sync All Accounts") {
				AssertNotChecked.assertNotCheckedNotVisible(
					key_syncFieldName = ${syncFieldName},
					locator1 = "ACDXPSettings#SYNC_TOGGLE_ICON");
			}

			AssertChecked.assertCheckedNotVisible(
				key_syncFieldName = "Sync All Contacts",
				locator1 = "ACDXPSettings#SYNC_TOGGLE_ICON");
		}

		task ("Check selected account group number") {
			Click(
				key_panel = "Select Accounts",
				locator1 = "Panel#PANEL_COLLAPSED");

			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Account Groups",
				syncNumber = "1 Selected");
		}

		task ("Sync a account group") {
			ACDXPSettings.syncAccountsData(accountGroup = "North American Accounts");
		}

		task ("Check selected account group number") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Account Groups",
				syncNumber = "2 Selected");
		}
	}

	@description = "Story: LRAC-11044 | Automation ID: LRAC-12678 | Test Summary: Check that you can modify selected attributes in the attribute review sidebar"
	@priority = 4
	test CanModifySelectedAttributesInAttributeReviewSidebar {
		task ("Go to the attributes page in the sidebar") {
			ACDXPSettings.navToSyncedAttributes();
		}

		task ("Get the number of attributes currently synced") {
			var syncPeopleNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "People");
		}

		task ("Check the current amount of selected attributes before editing") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "People",
				syncNumber = "${syncPeopleNumberStart} Selected");
		}

		task ("Deselect some attributes") {
			ACDXPSettings.desyncAttributes(
				attributeCategory = "People",
				attributeNameList = "agreedToTermsOfUse,companyId");
		}

		task ("Check that the correct amount of attributes appear as selected after editing") {
			ACDXPSettings.viewIncreaseOrDecreaseSyncNumber(
				attributeCategory = "People",
				currentAttributeNumber = ${syncPeopleNumberStart},
				decreaseAttributeNumber = 2);
		}

		task ("Get the number of attributes currently synced") {
			var syncPeopleNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "People");
		}

		task ("Deselect some attributes") {
			ACDXPSettings.syncAttributes(
				attributeCategory = "People",
				attributeNameList = "facebookId");
		}

		task ("Check that the correct amount of attributes appear as selected after editing") {
			ACDXPSettings.viewIncreaseOrDecreaseSyncNumber(
				attributeCategory = "People",
				currentAttributeNumber = ${syncPeopleNumberStart},
				increaseAttributeNumber = 1);
		}

		task ("Get the number of attributes currently synced") {
			var syncAccountNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "Account");
		}

		task ("Check the current amount of selected attributes before editing") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Account",
				syncNumber = "${syncAccountNumberStart} Selected");
		}

		task ("Deselect some attributes") {
			ACDXPSettings.desyncAttributes(
				attributeCategory = "Account",
				attributeNameList = "defaultBillingAddressId,defaultCPaymentMethodKey");
		}

		task ("Check that the correct amount of attributes appear as selected after editing") {
			ACDXPSettings.viewIncreaseOrDecreaseSyncNumber(
				attributeCategory = "Account",
				currentAttributeNumber = ${syncAccountNumberStart},
				decreaseAttributeNumber = 2);
		}

		task ("Get the number of attributes currently synced") {
			var syncAccountNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "Account");
		}

		task ("Deselect some attributes") {
			ACDXPSettings.syncAttributes(
				attributeCategory = "Account",
				attributeNameList = "externalReferenceCode");
		}

		task ("Check that the correct amount of attributes appear as selected after editing") {
			ACDXPSettings.viewIncreaseOrDecreaseSyncNumber(
				attributeCategory = "Account",
				currentAttributeNumber = ${syncAccountNumberStart},
				increaseAttributeNumber = 1);
		}

		task ("Get the number of attributes currently synced") {
			var syncProductsNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "Products");
		}

		task ("Check the current amount of selected attributes before editing") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Products",
				syncNumber = "${syncProductsNumberStart} Selected");
		}

		task ("Get the number of attributes currently synced") {
			var syncOrderNumberStart = ACDXPSettings.getSyncNumberPreview(attributeCategory = "Order");
		}

		task ("Check that the correct amount of attributes appear as selected after editing") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Order",
				syncNumber = "${syncOrderNumberStart} Selected");
		}
	}

	@description = "Story: LRAC-11044 | Automation ID: LRAC-12676 | Test Summary: Check that you can modify the sites and channels synchronized in the property review sidebar"
	@priority = 4
	test CanModifySitesAndChannelsSyncInPropertyReviewSidebar {
		var newChannelName1 = "AC";
		var newChannelName2 = "DXP";

		task ("Create two new channels") {
			for (var channelName : list "${newChannelName1},${newChannelName2}") {
				CommerceJSONChannelsAPI._addChannel(
					channelName = ${channelName},
					channelType = "site",
					currencyCode = "USD");
			}
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Go to the properties page in the sidebar") {
			ACDXPSettings.navToSyncedSitesMenu();
		}

		task ("Check that the number of channels and sites matches the selected ones") {
			ACDXPSettings.viewSyncedChannelsAndSitesNumber(
				propertyName = ${assignedPropertyName},
				syncedChannelsNumber = 1,
				syncedSitesNumber = 2);
		}

		task ("Assign channels to the property") {
			for (var channelName : list "${newChannelName1},${newChannelName2}") {
				ACDXPSettings.syncChannel(
					channelName = ${channelName},
					propertyName = ${assignedPropertyName});
			}
		}

		task ("Assign sites to the property") {
			ACDXPSettings.syncSites(
				propertyName = ${assignedPropertyName},
				siteName = "Site Name");
		}

		task ("Check that the number of channels and sites matches the selected ones") {
			ACDXPSettings.viewSyncedChannelsAndSitesNumber(
				propertyName = ${assignedPropertyName},
				syncedChannelsNumber = 3,
				syncedSitesNumber = 3);
		}
	}

}