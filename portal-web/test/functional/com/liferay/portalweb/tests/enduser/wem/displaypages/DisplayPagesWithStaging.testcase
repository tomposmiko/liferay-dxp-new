@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Display Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Activate local live staging") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name");

			Staging.activateStagingCP(siteName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "User can only administrate display pages in staging view."
	@priority = "5"
	test AssertDisplayPagesAreOnlyEditableInStagingView {
		task ("Assert display pages admin is accessible in the staging site") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

			AssertVisible(
				key_navItem = "Display Page Templates",
				locator1 = "NavBar#NAV_ITEM_LINK");
		}

		task ("Assert display pages admin is not accessible in the live site") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name");

			AssertElementNotPresent(
				key_navItem = "Display Page Templates",
				locator1 = "NavBar#NAV_ITEM_LINK");
		}
	}

	@description = "This tests one of the workarounds of LPS-92522."
	@priority = "5"
	test PublishDisplayPageWithFragment {
		DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name-staging");

		DisplayPageTemplatesAdmin.addDisplayPage(displayPageName = "Display Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Sections",
			fragmentName = "Banner Center");

		Button.clickPublish();

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		AssertConsoleTextNotPresent(value1 = "PortletDataException");
	}

}