@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Navigation";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add three pages to the site via JSON") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page 1");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page 2");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page 3");
		}

		task ("Activate local live staging") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name");

			Staging.activateStagingCP(siteName = "Test Site Name");
		}

		task ("Add a navigation menu") {
			JSONSitenavigation.addSiteNavigationMenu(
				groupName = "Test Site Name (Staging)",
				site = "false",
				siteNavigationMenuName = "Test Navigation Menu Name");

			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoEntry(rowEntry = "Test Navigation Menu Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Navigation menus are only editable in the staging site and cannot be edited in the live site."
	@priority = 5
	test CannotEditNavigationMenuInLive {
		property portal.acceptance = "true";

		task ("Publish to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to navigation menus admin in the staging site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");
		}

		task ("Assert the navigation menu is editable in the staging site") {
			AssertVisible(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");

			LexiconEntry.openEntryMenu(rowEntry = "Test Navigation Menu Name");

			AssertVisible(
				key_menuItem = "Edit",
				locator1 = "MenuItem#ANY_MENU_ITEM");
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu is not editable in the live site") {
			AssertVisible(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

			AssertElementNotPresent(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");

			LexiconEntry.openEntryMenu(rowEntry = "Test Navigation Menu Name");

			AssertElementNotPresent(
				key_menuItem = "Edit",
				locator1 = "MenuItem#ANY_MENU_ITEM");
		}
	}

	@description = "Deleted Navigation menus will not appear in live after publish. This case covers LPS-89358."
	@priority = 3
	test DeletedNavigationMenuNotInLiveAfterPublish {
		task ("Add the first page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1");
		}

		task ("Add a URL item to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "URL",
				url = "https://www.liferay.com/",
				urlName = "Liferay");
		}

		task ("Publish to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu") {
			LexiconEntry.viewEntryName(rowEntry = "Test Navigation Menu Name");
		}

		task ("Navigate to navigation menus admin in the staging site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");
		}

		task ("Delete the navigation menu") {
			LexiconEntry.delete(
				menuItem = "Delete",
				rowEntry = "Test Navigation Menu Name");
		}

		task ("Publish to live") {
			Navigator.gotoStagedSitePage(
				pageName = "Test Page 1",
				siteName = "Test Site Name");

			Staging.gotoPublishToLive();

			Staging.publishToLive();
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu was deleted") {
			LexiconEntry.viewNoEntry(rowEntry = "Test Navigation Menu Name");
		}
	}

	@description = "Edits to navigation menus will appear in live until after publish. This test has the Navigation Menu widget display a specific navigation menu and covers LPS-86525."
	@priority = 5
	test PublishEditedNavigationMenu {
		property portal.acceptance = "true";

		task ("Add the first page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1");
		}

		task ("Add a URL item to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "URL",
				url = "https://www.liferay.com/",
				urlName = "Liferay");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use the navigation menu") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.chooseMenu(menuName = "Test Navigation Menu Name");

			Portlet.saveAndCloseConfig();
		}

		task ("Publish the site to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to edit the navigation menu in the staging site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoEntry(rowEntry = "Test Navigation Menu Name");
		}

		task ("Add the third page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 3");
		}

		task ("Delete the first page from the navigation menu") {
			NavigationMenusAdmin.deleteItem(itemName = "Test Page 1");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Assert the changes are applied in the staging site - the Navigation Menu widget has the URL item and third page but does not have the first page") {
			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the changes are not applied in the live site - the Navigation Menu widget has the first page and URL item but does not have the third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Publish the site to live and flag the 'Replicate Individual Deletions' checkbox while publishing") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoAdd();

			Check(locator1 = "StagingPublishToLive#DELETIONS_REPLICATE_INDIVIDUAL_DELETIONS_CHECKBOX");

			AssertClickNoError(
				locator1 = "Staging#STAGING_PUBLISH_TO_LIVE_BUTTON",
				value1 = "Publish to Live");

			Pause(locator1 = 30000);

			AssertTextEquals(
				locator1 = "Staging#PROCESS_RESULT",
				value1 = "SUCCESSFUL");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the changes are applied in the live site - the Navigation Menu widget has the URL item and third page but does not have the first page") {
			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name/test-page-3");

			Click(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertLocation(value1 = "https://www.liferay.com/");
		}
	}

	@description = "Edits to navigation menus will appear in live until after publish. This test has the Navigation Menu widget display the primary navigation menu and covers LPS-86529."
	@priority = 5
	test PublishEditedPrimaryNavigationMenu {
		property portal.acceptance = "true";

		task ("Add the first page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1");
		}

		task ("Add a URL item to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "URL",
				url = "https://www.liferay.com/",
				urlName = "Liferay");
		}

		task ("Mark the navigation menu as Primary Navigation") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");

			NavigationMenusAdmin.configureMenuType(
				menuType = "Primary Navigation",
				navigationMenu = "Test Navigation Menu Name");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use Primary Navigation") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.selectNavigation(menuType = "Primary Navigation");

			Portlet.saveAndCloseConfig();
		}

		task ("Publish the site to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to edit the navigation menu in the staging site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoEntry(rowEntry = "Test Navigation Menu Name");
		}

		task ("Add the third page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 3");
		}

		task ("Delete the first page from the navigation menu") {
			NavigationMenusAdmin.deleteItem(itemName = "Test Page 1");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Assert the changes are applied in the staging site - the Navigation Menu widget has the URL item and third page but does not have the first page") {
			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the changes are not applied in the live site - the Navigation Menu widget has the first page and URL item but does not have the third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Publish the site to live and flag the 'Replicate Individual Deletions' checkbox while publishing") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoAdd();

			Check(locator1 = "StagingPublishToLive#DELETIONS_REPLICATE_INDIVIDUAL_DELETIONS_CHECKBOX");

			AssertClickNoError(
				locator1 = "Staging#STAGING_PUBLISH_TO_LIVE_BUTTON",
				value1 = "Publish to Live");

			Pause(locator1 = 30000);

			AssertTextEquals(
				locator1 = "Staging#PROCESS_RESULT",
				value1 = "SUCCESSFUL");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the changes are applied in the live site - the Navigation Menu widget has the URL item and third page but does not have the first page") {
			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name/test-page-3");

			Click(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertLocation(value1 = "https://www.liferay.com/");
		}
	}

	@description = "Navigation menus can be published to live and do not appear in live until published. This is a use case for LPS-86142 and LPS-112993."
	@priority = 5
	test PublishNavigationMenu {
		property portal.acceptance = "true";

		task ("Add the first page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1");
		}

		task ("Add a URL item to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "URL",
				url = "https://www.liferay.com/",
				urlName = "Liferay");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use the navigation menu") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.chooseMenu(menuName = "Test Navigation Menu Name");

			Portlet.saveAndCloseConfig();
		}

		task ("Assert the Navigation Menu widget has the first page and the URL item but does not have any other pages") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name-staging/test-page-1");

			AssertVisible(
				key_href = "https://www.liferay.com/",
				key_pageName = "Liferay",
				locator1 = "Home#PAGE_HREF");
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu does not exist in the live site") {
			AssertElementNotPresent(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the Navigation Menu widget is still using the site page hierarchy") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");
		}

		task ("Publish the site to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu now exists in the live site") {
			AssertVisible(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		task ("Navigate to the live site via Applications Menu") {
			ApplicationsMenu.gotoSite(site = "Test Site Name");
		}

		task ("Assert the Navigation Menu widget is display the navigation menu and not the site hierarchy - the navigation menu has the first page and the URL item but does not have the second page or third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name/test-page-1");

			Click(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertLocation(value1 = "https://www.liferay.com/");
		}
	}

	@description = "Publishing navigation menus should not also publish pages. When publishing only navigation menus, pages that exist in the staging site but do not exist in the live site should not appear in the Navigation Menu widget. This test has the Navigation Menu widget display a specific navigation menu and covers LPS-86525."
	@priority = 5
	test PublishNavigationMenuWithDeletedPages {
		property portal.acceptance = "true";

		task ("Add the first page, second page, and third page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1,Test Page 2,Test Page 3");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use the navigation menu") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.chooseMenu(menuName = "Test Navigation Menu Name");

			Portlet.saveAndCloseConfig();
		}

		task ("Navigate to pages admin in the live site") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name");
		}

		task ("Delete the third page from the live site") {
			SitePages.deletePage(pageName = "Test Page 3");
		}

		task ("Publish the site to live but do not publish the third page") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoAdd();

			if (IsElementPresent(key_entryName = "Test Page 3", locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_CHECKED")) {
				Click(
					key_entryName = "Test Page 3",
					locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_CHECKED");
			}

			AssertVisible(
				key_entryName = "Test Page 3",
				locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_UNCHECKED");

			AssertClickNoError(
				locator1 = "Staging#STAGING_PUBLISH_TO_LIVE_BUTTON",
				value1 = "Publish to Live");

			Pause(locator1 = 30000);

			AssertTextEquals(
				locator1 = "Staging#PROCESS_RESULT",
				value1 = "SUCCESSFUL");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the third page was not published - the Navigation Menu widget has the first page and second page but does not have the third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}
	}

	@description = "Navigation menus can be published to live and do not appear in live until published. This test has the Navigation Menu widget display the primary navigation menu."
	@priority = 5
	test PublishPrimaryNavigationMenu {
		property portal.acceptance = "true";

		task ("Add the first page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1");
		}

		task ("Add a URL item to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "URL",
				url = "https://www.liferay.com/",
				urlName = "Liferay");
		}

		task ("Mark the navigation menu as Primary Navigation") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");

			NavigationMenusAdmin.configureMenuType(
				menuType = "Primary Navigation",
				navigationMenu = "Test Navigation Menu Name");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use Primary Navigation") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.selectNavigation(menuType = "Primary Navigation");

			Portlet.saveAndCloseConfig();
		}

		task ("Assert the Navigation Menu widget has the first page and the URL item but does not have any other pages") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name-staging/test-page-1");

			AssertVisible(
				key_href = "https://www.liferay.com/",
				key_pageName = "Liferay",
				locator1 = "Home#PAGE_HREF");
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu does not exist in the live site") {
			AssertElementNotPresent(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the Navigation Menu widget is still using the site page hierarchy") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");
		}

		task ("Publish the site to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			Staging.publishCustomPublication();
		}

		task ("Navigate to navigation menus admin in the live site") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");
		}

		task ("Assert the navigation menu now exists in the live site") {
			AssertVisible(
				key_rowEntry = "Test Navigation Menu Name",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the Navigation Menu widget is display the navigation menu and not the site hierarchy - the navigation menu has the first page and the URL item but does not have the second page or third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}

		task ("Assert the links in the Navigation Menu widget work properly") {
			Click(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertLocation.assertPartialLocation(value1 = "web/test-site-name/test-page-1");

			Click(
				key_pageName = "Liferay",
				locator1 = "Home#PAGE");

			AssertLocation(value1 = "https://www.liferay.com/");
		}
	}

	@description = "Publishing navigation menus should not also publish pages. When publishing only navigation menus, pages that exist in the staging site but do not exist in the live site should not appear in the Navigation Menu widget. This test has the Navigation Menu widget display the primary navigation menu."
	@priority = 5
	test PublishPrimaryNavigationMenuWithDeletedPages {
		property portal.acceptance = "true";

		task ("Add the first page, second page, and third page to the navigation menu") {
			NavigationMenusAdmin.addItem(
				item = "Page",
				pageNames = "Test Page 1,Test Page 2,Test Page 3");
		}

		task ("Mark the navigation menu as Primary Navigation") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use Primary Navigation") {
			NavigationMenusAdmin.configureMenuType(
				menuType = "Primary Navigation",
				navigationMenu = "Test Navigation Menu Name");
		}

		task ("Navigate to the Navigation Menu widget in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name-staging");
		}

		task ("Configure the Navigation Menu widget to use Primary Navigation") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.selectNavigation(menuType = "Primary Navigation");

			Portlet.saveAndCloseConfig();
		}

		task ("Navigate to pages admin in the live site") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name");
		}

		task ("Delete the third page from the live site") {
			SitePages.deletePage(pageName = "Test Page 3");
		}

		task ("Publish the site to live but unflag other checkboxes so only the Navigation Menu widget is published to live") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

			LexiconEntry.gotoAdd();

			if (IsElementPresent(key_entryName = "Test Page 3", locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_CHECKED")) {
				Click(
					key_entryName = "Test Page 3",
					locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_CHECKED");
			}

			AssertVisible(
				key_entryName = "Test Page 3",
				locator1 = "StagingPublishToLive#PAGES_TO_PUBLISH_CHECKBOX_UNCHECKED");

			AssertClickNoError(
				locator1 = "Staging#STAGING_PUBLISH_TO_LIVE_BUTTON",
				value1 = "Publish to Live");

			Pause(locator1 = 30000);

			AssertTextEquals(
				locator1 = "Staging#PROCESS_RESULT",
				value1 = "SUCCESSFUL");
		}

		task ("Navigate to the Navigation Menu widget in the live site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");
		}

		task ("Assert the third page was not published - the Navigation Menu widget has the first page and second page but does not have the third page") {
			AssertVisible(
				key_pageName = "Test Page 1",
				locator1 = "Home#PAGE");

			AssertVisible(
				key_pageName = "Test Page 2",
				locator1 = "Home#PAGE");

			AssertElementNotPresent(
				key_pageName = "Test Page 3",
				locator1 = "Home#PAGE");
		}
	}

	@description = "This is a use case for LPS-113994. The Naviation Menu is able to display more than 2 sublevels page hierarchy when use the default template after enable Live."
	@priority = 3
	test ShowMoreThanTwoSublevelsWhenSelectPublicPagesHierarchyAndBarMinimallyStyled {
		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Site Name");
		}

		task ("Add a widget page with 3 sublevels child pages") {
			JSONLayout.addPublicLayout(
				groupName = "Site Name",
				layoutName = "Home");

			JSONLayout.addPublicLayout(
				groupName = "Site Name",
				layoutName = "Child Page",
				parentLayoutName = "Home");

			JSONLayout.addPublicLayout(
				groupName = "Site Name",
				layoutName = "Child Child Page",
				parentLayoutName = "Child Page");

			JSONLayout.addPublicLayout(
				groupName = "Site Name",
				layoutName = "Child Child Child Page",
				parentLayoutName = "Child Child Page");
		}

		task ("Activate local live staging") {
			Staging.openStagingAdmin(siteURLKey = "site-name");

			Staging.activateStagingCP(siteName = "Site Name");
		}

		task ("Navigate to Home in Staging site") {
			Navigator.gotoStagedSitePage(
				pageName = "Home",
				siteName = "Site Name");
		}

		task ("Assert Select Public Pages Hierarchy and Bar minimally styled") {
			NavigationMenusWidget.gotoNavigationMenuWidgetConfig();

			NavigationMenusWidget.selectNavigation(menuType = "Public Pages Hierarchy");

			Pause(locator1 = 3000);

			NavigationMenusWidget.selectDisplayTemplate(templateName = "Bar minimally styled");

			Pause(locator1 = 3000);

			Portlet.saveAndCloseConfig();
		}

		task ("Navigate to Child Page via Navigation Menu widget") {
			NavigationMenusWidget.gotoSublevel(
				itemName = "Child Page",
				pageName = "Home",
				type = "Drop Down");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "Child Page");
		}

		task ("Navigate to Home in Live site") {
			Navigator.gotoSitePage(
				pageName = "Home",
				siteName = "Site Name");
		}

		task ("Navigate to Child Child Page via Navigation Menu widget") {
			NavigationMenusWidget.gotoSublevel(
				itemName = "Child Child Page",
				pageName = "Home",
				type = "Drop Down");

			AssertLocation.assertPartialLocation(value1 = "web/site-name/child-child-page");
		}
	}

}