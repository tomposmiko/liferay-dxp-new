@component-name = "portal-util-misc"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Nested Portlets";
	property testray.main.component.name = "Nested Portlets";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "5"
	test ViewWCDNestedPortlets {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Nested Portlets Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "Nested Portlets Page",
			layoutTemplate = "1 Column");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Nested Portlets Page",
			widgetName = "Nested Applications");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Nested Portlets Page",
			widgetName = "Web Content Display");

		Navigator.gotoPage(pageName = "Nested Portlets Page");

		NestedPortlets.viewConfigurationDefaultLayoutTemplate(
			defaultColumnName = "2 Columns (50/50)",
			portletName = "Nested Applications");

		NestedPortlets.dragAndDropPortletToPortletColumnPG(
			columnNumberFrom = "1",
			nestedColumnNumberTo = "1",
			portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Nested Portlets Page");

		NestedPortlets.viewPG(
			nestedColumnNumber = "1",
			portletName = "Web Content Display");
	}

}