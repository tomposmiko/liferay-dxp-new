@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONPublications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Publications.disablePublications();
		}
	}

	@priority = "4"
	test PublishPublicationWithDeletedListAndRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Navigator.openURL();

		var changeTitle = JSONDDL.getRecordId(
			ddlListName = "List Name",
			groupName = "Guest");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.deleteCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Text Field");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.deleteCP(ddlListName = "List Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.deleteCP(ddlDataDefinitionName = "Data Definition");

		PublicationsNavigator.gotoReviewChanges(publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Structure",
			changeSite = "Guest",
			changeTitle = "Data Definition",
			changeType = "Deleted",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Asset",
			changeSite = "Guest",
			changeTitle = "New Data Definition for List: List Name",
			changeType = "Deleted",
			changeUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record",
			changeSite = "Guest",
			changeTitle = "${changeTitle}",
			changeType = "Deleted",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record Set",
			changeSite = "Guest",
			changeTitle = "List Name",
			changeType = "Deleted",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Structure",
			changeSite = "Guest",
			changeTitle = "Data Definition",
			changeType = "Deleted",
			changeUser = "Test Test");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		LexiconEntry.viewNoEntry(rowEntry = "List Name");
	}

	@priority = "3"
	test PublishPublicationWithDisplayTemplate {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPublicPage(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLTemplate.addDisplayTemplateTemplateViaDDLDisplayPG(
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Display Template Name",
			ddlDisplayTemplateScript = "Text");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		DDLTemplate.selectDisplayTemplateViaDDLDisplayPG(ddlDisplayTemplateName = "Display Template Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		AssertTextPresent(
			locator1 = "//div[@class='portlet-body']",
			value1 = "Text");

		PublicationsNavigator.gotoReviewChanges();

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Template",
			changeSite = "Guest",
			changeTitle = "Display Template Name",
			changeType = "Added",
			changeUser = "Test Test");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		AssertTextPresent(
			locator1 = "//div[@class='portlet-body']",
			value1 = "Text");
	}

	@priority = "4"
	test PublishPublicationWithEditedListAndRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text");

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text Edited",
			fieldName = "Text");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "03/30/2021",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.editCP(
			ddlListDescriptionEdit = "List Description Edit",
			ddlListName = "List Name",
			ddlListNameEdit = "List Name Edit");

		PublicationsNavigator.gotoReviewChanges(publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Structure",
			changeSite = "Guest",
			changeTitle = "Data Definition",
			changeType = "Modified",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record Set",
			changeSite = "Guest",
			changeTitle = "List Name Edit",
			changeType = "Modified",
			changeUser = "Test Test");

		var changeTitle = JSONDDL.getRecordId(
			ddlListName = "List Name Edit",
			groupName = "Guest");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record",
			changeSite = "Guest",
			changeTitle = "${changeTitle}",
			changeType = "Modified",
			changeUser = "Test Test");

		PublicationsNavigator.gotoViewChangeDiff(
			changeCategory = "Dynamic Data Lists Record",
			changeTitle = "${changeTitle}");

		PublicationsChanges.viewDDLRecordChangeDiff(
			diffAddedValue = "Edit",
			fieldName = "Text",
			fieldValueInProduction = "Record Text",
			fieldValueInPublication = "Record Text Edited",
			publicationName = "Publication Name");

		PublicationsChanges.viewDDLRecordChangeDiff(
			diffAddedValue = "3/30/21",
			fieldName = "Date",
			fieldValueInPublication = "3/30/21",
			publicationName = "Publication Name");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name Edit");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Record Text Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "3"
	test PublishPublicationWithFormTemplate {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPublicPage(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLTemplate.addFormTemplateViaDDLDisplayPG(ddlFormTemplateName = "Form Template Name");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DDLTemplate.saveFormTemplateViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		DDLTemplate.selectFormTemplateViaDDLDisplayPG(ddlFormTemplateName = "Form Template Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.viewFieldFormTemplateSpecific(field = "Separator");

		PublicationsNavigator.gotoReviewChanges();

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Template",
			changeSite = "Guest",
			changeTitle = "Form Template Name",
			changeType = "Added",
			changeUser = "Test Test");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.viewFieldFormTemplateSpecific(field = "Separator");
	}

	@priority = "4"
	test PublishPublicationWithNewListAndRecord {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.png",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		PortletEntry.publish();

		PublicationsNavigator.gotoReviewChanges(
			gotoPublicationsAdmin = "true",
			publicationName = "Publication Name");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Structure",
			changeSite = "Guest",
			changeTitle = "Data Definition",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Asset",
			changeOrder = "2",
			changeSite = "Guest",
			changeTitle = "New Data Definition for List: List Name",
			changeType = "Added",
			changeUser = "Test Test",
			showAllItems = "true");

		var changeTitle = JSONDDL.getRecordId(
			ddlListName = "List Name",
			groupName = "Guest");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record",
			changeSite = "Guest",
			changeTitle = "${changeTitle}",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Lists Record Set",
			changeSite = "Guest",
			changeTitle = "List Name",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChanges(
			changeCategory = "Dynamic Data Mapping Structure",
			changeSite = "Guest",
			changeTitle = "Data Definition",
			changeType = "Added",
			changeUser = "Test Test");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Document_1.png",
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media");
	}

	@priority = "4"
	test ResolveConflictingPublicationsByDiscarding {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		JSONPublications.addPublication(publicationName = "Publication Name 1");

		JSONPublications.selectPublication(publicationName = "Publication Name 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text 1 Edited",
			fieldName = "Text");

		PortletEntry.publish();

		JSONPublications.addPublication(publicationName = "Publication Name 2");

		JSONPublications.selectPublication(publicationName = "Publication Name 2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text 2 Edited",
			fieldName = "Text");

		PortletEntry.publish();

		JSONPublications.publishPublication(publicationName = "Publication Name 2");

		Publications.viewPublicationPublished(publicationName = "Publication Name 2");

		PublicationsNavigator.gotoPublish(
			gotoPublicationsAdmin = "true",
			publicationName = "Publication Name 1");

		var changeTitle = JSONDDL.getRecordId(
			ddlListName = "List Name",
			groupName = "Guest");

		PublicationsChanges.discardChanges(
			changeCategory = "Dynamic Data Lists Record",
			changeTitle = "${changeTitle}",
			conflictingChanges = "true",
			entryTitle = "Dynamic Data Lists Record");

		JSONPublications.publishPublication(publicationName = "Publication Name 1");

		Publications.viewPublicationPublished(publicationName = "Publication Name 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Record Text 2 Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

}