@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			DMDocument.tearDownCP();

			Site.tearDownCP();
		}
	}

	@description = "This test ensures that user is not able to upload the mimetypes files that bigger than the limit set when the admin sets a size limit for multiple mimetypes."
	@priority = "4"
	test CanLimitMultipleMimeTypesSize {
		property test.name.skip.portal.instance = "DMMimeTypeLimits#CanLimitMultipleMimeTypesSize";

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "40960",
			mimeTypeValue = "image/jpeg");

		DMDocument.updateMimeTypeSizeLimit(
			indexNumber = "2",
			maximumFileSizeValue = "30720",
			mimeTypeValue = "application/pdf");

		DMDocument.updateMimeTypeSizeLimit(
			indexNumber = "2",
			maximumFileSizeValue = "20480",
			mimeTypeValue = "application/msword");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addMultipleCP(
			dmDocumentFileFailed = "Document_1.doc,large_file.pdf,Commerce_Blue.jpg",
			dmDocumentFileList = "Commerce_Black.jpg,Commerce_Blue.jpg,Document_2.pdf,large_file.pdf,Document_1.doc,Document_3.docx",
			validationError = "Please enter a file with a valid file size no larger than 20 KB,Please enter a file with a valid file size no larger than 30 KB,Please enter a file with a valid file size no larger than 40 KB");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		for (var fileName : list "Document_1,large_file,Commerce_Blue") {
			LexiconCard.viewCardNotPresent(card = "${fileName}");
		}

		for (var fileName : list "Commerce_Black,Document_3,Document_2") {
			LexiconCard.viewCardTitle(card = "${fileName}");
		}
	}

	@description = "This test ensures that the mime typy size limit setting only take effects in current site."
	@priority = "4"
	@uitest
	test CanLimitSizeOnlyInCurrentSite {
		JSONGroup.addGroup(groupName = "Site Name");

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "20480",
			mimeTypeValue = "image/jpeg",
			siteSettings = "true",
			siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Site Name",
			siteURLKey = "site-name",
			validationError = "Please enter a file with a valid file size no larger than 20 KB");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Site Name",
			siteURLKey = "site-name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		LexiconCard.viewNoCardThumbnail(card = "Document_2.jpg");

		LexiconCard.viewCardThumbnail(card = "Document_1.jpg");

		Navigator.openSiteURL(siteName = "Guest");

		DMDocument.addCP(
			dmDocumentFile = "Document_4.jpg",
			dmDocumentTitle = "Document_4.jpg",
			groupName = "Guest",
			siteURLKey = "guest");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconCard.viewCardThumbnail(card = "Document_4.jpg");
	}

	@description = "This test ensures that uploaded files will be limited in size in a depot when setting the limit of a mimetype using the type and a wildcard."
	@priority = "4"
	test CanLimitSizeUsingWildcardInDepot {
		OSGiConfig.copyOSGiConfigFile(
			osgiConfigFileBaseDir = "test/functional/com/liferay/portalweb/tests/enduser/documentmanagement/documentsadministration/dependencies",
			osgiConfigFileName = "com.liferay.document.library.internal.configuration.DLSizeLimitConfiguration.config");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.xlsx",
			dmDocumentTitle = "DM Document Title");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_3.xls",
			dmDocumentTitle = "DM Document Title Can not upload",
			validationError = "Please enter a file with a valid file size no larger than 20 KB.");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		LexiconCard.viewCardNotPresent(card = "DM Document Title Can not upload");

		LexiconCard.viewCardTitle(card = "DM Document Title");
	}

	@description = "This test ensures that uploaded files will be limited in size in a site when setting the limit of a mimetype using the type and a wildcard."
	@priority = "4"
	test CanLimitSizeUsingWildcardInSite {
		OSGiConfig.copyOSGiConfigFile(
			osgiConfigFileBaseDir = "test/functional/com/liferay/portalweb/tests/enduser/documentmanagement/documentsadministration/dependencies",
			osgiConfigFileName = "com.liferay.document.library.internal.configuration.DLSizeLimitConfiguration.config");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.docx",
			dmDocumentTitle = "DM Document Title");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "DM Document Title Can not upload",
			validationError = "Please enter a file with a valid file size no larger than 20 KB.");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconCard.viewCardNotPresent(card = "DM Document Title Can not upload");

		LexiconCard.viewCardTitle(card = "DM Document Title");
	}

	@description = "This test ensures that when setting the Mime Type Size Limit at different levels(Instance Settings and System Settings), the lower limit from Instance Settings will take effect."
	@priority = "4"
	@uitest
	test InstanceTakesEffectOverSystemLimit {
		property test.name.skip.portal.instance = "DMMimeTypeLimits#InstanceTakesEffectOverSystemLimit";

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "30720",
			mimeTypeValue = "application/pdf");

		DMNavigator.openToConfigInInstanceSettings(portlet = "Documents and Media Size Limits");

		DMDocument.updateMimeTypeSizeLimit(
			instanceSettings = "true",
			maximumFileSizeValue = "10240",
			mimeTypeValue = "application/pdf");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.pdf",
			dmDocumentTitle = "Document_1.pdf",
			validationError = "Please enter a file with a valid file size no larger than 10 KB");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		LexiconCard.viewCardNotPresent(card = "Document_1.pdf");
	}

	@description = "This test ensures that when setting the multiple mime type size limit at site and instance levels, the lower limit from the site will take effect."
	@priority = "3"
	test SiteSizeLimitTakesEffectOverInstanceSettingsWithMultipleLimits {
		DMDocument.updateMimeTypeSizeLimit(
			instanceSettings = "true",
			maximumFileSizeValue = "40960",
			mimeTypeValue = "image/jpeg");

		DMDocument.updateMimeTypeSizeLimit(
			indexNumber = "2",
			instanceSettings = "true",
			maximumFileSizeValue = "40960",
			mimeTypeValue = "image/gif");

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "20480",
			mimeTypeValue = "image/png",
			siteSettings = "true",
			siteURLKey = "guest");

		DMDocument.updateMimeTypeSizeLimit(
			indexNumber = "2",
			maximumFileSizeValue = "10240",
			mimeTypeValue = "image/*",
			siteSettings = "true",
			siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Guest",
			siteURLKey = "guest",
			validationError = "Please enter a file with a valid file size no larger than 10 KB");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconCard.viewNoCardThumbnail(card = "Document_2.jpg");
	}

	@description = "This test ensures that when setting the Mime Type Size Limit at different levels(Site, System Settings and Instance Settings), the lower limit from the site will take effect."
	@priority = "4"
	@uitest
	test SiteSizeLimitTakesEffectOverSystemAndInstanceSettings {
		property test.name.skip.portal.instance = "DMMimeTypeLimits#SiteSizeLimitTakesEffectOverSystemAndInstanceSettings";

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "51200",
			mimeTypeValue = "image/jpeg");

		DMNavigator.openToConfigInInstanceSettings(portlet = "Documents and Media Size Limits");

		SystemSettings.viewInputText(
			fieldLabel = "Mime Type",
			fieldValue = "image/jpeg");

		SystemSettings.viewNumberInputText(
			fieldLabel = "Maximum File Size",
			fieldValue = "51200");

		DMDocument.updateMimeTypeSizeLimit(
			instanceSettings = "true",
			maximumFileSizeValue = "30720",
			mimeTypeValue = "image/jpeg");

		DMNavigator.openToConfigInSiteSettings(
			portlet = "Documents and Media Size Limits",
			siteURLKey = "guest");

		SystemSettings.viewInputText(
			fieldLabel = "Mime Type",
			fieldValue = "image/jpeg");

		SystemSettings.viewNumberInputText(
			fieldLabel = "Maximum File Size",
			fieldValue = "30720");

		DMDocument.updateMimeTypeSizeLimit(
			maximumFileSizeValue = "20480",
			mimeTypeValue = "image/jpeg",
			siteSettings = "true",
			siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Guest",
			siteURLKey = "guest",
			validationError = "Please enter a file with a valid file size no larger than 20 KB");

		LexiconCard.viewNoCardThumbnail(card = "Document_2.jpg");
	}

}