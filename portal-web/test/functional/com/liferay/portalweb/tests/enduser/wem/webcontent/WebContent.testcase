@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			WebContentTemplates.tearDownCP();

			WebContentStructures.tearDownCP();
		}
	}

	@priority = "5"
	test AddFolder {
		property testray.component.names = "Training,Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);
	}

	@priority = "5"
	test AddStructures {
		property testray.component.names = "Training,Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1"
		);

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2"
		);

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3"
		);

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 3");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 1");

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 2");

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 3");

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}
	}

	@description = "This is a use case for LPS-77387."
	@priority = "4"
	test AddStructureViaLocaleURL {
		property test.name.skip.portal.instance = "WebContent#AddStructureViaLocaleURL";
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/en/");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		Navigator.ensureLocaleURL(locale = "en");

		WebContentStructures.addName(structureName = "WC Structure Name");

		Panel.expandPanel(panel = "Details");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		SelectFrame(value1 = "relative=top");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		AssertElementNotPresent(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_2",
			key_ddlDataDefinitionName = "WC Structure Name"
		);
	}

	@description = "This is a use case for LPS-52248."
	@priority = "4"
	test AddStructureWithSeparatorField {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		AssertConsoleTextNotPresent(
			value1 = "Expression Separator is instead a com.liferay.portal.freemarker.LiferayTemplateModel"
		);

		AssertConsoleTextNotPresent(value1 = "freemarker.core.NonStringException");
	}

	@priority = "4"
	test AddStructureWithSubfield {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentInteger = "123",
			webContentText = "Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "Text",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewNestedField(
			fieldName = "Text",
			nestedField = "Integer",
			nestedFieldData = "123"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name");

		for (var structureFieldName : list "Text,Integer") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}
	}

	@priority = "4"
	test AddStructureWithUnlocalizableFields {
		property testray.component.names = "Localization,Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		for (var structureFieldName : list "Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		for (var structureFieldName : list "Text Box") {
			DynamicDataMapping.editFieldLocalizable(
				fieldFieldLabel = "${structureFieldName}"
			);
		}

		WebContentStructures.saveCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text,Text Box",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "Text",
			webContentTextBox = "Text Box",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		WebContent.addCP(webContentTitle = "Title Spanish");

		FormFields.editText(fieldName = "Text", fieldValue = "Text Spanish");

		FormFields.editTextMultiline(
			fieldName = "TextBox",
			fieldValue = "Text Box Spanish"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewUnlocalizableTextBox(
			editLocalizedTextBox = "Text Box Unlocalized",
			localizedText = "Text Spanish",
			localizedTextBox = "Text Box",
			localizedTitle = "Title Spanish",
			webContentTextBox = "Text Box",
			webContentTitle = "WC WebContent Title"
		);
	}

	@description = "This is a use case for LPS-69560."
	@priority = "5"
	test AddStructureWithWebContentAndGeolocationFields {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 1 Content",
			webContentTitle = "WC WebContent 1 Title"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent"
		);

		DynamicDataMapping.addField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			fieldName = "WebContent",
			webContentSelectWCFile = "WC WebContent 1 Title",
			webContentTitle = "WC WebContent 2 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 2 Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent 2 Title");

		WebContent.viewCPWithoutContentField(
			field = "Web Content",
			fieldData = "WC WebContent 1 Title",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent",
			webContentTitle = "WC WebContent 2 Title"
		);

		WebContent.viewCPWithoutContentField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation",
			webContentTitle = "WC WebContent 2 Title"
		);
	}

	@priority = "5"
	test AddTemplateWithStructure {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name",
			templateScript = '''${Text.getData()}'''
		);
	}

	@priority = "5"
	test AddTemplateXSL {
		property testray.component.names = "Training,Web Content Administration,XSL";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateFile = "xsl_template.xsl",
			templateLanguage = "xsl",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateLanguage = "xsl",
			templateName = "WC Template Name",
			templateScript = '''"/root/dynamic-element[@name='Text']"'''
		);
	}

	@priority = "4"
	test AddWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test AddWebContentDraft {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AddWebContentExpirationDate {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.addExpirationDateCP(expirationDate = "01/02/3000");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewExpirationDateCP(expirationDate = "01/02/3000");
	}

	@priority = "3"
	test AddWebContentMultiple {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 1",
			webContentTitle = "WC WebContent Title 1"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 2",
			webContentTitle = "WC WebContent Title 2"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 3",
			webContentTitle = "WC WebContent Title 3"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 3");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 1");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 1",
			webContentTitle = "WC WebContent Title 1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 2");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 2",
			webContentTitle = "WC WebContent Title 2"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 3");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 3",
			webContentTitle = "WC WebContent Title 3"
		);
	}

	@priority = "4"
	test AddWebContentTitleEscapeCharacter {
		property testray.component.names = "Web Content Administration,XSS";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContentNavigator.gotoEditCP(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "3"
	test AddWebContentWithColorField {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Color",
			fieldFieldLabel = "Color",
			fieldName = "Color"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Color",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentColor = "FFFFFF",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Content.addPG(assetTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "#FFFFFF");
	}

	@priority = "4"
	test AddWebContentWithImageField {
		property test.name.skip.portal.instance = "WebContent#AddWebContentWithImageField";
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Image",
			fieldFieldLabel = "Image",
			fieldName = "Image"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Image",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentImage = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Test Page");

		WebContentDisplayPortlet.viewImageFieldViaWCD();
	}

	@priority = "4"
	test AddWebContentWithStructure {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "3"
	test AddWebContentWithTemplateXSL {
		property testray.component.names = "Web Content Administration,XSL";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateFile = "xsl_template.xsl",
			templateLanguage = "xsl",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		WebContentNavigator.gotoPreviewViaHeaderCP(
			webContentTitle = "WC WebContent Title"
		);

		WebContent.preview(
			fieldName = "Text",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test CannotRepublishExpiredWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		Button.clickPublish();

		Alert.viewRequestFailedToComplete();

		Alert.viewExpireContentFailedMessage();
	}

	@priority = "4"
	test CompareWebContentVersionsHistory {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent New Content",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent New Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "View History",
			rowEntry = "WC WebContent New Title"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Compare to...",
			rowEntry = "WC WebContent Title"
		);

		WebContent.viewCompareVersions(
			newContent = "WC WebContent New Content",
			version = "1.1"
		);
	}

	@priority = "5"
	test DeleteWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(webContentTitle = "WC WebContent Title");
	}

	@priority = "3"
	test DeleteWebContentTitleEscapeCharacter {
		property testray.component.names = "Web Content Administration,XSS";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.deleteCP(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "4"
	test EditBasicWebContentStructureAndTemplate {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content");

		PortletEntry.inputName(name = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		WebContentStructures.saveCP(structureName = "Basic Web Content Edit");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Basic Web Content"
		);

		PortletEntry.inputName(name = "Basic Web Content Edit");

		Panel.expandPanel(panel = "Details");

		PortletEntry.inputDescription(description = "Basic Web Content Description");

		for (var templateFieldName : list "Date,Image") {
			WebContentTemplates.addFields(templateFieldNames = "${templateFieldName}");
		}

		WebContentStructures.saveCP();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			structureName = "Basic Web Content Edit",
			templateDescription = "Basic Web Content Description",
			templateName = "Basic Web Content Edit",
			templateScript = '''${Image.getData()}'''
		);
	}

	@priority = "4"
	test EditSubstructureDefaultValues {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name1"
		);

		for (var structureFieldName : list "Text,Text Box,Image,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		LexiconEntry.gotoAdd();

		WebContentStructures.addName(structureName = "2");

		Panel.expandPanel(panel = "Details");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		WebContentStructures.addSubstructure(
			parentStructureName = "WC Structure Name1",
			structureName = "2"
		);

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.editSubstructureDefaultValuesCP(
			editSubstructureFieldNames = "Text",
			substructureName = "2"
		);
	}

	@priority = "4"
	test EditWCAddLocalization {
		property testray.component.names = "Localization,Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		WebContent.addCP(
			webContentContent = "WC Contenido de la web Contenido",
			webContentTitle = "WC Contenido de la web Titulo"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC Contenido de la web Contenido",
			webContentTitle = "WC Contenido de la web Titulo"
		);
	}

	@priority = "5"
	test EditWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "5"
	test EditWebContentViaArticleTitle {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.searchCP(webContentTitle = "WC WebContent Title");

		LexiconEntry.gotoEntry(rowEntry = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "3"
	test ExpireEditWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(webContentTitleList = "WC WebContent Title Edit");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content Edit",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ExpireWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test ExportLARWithNestedWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "webContent"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Basic Web Content");

		WebContent.addWithStructureCP(
			structureName = "Basic Web Content",
			templateName = "Basic Web Content",
			webContentTitle = "Basic WebContent Title"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			fieldName = "webContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Basic WebContent Title",
			webContentTitle = "WC WebContent Title"
		);

		FormFields.editText(fieldName = "Text", fieldValue = "WC WebContent Text");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");
	}

	@priority = "4"
	test ImportLAR {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.exportPortlet(larFileName = "WebContent_portlet2.lar");

		WebContent.tearDownCP();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.deleteCP(templateName = "WC Template Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentStructures.deleteCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(larFileName = "WebContent_portlet2.lar");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name");

		DynamicDataMapping.viewField(fieldFieldLabel = "Text", fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);
	}

	@priority = "4"
	test ImportLARLinkToPageValidation {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Test Structure Description",
			structureName = "Test Structure"
		);

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		WebContentStructures.saveCP(structureName = "Test Structure");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Test Structure",
			templateDescription = "Test Template Description",
			templateName = "Test Template"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Test Structure");

		WebContent.addWithStructureCP(
			linkedPageName = "Test Page",
			structureName = "Test Structure",
			templateName = "Test Template",
			webContentTitle = "WC Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC Title");

		LAR.exportPortlet(larFileName = "WebContent_portlet.lar");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			importValidationMissingItem = "Linked Page",
			larFileName = "WebContent_portlet.lar",
			linkedPageName = "Test Page",
			siteName = "Site Name"
		);
	}

	@ignore = "true"
	@priority = "5"
	test ImportTrainingLAR {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "space-content-7.0.lar",
			siteName = "Site Name",
			uploadFrom = "dependencies"
		);

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Look and Feel Configuration"
		);

		IFrame.selectConfigurationFrame();

		Portlet.selectApplicationDecorator(decorator = "Barebone");

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Portlet.viewApplicationDecorator(decorator = "Barebone");
	}

	@priority = "4"
	test MoveWebContentToFolder {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.moveToFolderCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC WebContent Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test PublishDraftWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.publish(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewApprovedStatus(webContentTitle = "WC WebContent Title");
	}

	@priority = "5"
	test SearchWebContent {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.searchCP(
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.searchNoResultsCP(
			searchQuery = "WC2 WebContent2 Title2",
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test UserEditWebContent {
		property testray.component.names = "Permissions,Roles,Users and Organizations,Web Content Administration";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		JSONRole.addRegularRole(
			roleKey = "Web Content Administrator Role",
			roleTitle = "Web Content Administrator Role"
		);

		for (var resourceActionIndex : list "ADD_STRUCTURE,ADD_FOLDER,ADD_FEED,ADD_ARTICLE,VIEW,UPDATE,SUBSCRIBE,PERMISSIONS,ADD_TEMPLATE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal",
				roleTitle = "Web Content Administrator Role"
			);
		}

		for (var resourceActionIndex : list "ADD_DISCUSSION,VIEW,UPDATE_DISCUSSION,UPDATE,SUBSCRIBE,PERMISSIONS,EXPIRE,DELETE_DISCUSSION,DELETE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Web Content Administrator Role"
			);
		}

		for (var resourceActionIndex : list "VIEW,UPDATE,SUBSCRIBE,PERMISSIONS,DELETE,ADD_SUBFOLDER,ADD_ARTICLE,ACCESS") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalFolder",
				roleTitle = "Web Content Administrator Role"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Web Content Administrator Role"
		);

		for (var resourceActionIndex : list "VIEW,ACCESS_IN_CONTROL_PANEL") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
				roleTitle = "Web Content Administrator Role"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(
			roleTitle = "Web Content Administrator Role",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.addAllMembersCP();

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewUserEditCP(
			userFirstLast = "userfn userln",
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ValidateDDMNavigation {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentNavigator.gotoManageTemplatesViaStructures(
			structureName = "Basic Web Content"
		);

		WebContentTemplates.addCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template"
		);

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Test WC Template");

		Navigator.gotoBack();

		SiteAdmin.viewPortletTitle(
			portletTitle = "Templates for Structure: Basic Web Content"
		);

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template"
		);

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "",
			templateName = "Basic Web Content"
		);

		Navigator.gotoBack();

		SiteAdmin.viewPortletTitle(portletTitle = "Structures");

		WebContentStructures.viewTableEntryCP(
			structureDescription = "Basic Web Content",
			structureName = "Basic Web Content"
		);
	}

	@priority = "4"
	test ViewContentNotLostWithBlankTitle {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addNullCP(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test ViewDisplayStyleCP {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewDisplayStyleCP(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test ViewFavoriteStructure {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		var n = "0";

		while (!("${n}" == "15")) {
			WebContentStructures.addCP(
				structureDescription = "WC Structure Description",
				structureName = "WC Structure Name ${n}"
			);

			DynamicDataMapping.addField(
				field = "HTML",
				fieldFieldLabel = "HTML",
				fieldName = "HTML"
			);

			WebContentStructures.saveCP(structureName = "${structureName}");

			var n = MathUtil.sum("${n}", "1");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoMoreStructuresViaPlusButton(pageMod = "8 of 17");

		for (var structureName : list "Basic Web Content,WC Structure Name 0,WC Structure Name 1,WC Structure Name 2,WC Structure Name 3,WC Structure Name 4,WC Structure Name 5,WC Structure Name 6,WC Structure Name 7,WC Structure Name 8,WC Structure Name 9,WC Structure Name 10,WC Structure Name 11,WC Structure Name 12,WC Structure Name 13,WC Structure Name 14") {
			WebContentStructures.viewStructuresViaMoreIFrame(
				structureName = "${structureName}"
			);
		}

		WebContentStructures.viewNoFavoriteStructure();

		WebContentStructures.addFavoriteStructure(structureName = "WC Structure Name 9");

		WebContentStructures.viewFavoriteStructureViaIFrame(
			indexNumber = "1",
			structureName = "WC Structure Name 9"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentStructures.viewFavoriteStructureViaPlusButton(
			structureName = "WC Structure Name 9"
		);
	}
}