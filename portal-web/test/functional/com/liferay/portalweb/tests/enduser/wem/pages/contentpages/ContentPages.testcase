@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name");

		FragmentsAdmin.importCollectionFromDependenciesFolder(
			collectionZipFile = "fragment-collection.zip"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Add a content page with fragments."
	@priority = "5"
	test AddContentPage {
		property portal.acceptance = "true";

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Button"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Submit",
			key_fragmentClass = "footer",
			key_position = "3"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Cancel",
			key_fragmentClass = "footer",
			key_position = "3"
		);

		for (var button : list "Submit,Cancel") {
			Button.viewPresent(button = "${button}");
		}
	}

	@description = "Create a content page from a page template with fragments."
	@priority = "5"
	test AddContentPageFromPageTemplate {
		property portal.acceptance = "true";

		PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "test-site-name");

		PageTemplatesAdmin.addCollection(collectionName = "Page Template Collection");

		PageTemplatesAdmin.add(pageTemplateName = "Page Template Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Button"
		);

		Button.clickPublish();

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(
			collectionName = "Page Template Collection",
			pageName = "Test Page Name",
			pageTemplateName = "Page Template Name"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Test Site Name");

		for (var button : list "Submit,Cancel") {
			Button.viewPresent(button = "${button}");
		}

		Button.clickNoError(button = "Submit");

		AssertConfirm(value1 = "Form submitted");
	}

	@description = "Add a content page and edit its fragment immediately. This is a variation of the steps from LPS-85872."
	@priority = "5"
	test AddContentPageWithEditedFragmentText {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Content"
		);

		PageEditor.editFragmentText(
			fragmentName = "Content",
			id = "content",
			text = "New editable fragment text"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "New editable fragment text",
			key_fragmentClass = "body",
			key_position = "1"
		);
	}

	@description = "Edit an existing content page that has fragments. This testcase covers the bug found in LPS-85872."
	@priority = "5"
	test EditContentPage {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		ContentPages.gotoEdit();

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Content"
		);

		PageEditor.editFragmentText(
			fragmentName = "Rich Text",
			id = "rich-text",
			text = "New editable fragment text"
		);

		PageEditor.moveFragment(direction = "down", fragmentName = "Title");

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "New editable fragment text",
			key_fragmentClass = "rich-text",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean tempus eleifend lacus nec porttitor. Vestibulum pharetra ullamcorper felis volutpat commodo. Nam id ipsum placerat, hendrerit orci eu, congue nisi. Proin.",
			key_fragmentClass = "body",
			key_position = "3"
		);
	}
}