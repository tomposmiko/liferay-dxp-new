@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "An asset publisher widget can be added to a content page and used to display a web content article."
	@priority = "5"
	test ViewWebContentArticleInAP {
		task ("Add a web content article to the site") {
			JSONWebcontent.addWebContent(
				content = "WC WebContent Content",
				groupName = "Test Site Name",
				title = "WC WebContent Title");
		}

		task ("Add a content page") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name");

			ContentPages.addPage(pageName = "Test Content Page Name");
		}

		task ("Add an asset publisher widget to the content page") {
			PageEditor.addWidget(portletName = "Asset Publisher");
		}

		task ("Publish the content page") {
			PageEditor.clickPublish();
		}

		task ("Navigate to the content page") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");
		}

		task ("Assert the web content article in the asset publisher widget is present") {
			WebContent.viewPGViaAP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "WC WebContent Title");
		}
	}

	@description = "A web content display widget can be added to a content page and used to display a web content article."
	@priority = "5"
	test ViewWebContentArticleInWCD {
		task ("Add a web content article to the site") {
			JSONWebcontent.addWebContent(
				content = "WC WebContent Content",
				groupName = "Test Site Name",
				title = "WC WebContent Title");
		}

		task ("Add a content page") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name");

			ContentPages.addPage(pageName = "Test Content Page Name");
		}

		task ("Add a web content display widget to the content page") {
			PageEditor.addWidget(portletName = "Web Content Display");
		}

		task ("Select the web content article in the web content display widget") {
			WebContentDisplayPortlet.selectWebContent(
				contentPage = "true",
				webContentTitle = "WC WebContent Title");
		}

		task ("Publish the content page") {
			PageEditor.clickPublish();
		}

		task ("Navigate to the content page") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");
		}

		task ("Assert the web content article in the web content display widget is present") {
			WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
		}
	}

}