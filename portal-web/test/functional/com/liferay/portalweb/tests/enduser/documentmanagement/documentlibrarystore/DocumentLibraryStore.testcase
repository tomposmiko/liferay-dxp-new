@component-name = "portal-document-library-store"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "Document Library Stores";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		HeadlessSite.addSite(siteName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			User.logoutPG();
		}
	}

	@priority = 5
	@refactorneeded
	test AdvancedFileSystemStoreSmoke {
		property custom.properties = "dl.store.impl=com.liferay.portal.store.file.system.AdvancedFileSystemStore";
		property osgi.module.configuration.file.names = "com.liferay.portal.store.file.system.configuration.AdvancedFileSystemStoreConfiguration.config";
		property osgi.module.configurations = "rootDir=\"data/document_library1\"";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		RecycleBin.openRecycleBinAdmin(siteURLKey = "test-site-name");

		RecycleBin.emptyCP();
	}

	@priority = 5
	@refactorneeded
	test DBStoreSmoke {
		property custom.properties = "dl.store.impl=com.liferay.portal.store.db.DBStore";

		Navigator.openURL();

		AssertConsoleTextNotPresent(value1 = "java.lang.IllegalStateException: Store is not available");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		RecycleBin.openRecycleBinAdmin(siteURLKey = "test-site-name");

		RecycleBin.emptyCP();
	}

	@priority = 5
	@refactorneeded
	test FileSystemStoreSmoke {
		property custom.properties = "dl.store.impl=com.liferay.portal.store.file.system.FileSystemStore";
		property osgi.module.configuration.file.names = "com.liferay.portal.store.file.system.configuration.FileSystemStoreConfiguration.config";
		property osgi.module.configurations = "rootDir=\"data/document_library1\"";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		RecycleBin.openRecycleBinAdmin(siteURLKey = "test-site-name");

		RecycleBin.emptyCP();
	}

	@priority = 3
	@refactorneeded
	test ImportDocumentWithDBStore {
		property custom.properties = "dl.store.impl=com.liferay.portal.store.db.DBStore";
		property test.assert.warning.exceptions = "false";

		HeadlessSite.addSite(siteName = "Test Site Name 1");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		LAR.exportPortlet(larFileName = "DM_Test_DB_Store.lar");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name-1");

		LAR.importPortlet(larFileName = "DM_Test_DB_Store.lar");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name-1");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

}