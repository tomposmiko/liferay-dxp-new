@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Asset Publisher,Web Content Administration";
	property testray.main.component.name = "Asset Publisher";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Asset Publisher Page");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Asset Publisher");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "4"
	test AddWebContentPGViaAP {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoSite(site = "${siteName}");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.viewPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title"
		);
	}

	@priority = "4"
	test AddWebContentWithGlobalScopeViaCPToLiferayAP {
		property test.name.skip.portal.instance = "AssetPublisherWithWebContent#AddWebContentWithGlobalScopeViaCPToLiferayAP";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page 1");

		Navigator.gotoPage(pageName = "Test Page 1");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Liferay",
			siteScopeType = "Current Site"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(
			siteScopeName = "Global",
			webContentTitle = "WC WebContent Title Edit"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit"
		);

		AssetPublisherPortlet.viewReadMoreLinkNotPresentPG();
	}

	@priority = "4"
	test AddWebContentWithGlobalScopeViaCPToSiteAP {
		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Test Page 1");

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Site Name",
			siteScopeType = "Current Site"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(
			siteScopeName = "Global",
			webContentTitle = "WC WebContent Title Edit"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "WC WebContent Content Edit",
			assetTitle = "WC WebContent Title Edit"
		);

		AssetPublisherPortlet.viewReadMoreLinkNotPresentPG();
	}

	@priority = "3"
	test AddWebContentWithStructureAndGlobalScopeViaCPToLiferayAP {
		property test.name.skip.portal.instance = "AssetPublisherWithWebContent#AddWebContentWithStructureAndGlobalScopeViaCPToLiferayAP";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page 1");

		Navigator.gotoPage(pageName = "Test Page 1");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Liferay",
			siteScopeType = "Current Site"
		);

		Navigator.gotoPage(pageName = "Test Page 1");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Text",
			assetTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AddWebContentWithStructureAndGlobalScopeViaCPToSiteAP {
		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Test Page 1");

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Global",
			siteScopeType = "Global"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopeRemoveSitePG(
			siteName = "Site Name",
			siteScopeType = "Current Site"
		);

		Navigator.gotoSitePage(pageName = "Site Test Page 1", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Text",
			assetTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test DisplayWebContentTagViaAP {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Tags Navigation Page");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Tags Navigation");

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureShowMetadataFieldsPG(
			addMetadata = "true",
			metadataFieldList = "Tags",
			portletName = "Asset Publisher"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Tag.addCP(tagName = "tag name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			tagNameList = "tag name",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.gotoPage(pageName = "Tags Navigation Page");

		TagsNavigationPortlet.viewDefaultPG(tagNameList = "tag name");

		AssetPublisherPortlet.viewPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title",
			tagName = "tag name"
		);
	}

	@priority = "4"
	test SaveAsDraftWebContentPGViaAP {
		Navigator.gotoPage(pageName = "Asset Publisher Page");

		WebContent.addDraftPGViaAP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC Webcontent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "WC Webcontent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC Webcontent Title"
		);
	}

	@description = "This is a use case for LPS-49853."
	@priority = "5"
	test ViewWebContentViaAPAsGuestWithViewPermission {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_WEB_CONTENT_GENERAL_PERMISSIONS_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Guest",
			siteNameScope = "${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_ARTICLE_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Guest",
			siteNameScope = "${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			viewableBy = "Site Members",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetTypePG(
			assetSubtype = "Any",
			selectedAsset = "Web Content Article"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);

		User.logoutPG();

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title"
		);
	}

	@description = "This is a use case for LPS-80445."
	@priority = "5"
	test ViewWebContentViaAPDeleteCategory {
		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureCategoriesFilterPG(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.deleteByMenuCP(vocabularyName = "Vocabulary Name");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panel = "Filter");

		AssertElementNotPresent(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.gotoEditAssetPG(assetTitle = "Web Content Title");

		Panel.expandPanel(panel = "Metadata");

		AssertElementNotPresent(locator1 = "AssetCategorization#VOCABULARY");
	}
}