@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Message Boards";
	var pageName = "Message Boards Page";
	var portletName = "Message Boards";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Message Boards Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Message Boards Page",
			widgetName = "Message Boards");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Message Boards Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Message Boards Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			MessageboardsCategory.tearDownCP();

			MessageboardsThread.tearDownCP();

			Page.tearDownCP();

			ServerAdministration.tearDownDMFileUploadSettings();
		}
	}

	@priority = "5"
	test AddMBCategories {
		for (var categoryName : list "MB Category1 Name,MB Category2 Name,MB Category3 Name") {
			Navigator.gotoPage(pageName = "Message Boards Page");

			MessageboardsCategory.addPG(categoryName = "${categoryName}");

			MessageboardsCategory.viewPG(categoryName = "${categoryName}");
		}
	}

	@priority = "4"
	test AddMBCategoryDescription {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Category Description",
			categoryDescriptionEnabled = "true",
			categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Category Description",
			categoryDescriptionEnabled = "true",
			categoryName = "MB Category Name");
	}

	@priority = "4"
	test AddMBCategoryNameUTF8 {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Catègory Name");

		MessageboardsCategory.viewPG(categoryName = "MB Catègory Name");
	}

	@priority = "4"
	test AddMBCategoryNullName {
		Navigator.gotoPage(pageName = "Message Boards Page");

		AssertClick(
			locator1 = "Button#ADD_CATEGORY",
			value1 = "Add Category");

		PortletEntry.inputName(name = " ");

		PortletEntry.inputDescription(description = "MB Category Description");

		Button.clickSave();

		Alert.viewRequiredField();

		Navigator.gotoPage(pageName = "Message Boards Page");

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories.");
	}

	@priority = "5"
	test AddMBCategorySubcategoryThread {
		property testray.component.names = "Training";

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	test AddMBCategoryThreadQuestion {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.addPGAsQuestion(
			breadcrumbName = "MB Category Name",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	test AddMBCategoryThreadUTF8 {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thrèad Mèssagè Body",
			threadSubject = "MB Thrèad Mèssagè Subjèct");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thrèad Mèssagè Body",
			threadSubject = "MB Thrèad Mèssagè Subjèct");

		MessageboardsThread.viewPG(
			threadBody = "MB Thrèad Mèssagè Body",
			threadSubject = "MB Thrèad Mèssagè Subjèct");
	}

	@priority = "5"
	test AddMBThread {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	test AddMBThreadGuestReply {
		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsPermissions.checkReplyToMessageForGuestPG(threadSubject = "MB Thread Message Subject");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.replyPG(
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body As Guest",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewReplyPG(
			guestReply = "true",
			loggedOut = "true",
			replyCount = "1",
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body As Guest",
			threadSubject = "MB Thread Message Subject",
			userName = "Anonymous");
	}

	@priority = "4"
	test AddMBThreadNullBody {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Subject",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	test AddMBThreadReply {
		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.replyPG(
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewReplyPG(
			replyCount = "1",
			threadBody = "MB Thread Message Body",
			threadReplyBody = "MB Thread Reply Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	test AddMBThreadWithInvalidAttachmentSize {
		property test.name.skip.portal.instance = "PGMessageboards#AddMBThreadWithInvalidAttachmentSize";

		Navigator.gotoPage(pageName = "Message Boards Page");

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Infrastructure",
			configurationName = "Upload Servlet Request",
			configurationScope = "System Scope");

		ServerAdministration.configureFileUploadOverallMaximumFileSize(maxFileSize = "10000");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addInvalidAttachmentPG(
			invalidSize = "true",
			maxAttachmentFileSize = "10",
			mbThreadAttachment = "Document_1.jpg",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "4"
	test AddMBThreadWithMultipleAttachments {
		Navigator.gotoPage(pageName = "Message Boards Page");

		AssertClick(
			locator1 = "Button#NEW_THREAD",
			value1 = "New Thread");

		Type(
			locator1 = "TextInput#SUBJECT",
			value1 = "MB Thread Message Subject");

		AlloyEditor.typeEditor(
			content = "MB Thread Message Body",
			editor = "body");

		Panel.expandPanel(panel = "Attachments");

		for (var mbThreadAttachment : list "Document_1.doc,Document_1.jpg,Document_1.pdf,Document_1.png,Document_1.pptx,Document_1.mp4") {
			AssertElementPresent(locator1 = "Button#SELECT_FILES");

			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${mbThreadAttachment}");

			AssertTextEquals(
				key_attachmentName = "${mbThreadAttachment}",
				locator1 = "MessageBoardsEditMessage#ATTACHMENTS_SELECTED_FILE",
				value1 = "${mbThreadAttachment}");
		}

		PortletEntry.publish();

		for (var mbThreadAttachment : list "Document_1.doc,Document_1.jpg,Document_1.pdf,Document_1.png,Document_1.pptx,Document_1.mp4") {
			AssertTextEquals.assertPartialText(
				key_mbThreadAttachment = "${mbThreadAttachment}",
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_IMAGE",
				value1 = "${mbThreadAttachment}");
		}

		MessageboardsThread.editPG(
			threadSubject = "MB Thread Message Subject",
			threadSubjectEdit = "MB Thread Message Subject Edit");

		for (var mbThreadAttachment : list "Document_1.doc,Document_1.jpg,Document_1.pdf,Document_1.png,Document_1.pptx,Document_1.mp4") {
			AssertTextEquals.assertPartialText(
				key_mbThreadAttachment = "${mbThreadAttachment}",
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_IMAGE",
				value1 = "${mbThreadAttachment}");
		}
	}

	@priority = "5"
	test CancelEditOnThread {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject");

		MessageboardsThread.cancelEdit(
			threadBodyEdit = "Message Boards Thread Body Edit",
			threadSubject = "Message Boards Thread Subject",
			threadSubjectEdit = "Message Boards Thread Subject Edit");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject",
			userName = "Test Test");
	}

	@priority = "5"
	test CancelThread {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.cancelAdd(
			threadBody = "Thread Body",
			threadSubject = "Thread Subject");

		MessageboardsThread.viewNoPG(threadSubject = "Thread Subject");
	}

	@priority = "5"
	test DeleteMBCategory {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.deletePG(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewDefaultPG();
	}

	@priority = "5"
	test DeleteMBThread {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.deletePG(threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	test EditMBCategory {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.editPG(
			categoryName = "MB Category Name",
			categoryNameEdit = "MB Category Name Edit");

		MessageboardsCategory.viewPG(categoryName = "MB Category Name Edit");
	}

	@priority = "5"
	test EditMBThreadSubjectAndBody {
		property test.name.skip.portal.instance = "PGMessageboards#EditMBThreadSubjectAndBody";

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.editPG(
			threadBodyEdit = "MB Thread Message Body Edit",
			threadSubject = "MB Thread Message Subject",
			threadSubjectEdit = "MB Thread Message Subject Edit");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body Edit",
			threadSubject = "MB Thread Message Subject Edit",
			userName = "Test Test");
	}

	@description = "This is a test case for UC-6."
	@priority = "4"
	test LockAndUnlockThread {
		MessageboardsThread.addPG(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.lockPG(threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewLockedPG(threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.unlockPG(threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.replyPG(
			threadBody = "Message Boards Thread Body",
			threadReplyBody = "Message Boards Thread Reply Body",
			threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.viewReplyPG(
			replyCount = "1",
			threadBody = "Message Boards Thread Body",
			threadReplyBody = "Message Boards Thread Reply Body",
			threadSubject = "Message Boards Thread Subject");
	}

	@priority = "4"
	test MoveMBCategory1ThreadToCategory2 {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category1 Name",
			userEmailAddress = "test@liferay.com");

		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category2 Name",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category1 Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.movePG(
			categoryName = "MB Category2 Name",
			categoryName1 = "MB Category1 Name",
			categoryName2 = "MB Category2 Name",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category2 Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "3"
	test MoveMBCategory1ThreadWithExplanationPostToCategory2 {
		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category1 Name",
			userEmailAddress = "test@liferay.com");

		JSONMBMessage.addCategory(
			categoryDescription = "MB Category Description",
			categoryName = "MB Category2 Name",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category1 Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.movePG(
			categoryName = "MB Category2 Name",
			categoryName1 = "MB Category1 Name",
			categoryName2 = "MB Category2 Name",
			explanationBody = "MB Explanation Post Body",
			explanationPost = "true",
			explanationSubject = "MB Explanation Post Subject",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category2 Name");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "1",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MessageboardsThread.viewPG(
			threadBody = "MB Thread Message Body",
			threadBody2 = "MB Explanation Post Body",
			threadSubject = "MB Thread Message Subject",
			threadSubject2 = "MB Explanation Post Subject");
	}

	@description = "This is a use case for LPS-67722."
	@priority = "5"
	test ReplyAfterDownloadingMBThreadAttachmentTwice {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPGWithAttachment(
			mbThreadAttachment = "Document_1.jpg",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoCP(threadSubject = "MB Thread Message Subject");

		MessageboardsThread.downloadAttachmentPG();

		Pause(locator1 = "5000");

		MessageboardsThread.downloadAttachmentPG();

		Click(
			key_breadcrumbName = "Home",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK");

		MessageboardsThread.replyPG(
			threadReplyBody = "MB Thread Reply Body",
			threadSubject = "MB Thread Message Subject");
	}

	@priority = "5"
	test SaveThreadAsDraft {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.saveNewThreadAsDraft(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Draft");

		Navigator.gotoPage(pageName = "Message Boards Page");

		var key_threadStatus = "Draft";
		var key_threadSubject = "Message Boards Thread Draft";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "Message Boards Thread Draft");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_WORKFLOW_STATUS",
			value1 = "Draft");

		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_MY_POSTS",
			value1 = "My Posts");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "Message Boards Thread Draft");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_WORKFLOW_STATUS",
			value1 = "Draft");
	}

	@priority = "4"
	test ViewDefaultEmailFromConfigurationAndSubscriptionEmail {
		property custom.properties = "message.boards.email.bulk=false";
		property test.smtp.server.enabled = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editUserSiteCP(
			siteName = "${siteName}",
			userScreenName = "usersn");

		MessageboardsPortlet.viewDefaultEmailFromCP(emailFromAddress = "testadmin@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsPortlet.subscribePG();

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		User.editEmailViaMyAccount(userEmailAddress = "testadmin@liferay.com");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		MockMock.viewMail(
			asset = "MB Category Name",
			content = "MB Category Name",
			recipient = "Test Test",
			sender = "Test Test",
			subject = "MB Category Name");

		MockMock.viewMail(
			asset = "MB Category Name",
			content = "MB Category Name",
			recipient = "userfn userln",
			sender = "Test Test",
			subject = "MB Category Name");
	}

	@priority = "4"
	test ViewMBThreadReplyViaMoreMessages {
		property custom.properties = "discussion.comments.delta.value=5";

		JSONMBMessage.addMessage(
			groupName = "Guest",
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject");

		Navigator.gotoPage(pageName = "Message Boards Page");

		for (var replyCount : list "1,2,3,4,5,6,7") {
			MessageboardsThread.replyPG(
				threadReplyBody = "Message Boards Thread Reply ${replyCount}",
				threadSubject = "Message Boards Thread Subject");

			Navigator.gotoPage(pageName = "Message Boards Page");
		}

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "7",
			threadSubject = "Message Boards Thread Subject");

		for (var replyCount : list "1,2,3,4") {
			var key_threadBody = "Message Boards Thread Reply ${replyCount}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "Message Boards Thread Reply ${replyCount}");
		}

		AssertVisible(locator1 = "Button#MORE_MESSAGES");

		for (var replyNotVisible : list "5,6,7") {
			var key_threadBody = "Message Boards Thread Reply ${replyNotVisible}";

			AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_BODY");
		}

		AssertClick(
			locator1 = "Button#MORE_MESSAGES",
			value1 = "More Messages");

		for (var replyCount : list "1,2,3,4,5,6,7") {
			var key_threadBody = "Message Boards Thread Reply ${replyCount}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "Message Boards Thread Reply ${replyCount}");
		}
	}

	@priority = "4"
	test ViewSubcategorySubscriptionViaMySubscriptionsPage {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Subcategory 2 Description",
			categoryName = "MB Subcategory Name 2");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			threadCount = "0");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryName = "MB Subcategory Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name 2",
			threadCount = "0");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Subcategory Name");

		MessageboardsCategory.subscribePG(categoryName = "MB Subcategory Name 2");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsCategory.viewMySubscriptionsPG(
			parentcategory1 = "MB Category Name",
			parentcategory2 = "MB Subcategory Name",
			subscribedThread = "MB Subcategory Name 2");
	}

	@description = "This is a use case for LPS-77263."
	@priority = "5"
	test ViewVisualStateOfReadMBThread {
		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject 1");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject 2");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.gotoCP(threadSubject = "MB Thread Message Subject 1");

		Click(
			key_breadcrumbName = "Home",
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK");

		MessageboardsThread.viewMBThreadVisualStatePG(threadSubject = "MB Thread Message Subject 1");

		MessageboardsThread.viewMBThreadVisualStatePG(
			threadSubject = "MB Thread Message Subject 2",
			unReadMBthread = "true");
	}

}