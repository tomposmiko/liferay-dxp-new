@component-name = "portal-frontend-infrastructure"
definition {

	property osgi.modules.includes = "frontend-taglib-clay-sample-web";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Clay";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given Clay Sample Portlet") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Clay Sample Test Page");

			JSONLayout.updateLayoutTemplateOfPublicLayout(
				groupName = "Guest",
				layoutName = "Clay Sample Test Page",
				layoutTemplate = "1 Column");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Guest",
				layoutName = "Clay Sample Test Page",
				widgetName = "Clay Sample");

			Navigator.gotoPage(pageName = "Clay Sample Test Page");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Clay Sample Test Page");
		}
	}

	@description = "Verify stripe alert contains close button"
	@priority = 5
	test CanDisplayCloseButton {
		task ("When the alert is a stripe variation") {
			VerifyElementPresent(
				key_alertType = "success",
				locator1 = "ClayAlert#ALERT_STRIPE");
		}

		task ("Then the alert contains a close button") {
			AssertElementPresent(
				key_alertType = "success",
				locator1 = "ClayAlert#ALERT_STRIPE_CLOSE");
		}
	}

}