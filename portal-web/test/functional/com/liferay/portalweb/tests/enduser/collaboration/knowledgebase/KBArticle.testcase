@component-name = "portal-knowledge-base"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Knowledge Base";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		Refresh();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			KBFolder.tearDownCP();

			KBArticle.tearDownCP();
		}
	}

	@priority = 4
	@refactordone
	test CanAddArticleAsDraft {
		property portal.acceptance = "true";

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			saveAsDraft = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbStatus = "Draft");
	}

	@description = "This test ensures that users can add article via center pane button."
	@e2etest
	@priority = 5
	test CanAddArticleViaCenterPaneButton {
		property portal.acceptance = "true";

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.addCP(
			centerPaneButton = "true",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewArticleThroughPageTreePanel(kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		Button.viewNotPresent(button = "New");
	}

	@priority = 4
	@refactordone
	test CanAddArticleWithAttachment {
		KBArticle.addCP(
			kbArticleAttachment = "Document_1.txt",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewKBArticleWithAttachmentCP(
			kbArticleAttachment = "Document_1.txt (259 B) Delete",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = 4
	@refactordone
	test CanAddArticleWithCategory {
		Category.openCategoriesAdmin(siteURLKey = "guest");

		Vocabulary.addWithAssociatedAssetTypeCP(
			assetType = "Knowledge Base Article",
			requiredCheckbox = "true",
			vocabularyName = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			categoryName = "Category Name",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			vocabularyName = "Vocabulary Name");

		KBArticle.viewCP(
			categoryName = "Category Name",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			vocabularyName = "Vocabulary Name");
	}

	@description = "This test ensures that users can add an article with a custom friendly URL via the new configuration pane."
	@priority = 5
	test CanAddArticleWithCustomFriendlyURL {
		property portal.acceptance = "true";

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleFriendlyURL = "New Knowledge Base Article Title",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.viewFriendlyURLCP(
			disabledFriendlyURLField = "true",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleFriendlyURL = "new-knowledge-base-article-title",
			kbArticleTitle = "Knowledge Base Article Title",
			skipNavigation = "true");
	}

	@description = "This test ensures that users can add an article with the description."
	@priority = 5
	test CanAddArticleWithDescription {
		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbDescription = "Knowledge Base Article Description");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbDescription = "Knowledge Base Article Description");
	}

	@priority = 4
	@refactordone
	test CanAddArticleWithHTML {
		KBArticle.addCP(
			kbArticleAddViaSource = "true",
			kbArticleContentSource = '''<b>Knowledge Base&rsquo;s Article Content</b>''',
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewCPWithHTML(
			kbArticleContent = "Knowledge Baseâ€™s Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = 3
	@refactordone
	test CanAddArticleWithRelatedBlog {
		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleRelatedAssetTitle = "Blogs Entry Title",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewBlogsEntryRelatedAsset(kbArticleRelatedAssetTitle = "Blogs Entry Title");
	}

	@priority = 4
	@refactordone
	test CanAddChildArticle {
		property portal.acceptance = "true";

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addChildArticleViaKBAdmin(
			kbArticleTitle = "Knowledge Base Article Title",
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.gotoViaKBAdminCP(
			hasChildArticle = "true",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewChildArticleCP(
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title");
	}

	@description = "This test ensures that a user can add a child article for a kb entry from the navigation pane."
	@priority = 5
	test CanAddChildArticleFromNavigationPane {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.addChildArticleViaKBAdmin(
			kbArticleTitle = "Knowledge Base Article Title",
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title",
			navigationPane = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.viewArticleThroughPageTreePanel(kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewArticleThroughPageTreePanel(kbChildArticleTitle = "Knowledge Base Child Article Title");

		KBArticle.viewChildArticleCP(
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title",
			pageTreePanel = "true");
	}

	@priority = 3
	@refactordone
	test CanCancelAddingArticle {
		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.cancelAddKBArticle(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewDefaultCP();
	}

	@priority = 3
	@refactordone
	test CanCancelEditingArticle {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			cancel = "true",
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@description = "This test ensures that a user can delete the kb entry from the navigation pane."
	@priority = 5
	test CanDeleteArticleFromNavigationPane {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.deleteCP(
			kbArticleTitle = "Knowledge Base Article Title",
			navigationPane = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.viewDefaultCP();
	}

	@description = "This test ensures that users can delete article in the table view."
	@priority = 5
	test CanDeleteArticleInTableView {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		LexiconTable.delete(tableEntry = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewDefaultCP();
	}

	@description = "This test ensures that users can edit article in the table view."
	@priority = 5
	test CanEditArticleInTableView {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		KBArticle.editCP(
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.viewEntryName(rowEntry = "Knowledge Base Article Title Edit");
	}

	@description = "This test ensures that a user can edit the kb entry permissions from the navigation pane."
	@priority = 5
	test CanEditArticlePermissionsFromNavigationPane {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.gotoMenuItemViaNavigationPane(
			kbArticleTitle = "Knowledge Base Article Title",
			menuItem = "Permissions");

		PermissionsInline.addOrRemoveAnyPermissionsFromSpecificRole(
			addOrRemoveViewPermission = "Add",
			permissionsKeyList = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "site member");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "Knowledge Base Article Title");

		IFrame.selectPermissionsFrame();

		PermissionsInline.viewPermissionsChecked(
			permissionDefinitionKey = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "site member");
	}

	@description = "This test checks that a user can edit from an article."
	@priority = 4
	test CanEditArticleViaToolbar {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.editCP(
			editActionToolbar = "true",
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title Edit");
	}

	@description = "This test ensures that a user can edit the kb entry from the navigation pane."
	@priority = 5
	test CanEditEntryFromNavigationPane {
		property portal.acceptance = "true";

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.editCP(
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			navigationPane = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		LexiconEntry.viewEntryName(rowEntry = "Knowledge Base Article Title Edit");

		KBArticle.viewArticleThroughPageTreePanel(kbArticleTitle = "Knowledge Base Article Title Edit");
	}

	@description = "This test ensures that the KB article is expired when the user clicks the "Expire" in the ellipses drop-menu."
	@priority = 5
	test CanExpireAnArticle {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "KBArticle#CanExpireAnArticle";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Knowledge Base Display Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 2,
			groupName = "Guest",
			layoutName = "Knowledge Base Display Page",
			widgetName = "Knowledge Base Display");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Asset Publisher Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 2,
			groupName = "Guest",
			layoutName = "Asset Publisher Page",
			widgetName = "Asset Publisher");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.subscribeCP(kbArticleTitle = "Knowledge Base Article Title");

		Navigator.gotoPage(pageName = "Knowledge Base Display Page");

		KBDisplayWidget.viewViaKBDisplayPG(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewAssetPG(assetTitle = "Knowledge Base Article Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "test test");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Expire",
			rowEntry = "Knowledge Base Article Title");

		AssertElementPresent(
			key_kbArticleStatus = "Expired",
			key_kbArticleTitle = "Knowledge Base Article Title",
			locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS");

		LexiconEntry.viewNoEntryMenuItem(
			menuItem = "Expire",
			rowEntry = "Knowledge Base Article Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.gotoNotifications();

		AssertTextEquals(
			locator1 = "Notifications#NOTIFICATIONS_TITLE",
			value1 = "A knowledge base article has expired.");

		Navigator.gotoPage(pageName = "Knowledge Base Display Page");

		Portlet.viewPG(
			portletBody = "Please configure this portlet to make it visible to all users.",
			portletName = "Knowledge Base Display");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "Knowledge Base Article Title");
	}

	@description = "This test ensures that a user can move the kb entry from the navigation pane."
	@priority = 5
	test CanMoveArticleFromNavigationPane {
		property portal.acceptance = "true";

		JSONKnowledgeBase.addkBFolder(
			groupName = "Guest",
			kbFolderName = "KB Folder");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.moveArticleCP(
			kbArticleCurrentParent = "Home",
			kbArticleTitle = "Knowledge Base Article Title",
			navigationPane = "true");

		KBFolder.selectParentCP(kbFolderName = "KB Folder");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.viewArticleThroughPageTreePanel(
			kbArticleTitle = "Knowledge Base Article Title",
			kbFolderName = "KB Folder");

		KBFolder.gotoCP(kbFolderName = "KB Folder");

		LexiconEntry.viewEntryName(rowEntry = "Knowledge Base Article Title");
	}

	@priority = 4
	@refactorneeded
	test CannotAddArticleWithDuplicateURL {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewFriendlyURLCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleFriendlyURL = "knowledge-base-article-title-1",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleDuplicateFriendlyURL = "true",
			kbArticleFriendlyURL = "knowledge-base-article-title",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = 3
	@refactorneeded
	test CannotAddArticleWithInvalidAttachmentSize {
		property test.name.skip.portal.instance = "KBArticle#CannotAddArticleWithInvalidAttachmentSize";

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Infrastructure",
			configurationName = "Upload Servlet Request",
			configurationScope = "System Scope");

		ServerAdministration.configureFileUploadOverallMaximumFileSize(maxFileSize = 102400);

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCPWithInvalidAttachmentSize(
			kbArticleAttachment = "Document_1.ppt",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			maxFileSize = 100);

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			noAttachment = "true");
	}

	@priority = 3
	@refactordone
	test CannotAddArticleWithoutCategory {
		Category.openCategoriesAdmin(siteURLKey = "guest");

		Vocabulary.addWithAssociatedAssetTypeCP(
			assetType = "Knowledge Base Article",
			required = "true",
			vocabularyName = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbMissingRequiredCategory = "true",
			vocabularyName = "Vocabulary Name");
	}

	@priority = 4
	@refactordone
	test CannotAddArticleWithoutContent {
		KBArticle.viewFieldRequiredAsterisk(fieldLabel = "Content");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "",
			kbArticleInvalidContent = "true",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewDefaultCP();
	}

	@priority = 4
	@refactordone
	test CannotAddArticleWithoutTitle {
		KBArticle.addCPWithInvalidTitle(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewDefaultCP();
	}

	@description = "This test ensures that users can print the kb entry by clicking the ellipsis on the kb entry."
	@priority = 5
	test CanPreviewPrintContent {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewPrintContent(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@description = "This test ensures that users can replace the attachment for an article via the new configuration pane."
	@priority = 5
	test CanReplaceArticleAttachment {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONKnowledgeBase.uploadAttachmentToArticle(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			sourceFileName = "Document_1.jpg");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Attachments");

		KBArticle.removeAttachment(attachmentName = "Document_1.jpg");

		KBArticle.selectAttachmentCP(kbArticleAttachment = "Document_1.txt");

		PortletEntry.publish();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewKBArticleWithAttachmentCP(
			kbArticleAttachment = "Document_1.txt (259 B) Delete",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		AssertTextNotEquals.assertNotPartialText(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER",
			value1 = "Document_1.jpg");
	}

	@description = "This test ensures that users can replace the category for an article via the new configuration pane."
	@priority = 5
	test CanReplaceArticleCategory {
		JSONCategory.addVocabulary(
			groupName = "Guest",
			title = "Vocabulary Name");

		var categoryId = JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name1",
			vocabularyName = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name2",
			vocabularyName = "Vocabulary Name");

		JSONKnowledgeBase.addkBArticle(
			assetCategoryIds = ${categoryId},
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.removeCategories(categoryNameList = "Category Name1");

		AssetCategorization.addCategory(
			categoryName = "Category Name2",
			vocabularyName = "Vocabulary Name");

		PortletEntry.publish();

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		AssetCategorization.viewCategory(categoryName = "Category Name2");
	}

	@description = "This test ensures that users can replace the related asset for an article via the new configuration pane."
	@priority = 5
	test CanReplaceArticleRelatedAsset {
		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "text/plain",
			sourceFileName = "Document_1.txt");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			assetTitle = "DM Document Title",
			assetType = "Basic Document",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Related Assets");

		RelatedAssets.removeAsset(removeAssetTitle = "DM Document Title");

		RelatedAssets.selectAsset(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry");

		PortletEntry.publish();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleRelatedAssetTitle = "Blogs Entry Title",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@description = "This test ensures that users can replace the tag for an article via the new configuration pane."
	@priority = 5
	test CanReplaceArticleTag {
		JSONKnowledgeBase.addkBArticle(
			assetTagNames = "Tag1",
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.removeTag(tagName = "tag1");

		AssetCategorization.addTag(tagName = "tag2");

		PortletEntry.publish();

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		AssetCategorization.viewTag(tagName = "Tag2");
	}

	@description = "This test ensures that the KB article is expired when the user clicks the "Expire" in the ellipses drop-menu."
	@priority = 5
	test CanRepublishAnExpiredArticle {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";
		property test.name.skip.portal.instance = "KBArticle#CanRepublishAnExpiredArticle";

		KBArticle.updateCheckInterval(fieldValue = 1);

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Expire",
			rowEntry = "Knowledge Base Article Title");

		KBArticle.editCP(
			enableExpirationDate = "true",
			extendedMinutes = 1,
			kbArticleTitleEdit = "Knowledge Base Article Title",
			key_rowEntry = "Knowledge Base Article Title",
			notificationDate = 0);

		Notifications.waitForNotificationFlexibly(flexibleRefreshingTime = 20000);

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		AssertTextEquals(
			locator1 = "Notifications#NOTIFICATIONS_TITLE",
			value1 = "A knowledge base article has expired.");

		Notifications.navigateToContent(contentBody = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "Knowledge Base Article Content");

		AssertElementPresent(
			key_kbArticleStatus = "Expired",
			key_kbArticleTitle = "Knowledge Base Article Title",
			locator1 = "WorkflowKnowledgeBaseArticle#ARTICLE_TABLE_ARTICLE_STATUS");
	}

	@description = "This test ensures that the owner of the kb article receives a notification once the review date is reached."
	@priority = 5
	test CanReviewArticleWhenReviewDateIsReached {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "kbArticle#CanReviewArticleWhenReviewDateIsReached";

		KBArticle.updateCheckInterval(fieldValue = 1);

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			configureReviewDate = "true",
			increaseMinutes = 2,
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			uncheckNeverReview = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		Notifications.waitForNotificationFlexibly(flexibleRefreshingTime = 40000);

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		AssertTextEquals(
			locator1 = "Notifications#NOTIFICATIONS_TITLE",
			value1 = "A knowledge base article needs review.");

		Notifications.navigateToContent(contentBody = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "Knowledge Base Article Content");
	}

	@description = "This test ensures that the owner of the kb article receives a notification once the review date is reached."
	@priority = 5
	test CanReviewArticleWhenReviewDateIsUpdated {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";
		property test.name.skip.portal.instance = "kbArticle#CanReviewArticleWhenReviewDateIsUpdated";

		KBArticle.updateCheckInterval(fieldValue = 1);

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			configureReviewDate = "true",
			increaseMinutes = 10,
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			uncheckNeverReview = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.setReviewDate(increaseMinutes = 1);

		PortletEntry.publish();

		Notifications.waitForNotificationFlexibly(flexibleRefreshingTime = 20000);

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		AssertTextEquals(
			locator1 = "Notifications#NOTIFICATIONS_TITLE",
			value1 = "A knowledge base article needs review.");

		Notifications.navigateToContent(contentBody = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "Knowledge Base Article Content");
	}

	@priority = 4
	@refactordone
	test CanSaveEditedArticleAsDraft {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			saveAsDraft = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			kbStatus = "Draft");
	}

	@description = "This test ensures that users can subscribe to a kb article by clicking the ellipsis on the kb entry."
	@priority = 5
	test CanSubscribeToArticle {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.subscribeCP(kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		LexiconEntry.viewEntryMenu(
			menuItem = "Unsubscribe",
			rowEntry = "Knowledge Base Article Title");
	}

	@description = "This test ensures that a user can subscribe to a kb article from the navigation pane."
	@priority = 5
	test CanSubscribeToArticleFromNavigationPane {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		KBArticle.gotoMenuItemViaNavigationPane(
			kbArticleTitle = "Knowledge Base Article Title",
			menuItem = "Subscribe");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.openPageTreePanel(section = "Folders and Articles");

		LexiconEntry.viewEntryMenuItem(
			menuItem = "Unsubscribe",
			rowEntry = "Knowledge Base Article Title");
	}

	@description = "This test ensures that suggestion form is displayed on the KB article preview page when the KB article has suggestions."
	@priority = 5
	test CanViewArticlesWithSuggestions {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		for (var suggestionCount : list "1,2") {
			KBArticleSuggestion.addPG(
				kbArticleTitle = "Knowledge Base Article1 Title",
				kbSuggestionBody = "Knowledge Base Article1 Suggestion${suggestionCount}");
		}

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbStatus = "Approved",
			versionNumber = 1);

		for (var suggestionCount : list "1,2") {
			KBArticleSuggestion.viewPG(
				kbSuggestionBody = "Knowledge Base Article1 Suggestion${suggestionCount}",
				kbSuggestionUserName = "Test Test",
				status = "New");
		}
	}

	@description = "This test ensures that a user is able to embed a video in a KB article."
	@priority = 4
	@refactordone
	test CanViewEmbeddedVideo {
		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			embedVideo = "https://www.youtube.com/watch?v=2EPZxIC5ogU",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title",
			navTab = "URL");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			embedVideo = "true",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@description = "This test ensures that the information related to the KB entry can be viewed."
	@priority = 4
	test CanViewEntryInfo {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.gotoViaKBAdminCP(kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewInfoPanel(
			kbArticleTitle = "Knowledge Base Article Title",
			versionNumber = 1,
			workflowStatus = "APPROVED");

		KBArticle.viewInfoPanelVersions(
			entryVersion = "Version 1",
			userName = "Test Test");

		JSONKnowledgeBase.updateKBArticle(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			newKbArticleContent = "Knowledge Base Article Content Edit",
			newKbArticleTitle = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.gotoViaKBAdminCP(kbArticleTitle = "Knowledge Base Article Title Edit");

		KBArticle.viewInfoPanel(
			kbArticleTitle = "Knowledge Base Article Title Edit",
			versionNumber = 2,
			workflowStatus = "APPROVED");

		KBArticle.viewInfoPanelVersions(
			entryVersion = "Version 2",
			userName = "Test Test");
	}

	@description = "This test ensures that the kb article status is expired when the expiration date is reached."
	@priority = 5
	test CanViewExpiredArticle {
		property custom.properties = "company.default.time.zone=America/Los_Angeles";
		property test.name.skip.portal.instance = "KBArticle#CanViewExpiredArticle";

		KBArticle.updateCheckInterval(fieldValue = 1);

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			enableExpirationDate = "true",
			extendedMinutes = 1,
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			notificationDate = 0,
			viewExpirationTime = "true");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewExpirationStatus(
			kbArticleTitle = "Knowledge Base Article Title",
			kbExpirationStatus = "Expiring Soon");

		AssertElementPresent(
			key_kbArticleStatus = "Approved",
			key_kbArticleTitle = "Knowledge Base Article Title",
			locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS");

		Notifications.waitForNotificationFlexibly(flexibleRefreshingTime = 20000);

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = 1);

		Notifications.gotoNotifications();

		AssertTextEquals(
			locator1 = "Notifications#NOTIFICATIONS_TITLE",
			value1 = "A knowledge base article has expired.");

		Notifications.navigateToContent(contentBody = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "Knowledge Base Article Title");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "Knowledge Base Article Content");

		AssertElementPresent(
			key_kbArticleStatus = "Expired",
			key_kbArticleTitle = "Knowledge Base Article Title",
			locator1 = "WorkflowKnowledgeBaseArticle#ARTICLE_TABLE_ARTICLE_STATUS");
	}

	@description = "This ensures that an image in the KB content field can be rendered correctly after moving it to a folder."
	@priority = 4
	test CanViewImageInKBAfterMovingToFolder {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.editCP(
			dmImage = "DM Document Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			navTab = "Documents and Media",
			skipNavigation = "true");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		JSONDocument.moveFileEntryToFolder(
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			siteURLKey = "guest");

		KBArticle.viewImageViaContentCmd();
	}

	@description = "This test ensures that users can view kb entry history by clicking the ellipsis on the kb entry."
	@priority = 5
	test CanViewKBArticleHistory {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONKnowledgeBase.updateKBArticle(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			newKbArticleContent = "Knowledge Base Article Content Edit",
			newKbArticleTitle = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewArticleHistoryCP(
			kbArticleContent = "Knowledge Base Article Content Edit",
			kbArticleContentAddedDiff = "Edit",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			kbArticleVersionNew = 2,
			kbArticleVersionOld = 1);
	}

	@description = "This ensures that an external video in the KB content field can be rendered correctly after moving it to a folder."
	@priority = 4
	test CanViewVideoInKBAfterMovingToFolder {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		VideoShortcut.addCP(
			videoShortcutTitle = "Test YouTube Video Name",
			videoURL = "https://www.youtube.com/watch?v=HOdbzGCI5ME");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.editCP(
			embedVideo = "true",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			navTab = "Documents and Media",
			skipNavigation = "true",
			videoShortcutTitle = "Test YouTube Video Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		JSONDocument.moveFileEntryToFolder(
			dmDocumentTitle = "Test YouTube Video Name",
			folderName = "DM Folder Name",
			groupName = "Guest");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			siteURLKey = "guest");

		AssertElementPresent(
			key_service = "youtube",
			locator1 = "BlogsEntry#CONTENT_VIDEO");
	}

	@description = "This test checks that all the correct actions appear after selecting an article."
	@priority = 5
	test CorrectActionsAppearInToolbarAfterSelectingArticle {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.viewActionsDetailsToolbar(moreActions = "true");
	}

	@priority = 3
	@refactorneeded
	test EditKBArticleWithCustomField {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Custom Fields");

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Knowledge Base Article");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Knowledge Base Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 1,
			groupName = "Guest",
			layoutName = "Knowledge Base Page",
			widgetName = "Knowledge Base Display");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCPWithTextFieldCustomField(
			customFieldText = "KB Article Custom Field",
			kbArticleContent = "KB Article Content",
			kbArticleTitle = "KB Article Title");

		Navigator.gotoPage(pageName = "Knowledge Base Page");

		KBArticle.viewPG(
			customFieldName = "Text Field",
			customFieldValue = "KB Article Custom Field",
			kbArticleContent = "KB Article Content",
			kbArticleTitle = "KB Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			customFieldTextEdit = "KB Article Custom Field Edited",
			kbArticleContent = "KB Article Content",
			kbArticleContentEdit = "KB Article Content Edited",
			kbArticleTitle = "KB Article Title",
			kbArticleTitleEdit = "KB Article Title Edited");

		Navigator.gotoPage(pageName = "Knowledge Base Page");

		KBArticle.viewPG(
			customFieldName = "Text Field",
			customFieldValue = "KB Article Custom Field Edited",
			kbArticleContent = "KB Article Content Edited",
			kbArticleTitle = "KB Article Title Edited");
	}

	@description = "This test ensures that some article info only display in panel."
	@priority = 5
	test SomeArticleInfoOnlyDisplayInPanel {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONKnowledgeBase.addkBChildArticle(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			kbChildArticleContent = "KB Child Article Content",
			kbChildArticleTitle = "KB Child Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		VerifyElementNotPresent(
			key_entryTitle = "Knowledge Base Article Title",
			key_infoText = "Priority 1.0",
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ENTRY_INFO");

		VerifyElementNotPresent(
			key_entryTitle = "Knowledge Base Article Title",
			key_infoText = "0 Views",
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ENTRY_INFO");

		KBArticle.gotoViaKBAdminCP(kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewInfoPanel(
			childArticlesQuantity = "1 Child Articles",
			kbArticleTitle = "Knowledge Base Article Title",
			viewQuantity = 0);
	}

	@priority = 3
	@refactorneeded
	test ViewKBArticleGitHubSourceURL {
		property test.name.skip.portal.instance = "KBArticle#ViewKBArticleGitHubSourceURL";

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Knowledge Base",
			configurationName = "Service",
			configurationScope = "Site Scope");

		FormFields.enableCheckbox(fieldName = "sourceURLEnabled");

		SystemSettings.saveConfiguration();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleSourceURL = "http://www.google.com",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewSourceURLCP(
			kbArticleSourceURL = "http://www.google.com",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "KB Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 1,
			groupName = "Guest",
			layoutName = "KB Page",
			widgetName = "Knowledge Base Display");

		Navigator.gotoPage(pageName = "KB Page");

		KBDisplayWidget.viewKBDisplayPG(
			history = "true",
			print = "true",
			sourceURL = "true",
			subscribe = "true");
	}

}