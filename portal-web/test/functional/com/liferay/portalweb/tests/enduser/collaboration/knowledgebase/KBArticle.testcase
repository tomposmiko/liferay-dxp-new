@component-name = "portal-knowledge-base"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Knowledge Base";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		Refresh();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			KBFolder.tearDownCP();

			KBArticle.tearDownCP();
		}
	}

	@priority = "4"
	@refactordone
	test CanAddArticleAsDraft {
		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			saveAsDraft = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbStatus = "Draft");
	}

	@priority = "4"
	@refactordone
	test CanAddArticleWithAttachment {
		KBArticle.addCP(
			kbArticleAttachment = "Document_1.txt",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewKBArticleWithAttachmentCP(
			kbArticleAttachment = "Document_1.txt (259 B) Delete",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = "4"
	@refactordone
	test CanAddArticleWithCategory {
		Category.openCategoriesAdmin(siteURLKey = "guest");

		Vocabulary.addWithAssociatedAssetTypeCP(
			assetType = "Knowledge Base Article",
			requiredCheckbox = "true",
			vocabularyName = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			categoryName = "Category Name",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			vocabularyName = "Vocabulary Name");

		KBArticle.viewCP(
			categoryName = "Category Name",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			vocabularyName = "Vocabulary Name");
	}

	@priority = "4"
	@refactordone
	test CanAddArticleWithHTML {
		KBArticle.addCP(
			kbArticleAddViaSource = "true",
			kbArticleContentSource = '''<b>Knowledge Base&rsquo;s Article Content</b>''',
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewCPWithHTML(
			kbArticleContent = "Knowledge Baseâ€™s Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = "3"
	@refactordone
	test CanAddArticleWithRelatedBlog {
		property test.name.skip.portal.instance = "KBArticle#CanAddArticleWithRelatedBlog";

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleRelatedAssetTitle = "Blogs Entry Title",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewBlogsEntryRelatedAsset(kbArticleRelatedAssetTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactordone
	test CanAddChildArticle {
		property portal.acceptance = "true";

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addChildArticleViaKBAdmin(
			kbArticleTitle = "Knowledge Base Article Title",
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.gotoViaKBAdminCP(
			hasChildArticle = "true",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewChildArticleCP(
			kbChildArticleContent = "Knowledge Base Child Article Content",
			kbChildArticleTitle = "Knowledge Base Child Article Title");
	}

	@priority = "3"
	@refactordone
	test CanCancelAddingArticle {
		property test.name.skip.portal.instance = "KBArticle#CanCancelAddingArticle";

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.cancelAddKBArticle(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewDefaultCP();
	}

	@priority = "3"
	@refactordone
	test CanCancelEditingArticle {
		property test.name.skip.portal.instance = "KBArticle#CanCancelEditingArticle";

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			cancel = "true",
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = "4"
	@refactorneeded
	test CannotAddArticleWithDuplicateURL {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewFriendlyURLCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleFriendlyURL = "knowledge-base-article-title-1",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleDuplicateFriendlyURL = "true",
			kbArticleFriendlyURL = "knowledge-base-article-title",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@priority = "3"
	@refactorneeded
	test CannotAddArticleWithInvalidAttachmentSize {
		property test.name.skip.portal.instance = "KBArticle#CannotAddArticleWithInvalidAttachmentSize";

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Infrastructure",
			configurationName = "Upload Servlet Request",
			configurationScope = "System Scope");

		ServerAdministration.configureFileUploadOverallMaximumFileSize(maxFileSize = "102400");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCPWithInvalidAttachmentSize(
			kbArticleAttachment = "Document_1.ppt",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			maxFileSize = "100");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			noAttachment = "true");
	}

	@priority = "3"
	@refactordone
	test CannotAddArticleWithoutCategory {
		property test.name.skip.portal.instance = "KBArticle#CannotAddArticleWithoutCategory";

		Category.openCategoriesAdmin(siteURLKey = "guest");

		Vocabulary.addWithAssociatedAssetTypeCP(
			assetType = "Knowledge Base Article",
			required = "true",
			vocabularyName = "Vocabulary Name");

		JSONCategory.addCategory(
			groupName = "Guest",
			title = "Category Name",
			vocabularyName = "Vocabulary Name");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title",
			kbMissingRequiredCategory = "true",
			vocabularyName = "Vocabulary Name");
	}

	@priority = "4"
	@refactordone
	test CannotAddArticleWithoutContent {
		KBArticle.addCP(
			kbArticleContent = "",
			kbArticleInvalidContent = "true",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewDefaultCP();
	}

	@priority = "4"
	@refactordone
	test CannotAddArticleWithoutTitle {
		KBArticle.addCPWithInvalidTitle(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewDefaultCP();
	}

	@priority = "4"
	@refactordone
	test CanSaveEditedArticleAsDraft {
		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			saveAsDraft = "true");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			kbStatus = "Draft");
	}

	@description = "This test ensures that a user is able to embed a video in a KB article."
	@priority = "4"
	@refactordone
	test CanViewEmbeddedVideo {
		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			embedVideo = "https://www.youtube.com/watch?v=2EPZxIC5ogU",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title",
			navTab = "URL");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			embedVideo = "true",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title");
	}

	@description = "This ensures that an image in the KB content field can be rendered correctly after moving it to a folder."
	@priority = "4"
	test CanViewImageInKBAfterMovingToFolder {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.editCP(
			dmImage = "DM Document Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			navTab = "Documents and Media",
			skipNavigation = "true");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		JSONDocument.moveFileEntryToFolder(
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			siteURLKey = "guest");

		KBArticle.viewImageViaContentCmd();
	}

	@description = "This ensures that an external video in the KB content field can be rendered correctly after moving it to a folder."
	@priority = "4"
	test CanViewVideoInKBAfterMovingToFolder {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		VideoShortcut.addCP(
			videoShortcutTitle = "Test YouTube Video Name",
			videoURL = "https://www.youtube.com/watch?v=HOdbzGCI5ME");

		JSONKnowledgeBase.addkBArticle(
			groupName = "Guest",
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.openToEditKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title",
			siteURLKey = "guest");

		KBArticle.editCP(
			embedVideo = "true",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit",
			navTab = "Documents and Media",
			skipNavigation = "true",
			videoShortcutTitle = "Test YouTube Video Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		JSONDocument.moveFileEntryToFolder(
			dmDocumentTitle = "Test YouTube Video Name",
			folderName = "DM Folder Name",
			groupName = "Guest");

		KBArticle.openToKBArticleInSite(
			groupName = "Guest",
			kbArticleTitle = "Knowledge Base Article Title Edit",
			siteURLKey = "guest");

		AssertElementPresent(
			key_service = "youtube",
			locator1 = "BlogsEntry#CONTENT_VIDEO");
	}

	@priority = "3"
	@refactorneeded
	test EditKBArticleWithCustomField {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Custom Fields");

		CustomFields.addCP(
			customFieldName = "Text Field",
			customFieldType = "Input Field",
			customInputDataType = "Text",
			resourceName = "Knowledge Base Article");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Knowledge Base Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Knowledge Base Page",
			widgetName = "Knowledge Base Display");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCPWithTextFieldCustomField(
			customFieldText = "KB Article Custom Field",
			kbArticleContent = "KB Article Content",
			kbArticleTitle = "KB Article Title");

		Navigator.gotoPage(pageName = "Knowledge Base Page");

		KBArticle.viewPG(
			customFieldName = "Text Field",
			customFieldValue = "KB Article Custom Field",
			kbArticleContent = "KB Article Content",
			kbArticleTitle = "KB Article Title");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.editCP(
			customFieldTextEdit = "KB Article Custom Field Edited",
			kbArticleContent = "KB Article Content",
			kbArticleContentEdit = "KB Article Content Edited",
			kbArticleTitle = "KB Article Title",
			kbArticleTitleEdit = "KB Article Title Edited");

		Navigator.gotoPage(pageName = "Knowledge Base Page");

		KBArticle.viewPG(
			customFieldName = "Text Field",
			customFieldValue = "KB Article Custom Field Edited",
			kbArticleContent = "KB Article Content Edited",
			kbArticleTitle = "KB Article Title Edited");
	}

	@priority = "3"
	@refactorneeded
	test ViewKBArticleGitHubSourceURL {
		property test.name.skip.portal.instance = "KBArticle#ViewKBArticleGitHubSourceURL";

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Knowledge Base",
			configurationName = "Service",
			configurationScope = "Site Scope");

		FormFields.enableCheckbox(fieldName = "sourceURLEnabled");

		SystemSettings.saveConfiguration();

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.addCP(
			kbArticleContent = "Knowledge Base Article Content",
			kbArticleSourceURL = "http://www.google.com",
			kbArticleTitle = "Knowledge Base Article Title");

		KBArticle.viewSourceURLCP(
			kbArticleSourceURL = "http://www.google.com",
			kbArticleTitle = "Knowledge Base Article Title");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "KB Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "KB Page",
			widgetName = "Knowledge Base Display");

		Navigator.gotoPage(pageName = "KB Page");

		KBArticle.viewKBDisplayPG(
			history = "true",
			print = "true",
			sourceURL = "true",
			subscribe = "true");
	}

}