@component-name = "portal-tags"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Tags";
	property testray.main.component.name = "Tags";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Tags"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Tag.tearDownCP();
		}
	}

	@priority = "4"
	test CannotAddEmptyTag {
		Tag.addWithNullTitleCP(tagName = " ");

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Portlet.viewEmptyMessage(message = "There are no tags.");
	}

	@priority = "4"
	test CannotMergeSingleTagViewWarning {
		Tag.addCP(tagName = "tagname1");

		Tag.gotoMerge(mergeMethod = "menuItem", tagName = "tagname1");

		Tag.mergeSingleTagWarning();
	}

	@priority = "4"
	test DeleteMultipleTagsFromToolbar {
		for (var i : list "1,2,3") {
			Tag.addCP(tagName = "tagname${i}");

			Tag.viewCP(tagName = "tagname${i}");
		}

		PortletEntry.deleteViaToolbar(rowEntries = "tagname1,tagname2,tagname3");

		Alert.viewSuccessMessage();

		Portlet.viewEmptyMessage(message = "There are no tags.");
	}

	@priority = "5"
	test DeleteTagFromMenu {
		Tag.addCP(tagName = "tagname1");

		Tag.viewCP(tagName = "tagname1");

		PortletEntry.deleteViaMenuItem(rowEntry = "tagname1");

		Alert.viewSuccessMessage();

		Portlet.viewEmptyMessage(message = "There are no tags.");
	}

	@priority = "4"
	test DeleteTagFromToolbar {
		Tag.addCP(tagName = "tagname1");

		Tag.viewCP(tagName = "tagname1");

		PortletEntry.deleteViaToolbar(rowEntries = "tagname1");

		Alert.viewSuccessMessage();

		Portlet.viewEmptyMessage(message = "There are no tags.");
	}

	@priority = "4"
	test EditTagAndCancel {
		Tag.addCP(tagName = "tagname1");

		Tag.viewCP(tagName = "tagname1");

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "tagname1");

		PortletEntry.inputName(name = "tagname2");

		Button.clickCancel();

		Tag.viewCP(tagName = "tagname1");

		AssertTextNotPresent(value1 = "tagname2");
	}

	@priority = "5"
	test EditTagAndSave {
		property portal.acceptance = "true";

		Tag.addCP(tagName = "tagname1");

		Tag.viewCP(tagName = "tagname1");

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "tagname1");

		PortletEntry.inputName(name = "tagname2");

		PortletEntry.save();

		Tag.viewCP(tagName = "tagname2");

		AssertTextNotPresent(value1 = "tagname1");
	}

	@priority = "4"
	test MergeMultipleTags {
		for (var i : list "1,2,3") {
			Tag.addCP(tagName = "tagname${i}");

			Tag.viewCP(tagName = "tagname${i}");
		}

		for (var i : list "1,2,3") {
			LexiconEntry.selectEntry(rowEntry = "tagname${i}");
		}

		Tag.gotoMerge();

		Tag.mergeTags(
			mergedTag = "tagname1",
			tagNameList = "tagname1,tagname2,tagname3"
		);

		Tag.viewCP(tagName = "tagname1");

		for (var i : list "2,3") {
			AssertTextNotPresent(value1 = "tagname${i}");
		}
	}

	@priority = "3"
	test MergeTagsSelectAdditionalTag {
		for (var i : list "1,2,3,4,5,6,7") {
			Tag.addCP(tagName = "tagname${i}");

			Tag.viewCP(tagName = "tagname${i}");
		}

		Pagination.changePagination(itemsPerPage = "5");

		Pagination.viewResults(results = "Showing 1 to 5 of 7 entries.");

		for (var i : list "1,2,3") {
			LexiconEntry.selectEntry(rowEntry = "tagname${i}");
		}

		Tag.gotoMerge();

		Tag.mergeTagsSelectAdditionalTags(tagName = "tagname7");

		Tag.mergeTags(
			mergedTag = "tagname1",
			tagNameList = "tagname1,tagname2,tagname3,tagname7"
		);

		for (var i : list "1,4,5,6") {
			Tag.viewCP(tagName = "tagname${i}");
		}

		for (var i : list "2,3,7") {
			AssertTextNotPresent(value1 = "tagname${i}");
		}
	}

	@priority = "4"
	test ToggleDisplayStyles {
		Tag.addCP(tagName = "tagname1");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_DESCRIPTIVE_TITLE",
			value1 = "tagname1"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_LIST_COLUMN",
			value1 = "tagname1",
			key_columnNumber = "2"
		);
	}

	@priority = "4"
	test ViewTagsPagination {
		var index = "1";

		while (!("${index}" == "10")) {
			Tag.addCP(tagName = "tagname0${index}");

			var index = MathUtil.sum("${index}", "1");
		}

		while (!("${index}" == "26") && (maxIterations = "16")) {
			Tag.addCP(tagName = "tagname${index}");

			var index = MathUtil.sum("${index}", "1");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#ITEMS_PER_PAGE_SELECT",
			value1 = "20 Entries"
		);

		Pagination.viewResults(results = "Showing 1 to 20 of 25 entries.");

		Pagination.changePagination(itemsPerPage = "5");

		Pagination.viewResults(results = "Showing 1 to 5 of 25 entries.");
	}
}