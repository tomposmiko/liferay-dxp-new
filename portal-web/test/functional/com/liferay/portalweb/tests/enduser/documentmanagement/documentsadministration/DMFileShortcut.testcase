@component-name = "portal-document-management"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		HeadlessSite.addSite(siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This is a test for LPS-136839. It checks that a shortcut can still be accessed after the target is moved."
	@priority = 4
	test CanAccessAfterMovingTarget {
		HeadlessSite.addSite(siteName = "Test Site Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Site Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_4.jpg",
			groupName = "Test Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addDMShortcutCP(
			dmDocumentTitle = "Document_4.jpg",
			siteName = "Test Site Name");

		JSONDocument.moveFileEntryToFolder(
			dmDocumentTitle = "Document_4.jpg",
			folderName = "DM Folder Name",
			groupName = "Test Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_4.jpg");

		DMDocument.viewCP(dmDocumentTitle = "Document_4.jpg");
	}

	@description = "This tests that a shortcut can be added to a document."
	@priority = 5
	@refactordone
	test CanAddShortcutToDocument {
		property portal.acceptance = "true";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Site Name",
			mimeType = "text/plain",
			sourceFileName = "Document_1.txt");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addDMShortcutCP(
			dmDocumentTitle = "DM Document Title",
			siteName = "Site Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@description = "This test covers LPS-155147. It ensures that a user downloading a shortcut will download the related document."
	@priority = 4
	test CanDownloadFileThroughShortcut {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.txt",
			groupName = "Guest",
			mimeType = "text/plain",
			sourceFileName = "Document_1.txt");

		JSONDocument.addShortcut(
			dmDocumentTitle = "Document_1.txt",
			sourceGroupName = "Guest",
			targetGroupName = "Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.downloadCP(
			dmDocumentSize = "259 B",
			dmDocumentTitle = "Document_1.txt");

		DMDocument.assertDownloadedFileContent(
			downloadedContent = "This is a *.txt document.",
			fileName = "Document_1.txt");
	}

	@description = "This ensures that the user can edit the shortcut."
	@priority = 4
	@refactordone
	test CanEditShortcutDestination {
		for (var entryCount : list "1,2") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "Document_${entryCount}.jpg",
				groupName = "Site Name",
				mimeType = "image/jpeg",
				sourceFileName = "Document_${entryCount}.jpg");
		}

		JSONDocument.addShortcut(
			dmDocumentTitle = "Document_1.jpg",
			sourceGroupName = "Site Name",
			targetGroupName = "Guest");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.jpg");

		AssertVisible(
			key_dmDocumentFileName = "Document_1.jpg",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_IMAGE_PREVIEW");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.editDMShortcutCP(
			dmDocumentTitle = "Document_1.jpg",
			dmNewDocumentTitle = "Document_2.jpg",
			siteName = "Site Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.jpg");

		AssertVisible(
			key_dmDocumentFileName = "Document_2.jpg",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_IMAGE_PREVIEW");

		DMDocument.viewCP(dmDocumentTitle = "Document_2.jpg");
	}

	@description = "This validates LPS-68795. It ensures that a shortcut can be moved into a folder."
	@priority = 4
	test CanMoveShortcutIntoFolder {
		property custom.properties = "dl.actions.visible=true";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 1,
			groupName = "Site Name",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		JSONDocument.addShortcut(
			dmDocumentTitle = "DM Document Title",
			sourceGroupName = "Guest",
			targetGroupName = "Site Name");

		JSONFolder.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name");

		DMDocument.moveToFolderPG(
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title");
	}

	@description = "This ensures that the shortcut is deleted after deleting the shortcut target."
	@priority = 4
	@refactordone
	test ShortcutIsDeletedAfterTargetIsDeleted {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		HeadlessSite.addSite(siteName = "Test Site Name");

		JSONDocument.addShortcut(
			dmDocumentTitle = "Document_1.jpg",
			sourceGroupName = "Site Name",
			targetGroupName = "Test Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.deleteCP(dmDocumentTitle = "Document_1.jpg");

		DMDocument.viewDefault();

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.viewDefault();
	}

	@description = "This ensures that the shortcut target is not deleted after deleting the shortcut."
	@priority = 4
	@refactordone
	test TargetIsPreservedAfterDeletingShortcut {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		HeadlessSite.addSite(siteName = "Test Site Name");

		JSONDocument.addShortcut(
			dmDocumentTitle = "Document_1.jpg",
			sourceGroupName = "Site Name",
			targetGroupName = "Test Site Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.deleteCP(dmDocumentTitle = "Document_1.jpg");

		DMDocument.viewDefault();

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Site Name",
			siteURLKey = "site-name");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.jpg");
	}

}