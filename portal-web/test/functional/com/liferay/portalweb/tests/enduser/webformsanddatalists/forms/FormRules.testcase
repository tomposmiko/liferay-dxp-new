@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Navigator.gotoNavItem(navItem = "Data Providers");

			FormsAdmin.teardownDataProviders();

			Page.tearDownCP();
		}
	}

	@description = "LPS-89260 - Verify that rules are working for multiple selection fields"
	@priority = "4"
	test CanUseRuleOnMultipleSelectionField {
		property test.name.skip.portal.instance = "FormRules#CanUseRuleOnMultipleSelectionField";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Multiple Selection");

		FormFields.editOptionsRow(
			optionName = "student",
			optionValue = "student",
			rowNumber = "1");

		FormFields.editOptionsRow(
			optionName = "professional",
			optionValue = "professional",
			rowNumber = "2");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Numeric");

		Form.editFieldLabelMetal(fieldValue = "student ID");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Multiple Selection",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueField = "student",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Enable",
			actionRowNumber = "1",
			actionTarget = "student ID");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.publishForm();

		FormsAdminNavigator.openPublishURL();

		FormFields.enableCheckbox(fieldName = "student");

		FormFields.editTextWithBackspace(fieldName = "DDMFormPortlet");
	}

	@description = "LPS-102616 Configure data providers in both input and output fields in autofill rule"
	@priority = "5"
	test CanUtilizeDataProvidersInAutofillRule {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "FormsRulesActions#CanUtilizeDataProvidersInAutofillRule";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		Navigator.gotoNavItem(navItem = "Data Providers");

		FormsAdminNavigator.gotoAddDataProvider();

		FormsAdmin.editDataProvider(
			inputParameterLabel = "zipcode",
			inputParameterName = "zipcode",
			inputParameterType = "Text",
			name = "zipcloud",
			outputParameterLabel = "prefecture",
			outputParameterPath = "$.results[0].address1",
			outputParameterType = "Text",
			url = "http://zipcloud.ibsnet.co.jp/api/search?zipcode={zipcode}");

		FormsAdmin.saveDataProvider();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Address");

		Form.editDescription();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Postal code");

		FormFields.enableSwitcher(fieldName = "Required");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		var fieldNameTextField2 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Prefectures");

		FormFields.enableSwitcher(fieldName = "Required");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Postal code",
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.configureActionOptions(
			action = "Autofill",
			actionRowNumber = "1",
			actionTarget = "zipcloud");

		FormRules.selectAutofillFromDataProvider(
			dataProviderOption = "Postal code",
			dataProviderParameterName = "zipcode");

		ScrollBy(value1 = "0, 200");

		FormRules.selectAutofillFromDataProvider(
			dataProviderOption = "Prefectures",
			dataProviderParameterName = "prefecture");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "1500000");

		FormFields.viewTextValue(
			fieldName = "${fieldNameTextField2}",
			fieldValue = "東京都");

		FormPortlet.submitSuccessfully();
	}

	@description = "This is a use case for LPS-80771."
	@priority = "5"
	test ChangeFieldTypeThatBelongsToARule {
		property portal.acceptance = "false";
		property portal.upstream = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "${fieldNameTextField}");

		Form.changeFieldTypeModalConfirmation(selectOption = "Select from List");

		FormFields.viewTextLabel(
			fieldLabel = "Text Field",
			fieldName = "${fieldNameTextField}");

		FormsAdminNavigator.gotoRules();

		FormRules.viewBrokenRule(ruleNumber = "1");
	}

	@description = "This is a use case for LPS-80771."
	@priority = "5"
	test ChangeFieldTypeThatBelongsToCalculatorExpression {
		property portal.acceptance = "false";
		property portal.upstream = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		var fieldNameNumericField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Numeric Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Numeric");

		Form.editFieldLabelMetal(fieldValue = "Numeric Field 2");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Numeric");

		Form.editFieldLabelMetal(fieldValue = "Total");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.selectConditionField(
			conditionField = "Numeric Field",
			conditionRowNumber = "1");

		FormRules.selectConditionOperator(
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.selectAction(
			action = "Calculate",
			actionRowNumber = "1");

		FormRules.selectCalculateResultField(calculateResultField = "Total");

		FormRules.selectCalculateField(calculateFieldOption = "Numeric Field");

		FormRules.chooseCalculateOperator(calculateOperator = "*");

		FormRules.selectCalculateField(calculateFieldOption = "Numeric Field 2");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "${fieldNameNumericField}");

		Form.changeFieldTypeModalConfirmation(selectOption = "Select from List");

		FormsAdminNavigator.gotoRules();

		FormRules.viewBrokenRule(ruleNumber = "1");
	}

	@description = "This is a use case for LPS-70446."
	@priority = "5"
	test ConfigureAutofillRule {
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "FormRules#ConfigureAutofillRule";

		var portalURL = PropsUtil.get("portal.url");

		FormsAdminNavigator.enableLocalNetworkDataProvider();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		Navigator.gotoNavItem(navItem = "Data Providers");

		FormsAdminNavigator.gotoAddDataProvider();

		FormsAdmin.editDataProvider(
			name = "Liferay Countries",
			outputParameterLabel = "Countries Full Name",
			outputParameterName = "Country Name",
			outputParameterPath = "nameCurrentValue",
			outputParameterType = "List",
			password = "test",
			url = "${portalURL}/api/jsonws/country/get-countries",
			username = "test@liferay.com");

		FormsAdmin.saveDataProvider();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Select from List");

		var fieldNameCountries = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Countries");

		FormFields.editOptionsRow(
			optionName = "Select1",
			optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "country",
			conditionOperator = "Contains",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Autofill",
			actionRowNumber = "1",
			actionTarget = "Liferay Countries");

		FormRules.selectAutofillFromDataProvider(
			dataProviderOption = "Countries",
			dataProviderParameterName = "Countries Full Name");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewTextLabel(
			fieldLabel = "Text Field",
			fieldName = "${fieldNameTextField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "test");

		FormFields.viewSelectOptionsList(
			fieldName = "${fieldNameCountries}",
			selectOption = "Option");

		Refresh();

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "country");

		FormFields.viewSelectOptionsList(
			fieldName = "${fieldNameCountries}",
			selectOption = "Afghanistan");
	}

	@description = "This is a use case for LPS-71592."
	@priority = "5"
	test ConfigureCalculateRule {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ConfigureCalculateRule";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		var fieldNameQuantity = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Quantity");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Numeric");

		var fieldNameValue = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Value");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Numeric");

		var fieldNameTotal = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Total");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.selectConditionField(
			conditionField = "Quantity",
			conditionRowNumber = "1");

		FormRules.selectConditionOperator(
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.selectAction(
			action = "Calculate",
			actionRowNumber = "1");

		FormRules.selectCalculateResultField(calculateResultField = "Total");

		FormRules.selectCalculateField(calculateFieldOption = "Value");

		FormRules.chooseCalculateOperator(calculateOperator = "*");

		FormRules.selectCalculateField(calculateFieldOption = "Quantity");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(
			pageName = "Form Page",
			portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.editText(
			fieldName = "${fieldNameValue}",
			fieldValue = "5");

		FormFields.editText(
			fieldName = "${fieldNameQuantity}",
			fieldValue = "10");

		FormFields.viewTextValue(
			fieldName = "${fieldNameTotal}",
			fieldValue = "50");
	}

	@priority = "5"
	test ConfigureRequireRule {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ConfigureRequireRule";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Date");

		Form.editFieldLabelMetal(fieldValue = "Date Field");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "1",
			actionTarget = "Date Field");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(
			pageName = "Form Page",
			portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewRequiredAsteriskNotPresent();

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "test");

		FormFields.viewRequiredAsterisk();

		FormPortlet.submitWithValidationError();
	}

	// Ignored because of the ticket LRQA-57207

	@priority = "5"
	test ConfigureShowRuleUsingAndCondition {
		property test.name.skip.portal.instance = "FormRules#ConfigureShowRuleUsingAndCondition";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField1 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		var fieldNameTextField2 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Date");

		var fieldNameDateField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Date Field");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.viewRuleConditionDropdownDisabled();

		FormRules.addCondition();

		FormRules.viewRuleConditionDropdownEnabled();

		FormRules.selectRuleCondition(condition = "AND");

		FormRules.viewRuleCondition(
			condition = "AND",
			conditonRowNumber = "1");

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureConditionOptions(
			conditionField = "Text Field 2",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "2",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Date Field");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(
			pageName = "Form Page",
			portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.editText(
			fieldName = "${fieldNameTextField1}",
			fieldValue = "test");

		FormFields.viewDateFieldNotPresent(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField2}",
			fieldValue = "test");

		FormFields.viewDateField(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");
	}

	@priority = "4"
	test ConfigureUserBelongsToRule {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ConfigureUserBelongsToRule";

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms",
			site = "Guest");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNamePublic = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Public");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameManager = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Manager");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "User",
			conditionOperator = "Belongs to",
			conditionRowNumber = "1",
			conditionValueType = "Site Administrator");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Manager");

		FormRules.addAction();

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "2",
			actionTarget = "Manager");

		FormRules.save();

		FormRules.viewSummary(
			action = "Require",
			actionTarget = "Manager",
			conditionField = "User",
			conditionFieldConstant = "Site Administrator",
			conditionOperator = "Belongs to",
			ruleNumber = "1");

		FormRules.viewSummary(
			action = "Show",
			actionTarget = "Manager",
			conditionField = "User",
			conditionFieldConstant = "Site Administrator",
			conditionOperator = "Belongs to",
			ruleNumber = "1");

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(
			pageName = "Form Page",
			portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewTextField(
			fieldLabel = "Public",
			fieldName = "${fieldNamePublic}");

		FormFields.viewTextFieldNotVisible(
			fieldLabel = "Manager",
			fieldName = "${fieldNameManager}");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignSiteRoleCP(
			siteRoleName = "Site Administrator",
			userScreenName = "test");

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Form Page");

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewTextField(
			fieldLabel = "Public",
			fieldName = "${fieldNamePublic}");

		FormFields.viewTextField(
			fieldLabel = "Manager",
			fieldName = "${fieldNameManager}");

		FormFields.editText(
			fieldName = "${fieldNamePublic}",
			fieldValue = "Message");

		FormFields.editText(
			fieldName = "${fieldNameManager}",
			fieldValue = "Admin Comments");

		FormFields.viewTextField(
			fieldLabel = "Manager",
			fieldName = "${fieldNameManager}");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Public",
			fieldValue = "Message");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Manager",
			fieldValue = "Admin Comments");
	}

	@description = "This is a use case for LPS-119818."
	@priority = "5"
	test DeleteFieldThatBelongsToARule {
		property portal.acceptance = "true";
		property portal.upstream = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		var fieldNameTextField = FormFields.getFieldName();

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		Form.deleteFieldModalConfirmation(
			fieldLabel = "Text Field",
			fieldName = "${fieldNameTextField}");

		FormsAdminNavigator.gotoRules();

		FormRules.viewBrokenRule(ruleNumber = "1");
	}

	@description = "This is a use case for LPS-79095."
	@priority = "5"
	test EditRule {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#EditRule";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormsAdminNavigator.gotoFormBuilder();

		AssertVisible(locator1 = "Form#ADD_FIELD");

		FormsAdminNavigator.gotoRules();

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoRules();

		FormRules.gotoEdit(ruleNumber = "1");

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionFieldValue = "test edit",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();
	}

	@description = "LPS-77284 - Verify that sync between rule builder and fields/pages "
	@priority = "5"
	test SyncBetweenFormAndRuleBuilder {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#SyncBetweenFormAndRuleBuilder";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editPageTitle(
			formPageName = "Page 1",
			formTitleNumber = "1");

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "1");

		Form.editPageTitle(
			formPageName = "Page 2",
			formTitleNumber = "2");

		Form.addTextField(fieldPositionNumber = "3");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		Form.addPage(formAddNewPageNumber = "2");

		Form.editPageTitle(
			formPageName = "Page 3",
			formTitleNumber = "3");

		Form.addTextField(fieldPositionNumber = "5");

		Form.editFieldLabelMetal(fieldValue = "Text Field 3");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.configureActionOptions(
			action = "Jump to Page",
			actionRowNumber = "1",
			actionTarget = "2 Page 2");

		FormsAdminNavigator.gotoFormBuilder();

		Form.deleteCurrentLastPage(
			formDropDownNumber = "1",
			formPageNumber = "3");

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Date");

		FormsAdminNavigator.gotoRules();

		var key_conditionRowNumber = "1";

		Click(locator1 = "FormRules#RULE_BUILDER_CONDITION_FIELD");

		for (var conditionField : list "Text Field 1,Text Field 2,Date") {
			var key_conditionField = "${conditionField}";

			AssertElementPresent(
				locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_FIELD",
				value1 = "${conditionField}");
		}

		var key_actionRowNumber = "1";

		Click(locator1 = "FormRules#RULE_BUILDER_ACTION_TARGET_FIELD");

		AssertElementPresent(
			key_actionRowNumber = "1",
			key_actionTarget = "2 Page 2",
			locator1 = "FormRules#RULE_BUILDER_SELECT_ACTION_TARGET");

		AssertElementNotPresent(
			key_actionRowNumber = "1",
			key_actionTarget = "3 Page 3",
			locator1 = "FormRules#RULE_BUILDER_SELECT_ACTION_TARGET");
	}

	@description = "This is a use case for LPS-71399."
	@priority = "4"
	test UseIsNotEmptyRuleToShowField {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#UseIsNotEmptyRuleToShowField";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Date");

		var fieldNameDateField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Date Field");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field",
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Date Field");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewDateFieldNotPresent(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "1");

		FormFields.viewDateField(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "Test");

		FormFields.viewDateField(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField}",
			fieldValue = "%");

		FormFields.viewDateField(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editTextWithBackspace(fieldName = "${fieldNameTextField}");

		FormFields.viewDateFieldNotPresent(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");
	}

	@description = "This is a use case for LPS-73332."
	@priority = "2"
	test ViewExistingFormRuleIsNotCopiedToNewForm {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		FormsAdminNavigator.gotoRules();

		FormRules.viewNoRules();
	}

	@description = "This is a use case for LPS-71466."
	@priority = "2"
	test ViewPredefinedValueCanBeUsedToRequireAnotherField {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ViewPredefinedValueCanBeUsedToRequireAnotherField";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Test Form");

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField1 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.gotoAdvancedTab();

		FormFields.editText(
			fieldName = "predefinedValue",
			fieldValue = "test");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		var fieldNameTextField2 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Require",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();

		FormRules.viewSummary(
			action = "Require",
			actionTarget = "Text Field 2",
			conditionField = "Text Field 1",
			conditionFieldConstant = "test",
			conditionOperator = "Is equal to",
			ruleNumber = "1");

		FormsAdminNavigator.gotoFormBuilder();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.viewRequiredAsterisk();

		FormPortlet.submit();

		FormFields.viewFieldValidationErrorMessage(
			fieldName = "${fieldNameTextField2}",
			fieldValidationErrorMessage = "This field is required.");

		Refresh();

		FormFields.editText(
			fieldName = "${fieldNameTextField1}",
			fieldValue = "testing");

		FormFields.viewRequiredAsteriskNotPresent();

		FormPortlet.submitSuccessfully();
	}

	@description = "This is a use case for LPS-73332."
	@priority = "2"
	test ViewPreviousFormRuleIsCopiedToNewDuplicatedForm {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ViewPreviousFormRuleIsCopiedToNewDuplicatedForm";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Test Form");

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Text Field 2");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		Form.duplicate(formName = "Test Form");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Copy of Test Form");

		FormsAdminNavigator.gotoRules();

		FormRules.viewSummary(
			action = "Show",
			actionTarget = "Text Field 2",
			conditionField = "Text Field 1",
			conditionFieldConstant = "test",
			conditionOperator = "Is equal to",
			ruleNumber = "1");
	}

	@description = "This is a use case for LPS-69733."
	@priority = "2"
	test ViewRuleConditionOperatorFieldOptions {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ViewRuleConditionOperatorFieldOptions";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.addTextField(fieldPositionNumber = "1");

		Form.editFieldLabelMetal(fieldValue = "Text Field");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.viewConditionOperatorOptionsNotPresent(conditionRowNumber = "1");

		FormRules.selectConditionField(
			conditionField = "Text Field",
			conditionRowNumber = "1");

		FormRules.viewConditionOperatorOptionsIsPresent(conditionRowNumber = "1");
	}

	@description = "This is a use case for LPS-75495."
	@priority = "3"
	test ViewShowRuleActivationAfterInputtingUnrelatedField {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "FormRules#ViewShowRuleActivationAfterInputtingUnrelatedField";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Test Form");

		Form.addTextField(fieldPositionNumber = "1");

		var fieldNameTextField1 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 1");

		Form.closeSidebar();

		Form.addTextField(fieldPositionNumber = "2");

		var fieldNameTextField2 = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Text Field 2");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Date");

		var fieldNameDateField = FormFields.getFieldName();

		Form.editFieldLabelMetal(fieldValue = "Date Field");

		FormFields.enableSwitcher(fieldName = "Required");

		Form.closeSidebar();

		FormsAdminNavigator.gotoRules();

		FormRules.addRule();

		FormRules.configureConditionOptions(
			conditionField = "Text Field 1",
			conditionFieldValue = "test",
			conditionOperator = "Is equal to",
			conditionRowNumber = "1",
			conditionValueType = "Value");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Date Field");

		FormRules.save();

		FormsAdminNavigator.gotoFormBuilder();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Test Form");

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormPortlet.waitFormRenderer(text = "Submit");

		FormFields.editText(
			fieldName = "${fieldNameTextField2}",
			fieldValue = "testing");

		FormFields.viewDateFieldNotPresent(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");

		FormFields.editText(
			fieldName = "${fieldNameTextField1}",
			fieldValue = "test");

		FormFields.viewDateField(
			fieldLabel = "Date Field",
			fieldName = "${fieldNameDateField}");
	}

}