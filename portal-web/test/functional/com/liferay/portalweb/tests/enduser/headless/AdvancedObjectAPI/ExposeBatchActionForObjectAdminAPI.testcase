@component-name = "portal-headless"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Headless";

	setUp {
		TestCase.setUpPortalInstanceNoSelenium();
	}

	tearDown {
		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteObjectViaAPI(objectName = "Subject");
		}
	}

	@disable-webdriver = "true"
	@priority = "4"
	test IncludeCreateBatchInActionsForObjectDefinition {
		property portal.acceptance = "true";

		task ("When invoking object admin GET '/v1.0/object-definition'") {
			var response = ObjectDefinitionAPI.getObjectDefinitions();
		}

		task ("Then the actions block include the information for the createBatch action endpoint") {
			ObjectDefinitionAPI.assertCreateBatchInActionBlock(responseToParse = "${response}");
		}
	}

	@disable-webdriver = "true"
	@priority = "4"
	test IncludeCreateBatchInActionsForObjectEntries {
		property portal.acceptance = "true";

		task ("Given subject object definition is created") {
			ObjectDefinitionAPI.createAndPublishObjectDefinition(
				en_US_label = "subject",
				en_US_plural_label = "subjects",
				name = "Subject",
				requiredStringFieldName = "name");
		}

		task ("And Given subject entry is created") {
			var subjectId = ObjectDefinitionAPI.createObjectEntryWithName(
				en_US_plural_label = "subjects",
				name = "Liferay Foundations");
		}

		task ("When invoking getStudentsPage in c/subjects") {
			var response = ObjectDefinitionAPI.getObjectEntries(en_US_plural_label = "subjects");
		}

		task ("Then the actions block include the information for the createBatch action endpoint") {
			ObjectDefinitionAPI.assertCreateBatchInActionBlock(
				en_US_plural_label = "subjects",
				responseToParse = "${response}");
		}
	}

	@disable-webdriver = "true"
	@priority = "3"
	test IncludeCreateBatchInActionsForObjectSchemas {
		property portal.acceptance = "true";

		task ("Given an object definition is created") {
			var objectDefinitionId = ObjectDefinitionAPI.createAndPublishObjectDefinition(
				en_US_label = "subject",
				en_US_plural_label = "subjects",
				name = "Subject",
				requiredStringFieldName = "name");
		}

		task ("When with get request and objectDefinitionId to retrieve objectAction, objectField, objectLayout, objectRelationship, objectValidationRule and objectView") {
			var objectSchemas = "object-actions,object-fields,object-layouts,object-relationships,object-validation-rules,object-views";
		}

		task ("Then the actions block include the information for the createBatch action endpoint") {
			ObjectDefinitionAPI.assertCreateBatchWithGetObjectSchemas(
				objectDefinitionId = "${objectDefinitionId}",
				objectSchemas = "${objectSchemas}");
		}
	}

}