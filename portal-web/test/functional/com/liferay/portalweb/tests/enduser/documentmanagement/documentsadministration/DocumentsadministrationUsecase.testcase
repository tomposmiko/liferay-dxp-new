@component-name = "portal-document-management"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property custom.properties = "default.layout.template.id=1_column";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			DMDocumentType.tearDownCP();

			DMMetadataSet.tearDownCP();

			Page.tearDownCP();

			User.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test AddAndRemoveMetadataSets {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoMetadataSets();

		DMMetadataSet.add(
			dmMetadataSetFieldNames = "Text Box",
			metadataSetName = "DM Metadata Set Name"
		);

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text Box",
			dmDocumentTypeName = "DM Document Type Name",
			metadataSetName = "DM Metadata Set Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeName = "DM Document Type Name",
			metadataSetName = "DM Metadata Set Name",
			removeMetadataSet = "true"
		);
	}

	@priority = "5"
	test AddDocumentTypeAndMetadata {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoMetadataSets();

		DMMetadataSet.add(
			dmMetadataSetFieldNames = "Boolean",
			metadataSetName = "Document Metadata Set Name"
		);

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Boolean",
			dmDocumentTypeName = "DM Document Type Name",
			metadataSetName = "Document Metadata Set Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Type Contract Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Type Contract Title",
			dmDocumentTypeName = "DM Document Type Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Type Contract Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Type Contract Title");
	}

	@priority = "4"
	test AllowMultiplePortletConfigurationsPerSite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page 1", sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Site Page 1",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		SitePages.addPublicPage(pageName = "Site Page 2", sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Site Page 2",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoSitePage(pageName = "Site Page 1", siteName = "Site Name");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoSitePage(pageName = "Site Page 2", siteName = "Site Name");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoSitePage(pageName = "Site Page 1", siteName = "Site Name");

		DMPortlet.configureDisplaySettingsPG(
			enableDisplaySettingsRelatedAssets = "false",
			enableDisplaySettingsShowSearch = "false",
			entriesToDisplayCount = "75"
		);

		Navigator.gotoSitePage(pageName = "Site Page 2", siteName = "Site Name");

		DMPortlet.viewDefaultConfigurationDisplaySettingsPG();
	}

	@description = "This is a use case for LPS-50760."
	@priority = "4"
	test AssertFileSizeValidation {
		property test.name.skip.portal.instance = "DocumentsadministrationUsecase#AssertFileSizeValidation";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentFile = "Document_1.mp3",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(
			dmDocumentSize = "4.3MB",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LAR.exportPortlet(larFileName = "DM.portlet.lar");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Service",
			configurationScope = "System Scope"
		);

		Type(
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "300000",
			key_fieldLabel = "Maximum File Size"
		);

		ScrollWebElementIntoView(locator1 = "Button#SAVE");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoAddDocumentType(dmDocumentTypeName = "${dmDocumentTypeName}");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Upload documents no larger than 293KB."
		);

		DMDocument.editCmd(
			dmDocumentFileEdit = "Document_1.mp4",
			dmDocumentTitle = "Document_1.mp4"
		);

		Button.clickPublish();

		AssertTextEquals(
			locator1 = "Message#MAX_FILESIZE_ALERT",
			value1 = "Please enter a file with a valid file size no larger than 300000."
		);

		Button.clickCancel();

		LAR._gotoExportImport();

		AssertElementPresent(locator1 = "IFrame#DIALOG");

		LAR._export(
			exportPermissions = "${exportPermissions}",
			larFileName = "DM.portlet.lar"
		);

		SelectFrame(value1 = "relative=top");
	}

	@priority = "5"
	test CannotViewFolderAsSiteMember {
		property testray.component.names = "Training";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Site.assignUserSitesCP(siteName = "Site Name", userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addSubfolderPG(
			dmSubFolderDescription = "DM Subfolder1 Description",
			dmSubFolderName = "Subfolder1 Name"
		);

		DMNavigator.gotoFolder(dmFolderName = "Subfolder1 Name");

		DMFolder.viewPG(dmFolderName = "Subfolder1 Name");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc"
		);

		DMFolder.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoFolderPermissions(dmFolderName = "DM Folder Name");

		for (var permissionsInLineUncheckListsCount : list "INLINE_PERMISSIONS_ADD_SUBFOLDER_CHECKBOX,INLINE_PERMISSIONS_ADD_SHORTCUT_CHECKBOX,INLINE_PERMISSIONS_ADD_DOCUMENT_CHECKBOX,INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX,INLINE_PERMISSIONS_VIEW_CHECKBOX") {
			Role.removePermissionPG(
				permissionDefinitionKey = "${permissionsInLineUncheckListsCount}",
				roleTitle = "Site Member"
			);
		}

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest"
		);

		IFrame.selectTopFrame();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		DMPortlet.viewDefaultPG();
	}

	@priority = "5"
	test CannotViewMultipleDocumentsAsSiteMember {
		property testray.component.names = "Training";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.addMultiplePG(
			dmDocumentFileList = "Document_1.jpeg,Document_2.docx,Document_3.mp3",
			viewableBy = "Owner"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name"
		);

		for (var dmDocumentTitle : list "Document_1.jpeg,Document_2.docx,Document_3.mp3") {
			DMDocument.cannotViewCP(dmDocumentTitle = "${dmDocumentTitle}");
		}
	}

	@description = "This test ensures that a checked out document cannot be edited by another user."
	@priority = "5"
	test CheckOutDocument {
		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(roleTitle = "Administrator", userScreenName = "usersn");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(
			pageName = "Documents and Media Page",
			portletName = "Documents and Media"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc"
		);

		DMDocument.enableActionsMenuOnPortlet();

		Refresh();

		DMDocument.checkoutPG(dmDocumentTitle = "Document_1.doc");

		User.logoutUserPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewCheckedoutPG(
			dmDocumentTitle = "Document_1.doc",
			status = "Approved"
		);

		for (var menuItem : list "Checkout,Edit,Move,Move to Recycle Bin") {
			AssertElementNotPresent(
				locator1 = "MenuItem#ANY_MENU_ITEM",
				key_menuItem = "${menuItem}"
			);
		}
	}

	@description = "This test checks if the file extension upload restrictions in System Settings works as expected."
	@priority = "5"
	test CheckValidationForFileEntries {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Service",
			configurationScope = "System Scope"
		);

		ScrollWebElementIntoView(locator1 = "TextArea#ANY", key_text = "fileExtensions");

		Type(locator1 = "TextArea#ANY", value1 = ".doc", key_text = "fileExtensions");

		ScrollWebElementIntoView(locator1 = "Button#UPDATE");

		AssertClick(locator1 = "Button#UPDATE", value1 = "Update");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		for (var dmDocumentTitle : list "Document_1.docx,Document_1.jpeg,Document_1.jpg,Document_1.mp4,Document_1.pdf,Document_1.png,Document_1.ppt,Document_1.pptx,Document_1.txt,Document_1.xls,Document_1.xlsx") {
			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Documents and Media"
			);

			DMDocument.addCP(
				dmDocumentFile = "${dmDocumentTitle}",
				dmDocumentTitle = "${dmDocumentTitle}",
				validationError = "Please enter a file with a valid extension (.doc)."
			);
		}
	}

	@priority = "4"
	test Comments {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(dmFolderName = "Folder1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "Description of Folder2",
			dmFolderName = "Folder2"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.viewCP(dmFolderName = "Folder1");

		DMDocument.addCP(
			dmDocumentDescription = "This is a file with zero bytes",
			dmDocumentTitle = "Zero Document File",
			nullFile = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.viewCP(dmFolderName = "Folder1");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Zero Document File");

		DMDocument.viewCP(
			dmDocumentSize = "0KB",
			dmDocumentTitle = "Zero Document File"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Activities");

		AssertTextEquals(
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_FOLDER_TITLE",
			value1 = "Folder1",
			key_dmFolderName = "Folder1"
		);

		AssertClick(
			locator1 = "Activities#ACTIVITY_TITLE_ASSET_NAME",
			value1 = "Zero Document File",
			key_assetName = "Zero Document File"
		);

		DMDocument.viewDocumentTitleCmdPG(dmDocumentTitle = "Zero Document File");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder1");

		DMDocumentComment.addPG(
			commentBody = "This is the first comment",
			dmDocumentTitle = "Zero Document File"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder1");

		DMDocumentComment.addPG(
			commentBody = "This is comment #2",
			dmDocumentTitle = "Zero Document File"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder1");

		DMDocumentComment.viewPG(
			commentBody = "This is the first comment",
			dmDocumentTitle = "Zero Document File"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder1");

		DMDocumentComment.viewPG(
			commentBody = "This is comment #2",
			dmDocumentTitle = "Zero Document File"
		);
	}

	@priority = "3"
	test ConfigureXugglerVideoPreviewSizePG {
		property custom.properties = "xuggler.enabled=true${line.separator}dl.file.entry.preview.video.width=0${line.separator}dl.file.entry.preview.video.height=0";
		property dummy.socket.proxy.disabled = "true";
		property test.name.skip.portal.instance = "DocumentsadministrationUsecase#ConfigureXugglerVideoPreviewSizePG";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.configureExternalServices(enableXuggler = "true");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp4",
			dmDocumentTitle = "Document_1.mp4"
		);

		Pause(locator1 = "180000");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document_1.mp4");

		Pause(locator1 = "30000");

		var videoGenerationTimeCounter = "0";
		var videoGenerationTimeMaxWaitTime = "6";

		while ((!("${videoGenerationTimeCounter}" == "${videoGenerationTimeMaxWaitTime}")) && (IsElementPresent(locator1 = "Message#INFO"))) {
			var videoGenerationTimeCounter = MathUtil.sum("${videoGenerationTimeCounter}", "1");

			Pause(locator1 = "30000");

			Navigator.gotoPage(pageName = "Documents and Media Page");

			DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document_1.mp4");
		}

		var videoPreviewThumbnailLink = selenium.getAttribute("//video@poster");

		Navigator.openSpecificURL(url = "${videoPreviewThumbnailLink}");

		Pause(locator1 = "1000");

		AssertElementNotPresent(
			locator1 = "DocumentsAndMediaDocument#VIDEO_GENERATION_THUMBNAIL_RESOLUTION",
			key_videoGenerationThumbnailResolution = "640"
		);

		AssertElementNotPresent(
			locator1 = "DocumentsAndMediaDocument#VIDEO_GENERATION_THUMBNAIL_RESOLUTION",
			key_videoGenerationThumbnailResolution = "360"
		);

		AssertElementPresent.assertElementPresent(
			locator1 = "DocumentsAndMediaDocument#VIDEO_GENERATION_THUMBNAIL_RESOLUTION",
			key_videoGenerationThumbnailResolution = "1280"
		);

		AssertElementPresent.assertElementPresent(
			locator1 = "DocumentsAndMediaDocument#VIDEO_GENERATION_THUMBNAIL_RESOLUTION",
			key_videoGenerationThumbnailResolution = "720"
		);
	}

	@priority = "5"
	test ImportAudioAndLimitPermissionsToSubfolder {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Moon Rocks 101");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Regular Role Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionsCP(
			permissionDefinitionKeys = "SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_GENERAL_PERMISSIONS_ACCESS_IN_SITE_ADMINISTRATION_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_GENERAL_PERMISSIONS_VIEW_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_ADD_FOLDER_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_VIEW_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_FOLDER_ADD_SUBFOLDER_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_FOLDER_VIEW_CHECKBOX,SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENT_UPDATE_CHECKBOX",
			roleTitle = "Regular Role Name"
		);

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "Moon Rocks 101");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			newPassword = "test1",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(
			roleTitle = "Regular Role Name",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoSite(site = "Moon Rocks 101");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderName = "Unit 1 - Moon Rock Chemistry",
			siteName = "Moon Rocks 101"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.viewCP(
			dmFolderName = "Unit 1 - Moon Rock Chemistry",
			specificNameFolder = "true"
		);

		DMFolder.addSubfolderCP(dmSubFolderName = "The Properties of Moon Rocks");

		DMFolder.viewCP(
			dmFolderName = "The Properties of Moon Rocks",
			specificNameFolder = "true"
		);

		DMFolder.addSubfolderCP(dmSubFolderName = "Audio Lectures");

		DMFolder.viewCP(dmFolderName = "Audio Lectures");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Dr. Winters Introductory Audio Lecture.ogg",
			dmDocumentTitle = "Dr. Winters Introductory Audio Lecture.ogg"
		);

		Refresh();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.viewCP(
			dmFolderName = "Unit 1 - Moon Rock Chemistry",
			specificNameFolder = "true"
		);

		DMFolder.viewCP(
			dmFolderName = "The Properties of Moon Rocks",
			specificNameFolder = "true"
		);

		DMFolder.removePermissions(
			dmFolder = "Audio Lectures",
			permissionNameList = "ADD_DOCUMENT,ADD_SHORTCUT,ADD_SUBFOLDER",
			roleTitle = "Site Member"
		);

		IFrame.closeFrame();

		Refresh();

		ProductMenu.gotoSite(site = "Moon Rocks 101");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LAR.importPortlet(
			larFileName = "moon-rocks-101-materials-structure.lar",
			uploadFrom = "dependencies"
		);
	}

	@priority = "3"
	test ImportDocumentWithDBStore {
		property custom.properties = "dl.store.impl=com.liferay.portal.store.db.DBStore";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LAR.exportPortlet(larFileName = "DM_Test_DB_Store.lar");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LAR.importPortlet(larFileName = "DM_Test_DB_Store.lar");

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@priority = "4"
	test RemoveCurrentDisplayStyleViews {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMPortlet.configureDisplaySettingsPG(currentDisplayStyleViews = "");
	}

	@priority = "4"
	test SelectMultipleDocumentsAndDeleteViaActionsButton {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		for (var entryCount : list "1,2,3") {
			DMDocument.addPG(
				dmDocumentDescription = "DM Document Description",
				dmDocumentFile = "Document_${entryCount}.doc",
				dmDocumentTitle = "Document_${entryCount}.doc"
			);
		}

		Navigator.gotoPage(pageName = "Documents and Media Page");

		for (var entryCount : list "1,2,3") {
			var key_dmDocumentTitle = "Document_${entryCount}.doc";

			Check(locator1 = "DocumentsAndMedia#ICON_DOCUMENT_CHECKBOX");
		}

		Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		DMDocument.viewDefaultCP();
	}

	@priority = "5"
	test UpdateDocumentTypeWithPermissions {
		property test.name.skip.portal.instance = "DocumentsadministrationUsecase#UpdateDocumentTypeWithPermissions";
		property testray.component.names = "Training";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "Images",
			dmDocumentTypeFieldNames = "Text Box,Date",
			dmDocumentTypeName = "Photos"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.executeServerResourcesActions(
			actionsDescription = "Clean up permissions."
		);

		Navigator.openURL();

		JSONRole.addRegularRole(
			roleKey = "Technical Writer",
			roleTitle = "Technical Writer"
		);

		for (var resourceActionIndex : list "DELETE,VIEW,UPDATE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.document.library.kernel.model.DLFileEntryType",
				roleTitle = "Technical Writer"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_document_library_web_portlet_DLAdminPortlet",
			roleTitle = "Technical Writer"
		);

		for (var resourceActionIndex : list "VIEW,ADD_FOLDER,ADD_DOCUMENT") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.document.library",
				roleTitle = "Site Member",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "UPDATE,DELETE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.document.library.kernel.model.DLFileEntry",
				roleTitle = "Site Member",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "UPDATE,ADD_SUBFOLDER,ADD_DOCUMENT") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.document.library.kernel.model.DLFolder",
				roleTitle = "Site Member",
				roleType = "site"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Site Member",
			roleType = "site"
		);

		for (var resourceActionIndex : list "VIEW,ACCESS_IN_CONTROL_PANEL") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_document_library_web_portlet_DLAdminPortlet",
				roleTitle = "Site Member",
				roleType = "site"
			);
		}

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Site.assignUserSitesCP(siteName = "${siteName}", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(
			roleTitle = "Technical Writer",
			userScreenName = "usersn"
		);

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Site.assignUserSitesCP(siteName = "${siteName}", userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		AssertVisible(locator1 = "Portlet#HEADER", value1 = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldNames = "Radio",
			dmDocumentTypeName = "Photos"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewCannotAddRepository();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocumentType.viewNoAvailableActionsViaDocumentTypesPG();
	}

	@description = "This is a use case for LPS-53009"
	@priority = "5"
	test ViewDateFieldRequiredInContract {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldRequiredEdit = "Effective Date",
			dmDocumentTypeName = "Contract"
		);

		DMDocumentType.edit(
			dmDocumentTypeFieldRequiredEdit = "Expiration Date",
			dmDocumentTypeName = "Contract"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoAddDocumentType(dmDocumentTypeName = "Contract");

		AssertElementPresent(
			locator1 = "Icon#ASTERISK_DATE_FIELD",
			key_fieldFieldLabel = "Effective Date"
		);

		AssertElementPresent(
			locator1 = "Icon#ASTERISK_DATE_FIELD",
			key_fieldFieldLabel = "Expiration Date"
		);
	}

	@priority = "5"
	test ViewDocumentWithGlobalScope {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page - Global",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page - Global",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page - Global");

		Portlet.addPG(portletName = "Documents and Media");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		DMFolder.addSubfolderCP(
			dmSubFolderDescription = "DM SubFolder Description",
			dmSubFolderName = "DM SubFolder Name"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		DMFolder.viewCP(dmFolderName = "DM SubFolder Name", specificNameFolder = "true");

		Refresh();

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentSize = "0KB",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page - Global");

		DMPortlet.configureScopetoGlobalPG(currentScope = "Liferay");

		Navigator.gotoPage(pageName = "Documents and Media Page - Global");

		DMPortlet.configureRootFolderPG(dmFolderName = "DM Folder Name");

		Navigator.gotoPage(pageName = "Documents and Media Page - Global");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page - Global");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		Refresh();

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMPortlet.viewDefaultPG(portletName = "Documents and Media");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates"
		);

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage",
			rowEntry = "Site Template Name"
		);

		SitePages.addPrivatePage(
			pageName = "DM Site Page Name - Global",
			siteTemplate = "true"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addSiteTemplateCP(
			siteName = "DM Site Name",
			siteTemplateName = "Site Template Name"
		);

		ProductMenu.gotoSite(site = "DM Site Name");

		Navigator.gotoSitePage(
			pageName = "DM Site Page Name - Global",
			siteName = "DM Site Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "DM Site Page Name - Global",
			siteName = "DM Site Name"
		);

		DMPortlet.configureScopetoGlobalPG(currentScope = "DM Site Name");

		Navigator.gotoSitePage(
			pageName = "DM Site Page Name - Global",
			siteName = "DM Site Name"
		);

		DMPortlet.configureRootFolderPG(dmFolderName = "DM Folder Name");

		Navigator.gotoSitePage(
			pageName = "DM Site Page Name - Global",
			siteName = "DM Site Name"
		);

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		Refresh();

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title"
		);
	}

	@priority = "5"
	test ViewFileCategoryAndTags {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.addCP(
			categoryDescription = "Category Description",
			categoryName = "Category Name",
			vocabularyName = "Topic"
		);

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Tags"
		);

		var tagNameList = "tag1,tag2";

		for (var tagName : list "${tagNameList}") {
			Tag.addCP(tagName = "${tagName}");
		}

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			categoryName = "Category Name",
			dmDocumentDescription = "Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document Title",
			tagNameList = "tag1,tag2",
			vocabularyName = "Topic"
		);

		Click(
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_VERTICAL_ELLIPSIS",
			key_dmDocumentTitle = "Document Title"
		);

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Categorization");

		AssertTextEquals(
			locator1 = "AssetCategorization#CATEGORY",
			value1 = "Category Name",
			key_categoryName = "Category Name"
		);

		for (var tagName : list "${tagNameList}") {
			var key_tagName = "${tagName}";

			AssertTextEquals(locator1 = "AssetCategorization#TAG", value1 = "${tagName}");
		}

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			categoryName = "Category Name",
			dmDocumentDescription = "Document Description",
			dmDocumentTitle = "Document Title",
			tagNameList = "tag1,tag2"
		);
	}

	@priority = "5"
	test ViewFolderAsOrganizationUser {
		property testray.component.names = "Training";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(orgName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.gotoCP(
			orgName = "Organization Name",
			searchToken = "Organization Name"
		);

		User.searchCP(searchTerm = "usersn");

		Organization.viewAssignMemberCP(
			userName = "userfn userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoFolderPermissions(dmFolderName = "DM Folder Name");

		for (var permissionsInLineUncheckListsCount : list "INLINE_PERMISSIONS_ADD_SUBFOLDER_CHECKBOX,INLINE_PERMISSIONS_ADD_SHORTCUT_CHECKBOX,INLINE_PERMISSIONS_ADD_DOCUMENT_CHECKBOX,INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX,INLINE_PERMISSIONS_VIEW_CHECKBOX") {
			Role.removePermissionPG(
				permissionDefinitionKey = "${permissionsInLineUncheckListsCount}",
				roleTitle = "Site Member"
			);
		}

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest"
		);

		IFrame.selectTopFrame();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		DMPortlet.viewDefaultPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoFolderPermissions(dmFolderName = "DM Folder Name");

		for (var permissionsInLineUncheckListsCount : list "INLINE_PERMISSIONS_ADD_DOCUMENT_CHECKBOX,INLINE_PERMISSIONS_VIEW_CHECKBOX,CONTENT_PERMISSIONS_ACCESS_CHECKBOX") {
			Role.definePermissionPG(
				permissionDefinitionKey = "${permissionsInLineUncheckListsCount}",
				roleTitle = "Organization User"
			);
		}

		IFrame.selectTopFrame();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc"
		);
	}

	@priority = "4"
	test ViewPortletAfterRenamingDocumentWithDuplicateTitlePG {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMDocument.addPG(
			dmDocument = "Duplicate",
			dmDocumentDescription = "DM Document 2 Description",
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "DM Document Title"
		);

		PortletEntry.inputTitle(title = "DM Document 2 Title");

		PortletEntry.publish();

		Pause(locator1 = "1000");

		AssertTextNotPresent(value1 = "Documents and Media is temporarily unavailable.");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Pause(locator1 = "1000");

		AssertTextNotPresent(value1 = "Documents and Media is temporarily unavailable.");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document 2 Description",
			dmDocumentTitle = "DM Document 2 Title"
		);
	}

	@priority = "4"
	test ViewSingleDocumentSelectionDoesNotCheckAllFileSelectionCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document1 Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document1 Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document2 Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document2 Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.checkDocumentCheckboxCP(dmDocumentTitle = "DM Document1 Title");

		AssertElementPresent(locator1 = "Checkbox#SELECT_ALL_CHECKBOX_TICK");

		DMDocument.uncheckDocumentCheckboxCP(dmDocumentTitle = "DM Document1 Title");

		AssertElementNotPresent(locator1 = "Checkbox#SELECT_ALL_CHECKBOX_TICK");

		DMDocument.checkDocumentCheckboxCP(dmDocumentTitle = "DM Document1 Title");

		DMDocument.checkDocumentCheckboxCP(dmDocumentTitle = "DM Document2 Title");

		AssertElementPresent(locator1 = "Checkbox#LEXICON_SELECT_ALL_INPUT");

		AssertElementPresent(locator1 = "Checkbox#LEXICON_SELECT_ALL_CHECKED");
	}
}