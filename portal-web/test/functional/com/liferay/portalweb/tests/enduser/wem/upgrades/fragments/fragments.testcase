@component-name = "portal-upgrades"
definition {

	property database.types = "mariadb,mysql,postgresql";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Upgrades Foundation";
	property testray.main.component.name = "Upgrades Foundation";

	setUp {
		SignIn.signIn();

		Smoke.viewWelcomePage();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");
	}

	@description = "This is a use case for LPS-106057."
	@priority = "5"
	test PagesFragments704 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		echo("Checked Portlet");
	}

	@priority = "5"
	test PagesFragments713 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.10.3";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Private",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Test Template Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");
	}

	@priority = "5"
	test PagesFragments721 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Public Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");
	}

	@description = "This is a use case for LPS-106057."
	@priority = "5"
	test PagesFragments7016 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.10.6";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Site Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "${portletName}");

		echo("Checked Portlet");
	}

	@priority = "5"
	test PagesFragments71103 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.10.3";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Private",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Test Template Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");
	}

	@priority = "5"
	test PagesFragments72101 {
		property data.archive.type = "data-archive-fragments";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.10.1";

		var siteName = "guest";
		var portletName = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Public Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Public Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Widget Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Content Page",
			siteName = "${siteName}");

		AssertTextNotPresent(value1 = "The requested resource could not be found.");

		Navigator.gotoSitePage(
			pageName = "Global Public Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.openPrivateSitePageURL(
			pageName = "Global Private Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Wiki");

		Portlet.viewTitle(portletName = "Categories Navigation");

		Portlet.viewTitle(portletName = "Tags Navigation");

		Navigator.gotoSitePage(
			pageName = "Public Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Widget Page",
			siteName = "${siteName}");

		Portlet.viewTitle(portletName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Public Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");

		Navigator.openPrivateSitePageURL(
			pageName = "Private Custom Content Page",
			siteName = "${siteName}");

		AssertVisible(
			key_content = "Submit",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertVisible(
			key_content = "Cancel",
			key_fragmentClass = "footer",
			locator1 = "Fragment#FRAGMENT");

		AssertElementPresent(locator1 = "Button#SUBMIT");

		AssertElementPresent(locator1 = "Button#CANCEL");
	}

}