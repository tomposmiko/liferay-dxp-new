@component-name = "portal-collaboration"
definition {

	property app.server.bundles.size = "1";
	property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
	property databases.size = "1";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Staging DM Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			JSONGroup.deleteGroupByName(groupName = "Remote Site");
		}
	}

	@description = "This test covers LPS-99853. It ensures that a user can republish a document that has been checked out again when enabling remote staging."
	@priority = 4
	test DocumentCanBeRepublishedAfterCheckout {
		property custom.properties = "jsonws.web.service.paths.excludes=${line.separator}tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property test.name.skip.portal.instance = "RemoteStagingDM#DocumentCanBeRepublishedAfterCheckout";

		Staging.remoteStagingSetUp(
			remotePort = 9080,
			remoteStaging = "true",
			siteName = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.checkoutPG(dmDocumentTitle = "Document_1.doc");

		User.loginPG(
			nodePort = 9080,
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		User.loginPG(
			nodePort = 8080,
			password = "test",
			userEmailAddress = "test@liferay.com");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		DMDocument.saveAndCheckinEditedDocumentPG(
			dmDocumentDescriptionEdit = "Edited DM Document Description",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.checkoutPG(dmDocumentTitle = "Document_1.doc");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		AssertConsoleTextNotPresent(value1 = "NotSerializableException");
	}

	@description = "This is a use case for LPS-89175."
	@priority = 3
	test StagingRemoteLiveDeleteDocumentWithWebContentField {
		property test.name.skip.portal.instance = "RemoteStagingDM#StagingRemoteLiveDeleteDocumentWithWebContentField";

		Staging.remoteStagingSetUp(
			remotePort = 9080,
			remoteStaging = "true",
			siteName = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Web Content",
			dmDocumentTypeName = "DM Document Type Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		DMDocument.addDocumentTypePG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			webcontentField = "WC WebContent Title");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Pause(locator1 = 5000);

		AssertConsoleTextNotPresent(value1 = "RuntimeException");

		Navigator.gotoSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Staging DM Page",
			siteName = "Remote Site");

		DMDocument.viewPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name");
	}

}