@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";
	var globalSiteName = "Global";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			WebContent.tearDownCP();

			WebContentTemplates.tearDownCP();

			WebContentStructures.tearDownCP();

			WebContentStructures.tearDownCP(siteScopeName = "${globalSiteName}");

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test AddAndViewStructureAndTemplateWithPermissions {
		property testray.component.names = "Permissions,Roles,Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Home");

		JSONRole.addRegularRole(
			roleKey = "Regular Role Name",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ARTICLE",
			resourceName = "com.liferay.journal",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.journal",
			roleTitle = "Regular Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.journal",
			roleTitle = "Site Member",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ARTICLE",
			resourceName = "com.liferay.journal",
			roleTitle = "Site Member",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Site Member",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Site Member",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Site Member",
			roleType = "site"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(
			addRoleViewPermissions = "Regular Role Name",
			structureName = "WC Structure Name"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Site Member"
		);

		IFrame.closeFrame();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Click(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
			key_rowEntry = "WC Template Name"
		);

		MenuItem.click(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#DIALOG");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = "Regular Role Name"
		);

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Site Member"
		);

		SelectFrameTop();

		Refresh();

		for (var number : list "1,2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.addCP(
				userEmailAddress = "user${number}@liferay.com",
				userFirstName = "userfn${number}",
				userLastName = "userln${number}",
				userScreenName = "usersn${number}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "user${number}@liferay.com",
				userScreenName = "usersn${number}"
			);

			ProductMenu.gotoSite(site = "Site Name");

			ProductMenu.gotoPortlet(
				category = "Members",
				panel = "Site Administration",
				portlet = "Site Memberships"
			);

			Site.assignUserAsMemberCP(
				userFirstName = "userfn${number}",
				userLastName = "userln${number}",
				userScreenName = "usersn${number}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(
			roleTitle = "Regular Role Name",
			userScreenName = "usersn1"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "user1@liferay.com");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name",
			userEditPermission = "noEditPermission"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "user2@liferay.com");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		AssertTextNotPresent(value1 = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		AssertTextNotPresent(value1 = "WC Template Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionsCP(
			permissionDefinitionKeys = "SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_FOLDER_ADD_SUBFOLDER_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_FOLDER_ADD_WEB_CONTENT_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_FOLDER_VIEW_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_ARTICLE_UPDATE_CHECKBOX",
			roleTitle = "Regular Role Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "user1@liferay.com");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addSubfolderCP(
			folderName = "WC Folder Name",
			subfolderDescription = "WC SubFolder Description",
			subfolderName = "WC SubFolder Name"
		);
	}

	@priority = "5"
	test AddAudioViaWebContent {
		property custom.properties = "editor.wysiwyg.portal-impl.portlet.ddm.text_html.ftl=ckeditor";
		property dummy.socket.proxy.disabled = "true";
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "WebContentUseCase#AddAudioViaWebContent";
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.configureExternalServices(enableXuggler = "true");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp3",
			dmDocumentTitle = "Document_1.mp3"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.mp3");

		DMNavigator.gotoURLDetail();

		var dmDocumentURL = selenium.getElementValue("//input[contains(@id,'url')]");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addViaCKEditor(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.uploadAudio(dmDocumentURL = "${dmDocumentURL}", navTab = "URL");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewAudioViaWCD();
	}

	@description = "This is a use case for LPS-82492."
	@priority = "5"
	test AddCreatedStructureForImportedTemplate {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "Content List");

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "contents"
		);

		DynamicDataMapping.editFieldTip(
			fieldFieldLabel = "Web Content",
			fieldTip = "Choose as many content pieces as you would like to feature."
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Web Content");

		WebContentStructures.saveCP(structureName = "Content List");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "content-display-templates.lar",
			uploadFrom = "dependencies"
		);

		Refresh();

		NavItem.gotoTemplates();

		for (var templateName : list "Carousel Display,Thumbnail Display,Content List Display") {
			WebContentNavigator.gotoViewTemplate(templateName = "${templateName}");

			WebContentTemplates.inputStructure(structureName = "Content List");

			DDLDataDefinition.save();
		}

		for (var templateName : list "Carousel Display,Thumbnail Display,Content List Display") {
			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentTemplates.viewCP(
				structureName = "Content List",
				templateDescription = "",
				templateName = "${templateName}"
			);
		}
	}

	@priority = "3"
	test AddEmbeddedPortletFreemarkerTemplate {
		property osgi.app.includes = "currency-converter";
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		LexiconEntry.gotoAdd();

		WebContentTemplates.inputTemplateAddScreenFields(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		var templateScript = '''<@liferay_portlet["runtime"] portletName="com_liferay_hello_world_web_portlet_HelloWorldPortlet" />''';

		Type.typeAceEditor(
			locator1 = "DDMEditTemplate#SCRIPT_CONTENT_FIELD_TEXT_AREA",
			value1 = "${templateScript}"
		);

		PortletEntry.save();

		SelectFrameTop();

		ProductMenu.gotoSite(site = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		ProductMenu.gotoSite(site = "Test Site Name");

		WebContent.addStructuredPGViaWCD(
			structureName = "WC Structure Name",
			webContentTitle = "WC Title"
		);

		Portlet.viewBody(
			portletBody = "Welcome to Liferay",
			portletName = "Hello World"
		);
	}

	@priority = "3"
	test AddEmbeddedPortletVelocityTemplate {
		property osgi.app.includes = "currency-converter";
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		LexiconEntry.gotoAdd();

		WebContentTemplates.inputTemplateAddScreenFields(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateLanguage = "vm",
			templateName = "WC Template Name"
		);

		var templateScript = '''$theme.runtime("com_liferay_hello_world_web_portlet_HelloWorldPortlet")''';

		Type.typeAceEditor(
			locator1 = "DDMEditTemplate#SCRIPT_CONTENT_FIELD_TEXT_AREA",
			value1 = "${templateScript}"
		);

		PortletEntry.save();

		SelectFrameTop();

		ProductMenu.gotoSite(site = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		ProductMenu.gotoSite(site = "Test Site Name");

		WebContent.addStructuredPGViaWCD(
			structureName = "WC Structure Name",
			webContentTitle = "WC Title"
		);

		Portlet.viewBody(
			portletBody = "Welcome to Liferay",
			portletName = "Hello World"
		);
	}

	@priority = "5"
	test AddExistingPageAsDisplayPageInSiteCP {
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Blank Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		Navigator.openSiteURL(siteName = "Blank Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.openSiteURL(siteName = "Blank Site Name");

		AssetPublisherPortlet.configureDisplaySettings(
			displaySettings = "Set as the Default Asset Publisher for This Page"
		);

		Navigator.openSiteURL(siteName = "Blank Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		Navigator.openSiteURL(siteName = "Blank Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.editDisplayPage(
			pageName = "Site Page Name",
			pageType = "Public Pages",
			webContentTitle = "Web Content Title"
		);

		Alert.viewSuccessMessage();

		Navigator.openSiteURL(siteName = "Blank Site Name");

		WebContent.viewPGViaAP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);
	}

	@priority = "5"
	test AddImageToWebContentViaItemSelector {
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Image Page");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		ItemSelector.gotoItemSelectorViaAlloyEditor();

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_3.png"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Web Content Image Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Image Page");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Image Page");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		AssertElementPresent(locator1 = "WCD#WEB_CONTENT_INLINE_IMAGE");
	}

	@priority = "5"
	test AddLocalizedWebContentViaSourceEditor {
		property test.name.skip.portal.instance = "WebContentUseCase#AddLocalizedWebContentViaSourceEditor";
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		Navigator.gotoPage(pageName = "Test Page Name");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Test Page Name");

		WebContentNavigator.gotoAddPGViaWCD();

		WebContent.addCP(webContentTitle = "Basic S.P.A.C.E. Banner");

		AlloyEditor.addSourceContent(
			content = '''
<h2 class="text-center">Space Program Academy of Continuing Education</h2>

<p class="text-center">Dare to Dream out of this world</p>
'''
		);

		Button.clickPublish();

		Navigator.gotoPage(pageName = "Test Page Name");

		WebContent.viewPGViaWCD(
			webContentContent = "Space Program Academy of Continuing Education Dare to Dream out of this world"
		);

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "Basic S.P.A.C.E. Banner"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "ja-JP");

		WebContent.addCP(
			webContentTitle = "Basic S.P.A.C.E. Banner (Japanese Translation)"
		);

		AlloyEditor.addDescription(
			description = "A Japanese translation of the basic front page banner"
		);

		AlloyEditor.addSourceContent(
			content = '''
<h2 class="text-center">Space Program 大学生涯教育</h2>

<p class="text-center">地球から、宇宙の果てへ</p>
'''
		);

		Button.clickPublish();

		Navigator.gotoPage(pageName = "Test Page Name");

		Portlet.addPG(portletName = "Language Selector");

		Navigator.gotoPage(pageName = "Test Page Name");

		LanguagePortlet.selectLanguagePG(locale = "ja_JP", textIcon = "日本語-日本");

		Navigator.gotoPage(pageName = "Test Page Name");

		WebContent.viewPGViaWCD(webContentContent = "Space Program 大学生涯教育 地球から、宇宙の果てへ");

		Navigator.gotoPage(pageName = "Test Page Name");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States"
		);

		Navigator.gotoPage(pageName = "Test Page Name");

		WebContent.viewPGViaWCD(
			webContentContent = "Space Program Academy of Continuing Education Dare to Dream out of this world"
		);

		AssertTextNotPresent(
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = "Space Program 大学生涯教育 地球から、宇宙の果てへ"
		);
	}

	@priority = "4"
	test AddVideoViaWebContent {
		property custom.properties = "editor.wysiwyg.portal-impl.portlet.ddm.text_html.ftl=ckeditor";
		property dummy.socket.proxy.disabled = "true";
		property test.name.skip.portal.instance = "WebContentUseCase#AddVideoViaWebContent";
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.configureExternalServices(enableXuggler = "true");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp4",
			dmDocumentTitle = "Document_1.mp4"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.mp4");

		DMNavigator.gotoURLDetail();

		var dmDocumentURL = selenium.getElementValue("//input[contains(@id,'url')]");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addViaCKEditor(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.uploadVideo(dmDocumentURL = "${dmDocumentURL}", navTab = "URL");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewVideoViaWCD();
	}

	@description = "This is a use case for LPS-82492."
	@priority = "5"
	test AddWebContentFromImportedStructureAndTemplate {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "frontPage-structures.lar",
			uploadFrom = "dependencies"
		);

		Refresh();

		NavItem.gotoStructures();

		for (var structureName : list "3 Columns with Images,Footer Content,1 Column Banner") {
			WebContentStructures.viewCP(structureName = "${structureName}");
		}

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "space-templates.lar",
			uploadFrom = "dependencies"
		);

		for (var templateName : list "3 Columns with Images Template,Footer Content Template,1 Column Banner Template,News,Events") {
			WebContentTemplates.viewCP(
				templateDescription = "",
				templateName = "${templateName}"
			);

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);
		}

		WebContentNavigator.gotoAddWithStructureCP(structureName = "1 Column Banner");

		WebContent.addWithStructureCP(
			description = "The Structured Banner for the S.P.A.C.E. FrontPage",
			fieldName = "BannerTitle",
			fieldName2 = "BannerHeading",
			webContentImage = "Spaceport.jpg",
			webContentTextBox = "Space Program Academy of Continuing Education",
			webContentTextBox2 = "Dare to dream out of this world",
			webContentTitle = "S.P.A.C.E. Banner"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "S.P.A.C.E. Banner");

		WebContent.viewWithStructureCP(
			description = "The Structured Banner for the S.P.A.C.E. FrontPage",
			fieldName = "BannerTitle",
			fieldName2 = "BannerHeading",
			webContentImage = "Spaceport.jpg",
			webContentTextBox = "Space Program Academy of Continuing Education",
			webContentTextBox2 = "Dare to dream out of this world",
			webContentTitle = "S.P.A.C.E. Banner"
		);
	}

	@priority = "4"
	test AddWebContentRemoveGuestViewPermission {
		property test.name.skip.portal.instance = "WebContentUseCase#AddWebContentRemoveGuestViewPermission";
		property testray.component.names = "Permissions,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Web Content",
			configurationName = "Web Content",
			configurationScope = "Virtual Instance Scope"
		);

		FormFields.enableCheckbox(fieldName = "articleViewPermissionsCheckEnabled");

		SystemSettings.saveConfiguration();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		PermissionsInline.gotoWCArticle(webContentTitle = "WC WebContent Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "WCD Page");

		Navigator.gotoPage(pageName = "WCD Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "WCD Page");

		PermissionsInline.gotoConfigurationPG();

		AssertChecked(
			locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX",
			key_roleTitle = "guest"
		);

		SelectFrame(value1 = "relative=top");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		User.logoutPG();

		Navigator.gotoPage(pageName = "WCD Page");

		AssertTextNotPresent(value1 = "Web Content Display");

		AssertTextNotPresent(value1 = "WC WebContent Content");
	}

	@priority = "4"
	test AddWebContentViaWCDWithGlobalStructureAndLocalTemplate {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Global WC Structure Description",
			structureName = "Global WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "Global WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Global WC Structure Name",
			templateDescription = "Local WC Template Description",
			templateFieldNames = "Text",
			templateName = "Local WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.addWithGlobalStructurePGViaWCD(
			fieldName = "Text",
			selectStructureName = "Basic Web Content",
			structureName = "Global WC Structure Name",
			templateName = "Local WC Template Name",
			webContentContent = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AddWebContentWithGlobalStructureAndEditedDefaultValues {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description",
			structureName = "Global Structure"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(
			addRoleViewPermissions = "Power User",
			structureName = "Global Structure"
		);

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			addRoleViewPermissions = "Power User",
			structureName = "Global Structure",
			templateDescription = "Template Description",
			templateName = "Template Name"
		);

		WebContentTemplates.addRoleViewPermissions(
			roles = "Power User",
			templateName = "Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.editSubstructureDefaultValuesCP(
			editSubstructureFieldNames = "Text",
			substructureName = "Global Structure"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "test1@liferay.com",
			userFirstName = "test1",
			userLastName = "test1",
			userScreenName = "test1test"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1test"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "test1",
			userLastName = "test1",
			userScreenName = "test1test"
		);

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "test1 test1",
			roleTitle = "Site Administrator"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test1@liferay.com",
			userLoginFullName = "test1 test1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Global Structure");

		WebContent.addWithStructureCP(
			saveAsDraft = "true",
			structureName = "Global Structure",
			webContentText = "Web Content Text",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");
	}

	@description = "This is a use case for LPS-70386."
	@priority = "5"
	test AddWebContentWithPortletURL {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "Web Content Title");

		var portalURL = PropsUtil.get("portal.url");

		AlloyEditor.addSourceContent(
			content = '''<p><span><a href="${portalURL}/web/guest/home/-/testportlet">text</a></span></p>'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		Navigator.openURL();

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Title");

		Navigator.openURL();

		Click(locator1 = "WCD#WEB_CONTENT_TEXT_LINK_URL", key_contentText = "text");

		Portlet.viewTitle(portletName = "testportlet");
	}

	@priority = "4"
	test DeleteTemplateAndStructureWithReferencedWebContent {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentStructures.deleteCP(
			structureName = "WC Structure Name",
			webContentHasReference = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.deleteCP(
			templateName = "WC Template Name",
			webContentHasReference = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentStructures.deleteCP(
			structureName = "WC Structure Name",
			webContentHasReference = "true"
		);
	}

	@priority = "4"
	test EditArticleMadeFromGlobalStructure {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Global WC Structure Description",
			structureName = "Global WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "Global WC Structure Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Global WC Structure Name",
			templateDescription = "Global WC Template Description",
			templateFieldNames = "Text",
			templateName = "Global WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.addWithGlobalStructurePGViaWCD(
			fieldName = "Text",
			selectStructureName = "Basic Web Content",
			structureName = "Global WC Structure Name",
			templateName = "Global WC Template Name",
			webContentContent = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.editPGViaWCD(
			structureName = "Global WC Structure Name",
			templateName = "WC Template2 Name",
			webContentContentEdit = "WC WebContent Text Edit",
			webContentText = "WC WebContent Text Edit",
			webContentTitleEdit = "WC WebContent Title Edit"
		);
	}

	@priority = "5"
	test EditContentWithTitleAndAllFieldsNull {
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media,HTML,Image,Integer,Link to Page,Number,Radio,Select,Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Boolean,Date,Decimal,Documents and Media,HTML,Image,Integer,Link to Page,Number,Radio,Select,Text,Text Box",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publishAndWait();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test EditGlobalWebContentTemplate {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Global WC Structure Description",
			structureName = "Global WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "Global WC Structure Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Global WC Structure Name",
			templateDescription = "Global WC Template Description",
			templateFieldNames = "Text",
			templateName = "Global WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.addWithGlobalStructurePGViaWCD(
			fieldName = "Text",
			selectStructureName = "Basic Web Content",
			structureName = "Global WC Structure Name",
			templateName = "Global WC Template Name",
			webContentContent = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.editTemplate(
			editTemplateButton = "true",
			structureName = "Global WC Structure Name",
			templateName = "Template Edit",
			webContentContent = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewSelectedTemplateCP(
			templateName = "Template Edit",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test EditWebContentTemplate {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template1 Description",
			templateFieldNames = "Text",
			templateName = "WC Template1 Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template2 Description",
			templateFieldNames = "Text",
			templateName = "WC Template2 Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.selectTemplateCP(
			structureName = "WC Structure Name",
			templateName = "WC Template1 Name"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewSelectedTemplateCP(
			templateName = "WC Template1 Name",
			webContentTitle = "WC WebContent Title"
		);
	}

	@description = "This is a use case for LPS-80208."
	@priority = "4"
	test ExpireLastestVersion {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page");

		Navigator.gotoPage(pageName = "Test Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title Edit"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title Edit");

		Navigator.gotoPage(pageName = "Test Page");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test ExpireMultipleWebContent {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		for (var i : list "1,2,3") {
			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "WC WebContent Title ${i}"
			);

			PortletEntry.publish();
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(
			webContentTitleList = "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3,"
		);

		for (var i : list "1,2,3") {
			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title ${i}");

			WebContent.viewStatus(
				webContentContent = "WC WebContent Content",
				webContentStatus = "Expired",
				webContentTitle = "WC WebContent Title ${i}"
			);
		}
	}

	@priority = "5"
	test ImportAndUseGlobalStructureAndTemplate {
		property testray.component.names = "Training";

		JSONGroup.addGroup(groupName = "Site Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "structure-templates.lar",
			uploadFrom = "dependencies"
		);

		Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(
			structureName = "3 Column with Images"
		);

		WebContent.addWithStructureCP(
			fieldName = "title",
			webContentTextBox = "Green Waste",
			webContentTextBoxList = "Mowed Lawns,Mulched Branches,Compost Bin",
			webContentTitle = "Agricultural Science Front Page"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Agricultural Science Front Page");

		WebContent.viewWithStructureCP(
			fieldName = "title",
			webContentTextBox = "Green Waste",
			webContentTextBoxList = "Mowed Lawns,Mulched Branches,Compost Bin",
			webContentTitle = "Agricultural Science Front Page"
		);
	}

	@priority = "5"
	test MoveImportedWebContentArticlesToFolders {
		property testray.component.names = "Training,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "S.P.A.C.E.");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "News Folder Description",
			folderName = "News"
		);

		WebContentFolder.addCP(
			folderDescription = "Events Folder Description",
			folderName = "Events"
		);

		LAR.importPortlet(
			larFileName = "space-web-content.lar",
			uploadFrom = "dependencies"
		);

		Navigator.openSiteURL(siteName = "S.P.A.C.E.");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		for (var webContentTitle : list "When It All Began...,Stravinksy in Space?,Student Spotlight,Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}

		WebContent.moveArticlesToFolderCP(
			folderName = "News",
			webContentArticlesList = "When It All Began...,Stravinksy in Space?,Student Spotlight"
		);

		WebContent.moveArticlesToFolderCP(
			folderName = "Events",
			webContentArticlesList = "Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.gotoCP(folderName = "News", webContentTitle = "News");

		for (var webContentTitle : list "When It All Began...,Stravinksy in Space?,Student Spotlight") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.gotoCP(folderName = "Events", webContentTitle = "Events");

		for (var webContentTitle : list "Upcoming Press Conference,New Student Orientation,Fall Special Speaker Series") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}
	}

	@priority = "4"
	test MoveMultipleWebContentToFolder {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		for (var webContentTitle : list "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3") {
			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "${webContentTitle}"
			);

			PortletEntry.publish();
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.moveMultipleToFolderCP(
			folderName = "WC Folder Name",
			rowEntryCheckList = "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		for (var webContentTitle : list "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}
	}

	@priority = "5"
	test MoveWebContentToFolder {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.moveToFolderCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test StagingPublishExpiredWebContentViaWCD {
		property testray.component.names = "Staging,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Staging Test Page");

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.viewStagingLocalLivePG();

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoStagingSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.viewStagingLocalLivePG();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		WebContent.viewPGViaWCD(
			expiredContent = "true",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoStagingSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);
	}

	@description = "This is a use case for LPS-71941."
	@priority = "5"
	test UndeployWebContentDisplayModuleViaGogoShell {
		property test.name.skip.portal.instance = "WebContentUseCase#UndeployWebContentDisplayModuleViaGogoShell";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Gogo Shell"
		);

		var moduleID = GogoShell.getModuleID(moduleName = "com.liferay.journal.content.web");

		GogoShell.stopModule(moduleID = "${moduleID}");

		GogoShell.viewModuleStatus(
			moduleName = "com.liferay.journal.content.web",
			moduleStatus = "Resolved"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.viewUndeployMessage();

		Portlet.deletePG(
			portletName = "com_liferay_journal_content_web_portlet_JournalContentPortlet"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Gogo Shell"
		);

		GogoShell.startModule(moduleID = "${moduleID}");

		GogoShell.viewModuleStatus(
			moduleName = "com.liferay.journal.content.web",
			moduleStatus = "Active"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");
	}

	@priority = "4"
	test UseStructureAndTemplateFromParentSiteHierarchy {
		property test.name.skip.portal.instance = "WebContentUseCase#UseStructureAndtemplateFromParentSiteHierarchy";
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Web Content",
			configurationName = "Administration",
			configurationScope = "System Scope"
		);

		FormFields.enableCheckbox(fieldName = "showAncestorScopesByDefault");

		SystemSettings.saveConfiguration();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML",
			structureFieldName = "HTML"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "HTML",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		Click(locator1 = "TextInput#TITLE");

		PortletEntry.inputTitle(title = "WC WebContent Title");

		AlloyEditor.typeEditor(content = "WC WebContent Content", editor = "HTML");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "3"
	test ViewGlobalStructureViaAddMenuInLiferaySite {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewStructureViaAddMenuCP(structureName = "WC Structure Name");
	}

	@priority = "4"
	test ViewMultipleCategoriesViaWebContent {
		property testray.component.names = "Categories,Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		for (var categoryName : list "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5") {
			Category.addCP(
				categoryName = "${categoryName}",
				vocabularyName = "Vocabulary Name"
			);

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Categories"
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithMultipleCategories(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC Content Body",
			webContentTitle = "WC Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5",
			webContentTitle = "WC Content Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5"
		);
	}

	@priority = "4"
	test ViewMultipleVocabulariesViaAddWebContent {
		property testray.component.names = "Categories,Web Content Administration";

		for (var vocabularyName : list "Vocabulary Name 1,Vocabulary Name 2,Vocabulary Name 3,Vocabulary Name 4,Vocabulary Name 5") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Categorization",
				panel = "Site Administration",
				portlet = "Categories"
			);

			Vocabulary.addCP(vocabularyName = "${vocabularyName}");

			Category.addCP(
				categoryName = "Category Name",
				vocabularyName = "${vocabularyName}"
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "WC Title");

		WebContent.viewCategorizationVocabularyCP(
			vocabularyNameList = "Vocabulary Name 1,Vocabulary Name 2,Vocabulary Name 3,Vocabulary Name 4,Vocabulary Name 5"
		);
	}

	@priority = "4"
	test ViewSourceContainsNoGarbageData {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addField(
			field = "Image",
			fieldFieldLabel = "Image",
			fieldName = "image"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text,Image",
			templateName = "WC Template Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		FormFields.editText(
			fieldName = "title",
			fieldValue = "English (United States) Title"
		);

		ItemSelector.gotoItemSelectorViaSelectButton();

		ItemSelector.uploadFile(
			navTab = "Web Content Images",
			uploadFileName = "Document_3.png"
		);

		FormFields.editTextAlt(
			fieldName = "image",
			fieldValue = "English (United States) Image Description"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		FormFields.editText(fieldName = "title", fieldValue = "Spanish (Spain) Title");

		FormFields.editTextAlt(
			fieldName = "image",
			fieldValue = "Spanish (Spain) Image Description"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "en-US");

		FormFields.viewTextValue(
			fieldName = "title",
			fieldValue = "English (United States) Title"
		);

		FormFields.viewTextValueAlt(
			fieldName = "image",
			fieldValue = "English (United States) Image Description"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		FormFields.viewTextValue(
			fieldName = "title",
			fieldValue = "Spanish (Spain) Title"
		);

		FormFields.viewTextValueAlt(
			fieldName = "image",
			fieldValue = "Spanish (Spain) Image Description"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(
			webContentTitle = "English (United States) Title"
		);

		LexiconEntry.gotoHeaderMenuItem(menuItem = "View Source");

		AssertElementNotPresent(locator1 = "WC#SOURCE_GARBAGE_DATA");
	}

	@priority = "4"
	test WebContentAdministrationDataValidation {
		property testray.component.names = "Web Content Administration";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addNullCP(webContentContent = "WC WebContent Content");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editNullCP(
			webContentContent = "WC WebContent Content",
			webContentContentEdit = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.addNullCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.addNullCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addNullCP();
	}

	@priority = "4"
	test WebContentAdministrationLocalization {
		property test.name.skip.portal.instance = "WebContentUseCase#WebContentAdministrationLocalization";
		property testray.component.names = "Localization,Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Language Selector");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		LexiconEntry.gotoAdd();

		WebContentStructures.addName(structureName = "WC Structure Name");

		Panel.expandPanel(panel = "Details");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		WebContentStructures.addLocalization(
			locale = "fr_FR",
			locale2 = "zh_CN",
			localization1Name = "nom de la structure de wc",
			localization2Name = "wc 结构名称"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		WebContentTemplates.localizeTemplateName(
			locale = "fr_FR",
			locale2 = "zh_CN",
			localization1Name = "nom de la template de wc",
			localization2Name = "wc 模板名称",
			templateName = "WC Template Name"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "fr-FR");

		WebContent.addCP(webContentTitle = "WC WebContent Titre");

		FormFields.editText(fieldName = "Text", fieldValue = "WC contenu WebContent");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Text");

		LanguagePortlet.selectLanguagePG(locale = "fr_FR", textIcon = "français-France");

		WebContent.viewPGViaWCD(webContentContent = "WC contenu WebContent");

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Modifier le contenu de Web",
			webContentTitle = "WC WebContent Titre"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "fr-FR");

		WebContent.viewCP(
			webContentText = "WC contenu WebContent",
			webContentTitle = "WC WebContent Titre"
		);

		WebContent.viewStructureAndTemplateLocalization(
			panel = "Structure et gabarit",
			structureLocalizationName = "nom de la structure de wc",
			templateLocalizationName = "nom de la template de wc"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		LanguagePortlet.selectLanguagePG(locale = "zh-CN", textIcon = "中文-中国");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Text");

		Portlet.gotoPortletOptions(portletName = "网页内容展示", portletOption = "编辑网页内容");

		IFrame.selectEditAssetFrame();

		WebContent.viewStructureAndTemplateLocalization(
			panel = "结构和模板",
			structureLocalizationName = "wc 结构名称",
			templateLocalizationName = "wc 模板名称"
		);

		Navigator.gotoPage(pageName = "Web Content Display Page");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States"
		);
	}

	@priority = "3"
	test WebContentAdministrationPaginatingRelatedAssets {
		property testray.component.names = "Related Assets,Web Content Administration";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 1 Content",
			webContentTitle = "WC WebContent 1 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 1 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 2 Content",
			webContentTitle = "WC WebContent 2 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 2 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 3 Content",
			webContentTitle = "WC WebContent 3 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 3 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 4 Content",
			webContentTitle = "WC WebContent 4 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 4 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 5 Content",
			webContentTitle = "WC WebContent 5 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 5 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 6 Content",
			webContentTitle = "WC WebContent 6 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 6 Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent 3 Title");

		WebContent.paginateRelatedAssets(
			assetType = "Basic Web Content",
			itemsPerPage = "5",
			webContentTitle = "WC WebContent 3 Title"
		);

		WebContent.viewPaginateRelatedAssets(
			itemsPerPage = "5 Entries",
			numberOfPages = "Showing 1 to 5 of 6 entries."
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent 3 Title");

		WebContent.addExistingRelatedAssetCP(
			assetTitle = "WC WebContent 5 Title",
			assetType = "Basic Web Content",
			siteName = "${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent 3 Title"
		);

		WebContentDisplayPortlet.configureSetupPG(metadataNameList = "Related Assets");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoPage(pageName = "Web Content Display Page");

		WebContent.viewRelatedAssetsPGViaWCD(assetTitle = "WC WebContent 5 Title");
	}

	@priority = "4"
	test WebcontentAdministrationTemplateValidation {
		property testray.component.names = "Web Content Administration";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Image",
			fieldFieldLabel = "Image",
			fieldName = "Image"
		);

		WebContentStructures.saveCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentNavigator.gotoAddPGViaWCD(structureName = "WC Structure Name");

		WebContent.addCP(webContentTitle = "WC WebContent Title");

		AssertClickNoError(locator1 = "Button#SAVE_AS_DRAFT", value1 = "Save as Draft");

		WebContentStructures.viewTemplateValidation();

		AssertClickNoError(locator1 = "Button#PUBLISH", value1 = "Publish");

		WebContentStructures.viewTemplateValidation();
	}
}