@component-name = "portal-breadcrumb"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Breadcrumb";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = 4
	test AddADTViaBreadcrumb {
		property testray.component.names = "Breadcrumb,Content and Appliation Templates";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Page Name",
			widgetName = "Breadcrumb");

		Navigator.gotoPage(pageName = "Page Name");

		ApplicationDisplayTemplates.addPortletADTWithFieldEntry(
			fieldName = "Breadcrumb Entry",
			portletName = "Breadcrumb");

		Navigator.gotoPage(pageName = "Page Name");

		ApplicationDisplayTemplates.selectPortletADT(
			portletName = "Breadcrumb",
			templateName = "Breadcrumb Test ADT");

		Navigator.gotoPage(pageName = "Page Name");

		Portlet.gotoPortletOptions(
			portletName = "Breadcrumb",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertElementPresent(locator1 = "Select#DISPLAY_TEMPLATE");
	}

	@priority = 3
	test ConfigureNoSave {
		property test.name.skip.portal.instance = "Breadcrumb#ConfigureNoSave";
		property testray.component.names = "Breadcrumb";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Parent Page Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Child Page Name",
			parentLayoutName = "Parent Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Current Site,Show Guest Site,Show Page,Show Parent Sites,Show Application Breadcrumb");

		var siteName = TestCase.getSiteName(siteName = ${siteName});

		Breadcrumb.viewConfigurationPreview(breadcrumbListNotVisible = "${siteName},Site Name,Parent Page Name,Child Page Name");

		Breadcrumb.configureBreadcrumb(
			checkSetupName = "Show Current Site,Show Guest Site,Show Page,Show Parent Sites,Show Application Breadcrumb",
			configureWithoutSave = "true");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Site Name,Parent Page Name,Child Page Name");
	}

	@priority = 4
	test DisableShowApplicationBreadcrumb {
		property custom.properties = "default.layout.template.id=1_column";
		property portal.upstream = "true";
		property testray.component.names = "Breadcrumb";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Message Boards");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		MessageboardsCategory.gotoPG(
			categoryName = "MB Category Name",
			subCategoryEnabled = "true",
			subCategoryName = "MB Subcategory Name");

		MessageboardsCategory.addPG(
			categoryDescription = "MB Subcategory Subcategory Description",
			categoryName = "MB Subcategory Subcategory Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Breadcrumb");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name",
			threadCount = 0);

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Subcategory Description",
			categoryName = "MB Subcategory Subcategory Name",
			threadCount = 0);

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			pathLocator = "EMBEDDED");

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Portlet.gotoPortletOptions(
			portletName = "Breadcrumb",
			portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Application Breadcrumb");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Site Name,Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name",
			threadCount = 0);

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Subcategory Description",
			categoryName = "MB Subcategory Subcategory Name",
			threadCount = 0);

		Breadcrumb.viewSpecificPG(
			breadcrumbListNotVisible = "MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			breadcrumbListVisible = "Site Name,Page Name",
			pathLocator = "EMBEDDED");

		Portlet.gotoPortletOptions(
			portletName = "Breadcrumb",
			portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Application Breadcrumb");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Site Name,Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.gotoSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Description",
			categoryName = "MB Subcategory Name",
			threadCount = 0);

		MessageboardsCategory.viewPG(
			categoryDescription = "MB Subcategory Subcategory Description",
			categoryName = "MB Subcategory Subcategory Name",
			threadCount = 0);

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			pathLocator = "EMBEDDED");
	}

	@priority = 5
	test DisableShowCurrentSite {
		property testray.component.names = "Breadcrumb";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Parent Page Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Child Page Name",
			parentLayoutName = "Parent Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Current Site");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Parent Page Name,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Parent Page Name,Child Page Name");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Site Name");

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Site Name",
			breadcrumbListVisible = "Parent Page Name,Child Page Name",
			pathLocator = "PAGE");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Current Site");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Site Name");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name",
			pathLocator = "PAGE");
	}

	@priority = 5
	test DisableShowPage {
		property portal.acceptance = "true";
		property portal.upstream = "true";
		property testray.component.names = "Breadcrumb";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			parentLayoutName = "Home");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Home,Child Page Name");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");

		var siteName = TestCase.getSiteName(siteName = ${siteName});

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Home,Child Page Name");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Page");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = ${siteName});

		Breadcrumb.saveDisplayPreview();

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Home,Child Page Name",
			breadcrumbListVisible = ${siteName},
			pathLocator = "PAGE");
	}

	@priority = 4
	test DisableShowParentSite {
		property testray.component.names = "Breadcrumb";

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name");

		JSONGroup.addChildSite(
			groupName = "Child SiteName",
			parentGroupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Child SiteName",
			layoutName = "Parent Page Name",
			parentGroupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Child SiteName",
			layoutName = "Child Page Name",
			parentGroupName = "Site Name",
			parentLayoutName = "Parent Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Child SiteName",
			layoutName = "Child Page Name",
			parentGroupName = "Site Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Child SiteName");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Site Name,Child SiteName,Parent Page Name,Child Page Name");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Parent Site");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Child SiteName");

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Site Name",
			breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name",
			pathLocator = "PAGE");
	}

	@priority = 4
	test DisplayTemplateWithHorizontalStyle {
		property testray.component.names = "Breadcrumb";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			parentLayoutName = "Home");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.displayTemplatePreview(displayStyle = "Horizontal");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Home,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Home,Child Page Name",
			pathLocator = "PAGE");
	}

	@priority = 4
	test DisplayTemplateWithVerticalStyle {
		property testray.component.names = "Breadcrumb";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			parentLayoutName = "Home");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.displayTemplatePreview(displayStyle = "Vertical");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Home,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Home,Child Page Name",
			pathLocator = "PAGE");
	}

	@priority = 4
	test EnableShowGuestSite {
		property portal.upstream = "true";
		property test.name.skip.portal.instance = "Breadcrumb#EnableShowGuestSite";
		property testray.component.names = "Breadcrumb";

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			parentLayoutName = "Home");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Child Page Name",
			widgetName = "Breadcrumb");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Home,Child Page Name");

		var siteName = TestCase.getSiteName(siteName = ${siteName});

		Breadcrumb.viewConfigurationPreview(breadcrumbListNotVisible = ${siteName});

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Home,Child Page Name");

		Breadcrumb.saveDisplayPreview();

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Home,Child Page Name");

		Navigator.openSitePage(
			pageName = "Child Page Name",
			siteName = "Guest");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "${siteName},Home,Child Page Name",
			pathLocator = "PAGE");
	}

}