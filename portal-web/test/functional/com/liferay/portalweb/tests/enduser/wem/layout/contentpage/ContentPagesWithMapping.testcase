@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-98031."
	@priority = "5"
	test MapManualURLToLinkFragment {
		property portal.acceptance = "true";

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Sections",
			fragmentName = "Banner Center");

		PageEditorEditableLink.gotoEditableFieldLink(
			fragmentName = "Banner Center",
			id = "link");

		PageEditorEditableLink.updateURL(url = "https://liferay.com");

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		task ("Assert editable has the specified URL mapped correctly") {
			Click(locator1 = "//a[contains(@class,'btn')][contains(@href,'https://liferay.com')]");
		}
	}

	@description = "This is a test for LPS-96794. Mapped Web Content will appear in the sidebar in a Page Editor's edit mode."
	@priority = "5"
	test MapWebContentURLToLinkFragment {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "Test Content",
			groupName = "Test Site Name",
			title = "liferay.com");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Sections",
			fragmentName = "Banner Center");

		PageEditorEditableLink.gotoEditableFieldLink(
			fragmentName = "Banner Center",
			id = "link");

		PageEditorEditableLink.mapURLToAsset(
			assetName = "liferay.com",
			assetType = "Web Content Article",
			field = "Title");

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		task ("Assert editable has the specified URL mapped correctly") {
			AssertElementPresent(locator1 = "//a[contains(@class,'btn')][contains(@href,'liferay.com')]");
		}
	}

}