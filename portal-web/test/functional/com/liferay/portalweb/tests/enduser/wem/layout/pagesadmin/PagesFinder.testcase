@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Site Pages Administration";

	setUp {
		task ("Default setup") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a Site for the user") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add layouts of various types for the pages finder") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Portlet Page",
				type = "portlet");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Content Page",
				type = "content");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Embedded Page",
				type = "embedded");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Link to Layout",
				type = "link_to_layout");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Full Page Application",
				type = "full_page_application");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Panel Page",
				type = "panel");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test URL",
				type = "url");

			for (var i : list "1,2,3,4") {
				JSONLayout.addPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Default Page ${i}");
			}
		}

		task ("Navigate to the created site") {
			Navigator.openSiteURL(siteName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-90363. Assert that all page types can be found and counted in the pages finder."
	@priority = "5"
	test SearchAllPageTypes {
		task ("Type search term in pages finder") {
			PagesFinder.goToFindAPage();

			PagesFinder.inputPageSearch(keyword = "Test");
		}

		task ("Assert that we find all 11 pages within Pages Administration") {
			PagesFinder.viewInPagesAdministration();

			AssertTextEquals(
				locator1 = "Search#SEARCH_INFO",
				value1 = "11 Results for Test");
		}
	}

}