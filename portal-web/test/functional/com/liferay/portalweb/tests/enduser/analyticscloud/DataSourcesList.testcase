@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		// It is not possible to delete properties and data source after LRAC-13389. This functionality should return after LRAC-8040

		//ACUtils.tearDownAC();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Automation ID: LRAC-8129 | Test Summary: Show data source lists"
	@priority = 5
	test DataSourceListShowsAllDataSources {
		property portal.acceptance = "false";
		property portal.release = "false";

		var dataSourceList = "";

		TestCase.setUpPortalInstance();

		for (var n : list "1,2,3") {
			ACSettings.takeTokenFromAnalyticsCloud();

			ACUtils.launchDXP();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			var dataSource = StringUtil.replace(${propertyName}, " Combined Property", "");

			var dataSourceList = StringUtil.add(${dataSourceList}, ${dataSource});

			ACDXPSettings.disconnectDXPFromAnalyticsCloud();

			ACUtils.launchAC();

			ACNavigation.goToSettings();

			ACUtils.assertDataSourceName(dataSourceName = ${dataSource});
		}

		for (var dataSourceName : list ${dataSourceList}) {
			ACUtils.assertDataSourceName(dataSourceName = ${dataSourceName});
		}
	}

	@description = "Bug: LRAC-10507 | Automation ID: LRAC-12349 | Test Summary: The data source list has pagination"
	@priority = 3
	test PaginateDataSourceList {
		var dataSourceList = "";

		TestCase.setUpPortalInstance();

		for (var n : list "1,2,3,4,5,6") {
			ACSettings.takeTokenFromAnalyticsCloud();

			ACUtils.launchDXP();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			var dataSource = StringUtil.replace(${propertyName}, " Combined Property", "");

			var dataSourceList = StringUtil.add(${dataSourceList}, ${dataSource});

			ACDXPSettings.disconnectDXPFromAnalyticsCloud();

			ACUtils.launchAC();

			ACNavigation.goToSettings();
		}

		task ("Remove the last data source from the list to iterate just the first five") {
			var newDataSourceList = ListUtil.newListFromString(${dataSourceList});

			ListUtil.remove(${newDataSourceList}, ${dataSource});
		}

		task ("Change data source pagination to 5 items per page and assert the data sources on the page") {
			ACUtils.changePagination(itemsPerPage = 5);

			for (var dataSourceName : list ${newDataSourceList}) {
				ACUtils.assertDataSourceName(dataSourceName = ${dataSourceName});
			}

			ACUtils.assertItemsNameNotPresent(itemList = ${dataSource});

			ACUtils.viewResultsMessage(results = "Showing 1 to 5 of 6 entries.");
		}

		task ("Go to the second page and assert the last data source and assert that the other data sources are not in this page") {
			ACUtils.checkAnyPage(pageNumber = 2);

			ACUtils.assertDataSourceName(dataSourceName = ${dataSource});

			ACUtils.assertItemsNameNotPresent(itemList = ${newDataSourceList});

			ACUtils.viewResultsMessage(results = "Showing 6 to 6 of 6 entries.");
		}
	}

}