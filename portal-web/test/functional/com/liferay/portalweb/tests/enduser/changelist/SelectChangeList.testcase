@component-name = "portal-change-list"
@ignore = "true"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Change List";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Settings");

		ChangeList.enableChangeList();

		ChangeList.changeUserSettingsPopuConfirmation(changeUserPopupConfirmation = "enable");

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.addNewChangeList(
			changeListDescription = "Change List Description",
			changeListName = "Change List Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Change Lists",
				panel = "Control Panel",
				portlet = "Settings");

			ChangeList.disableChangeList();
		}
	}

	@priority = "4"
	test AssertOnActiveStatus {
		ChangeList.selectChangeList(changeListName = "Select Change List");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var key_changeListName = "Change List Name";

		AssertTextEquals(
			locator1 = "ChangeList#ACTIVE_CHANGE_LIST_STATUS",
			value1 = "Active");
	}

	@priority = "5"
	test AssertOnChangesDisplayedOnSelectChangeList {
		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "Web Content Title");

		Button.clickPublishToChangeList();

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		ChangeList.viewAddedItemCounter(nbrOfAddedItems = "1");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.editCP(
			changeListEnabled = "true",
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "Web Content Title",
			webContentTitleEdit = "Web Content Title Edit");

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		ChangeList.viewModifiedItemCounter(nbrOfModifiedItems = "1");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "Web Content Title Edit");

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		ChangeList.viewAddedItemCounter(nbrOfAddedItems = "1");

		ChangeList.viewModifiedItemCounter(nbrOfModifiedItems = "0");

		ChangeList.viewDeletedItemCounter(nbrOfDeletedItems = "1");
	}

	@priority = "5"
	test EmptyChangeListDeletion {
		ChangeList.selectChangeList(changeListName = "Select Change List");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		ChangeList.gotoDelete(rowEntry = "Change List Name");

		Alert.viewSuccessMessage();
	}

	@priority = "5"
	test MakeActiveAnotherChangeList {
		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		ChangeList.addNewChangeList(
			changeListDescription = "Second Change List Description",
			changeListName = "Second Change List Name");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		ChangeList.gotoActivate(rowEntry = "Change List Name");

		ChangeList.confirmSwitchingChangeList(changeListName = "Change List Name");

		Alert.viewSuccessMessage();

		ChangeList.selectChangeList(changeListName = "Select Change List");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var key_changeListName = "Change List Name";

		AssertTextEquals(
			locator1 = "ChangeList#ACTIVE_CHANGE_LIST_STATUS",
			value1 = "Active");

		ChangeList.gotoActivate(rowEntry = "Work on Production");

		ChangeList.confirmSwitchingChangeList(changeListName = "Work on Production");

		Alert.viewSuccessMessage();

		var key_changeListName = "Work on Production";

		AssertTextEquals(
			locator1 = "ChangeList#ACTIVE_CHANGE_LIST_STATUS",
			value1 = "Active");
	}

	@priority = "4"
	test SwitchActiveChangeList {
		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ChangeList.selectChangeList(changeListName = "Select Change List");

		ChangeList.addNewChangeList(
			changeListDescription = "Change List Description",
			changeListName = "Change List 2 Name");

		ChangeList.selectChangeList(
			changeListConfirmEnabled = "true",
			changeListName = "Change List Name");

		AssertTextEquals(
			locator1 = "ChangeList#ACTIVE_CHANGE_LIST_TITLE",
			value1 = "Change List Name");
	}

	@priority = "4"
	test WorkOnProduction {
		ChangeList.workOnProduction(changeListConfirmEnabled = "true");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Control Panel",
			portlet = "Overview");

		ClickNoError(
			key_changeListName = "Change List Name",
			locator1 = "ChangeList#CHANGE_LIST_NAME_CARD_VIEW");

		ChangeList.confirmSwitchingChangeList(changeListName = "Change List Name");

		ChangeList.viewAddedItemCounter(nbrOfAddedItems = "0");
	}

}