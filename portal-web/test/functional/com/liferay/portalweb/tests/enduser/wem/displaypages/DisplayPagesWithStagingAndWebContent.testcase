@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Display Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		Staging.openStagingAdmin(siteURLKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name-staging");

		FragmentsAdmin.importCollectionFromDependenciesFolder(
			collectionZipFile = "fragment-collection.zip"
		);

		DisplayPagesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name-staging");

		DisplayPagesAdmin.add(displayPageName = "Display Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text"
		);

		PageEditorMapping.selectAssetType(
			assetType = "Web Content Article",
			subType = "Basic Web Content"
		);

		PageEditorMapping.mapEditableTextToAsset(
			fragmentName = "Title",
			id = "title",
			itemName = "Title"
		);

		PageEditorMapping.mapEditableTextToAsset(
			fragmentName = "Rich Text",
			id = "rich-text",
			itemName = "content"
		);

		PortletEntry.publish();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Published web content with display pages should remain if staging is deactivated."
	@priority = "4"
	test DeactivateStagingAfterPublish {
		WebContent.openWebContentAdmin(siteURLKey = "test-site-name-staging");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Webcontent Content",
			webContentTitle = "Webcontent Title"
		);

		WebContent.editDisplayPage(
			pageName = "Display Page Name",
			pageType = "Display Pages"
		);

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Staging.deactivateStagingCP(siteName = "Test Site Name");

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		DisplayPagesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

		AssertVisible(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			key_cardText = "Display Page Name"
		);
	}

	@description = "Display pages only appear in live view after being published and should appear properly. This is a test case for LPS-86373 where web content articles lost their reference to display pages."
	@priority = "5"
	test PublishDisplayPage {
		WebContent.openWebContentAdmin(siteURLKey = "test-site-name-staging");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Webcontent Content",
			webContentTitle = "Webcontent Title"
		);

		WebContent.editDisplayPage(
			pageName = "Display Page Name",
			pageType = "Display Pages"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertTextPresent(value1 = "The requested resource could not be found.");

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);
	}

	@description = "This tests one of the workarounds of LPS-86373."
	@priority = "5"
	test PublishDisplayPageMarkedAsDefault {
		property portal.acceptance = "true";

		DisplayPagesAdmin.markDisplayPageAsDefault(rowEntry = "Display Page Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name-staging");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Webcontent Content",
			webContentTitle = "Webcontent Title"
		);

		PortletEntry.publish();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertTextPresent(value1 = "The requested resource could not be found.");

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);
	}

	@description = "Edits to display pages should not reflect in the live site until published."
	@priority = "5"
	test PublishEditedDisplayPage {
		property portal.acceptance = "true";

		DisplayPagesAdmin.markDisplayPageAsDefault(rowEntry = "Display Page Name");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name-staging");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Webcontent Content",
			webContentTitle = "Webcontent Title"
		);

		PortletEntry.publish();

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		DisplayPagesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name-staging");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Display Page Name"
		);

		PageEditor.moveFragment(direction = "down", fragmentName = "Title");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Content"
		);

		PageEditorMapping.mapEditableTextToAsset(
			fragmentName = "Content",
			id = "content",
			itemName = "Title"
		);

		PortletEntry.publish();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "body",
			key_position = "3"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/-/webcontent-title"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Content",
			key_fragmentClass = "rich-text",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "header",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Webcontent Title",
			key_fragmentClass = "body",
			key_position = "3"
		);
	}
}