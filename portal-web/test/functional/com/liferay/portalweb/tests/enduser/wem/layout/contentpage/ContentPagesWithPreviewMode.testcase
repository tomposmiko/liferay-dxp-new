@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-158527. The guest shouldn't be allowed to preview changes."
	@priority = "4"
	test CannotPreviewChangesAsGuest {
		task ("Given a guest has a content pages with draft changes") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");

			PageEditor.previewInANewTab();

			var previewURL = Navigator.getCurrentURL();

			Close.closeWindow();
		}

		task ("When the guest access to the content page at preview mode") {
			User.logoutPG();

			Navigator.openSpecificURL(url = "${previewURL}");
		}

		task ("Then the guest should see not found") {
			AssertTextEquals(
				locator1 = "Home#ERROR_MESSAGE_ALERT_ERROR",
				value1 = "Not Found");
		}
	}

	@description = "This is a test for LPS-153367. The page creator could preview changes in a new tab."
	@priority = "5"
	test PreviewChangesInANewTab {
		property portal.acceptance = "true";

		task ("Given a page creator has a Heading fragment on a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");
		}

		task ("When the page creator edits the inline text of Heading") {
			PageEditor.editFragmentText(
				fragmentName = "Heading",
				id = "element-text",
				text = "New editable fragment text");
		}

		task ("Then the page creator could preview changes in a new tab") {
			PageEditor.previewInANewTab();

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "New editable fragment text");
		}
	}

}