@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "Frontend Dataset";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given access Datasets admin page") {
			ApplicationsMenu.gotoPortlet(
				category = "Object",
				panel = "Control Panel",
				portlet = "Datasets");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-174054: Display a list of headless resources in new FDS View modal"
	@priority = 5
	test CanDisplayHeadlessDeliveryAPIResources {
		property test.name.skip.portal.instance = "FrontendDataSetAdminSearch#CanDisplayHeadlessDeliveryAPIResources";

		task ("When go to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("Then displays list of headless resources") {
			FrontendDataSetAdmin.searchProvider(
				dropdownLabel = "Choose an Option",
				key_provider = "Headless");

			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "headless-admin-address/v1.0");

			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "headless-admin-content/v1.0");

			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "headless-admin-list-type/v1.0");

			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "headless-admin-taxonomy/v1.0");
		}
	}

	@description = "LPS-175205: Display matched result in new FDS View modal"
	@priority = 3
	test CanReturnAMatchedResult {
		property test.name.skip.portal.instance = "FrontendDataSetAdminSearch#CanReturnAMatchedResult";

		task ("When go to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("And When search for a known uniquely named headless provider") {
			FrontendDataSetAdmin.searchProvider(
				dropdownLabel = "Choose an Option",
				key_provider = "/c/fdsentries");
		}

		task ("Then the suggested list is updated to have only 1 result for the search, and Then the suggested list contains the uniquely named headless provider") {
			AssertElementPresent(
				locator1 = "CommerceWidget#TAG_FACET_COMPACT_LAYOUT",
				tagName = "/c/fdsentries");
		}
	}

	@description = "LPS-175206: Display no matched result in new FDS View modal"
	@priority = 4
	test CanReturnNoMatchedResults {
		task ("When go to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("And When search for a phrase that doesn't match available headless providers") {
			FrontendDataSetAdmin.searchProvider(key_provider = "apple");
		}

		task ("Then suggested list contains 0 results") {
			AssertElementNotPresent(locator1 = "FrontendDataSet#DROPDOWN_LIST");
		}
	}

}