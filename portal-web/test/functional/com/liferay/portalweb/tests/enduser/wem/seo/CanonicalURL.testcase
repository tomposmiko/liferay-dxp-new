@component-name = "portal-collaboration"
definition {

	property custom.properties = "locale.default.request=true${line.separator}locale.prepend.friendly.url.style=1";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "This test covers LPS-121201. It ensures that a site can be exported after a user sets a custom canonical URL at the page level."
	@priority = "4"
	test ExportSiteWithCustomURL {
		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Canonical URL Test Page");

		PagesAdmin.openPagesAdmin(siteUrlKey = "site-name");

		PagesAdmin.gotoPageEllipsisMenuItem(
			menuItem = "Configure",
			pageName = "Canonical URL Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		Click(
			checkboxName = "Use Custom Canonical URL",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Type(
			locator1 = "TextInput#CUSTOM_CANONICAL_URL",
			value1 = "http://mycustomizedurl.com/mydesiredurl");

		PortletEntry.save();

		LAR.exportSiteCP(siteScopeName = "Site Name");

		AssertConsoleTextNotPresent(value1 = "NoSuchStorageLinkException");
	}

	@description = "This test ensures that when a user sets a custom canonical URL at the page level, it will overwrite system level settings."
	@priority = "5"
	test SetCustomURLAtPageLevel {
		property test.name.skip.portal.instance = "CanonicalURL#SetCustomURLAtPageLevel";

		var portalUrl = PropsUtil.get("portal.url");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Canonical URL Test Page");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Canonical URL Test Page");

		Page.assertCanonicalURL(
			pageName = "Canonical URL Test Page",
			portalUrl = "${portalUrl}");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Canonical URL Test Page");

		Navigator.gotoEditPageViaControlMenu(pageName = "Canonical URL Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		var checkboxName = "Use Custom Canonical URL";

		if (IsNotChecked(locator1 = "Checkbox#ANY_CHECKBOX")) {
			Click(locator1 = "Checkbox#ANY_CHECKBOX");
		}

		AssertTextEquals(
			key_text = "http://localhost:8080/web/guest/canonical-url-test-page",
			locator1 = "TextInput#CUSTOM_CANONICAL_URL_ENABLED",
			value1 = "http://localhost:8080/web/guest/canonical-url-test-page");

		AssertVisible(
			key_infoMessage = "Info:Due to the customization of the canonical URL, depending on the platform this page is shared, the Open Graph metadata shown might not be the one configured in this page.",
			locator1 = "Message#INFO_SPECIFIC",
			value1 = "Info:Due to the customization of the canonical URL, depending on the platform this page is shared, the Open Graph metadata shown might not be the one configured in this page.");

		Type(
			locator1 = "TextInput#CUSTOM_CANONICAL_URL",
			value1 = "http://mycustomizedurl.com/mydesiredurl");

		PortletEntry.save();

		User.logoutPG();

		Navigator.gotoPage(pageName = "Canonical URL Test Page");

		Page.assertCanonicalURL(customCanonicalUrl = "http://mycustomizedurl.com/mydesiredurl");
	}

	@description = "This ensures that canonical URLs can be set for each active language during page creation."
	@priority = "5"
	test SetCustomURLAtPageLevelForEachActiveLanguage {
		property test.name.skip.portal.instance = "CanonicalURL#SetCustomURLAtPageLevelForEachActiveLanguage";

		var portalUrl = PropsUtil.get("portal.url");

		JSONGroup.addGroup(groupName = "Site Name");

		Site.openSiteSettingsAdmin(siteUrlKey = "site-name");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Chinese (China)",
			defaultSiteLanguage = "English (United States)");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		PagesAdmin.openPagesAdmin(siteUrlKey = "site-name");

		PagesAdmin.gotoPageEllipsisMenuItem(
			menuItem = "Configure",
			pageName = "Test Page");

		PagesAdmin.addLocalizedCanonicalURL(
			localeList = "en-US,es-ES,zh-CN",
			localizedCanonicalUrlList = "localhost:8080/english-canonical-url,localhost:8080/spain-canonical-url,localhost:8080/chinese-canonical-url");

		User.logoutPG();

		Navigator.openSpecificURL(url = "${portalUrl}/en/web/site-name/test-page");

		Page.assertCanonicalURL(customCanonicalUrl = "localhost:8080/english-canonical-url");

		Navigator.openSpecificURL(url = "${portalUrl}/es/web/site-name/test-page");

		Page.assertCanonicalURL(customCanonicalUrl = "localhost:8080/spain-canonical-url");

		Navigator.openSpecificURL(url = "${portalUrl}/zh/web/site-name/test-page");

		Page.assertCanonicalURL(customCanonicalUrl = "localhost:8080/chinese-canonical-url");
	}

	@description = "This test covers LPS-122797. It ensures that the Canonical URL does not have a limit of 75 characters."
	@priority = "4"
	test SetCustomURLWith76Characters {
		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Canonical URL Test Page");

		PagesAdmin.openPagesAdmin(siteUrlKey = "site-name");

		PagesAdmin.gotoPageEllipsisMenuItem(
			menuItem = "Configure",
			pageName = "Canonical URL Test Page");

		Navigator.gotoNavTab(navTab = "SEO");

		Click(
			checkboxName = "Use Custom Canonical URL",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Type(
			locator1 = "TextInput#CUSTOM_CANONICAL_URL",
			value1 = "http://mycustomizedcharactersurl.com/mydesiredmorethan75charactersurlfortest");

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "TextInput#CUSTOM_CANONICAL_URL",
			value1 = "http://mycustomizedcharactersurl.com/mydesiredmorethan75charactersurlfortest");
	}

	@priority = "5"
	test SetDefaultURLAtSystemLevel {
		property test.name.skip.portal.instance = "CanonicalURL#SetDefaultURLAtSystemLevel";

		var portalUrl = PropsUtil.get("portal.url");

		User.logoutPG();

		Page.assertCanonicalURL(portalUrl = "${portalUrl}");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Pages",
			configurationName = "SEO",
			configurationScope = "Virtual Instance Scope");

		SystemSettings.selectOptionSetting(
			fieldName = "Canonical URL",
			selectOption = "Use Default Language URL");

		SystemSettings.saveConfiguration();

		User.logoutPG();

		Navigator.openSpecificURL(url = "${portalUrl}/es/");

		Page.assertCanonicalURL(portalUrl = "${portalUrl}");

		Page.assertAlternateURL(
			locale = "es",
			portalUrl = "${portalUrl}");

		Page.assertAlternateURL(
			locale = "zh",
			portalUrl = "${portalUrl}");
	}

	@priority = "5"
	test SetLocalizedURLAtSystemLevel {
		property test.name.skip.portal.instance = "CanonicalURL#SetLocalizedURLAtSystemLevel";

		var portalUrl = PropsUtil.get("portal.url");

		User.logoutPG();

		Page.assertCanonicalURL(portalUrl = "${portalUrl}");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		SystemSettings.openSystemSettingsAdmin();

		SystemSettings.gotoConfiguration(
			configurationCategory = "Pages",
			configurationName = "SEO",
			configurationScope = "Virtual Instance Scope");

		SystemSettings.selectOptionSetting(
			fieldName = "Canonical URL",
			selectOption = "Use Localized URL");

		SystemSettings.saveConfiguration();

		User.logoutPG();

		Page.assertCanonicalURL(portalUrl = "${portalUrl}");

		Navigator.openSpecificURL(url = "${portalUrl}/zh/");

		Page.assertCanonicalURL(
			locale = "zh",
			portalUrl = "${portalUrl}");

		Page.assertAlternateURL(
			locale = "es",
			portalUrl = "${portalUrl}");
	}

	@description = "This test covers LPS-127840. It ensures that the Canonical URL has page name."
	@priority = "3"
	test ViewPageNameInCanonicalURL {
		property custom.properties = "virtual.hosts.valid.hosts=localhost,127.0.0.1,www.able.com";
		property test.name.skip.portal.instance = "CanonicalURL#ViewPageNameInCanonicalURL";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		PagesAdmin.addPublicPage(pageName = "Page1");

		PagesAdmin.addPublicPage(pageName = "Page2");

		Site.openSiteSettingsAdmin(siteUrlKey = "guest");

		Site.addVirtualHostsURLCP(
			publicPageVirtualHostUrl = "www.able.com",
			publicVirtualHosts = "true");

		User.logoutPG();

		Navigator.openSpecificURL(url = "http://www.able.com:8080/page2");

		Page.assertCanonicalURL(customCanonicalUrl = "http://www.able.com:8080/page2");
	}

}