@component-name = "portal-breadcrumb"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Breadcrumb";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test AddADTViaBreadcrumb {
		property testray.component.names = "Breadcrumb,Content and Appliation Templates";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoPage(pageName = "Page Name");

		Portlet.addPG(portletName = "Breadcrumb");

		ApplicationDisplayTemplates.addPortletADTWithFieldEntry(
			fieldName = "Breadcrumb Entry",
			portletName = "Breadcrumb"
		);

		Navigator.gotoPage(pageName = "Page Name");

		ApplicationDisplayTemplates.selectPortletADT(
			portletName = "Breadcrumb",
			templateName = "Breadcrumb Test ADT"
		);

		Navigator.gotoPage(pageName = "Page Name");

		Portlet.gotoPortletOptions(
			portletName = "Breadcrumb",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertElementPresent(locator1 = "Select#DISPLAY_TEMPLATE");
	}

	@priority = "3"
	test ConfigureNoSave {
		property test.name.skip.portal.instance = "Breadcrumb#ConfigureNoSave";
		property testray.component.names = "Breadcrumb";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Parent Page Name");

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Parent Page Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(
			uncheckSetupName = "Show Current Site,Show Guest Site,Show Page,Show Parent Sites,Show Application Breadcrumb"
		);

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListNotVisible = "${siteName},Site Name,Parent Page Name,Child Page Name"
		);

		Breadcrumb.configureBreadcrumb(
			checkSetupName = "Show Current Site,Show Guest Site,Show Page,Show Parent Sites,Show Application Breadcrumb",
			configureWithoutSave = "true"
		);

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "${siteName},Site Name,Parent Page Name,Child Page Name"
		);
	}

	@priority = "4"
	test DisableShowApplicationBreadcrumb {
		property custom.properties = "default.layout.template.id=1_column";
		property testray.component.names = "Breadcrumb";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Message Boards");

		MessageboardsCategory.addPG(categoryName = "MB Category Name");

		MessageboardsCategory.addSubcategoryPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		MessageboardsCategory.addSubcategoryToSubcategoryPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			subCategorySubCategoryName = "MB Subcategory Subcategory Name"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Breadcrumb");

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		MessageboardsCategory.viewSubcategoryPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			threadsNumber = "0"
		);

		MessageboardsCategory.viewSubcategoryFromSubcategoryPG(
			categoryName = "MB Subcategory Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Subcategory Name"
		);

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			pathLocator = "EMBEDDED"
		);

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Application Breadcrumb");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Site Name,Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		MessageboardsCategory.viewSubcategoryPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			threadsNumber = "0"
		);

		MessageboardsCategory.viewSubcategoryFromSubcategoryPG(
			categoryName = "MB Subcategory Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Subcategory Name"
		);

		Breadcrumb.viewSpecificPG(
			breadcrumbListNotVisible = "MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			breadcrumbListVisible = "Site Name,Page Name",
			pathLocator = "EMBEDDED"
		);

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Application Breadcrumb");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Site Name,Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.gotoSitePage(pageName = "Page Name", siteName = "Site Name");

		MessageboardsCategory.viewSubcategoryPG(
			categoryName = "MB Category Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Name",
			threadsNumber = "0"
		);

		MessageboardsCategory.viewSubcategoryFromSubcategoryPG(
			categoryName = "MB Subcategory Name",
			subCategoryDescription = "MB Subcategory Description",
			subCategoryName = "MB Subcategory Subcategory Name"
		);

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
			pathLocator = "EMBEDDED"
		);
	}

	@priority = "5"
	test DisableShowCurrentSite {
		property portal.acceptance = "true";
		property testray.component.names = "Breadcrumb";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Parent Page Name");

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Parent Page Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name"
		);

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Current Site");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Parent Page Name,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Parent Page Name,Child Page Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Site Name",
			breadcrumbListVisible = "Parent Page Name,Child Page Name",
			pathLocator = "PAGE"
		);

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Current Site");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.openSiteURL(siteName = "Site Name");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Site Name,Parent Page Name,Child Page Name",
			pathLocator = "PAGE"
		);
	}

	@priority = "5"
	test DisableShowPage {
		property portal.acceptance = "true";
		property testray.component.names = "Breadcrumb";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Welcome"
		);

		ProductMenu.gotoSiteViaLink();

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Welcome,Child Page Name"
		);

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "${siteName},Welcome,Child Page Name"
		);

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Page");

		Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName}");

		Breadcrumb.saveDisplayPreview();

		Navigator.openURL();

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Welcome,Child Page Name",
			breadcrumbListVisible = "${siteName}",
			pathLocator = "PAGE"
		);
	}

	@priority = "4"
	test DisableShowParentSite {
		property testray.component.names = "Breadcrumb";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Parent Page Name");

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Parent Page Name"
		);

		ProductMenu.gotoSite(site = "Child SiteName");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Site Name,Child SiteName,Parent Page Name,Child Page Name"
		);

		Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Parent Site");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.openSiteURL(siteName = "Child SiteName");

		Page.gotoChildPagePG(
			childPageName = "Child Page Name",
			pageName = "Parent Page Name"
		);

		Breadcrumb.viewPG(
			breadcrumbListNotVisible = "Site Name",
			breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name",
			pathLocator = "PAGE"
		);
	}

	@priority = "4"
	test DisplayTemplateWithHorizontalStyle {
		property testray.component.names = "Breadcrumb";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Welcome"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.displayTemplatePreview(displayStyle = "Horizontal");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Welcome,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.openURL();

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Welcome,Child Page Name",
			pathLocator = "PAGE"
		);
	}

	@priority = "4"
	test DisplayTemplateWithVerticalStyle {
		property testray.component.names = "Breadcrumb";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Welcome"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.displayTemplatePreview(displayStyle = "Vertical");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Welcome,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Navigator.openURL();

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "Welcome,Child Page Name",
			pathLocator = "PAGE"
		);
	}

	@priority = "4"
	test EnableShowGuestSite {
		property test.name.skip.portal.instance = "Breadcrumb#EnableShowGuestSite";
		property testray.component.names = "Breadcrumb";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicChildPage(
			childPageName = "Child Page Name",
			parentPageName = "Welcome"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Portlet.addPG(portletName = "Breadcrumb");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "Welcome,Child Page Name"
		);

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Breadcrumb.viewConfigurationPreview(breadcrumbListNotVisible = "${siteName}");

		Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "${siteName},Welcome,Child Page Name"
		);

		Breadcrumb.saveDisplayPreview();

		Breadcrumb.viewConfigurationPreview(
			breadcrumbListVisible = "${siteName},Welcome,Child Page Name"
		);

		Navigator.openURL();

		Page.gotoChildPagePG(childPageName = "Child Page Name", pageName = "Welcome");

		Breadcrumb.viewPG(
			breadcrumbListVisible = "${siteName},Welcome,Child Page Name",
			pathLocator = "PAGE"
		);
	}
}