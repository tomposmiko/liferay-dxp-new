@component-name = "portal-calendar"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property testray.main.component.name = "Calendar";
	var pageName = "Calendar Page";
	var portletName = "Calendar";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Calendar Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Calendar Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(pageName = "Calendar Page", portletName = "Calendar");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			if (IsElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC")) {
				CalendarEvent.tearDown();
			}

			Calendar.tearDown();

			Calendar.tearDownColor();

			CalendarResource.tearDown();

			CalendarConfiguration.tearDown();

			Page.tearDownCP();

			User.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "5"
	test DeleteRegular {
		property test.name.skip.portal.instance = "Calendar#DeleteEventRegular";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteSpecific(eventTitle = "Calendar Event Regular Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Regular Title",
			pageName = "Calendar Page"
		);
	}

	@priority = "4"
	test DeleteRepeatingAllEventsInTheSeries {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Entire Series",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Repeating Title",
			pageName = "Calendar Page"
		);
	}

	@priority = "5"
	test DeleteRepeatingAllFollowing {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "Calendar#DeleteEventRepeatingAllFollowing";

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Following Events",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title");
	}

	@priority = "4"
	test DeleteRepeatingOnlyThisInstance {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event Repeating Title");

		CalendarEvent.setDates(endDate = "02/2/2016", startDate = "02/2/2016");

		CalendarEvent.setTimes(endDateTime = "02:00 AM", startDateTime = "01:00 AM");

		CalendarEvent.setRepeating(frequency = "Daily", numberOfOccurrences = "2");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "2");

		CalendarEvent.viewEventNotToday(
			eventTitle = "Calendar Event Repeating Title",
			numberOfOccurrences = "2"
		);

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Single Event",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "3");

		CalendarEvent.viewEventNotToday(eventTitle = "Calendar Event Repeating Title");
	}

	@priority = "3"
	test EditAllDay {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@priority = "3"
	test EditAllDayReminders {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event All Day Title Edit"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@priority = "3"
	test EditAllDayWithUserInvite {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			calendarName = "Test Test",
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@description = "This is a use case for LPS-59097."
	@priority = "4"
	test EditAndViewRSVP {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.addRegular(
			eventTitle = "Calendar Event Title",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.hideCurrentSiteCalendar();

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		CalendarScheduler.viewRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarNavigator.gotoEditEvent(
			eventTitle = "Calendar Event Title",
			eventType = "Regular"
		);

		CalendarEvent.setTimes(endDateTime = "10:00 AM", startDateTime = "06:00 AM");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewNoRSVP(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.gotoEditSpecific(eventTitle = "Calendar Event Title");

		CalendarEvent.editTitle(eventTitle = "Edited Event Title");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewRSVP(eventTitle = "Edited Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.gotoEditSpecific(eventTitle = "Edited Event Title");

		CalendarEvent.setDates(endDate = "3/29/2016", startDate = "3/29/2016");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "March 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "29");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewNoRSVP(
			eventTitle = "Edited Event Title",
			eventToday = "false"
		);
	}

	@priority = "4"
	test EditRegular {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event Regular Title",
			eventTitleEdit = "Calendar Event Regular Title Edit",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title Edit");
	}

	@priority = "3"
	test EditRegularReminders {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventTitleEdit = "Calendar Event Regular Title Edit",
			eventType = "Regular",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Regular Title Edit"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Regular Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@description = "This is a use case for LPS-50026."
	@priority = "4"
	test EditRegularWithUserInvite {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Calendar Event Regular Title"
		);

		CalendarScheduler.editTitle(eventTitle = "Edited Title");

		CalendarScheduler.saveEvent();

		CalendarEvent.saveEventUserInvite();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Edited Title");

		CalendarScheduler.gotoEditViaDialogBox();

		CalendarEvent.editTitle(eventTitle = "New Edited Title");

		CalendarEvent.clickPublish();

		CalendarEvent.saveEventUserInviteCancel();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Edited Title");
	}

	@priority = "3"
	test EditRepeating {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@description = "This is a use case for LPS-50016."
	@priority = "3"
	test EditRepeatingAllEventsInTheSeries {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Original Event Title");

		CalendarEvent.setRepeating(frequency = "Daily");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoNextDay();

		Refresh();

		CalendarNavigator.gotoNextDay();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Original Event Title",
			eventToday = "false"
		);

		CalendarScheduler.editTitle(eventTitle = "Edited Title");

		CalendarScheduler.saveRepeatingEvent(saveOption = "Entire Series");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarNavigator.gotoToday();

		CalendarScheduler.selectSpecificEvent(eventTitle = "Edited Title");
	}

	@description = "This is a use case for LPS-50017"
	@priority = "2"
	test EditRepeatingAllFollowing {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Original Event Title");

		CalendarEvent.setRepeating(frequency = "Daily");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoNextDay();

		Refresh();

		CalendarNavigator.gotoNextDay();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Original Event Title",
			eventToday = "false"
		);

		CalendarScheduler.gotoEditViaDialogBox();

		CalendarEvent.editTitle(eventTitle = "Edited Title");

		CalendarEvent.publishRepeating(saveOption = "Following Events");

		CalendarEvent.viewTitle(eventTitle = "Edited Title");
	}

	@priority = "4"
	test EditRepeatingReminders {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			number1 = "5",
			number2 = "10",
			numberOfOccurrences = "1",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Repeating Title Edit"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@priority = "4"
	test EditRepeatingWithUserInvite {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			calendarName = "Test Test",
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title Edit");
	}

	@description = "This is a use case for LPS-54548."
	@priority = "4"
	test SearchInSearchPortletWithTag {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Title",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		SearchPortlets.searchEmbedded(searchTerm = "tag1");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Calendar Event Title",
			searchAssetType = "Calendar Event"
		);
	}

	@priority = "4"
	test ViewCalendarChange {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Calendar Event");

		CalendarEvent.selectCalendar(calendarName = "Test Test");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event",
			pageName = "Calendar Page"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event");

		CalendarEvent.selectCalendar(calendarName = "userfn userln");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseOtherCalendarMenulistOption(
			calendarName = "userfn userln",
			menuListOption = "Hide Calendar"
		);

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event",
			pageName = "Calendar Page"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@description = "This is a use case for LPS-51222."
	@priority = "3"
	test ViewCorrectCalendarOnEventSwitch {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Site Event");

		CalendarEvent.selectCalendar(calendarName = "${siteName}");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.editTitle(eventTitle = "Personal Event");

		CalendarEvent.selectCalendar(calendarName = "Test Test");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Site Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "Test Test",
			eventTitle = "Personal Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Site Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "Test Test",
			eventTitle = "Personal Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "Test Test");
	}
}