@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		Staging.openStagingAdmin(siteURLKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name-staging");

		FragmentsAdmin.importCollectionFromDependenciesFolder(
			collectionZipFile = "fragment-collection.zip"
		);

		SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title"
		);

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Published content pages should remain if staging is deactivated."
	@priority = "4"
	test DeactivateStagingAfterPublish {
		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Staging.deactivateStagingCP(siteName = "Test Site Name");

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);
	}

	@description = "Content pages only appear in live view after being published and should appear properly."
	@priority = "5"
	test PublishContentPage {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertTextPresent(value1 = "The requested resource could not be found.");

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);
	}

	@description = "Edits made to existing content pages should not appear in the live site until after published."
	@priority = "5"
	test PublishEditedContentPage {
		property app.server.types = "jboss,resin,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/test-content-page-name"
		);

		ContentPages.gotoEdit();

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Content"
		);

		PageEditor.editFragmentText(
			fragmentName = "Rich Text",
			id = "rich-text",
			text = "New editable fragment text"
		);

		PageEditor.moveFragment(direction = "down", fragmentName = "Title");

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name-staging/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "New editable fragment text",
			key_fragmentClass = "rich-text",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean tempus eleifend lacus nec porttitor. Vestibulum pharetra ullamcorper felis volutpat commodo. Nam id ipsum placerat, hendrerit orci eu, congue nisi. Proin.",
			key_fragmentClass = "body",
			key_position = "3"
		);

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "2"
		);

		AssertElementNotPresent(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean tempus eleifend lacus nec porttitor. Vestibulum pharetra ullamcorper felis volutpat commodo. Nam id ipsum placerat, hendrerit orci eu, congue nisi. Proin.",
			key_fragmentClass = "body",
			key_position = "3"
		);

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		Navigator.openWithAppendToBaseURL(
			urlAppend = "web/test-site-name/test-content-page-name"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "New editable fragment text",
			key_fragmentClass = "rich-text",
			key_position = "1"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "2"
		);

		AssertVisible(
			locator1 = "Fragment#FRAGMENT",
			key_content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean tempus eleifend lacus nec porttitor. Vestibulum pharetra ullamcorper felis volutpat commodo. Nam id ipsum placerat, hendrerit orci eu, congue nisi. Proin.",
			key_fragmentClass = "body",
			key_position = "3"
		);
	}
}