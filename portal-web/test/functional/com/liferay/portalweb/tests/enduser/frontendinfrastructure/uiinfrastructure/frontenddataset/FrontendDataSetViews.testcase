@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given access Datasets admin page") {
			ApplicationsMenu.gotoPortlet(
				category = "Object",
				panel = "Control Panel",
				portlet = "Datasets");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Confirm that the user can change the pagination on the dataset admin page"
	@ignore = "Test Stub"
	@priority = 4
	test CanChangePaginationInAdminPage {

		// TODO CanChangePaginationInAdminPage pending implementation JQuery enabled

	}

	@description = "Confirm that the user can create a data set view"
	@ignore = "Test Stub"
	@priority = 5
	test CanCreateDataSet {

		// TODO CanCreateDataSet pending implementation JQuery enabled

	}

	@description = "Confirm that the user can create a dataset view via API"
	@ignore = "Test Stub"
	@priority = 5
	test CanCreateDataSetViaAPI {

		// TODO CanCreateDataSetViaAPI pending implementation JQuery enabled

	}

	@description = "Confirm the error message that appears when the user tries to create a dataset view with more than 280 characters in the name field"
	@priority = 3
	test CannotExceed280Characters {
		task ("When the user goes to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("When a user types a name that is more than 280 characters") {
			PortletEntry.inputName(name = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam fermentum, est sed varius porttitor, odio tortor commodo ligula, quis auctor nulla massa ut eros. Vestibulum in eros maximus quam gravida dapibus. Proin vitae mi diam. Duis iaculis, nisi quis pharetra varius, arcu eros bibendum turpis, nec posuere nibh arcu id orci.");
		}

		task ("And choose the provider named Channel") {
			FrontendDataSetAdmin.selectProvider(key_type = "Channel");
		}

		task ("And clicking on the Save button") {
			Button.clickSave();
		}

		task ("Then Confirm that alert messages are present") {
			AssertTextPresent(
				locator1 = "Message#ERROR",
				value1 = "Your request failed to complete.");
		}
	}

	@description = "LPS-178778. Confirm the error message that appears when the user tries to create a data set view without the filled name"
	@priority = 3
	test ErrorAppearsWhenNameBlank {
		task ("When the user goes to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("And choose the Provider called channel") {
			FrontendDataSetAdmin.selectProvider(key_type = "Channel");
		}

		task ("And clicking on the Save button") {
			Button.clickSave();
		}

		task ("Then Confirm that 'This field is required' alert messages are present in the provider field") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#WARNING_FEEDBACK",
				value1 = "This field is required.");
		}
	}

	@description = "LPS-178775. Confirm the error message that appears when the user tries to create a Data Set without the filled provider"
	@priority = 3
	test ErrorAppearsWhenProviderBlank {
		task ("When the user goes to add Datasets") {
			LexiconEntry.gotoAdd();
		}

		task ("And filling the field name with 'Test Dataset'") {
			PortletEntry.inputName(name = "Test Dataset");
		}

		task ("And clicking on the Save button") {
			PortletEntry.save();
		}

		task ("Then Confirm that 'This field is required' alert messages are present in the provider field") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#WARNING_FEEDBACK",
				value1 = "This field is required.");
		}
	}

	@description = "Confirm that the user can cancel the creation of a data set view"
	@ignore = "Test Stub"
	@priority = 5
	test NotCreatedAfterCancel {

		// TODO NotCreatedAfterCancel pending implementation JQuery enabled

	}

}