@component-name = "portal-ab-test"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Content Performance";

	setUp {
		task ("Go to DXP portal, login and create site") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			Navigator.openURL();

			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Navigator.openURL();

		AnalyticsCloud.teardownAnalyticsCloud();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "LPS-118006: When the DXP is connected to AC after the user has clicked the Don't show me this again button, the Metrics option is shown again, and the sidebar panel with instructions to sync, and without the Dont show me this again button shows up when the user clicks on it"
	@priority = "4"
	test MetricsInContentDashboardACEnabled {
		task ("Create a Web Content and set a Display Page") {
			JSONWebcontent.addWebContent(
				content = "Webcontent Content",
				groupName = "Test Site Name",
				title = "WC Content");
		}

		task ("Create and Publish a Display Page Template with Fragment") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				subType = "Basic Web Content");

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Display Page Name");

			Button.clickPublish();

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.markDisplayPageAsDefault(displayPageName = "Display Page Name");
		}

		task ("Check in Content Dashboard and open Content Performance Panel") {
			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");

			Click(locator1 = "ContentDashboard#ROW_PANEL_WC");

			Click(locator1 = "ContentPerformance#ICON_VIEW_METRICS");
		}

		task ("Check if elements present") {
			AssertElementPresent(
				locator1 = "ContentPerformance#CONTENT_PERFORMANCE_START_FREE_TRIAL",
				value1 = "Start Free Trial");

			AssertElementPresent(
				locator1 = "ContentPerformance#CONTENT_PERFORMANCE_DO_NOT_SHOW_AGAIN",
				value1 = "Do not show me this again.");
		}

		task ("Click on the button for do not show again") {
			Click(locator1 = "ContentPerformance#CONTENT_PERFORMANCE_DO_NOT_SHOW_AGAIN");
		}

		task ("Assert the Metrics button is not shown") {
			Click.clickNoMouseOver(locator1 = "ContentDashboard#ROW_PANEL_WC");

			AssertElementNotPresent(locator1 = "ContentPerformance#ICON_VIEW_METRICS");
		}

		task ("Open Analytics Cloud") {
			var analyticsCloudURL = PropsUtil.get("analytics.cloud.url");

			Navigator.openURL(baseURL = "${analyticsCloudURL}");
		}

		task ("Take token from Analytics Cloud") {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");

			AnalyticsCloud.takeTokenFromAnalyticsCloud();
		}

		task ("Go to DXP portal, login and create site") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			Navigator.openURL();
		}

		task ("Connect with Analytics Cloud and back to Home Page") {
			ContentPerformance.onlyConectWithAnalyticsCloud();

			Navigator.openURL();
		}

		task ("Create a Web Content and set a Display Page") {
			JSONWebcontent.addWebContent(
				content = "Webcontent Content",
				groupName = "Test Site Name",
				title = "WC Content");
		}

		task ("Create and Publish a Display Page Template with Fragment") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				subType = "Basic Web Content");

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Display Page Name");

			Button.clickPublish();

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.markDisplayPageAsDefault(displayPageName = "Display Page Name");
		}

		task ("Check in Content Dashboard and open Content Performance Panel") {
			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");

			Click(locator1 = "ContentDashboard#ROW_PANEL_WC");

			Click(locator1 = "ContentPerformance#ICON_VIEW_METRICS");
		}

		task ("Assert the button is not present and the message are present") {
			AssertElementNotPresent(
				locator1 = "ContentPerformance#CONTENT_PERFORMANCE_DO_NOT_SHOW_AGAIN",
				value1 = "Do not show me this again.");

			AssertElementPresent(
				locator1 = "ContentPerformance#INSTRUCTIONS_SYNC_AC",
				value1 = "Sync to Liferay Analytics Cloud");
		}
	}

}