@component-name = "portal-ab-test"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Content Performance";

	setUp {
		task ("Go to DXP portal, login and create site") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			Navigator.openURL();

			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Navigator.openURL();

		AnalyticsCloud.teardownAnalyticsCloud();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "LPS-118006: When the DXP is connected to AC after the user has clicked the Don't show me this again button, the Metrics option is shown again, and the sidebar panel with instructions to sync, and without the Dont show me this again button shows up when the user clicks on it"
	@priority = "4"
	test MetricsInContentDashboardACEnabled {
		task ("Create a Web Content via JSONWS") {
			JSONWebcontent.addWebContent(
				content = "Webcontent Content",
				groupName = "Test Site Name",
				title = "WC Content");
		}

		task ("Create a default Display Page Template") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				statusKey = "APPROVED",
				subType = "Basic Web Content");

			JSONLayoutpagetemplate.setLayoutPageTemplateEntryAsDefault(
				groupName = "Test Site Name",
				layoutPageTemplateEntryName = "Display Page Name",
				type = "Display Page Template");
		}

		task ("Navigate to Content Dashboard and open Metrics Panel") {
			ContentDashboard.goToContentDashboard();

			ContentDashboard.openViewMetricsByIcon();
		}

		task ("Click on the button for do not show again") {
			ContentPerformance.clickDoNotShowMeThisAgain();
		}

		task ("Launch AC and get Token") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Navigate to DXP and connect with AC") {
			Navigator.openURL();

			User.loginPG(
				password = "test",
				userEmailAddress = "test@liferay.com");

			ContentPerformance.connectDXPtoAnalyticsCloudNoSync();
		}

		task ("Check in Content Dashboard and open Content Performance Panel") {
			ContentDashboard.goToContentDashboard();

			ContentDashboard.openViewMetricsByIcon();
		}

		task ("Assert the button is not present and the message are present") {
			AssertElementNotPresent(
				key_text = "Do not show me this again",
				locator1 = "Link#ANY");

			AssertVisible(
				locator1 = "ContentPerformance#INSTRUCTIONS_SYNC_AC",
				value1 = "Sync to Liferay Analytics Cloud");
		}
	}

}