@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			JSONGroup.addGroup(groupName = "Site Name");

			ACUtils.addSiteAndPage(
				groupName = "Site Name",
				layoutName = "AC Page",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}
	}

	@description = "Bug: LRAC-8084 | Automation ID: LRAC-11512 | Test Summary: It is possible to create an AB test"
	@priority = "5"
	test CanCreateStartABTest {
		var nameABTest = "Create AB test";

		task ("Connect DXP to Analytics Cloud") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Go to Site Page") {
			ACUtils.launchDXP();

			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page");
		}

		task ("Start an AB test") {
			ABTest.createABTest(
				goal = "Bounce Rate",
				testTitle = "${nameABTest}");

			ABTest.createVariant(variantName = "Variant name");

			ABTest.runTest();
		}

		task ("Go to Tests") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");

			ACNavigation.goToTests();
		}

		task ("Assert AB test") {
			ACUtils.viewGenericText(textValueList = "${nameABTest}");
		}
	}

	@description = "Bug: LRAC-7750 | Automation ID: LRAC-11513 | Test Summary: It is possible to delete an AB test"
	@priority = "5"
	test CanDeleteABTest {
		var nameABTest = "Delete AB test";

		task ("Connect DXP to Analytics Cloud") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Go to Site Page") {
			ACUtils.launchDXP();

			Navigator.openWithAppendToBaseURL(urlAppend = "web/site-name/ac-page");
		}

		task ("Start an AB test") {
			ABTest.createABTest(
				goal = "Bounce Rate",
				testTitle = "${nameABTest}");

			ABTest.createVariant(variantName = "Variant name");

			ABTest.runTest();
		}

		task ("Go to Tests") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${assignedPropertyName}");

			ACNavigation.goToTests();
		}

		task ("Assert AB test Running") {
			ACUtils.viewGenericText(textValueList = "${nameABTest}");

			ACTests.statusABTest(status = "RUNNING");
		}

		task ("Terminate AB Test") {
			ACTests.terminateABTest(testName = "${nameABTest}");
		}

		task ("Go to Tests") {
			ACNavigation.goToTests();
		}

		task ("Assert AB test Terminated") {
			ACUtils.viewGenericText(textValueList = "${nameABTest}");

			ACTests.statusABTest(status = "TERMINATED");
		}

		task ("Delete AB Test") {
			ACTests.deleteABTest(testName = "${nameABTest}");
		}

		task ("Go to Tests") {
			ACNavigation.goToTests();
		}

		task ("Assert AB test Deleted") {
			ACUtils.viewGenericText(textValueList = "There are no tests found.");
		}
	}

}