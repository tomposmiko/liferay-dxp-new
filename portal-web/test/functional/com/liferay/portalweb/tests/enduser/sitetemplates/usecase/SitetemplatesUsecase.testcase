@component-name = "portal-staging"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Site Templates";
	property testray.main.component.name = "Site Templates";
	var siteTemplateName = "Site Template Name";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			User.logoutAndLoginPG(
				password = "test",
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			User.tearDownCP();

			UserGroup.tearDownCP();

			Site.tearDownCP();

			SiteTemplates.tearDownCP();

			DMDocument.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-87055."
	@priority = "3"
	test AddPageTemplatesWithDuplicateNameViaSiteTemplate {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(
			siteTemplateActive = "Yes",
			siteTemplateName = "Site Template Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage",
			rowEntry = "Site Template Name");

		NavItem.gotoPageTemplates();

		PageTemplatesAdmin.addCollection(collectionName = "Page Template Collection");

		Navigator.gotoNavNested(navNested = "Page Template Collection");

		PageTemplatesAdmin.addPageTemplate(
			pageTemplateName = "Test",
			siteTemplate = "true");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage",
			rowEntry = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		NavItem.gotoPageTemplates();

		Navigator.gotoNavNested(navNested = "Page Template Collection");

		PageTemplatesAdmin.addDuplicatePageTemplate(
			pageTemplateName = "Test",
			siteTemplate = "true");
	}

	@description = "This is a use case for LPS-51432 and LPS-95113."
	@priority = "4"
	test AdminCanNotAddASubpageOfAChildPageLinkedToSiteTemplatePage {
		property test.name.skip.portal.instance = "SitetemplatesUsecase#AdminCanNotAddASubpageOfAChildPageLinkedToSiteTemplatePage";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Site Page Name",
			siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addChildPageViaSiteTemplateCP(
			childSitepageName = "true",
			pageName = "Site Page Name",
			siteChildPageName = "Site Child Page Name",
			siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addSiteTemplateCP(
			siteName = "Site Name",
			siteTemplateName = "Site Template Name");

		Navigator.gotoSitePage(
			pageName = "Home",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.togglePrivacy(privacy = "Public Pages");

		Page.viewNoDeletePagesAssociatedWithSiteTemplate(
			page = "Site Child Page Name",
			pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.deletePage(
			pageName = "Site Page Name",
			siteTemplateName = "Site Template Name");

		Navigator.openSiteURL(siteName = "Site Name");

		Page.viewNoPG(pageName = "Site Page Name");

		Page.viewNoPG(pageName = "Site Child Page Name");

		Page.viewNoPage(
			pageName = "Site Page Name",
			privacy = "Public Pages");

		Page.viewNoPage(
			pageName = "Site Child Page Name",
			privacy = "Public Pages");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");
	}

	@priority = "4"
	test EditSiteTemplateGuestPermissions {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "${siteTemplateName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addSiteTemplateCP(
			siteName = "Site Name",
			siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Permissions",
			pageName = "Home");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		Navigator.gotoSitePage(
			pageName = "Home",
			siteName = "Site Name");

		PermissionsInline.gotoSiteTemplateCP(page = "Home");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");
	}

	@priority = "4"
	test ImportOldSchemaVerion {
		property test.name.skip.portal.instance = "SitetemplatesUsecase#ImportOldSchemaVerion";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		LAR.importPortlet(
			failureExpected = "true",
			larFileName = "class-site-template-7.0.lar",
			uploadFrom = "dependencies");
	}

	@description = "This is a use case for LPS-81629"
	@priority = "4"
	test PortletPreferencesPersistWithSiteTemplateWhenSamePortletAddedOnSecondPage {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Page1 Name",
			siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplatesNavigator.gotoSiteTemplatesPage(
			pageName = "Page1 Name",
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		Portlet.addPG(
			defaultURL = "false",
			portletName = "Hello World");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Page2 Name",
			siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addSiteTemplateCP(
			siteName = "Site Name",
			siteTemplateName = "Site Template Name");

		Navigator.gotoSitePage(
			pageName = "Page1 Name",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Hello World");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		Refresh();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		AssertClick(
			locator1 = "Home#PAGE_TEMPLATE_3",
			value1 = "Page2 Name");

		Portlet.addPG(
			defaultURL = "false",
			portletName = "Hello World");

		Navigator.gotoSitePage(
			pageName = "Page1 Name",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Hello World");

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "false",
			roleTitle = "Guest");
	}

	@description = "This is a use case for LPS-75802"
	@priority = "5"
	test PublishSiteCreatedBasedOnASiteTemplate {
		property osgi.app.includes = "frontend-theme-porygon";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(
			siteTemplateActive = "Yes",
			siteTemplateName = "Site Template Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage",
			rowEntry = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		Page.changeCurrentTheme(
			pageName = "Home",
			themeName = "Porygon");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addCP(
			siteName = "Site Name",
			siteTemplateActive = "Yes",
			siteTemplateName = "Site Template Name",
			siteType = "Site Template",
			uncheckPropagation = "true");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging");

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Home",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();
	}

	@priority = "3"
	test SiteAdminCannotDeletePagesThatWereCreatedBySiteTemplates {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(
			selectSiteTemplate = "true",
			siteTemplateName = "Community Site",
			userGroupName = "UG UserGroup Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Manage Pages");

		for (var page : list "Home,Wiki") {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				panel = "Site Administration",
				portlet = "Pages");

			Page.viewNoDeletePagesAssociatedWithSiteTemplate(
				page = "${page}",
				pageName = "Public Pages");

			Refresh();
		}
	}

	@priority = "4"
	test SitesDynamicTemplateInheritance {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Manage Sites Templates");

		SiteTemplates.viewDefaultCP(siteTemplateNameList = "Intranet Site,Community Site");

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		Portlet.addPG(portletName = "Message Boards");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editUserSiteCP(
			siteName = "${siteName}",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(
			selectSiteTemplate = "true",
			siteTemplateName = "Site Template Name",
			userGroupName = "UG UserGroup Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.viewPG(
			pageName = "home",
			portletName = "Message Boards",
			siteName = "${siteName}",
			userGroupName = "UG UserGroup Name");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");
	}

	@priority = "3"
	test SitesTemplateResourceInheritance {
		property portal.release = "false";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		Portlet.addPG(portletName = "Documents and Media");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "Document_1.png");

		if (IsElementNotPresent(locator1 = "Portlet#PORTLET_CONTENT")) {
			ProductMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Site Templates");

			SiteTemplates.gotoViewPages(
				siteName = "${siteName}",
				siteTemplateName = "Site Template Name");
		}

		Portlet.addPG(portletName = "Tasks");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addPersonalSiteCP(
			siteTemplateName = "Site Template Name",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "Document_1.png");

		Tasks.addTask(
			dueDate = "true",
			taskAssignee = "userfn userln",
			taskDescription = "Review Tests",
			taskReporter = "userfn userln");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");
	}

	@description = "This is a use case for LPS-86487."
	@priority = "4"
	test SiteTemplatePageLinkInWebContentRedirectCorrectly {
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Template Site");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Page1 Name",
			siteTemplateName = "Template Site");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Page2 Name",
			siteTemplateName = "Template Site");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplatesNavigator.gotoSiteTemplatesPage(
			pageName = "Page2 Name",
			siteName = "${siteName}",
			siteTemplateName = "Template Site");

		var page2URL = Navigator.getCurrentURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "${page2URL}",
			webContentTitle = "Web Content Title");

		AlloyEditor.addEntryExternalURL(entryExternalURL = "${page2URL}");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addCP(
			siteName = "Site Name",
			siteType = "Template");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page1 Name",
			widgetName = "Web Content Display");

		Navigator.gotoSitePage(
			pageName = "Page1 Name",
			siteName = "Site Name");

		WebContentDisplayPortlet.selectWebContent(
			portletName = "Web Content Display",
			webContentTitle = "Web Content Title");

		Navigator.gotoSitePage(
			pageName = "Page1 Name",
			siteName = "Site Name");

		Click(locator1 = "WCD#WEB_CONTENT_LINK");

		Pause(locator1 = "1000");

		AssertLocation(value1 = "${portalURL}/web/site-name/page2-name");
	}

	@description = "This is a use case for LPS-74081."
	@priority = "4"
	test ViewImportedSitePageWithNumericFriendlyURL {
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addCP(
			siteName = "Export",
			siteType = "Blank");

		JSONLayout.addPublicLayout(
			groupName = "Export",
			layoutName = "1");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "1");

		AssertTextEquals(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "/1");

		JSONLayout.addPublicLayout(
			groupName = "Export",
			layoutName = "2");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "2");

		AssertTextEquals(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "/2");

		JSONLayout.addPublicLayout(
			groupName = "Export",
			layoutName = "Hello");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Hello");

		AssertTextEquals(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "/hello");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export");

		LAR.exportSiteCP(larFileName = "Export");

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Template Site");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addCP(
			siteName = "New Site",
			siteType = "Template");

		LAR.importSiteCP(
			larFileName = "${larFileName}",
			siteName = "New Site");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		Page.viewPagesOrder(
			pageName1 = "Home",
			pageName2 = "1",
			pageName3 = "2",
			pageName4 = "Hello");
	}

	@priority = "3"
	test ViewInlineGuestPermissionsInSiteTemplatesViaWCD {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.addCP(siteTemplateName = "Site Template Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		Portlet.addPG(
			defaultURL = "false",
			portletName = "Web Content Display");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Site Templates");

		SiteTemplates.gotoViewPages(
			siteName = "${siteName}",
			siteTemplateName = "Site Template Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "true",
			roleTitle = "Guest");
	}

}