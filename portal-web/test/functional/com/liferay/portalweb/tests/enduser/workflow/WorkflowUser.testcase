@component-name = "portal-workflow"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Users and Organizations";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Workflow.tearDownPortalWorkflow();

			User.tearDownCP();
		}
	}

	@priority = "5"
	test CreateNewUserAccount {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow"
		);

		Navigator.gotoNavItem(navItem = "Schemes");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "User"
		);

		User.logoutPG();

		WorkflowAsset.createNewUserAccount(
			userEmailAddress = "user@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn",
			workflow = "true"
		);

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.searchCP(searchTerm = "usersn");

		User.viewNoUsersFoundCP();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "userfn userln",
			workflowAssetType = "User",
			workflowTask = "Review"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "userfn userln",
			workflowAssetType = "User",
			workflowTask = "Review"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "user@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		User.logoutAndLoginPG(
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "user@liferay.com",
			userScreenName = "usersn"
		);
	}

	@description = "This is a use case for LPS-69190."
	@priority = "4"
	test ViewUserPreview {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow"
		);

		Navigator.gotoNavItem(navItem = "Schemes");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "User"
		);

		User.logoutPG();

		WorkflowAsset.createNewUserAccount(
			userEmailAddress = "user@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		WorkflowAsset.gotoViaNotification(assetType = "User");

		WorkflowAsset.viewUserDetails(userEmailAddress = "user@liferay.com");

		Workflow.gotoPreviewView();

		WorkflowAsset.viewUserDetails(userEmailAddress = "user@liferay.com");
	}
}