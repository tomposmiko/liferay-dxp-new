@component-name = "portal-document-management"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Asset Sharing";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This test asserts that users get the proper notification based on sharing permissions granted to him."
	@priority = "4"
	test AssertNotifications {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title 1");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title 1");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "DM Document Title 2");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title 2");

		DMDocument.sharePG(
			sharingPermissions = "Update",
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.odt",
			dmDocumentTitle = "DM Document Title 3");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title 3");

		DMDocument.sharePG(
			sharingPermissions = "Comment",
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "3");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title 1",
			ownerName = "Test Test");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "updating",
			dmDocumentTitle = "DM Document Title 2",
			ownerName = "Test Test");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "commenting",
			dmDocumentTitle = "DM Document Title 3",
			ownerName = "Test Test");
	}

	@description = "This test asserts only one entry displays in a user's Shared Content app when multiple users share the same document to him."
	@priority = "4"
	test AssertSingleEntry {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea2@liferay.com",
			userName = "userfn2 userln2");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea2@liferay.com",
			userName = "userfn2 userln2");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea2@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "2");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "Test Test");

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "userfn userln");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		var key_dmDocumentTitle = "DM Document Title";

		AssertTextEquals(
			locator1 = "DocumentsAndMediaShare#SHARED_ASSETS_DOCUMENT_TITLE",
			value1 = "DM Document Title");
		AssertElementNotPresent(locator1 = "//tbody/tr[2]/td[contains(@class,'table-cell-content')]/a[contains(.,'DM Document Title')]");
	}

	@description = "This test ensures that Sharing can be disabled at the instance level."
	@priority = "4"
	test DisableSharingAtInstanceScope {
		property test.name.skip.portal.instance = "DMSharing#DisableSharingAtInstanceScope";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Sharing",
			configurationName = "Sharing",
			configurationScope = "Virtual Instance Scope");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document with sharing disabled");

		LexiconEntry.openEntryMenu(rowEntry = "Document with sharing disabled");

		AssertElementNotPresent(
			key_menuItem = "Share",
			locator1 = "MenuItem#ANY_MENU_ITEM");

		AssertClick(
			key_dmDocumentTitle = "Document with sharing disabled",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_TITLE",
			value1 = "Document with sharing disabled");

		AssertElementNotPresent(
			key_text = "Share",
			locator1 = "Button#ANY");
	}

	@description = "This test ensures that Sharing can be disabled at the system level."
	@priority = "4"
	test DisableSharingAtSystemScope {
		property test.name.skip.portal.instance = "DMSharing#DisableSharingAtSystemScope";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Sharing",
			configurationName = "Sharing",
			configurationScope = "System Scope");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document with sharing disabled");

		LexiconEntry.openEntryMenu(rowEntry = "Document with sharing disabled");

		AssertElementNotPresent(
			key_menuItem = "Share",
			locator1 = "MenuItem#ANY_MENU_ITEM");

		AssertClick(
			key_dmDocumentTitle = "Document with sharing disabled",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_TITLE",
			value1 = "Document with sharing disabled");

		AssertElementNotPresent(
			key_text = "Share",
			locator1 = "Button#ANY");
	}

	@description = "This test ensures that users can Order By Shared Date in the Shared Content app."
	@priority = "3"
	test FilterByAssetType {

		DMDocument.addMultiplePG(
			dmDocumentFileList = "Document_1.jpeg,Document_2.docx",
			viewableBy = "Owner");

		DMNavigator.gotoShare(dmDocumentTitle = "Document_1.jpeg");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		ManagementBar.setFilterAndOrder(filterBy = "Asset Types");

		AssertTextEquals(
			locator1 = "Portlet#H3_MODAL_TITLE",
			value1 = "Select Asset Type");

		SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

		var key_assetType = "Documents";

		AssertClick(
			locator1 = "DocumentsAndMediaShare#SHARED_ASSETS_ASSET_TYPE",
			value1 = "Documents");

		SelectFrame(value1 = "relative=top");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");
	}

	@description = "This test ensures that users receives an email when a document is shared with them. This email contains a link that navigates user to Shared Content app."
	@priority = "4"
	test GoToSharedAssetsViaEmail {
		property custom.properties = "message.boards.message.formats.default=html${line.separator}pop.server.notifications.enabled=true${line.separator}pop.server.subdomain=${line.separator}mail.session.mail.smtp.auth=true${line.separator}mail.session.mail.store.protocol=pop3${line.separator}mail.session.mail.transport.protocol=smtp";
		property dummy.socket.proxy.disabled = "true";
		property test.name.skip.portal.instance = "DMSharing#GoToSharedAssetsViaEmail";
		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration");

		ServerAdministration.configureMailServerSettings(
			needsReply = "true",
			userName = PropsUtil.get("email.address.2"),
			userPassword = PropsUtil.get("email.password.2"));

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Virtual Instances");

		PortalInstances.editCP(
			mailDomain = "gmail.com",
			virtualHost = "localhost");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		JSONUser.addUser(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userScreenName = "usersn1");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userName = "userfn1 userln1");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = PropsUtil.get("email.address.3"));

		Pause(locator1 = "30000");

		Gmail.login(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userPassword = PropsUtil.get("email.password.3"));

		Gmail.gotoHtmlMode();

		Gmail.viewMail(
			emailFromUserName = "Joe Bloggs",
			gmailAssetType = "DM Document Title",
			gmailMessageBody = "Test Test has shared DM Document Title with you for viewing.",
			gmailMessageTitle = "Test Test has shared DM Document Title with you for viewing.");

		AssertClick(
			locator1 = "DocumentsAndMediaShare#EMAIL_VIEW_DOCUMENT_BUTTON",
			value1 = "View Document");

		SelectWindow(locator1 = "title=- Liferay");

		DMDocumentSharing.viewDocumentViaSharedAssets(
			assetSharingPermission = "View",
			dmDocumentTitle = "DM Document Title");
	}

	@description = "This test ensures that users receive a notification in portal when a document is shared to them, and that clicking on that notification navigates them to the Shared Content app."
	@priority = "4"
	test GoToSharedAssetsViaNotifications {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "Test Test");

		DMDocumentSharing.viewDocumentViaSharedAssets(
			assetSharingPermission = "View",
			dmDocumentTitle = "DM Document Title");
	}

	@description = "This use case covers sharing a document to a user, and changing its sharing permissions via Manage Collaborators. This test also covers permissions and making sure users only have access to sharing permissions assigned to him. "
	@priority = "5"
	test ManageCollaborators {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title");

		AssertElementNotPresent(locator1 = "Comments#COMMENT_FIELD");

		AssertElementNotPresent(locator1 = "Button#EDIT");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.changePermission(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			selectPermission = "Can Comment",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentComment.addPG(
			commentBody = "DM Document Comment Body",
			dmDocumentTitle = "DM Document Title");

		AssertElementNotPresent(locator1 = "Button#EDIT");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.changePermission(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			selectPermission = "Can Update",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.editPG(
			dmDocumentDescriptionEdit = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edited");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title Edited");
	}

	@description = "This test ensures that users can Order By Shared Date in the Shared Content app."
	@priority = "3"
	test OrderBySharedDate {
		DMDocument.addMultiplePG(
			dmDocumentFileList = "Document_1.jpeg,Document_2.docx",
			viewableBy = "Owner");

		DMNavigator.gotoShare(dmDocumentTitle = "Document_1.jpeg");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoShare(dmDocumentTitle = "Document_2.docx");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		ManagementBar.setFilterAndOrder(orderBy = "Shared Date");

		ManagementBar.toggleViewOrder(order = "Descending");
	}

	@description = "This test asserts that users can share via Shared Content app."
	@priority = "5"
	test ShareViaSharedAssets {
		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			shareable = "true",
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		DMNavigator.gotoShareViaSharedAssets(dmDocumentTitle = "DM Document Title");

		DMDocument.shareWithNoSharingPermissionsUser(userEmailAddress = "userea2@liferay.com");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Administrator",
			userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		DMNavigator.gotoShareViaSharedAssets(dmDocumentTitle = "DM Document Title");

		IFrame.selectModalFrame();

		Type(
			locator1 = "DocumentsAndMediaShare#INVITE_TO_COLLABORATE_INPUT",
			value1 = "userea2@liferay.com");

		AssertElementPresent(locator1 = "DocumentsAndMediaShare#INVITE_TO_COLLABORATE_DROPDOWN");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.UnassignRegularRoleCP(
			regularRoleName = "Administrator",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Memberships");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Site.assignUserAsMemberCP(
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		DMNavigator.gotoShareViaSharedAssets(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			shareable = "true",
			userEmailAddress = "userea2@liferay.com",
			userName = "userfn2 userln2");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test");
	}

	@description = "This test share an asset to a user and disable the sharing option. This test asserts that a collaborator without sharing permissions will not be able to share this asset."
	@priority = "5"
	test ShareWithNoSharingPermissions {
		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "Shared Content");

		var key_dmDocumentTitle = "DM Document Title";

		AssertElementNotPresent(locator1 = "DocumentsAndMediaShare#SHARED_ASSETS_DOCUMENT_OPTIONS");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Click(locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_VERTICAL_ELLIPSIS");

		MenuItem.viewNotPresent(menuItem = "Share");
	}

	@description = "This test makes sure only owners see the Collaborators List. Collaborators will only see the owner of the document. This usecase also tests that a user can successfully remove collaborators through Manage Collaborators and asserts that empty message displays when all collaborators are removed."
	@priority = "5"
	test ViewAndRemoveCollaborators {
		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea@liferay.com",
			userName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			userEmailAddress = "userea2@liferay.com",
			userName = "userfn2 userln2");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title");

		DMDocumentSharing.viewCollaborators(collaboratorList = "userfn,userfn2");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test");

		var key_collaborator = "userfn";
		var key_text = "Manage Collaborators";

		AssertNotVisible(
			locator1 = "DocumentsAndMediaShare#COLLABORATOR_TOOLTIP",
			value1 = "userfn");

		AssertElementNotPresent(
			locator1 = "Button#ANY",
			value1 = "Manage Collaborators");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test");

		DMDocumentSharing.removeCollaborator(
			collaboratorList = "userfn,userfn2",
			emptyStateMessage = "true");
	}
}