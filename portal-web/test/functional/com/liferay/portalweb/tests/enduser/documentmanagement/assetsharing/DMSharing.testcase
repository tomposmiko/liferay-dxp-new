@component-name = "portal-document-management"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Asset Sharing";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This test ensures that users receive a notification in portal when a document is shared to them. This test also asserts that users do not lose previous notifications even after the document is no longer shared."
	@priority = "4"
	test AssertNotifications {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			ownerName = "Test Test"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test"
		);

		DMDocumentSharing.removeCollaborator(collaboratorList = "userfn");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			ownerName = "Test Test"
		);
	}

	@description = "This test asserts only one entry displays in a user's Shared with Me app when multiple users share the same document to him."
	@priority = "4"
	test AssertSingleEntry {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleTitle = "Administrator", userScreenName = "usersn");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea2@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea2@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "2");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "Test Test"
		);

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Shared With Me"
		);

		var key_dmDocumentTitle = "DM Document Title";

		AssertTextEquals(locator1 = "DocumentsAndMediaShare#SHARED_WITH_ME_DOCUMENT_TITLE", value1 = "DM Document Title");
		AssertElementNotPresent(locator1 = "//tbody/tr[2]/td[contains(@class,'table-cell-content')]/a[contains(.,'DM Document Title')]");
	}

	@description = "This test ensures that users can Order By Shared Date in the Shared with Me app."
	@priority = "3"
	test FilterByAssetType {

		DMDocument.addMultiplePG(
			dmDocumentFileList = "Document_1.jpeg,Document_2.docx",
			viewableBy = "Owner"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "Document_1.jpeg");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Shared With Me"
		);

		ManagementBar.setFilterAndOrder(filterBy = "Asset Types");

		AssertTextEquals(
			locator1 = "Portlet#H3_MODAL_TITLE",
			value1 = "Select Asset Type"
		);

		SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

		var key_assetType = "Documents";

		AssertClick(
			locator1="DocumentsAndMediaShare#SHARED_WITH_ME_ASSET_TYPE",
			value1="Documents"
		);

		SelectFrame(value1 = "relative=top");

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");
	}

	@description = "This test ensures that users receives an email when a document is shared with them. This email contains a link that navigates user to Shared With Me app."
	@priority = "4"
	test GoToSharedWithMeViaEmail {
		property custom.properties = "message.boards.message.formats.default=html${line.separator}pop.server.notifications.enabled=true${line.separator}pop.server.subdomain=${line.separator}mail.session.mail.smtp.auth=true${line.separator}mail.session.mail.store.protocol=pop3${line.separator}mail.session.mail.transport.protocol=smtp";
		property dummy.socket.proxy.disabled = "true";
		property test.name.skip.portal.instance = "DMSharing#GoToSharedWithMeViaEmail";
		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.configureMailServerSettings(
			needsReply = "true",
			userName = PropsUtil.get("email.address.2"),
			userPassword = PropsUtil.get("email.password.2")
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Virtual Instances"
		);

		PortalInstances.editCP(mailDomain = "gmail.com", virtualHost = "localhost");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		JSONUser.addUser(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userScreenName = "usersn1"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = PropsUtil.get("email.address.3"));

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = PropsUtil.get("email.address.3"));

		Pause(locator1 = "30000");

		Gmail.login(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userPassword = PropsUtil.get("email.password.3")
		);

		Gmail.gotoHtmlMode();

		Gmail.viewMail(
			gmailAssetType = "DM Document Title",
			emailFromUserName = "Joe Bloggs",
			gmailMessageBody = "Test Test has shared DM Document Title with you for viewing.",
			gmailMessageTitle = "Test Test has shared DM Document Title with you for viewing."
		);

		AssertClick(locator1 = "DocumentsAndMediaShare#EMAIL_VIEW_DOCUMENT_BUTTON", value1="View Document");

		SelectWindow(locator1 = "title=- Liferay");

		DMDocumentSharing.viewDocumentViaSharedWithMe(
			assetSharingPermission = "View",
			dmDocumentTitle = "DM Document Title (Version 1.0)"
		);
	}

	@description = "This test ensures that users receive a notification in portal when a document is shared to them, and that clicking on that notification navigates them to the Shared With Me app."
	@priority = "4"
	test GoToSharedWithMeViaNotifications {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Notifications.viewBadgeCount(notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewSharedDocument(
			assetSharingPermission = "viewing",
			dmDocumentTitle = "DM Document Title",
			openNotification = "true",
			ownerName = "Test Test"
		);

		DMDocumentSharing.viewDocumentViaSharedWithMe(
			assetSharingPermission = "View",
			dmDocumentTitle = "DM Document Title (Version 1.0)"
		);
	}

	@description = "This use case covers sharing a document to a user, and changing its sharing permissions via Manage Collaborators. This test also covers permissions and making sure users only have access to sharing permissions assigned to him. "
	@priority = "5"
	test ManageCollaborators {
		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title"
		);

		AssertElementNotPresent(locator1 = "Comments#COMMENT_FIELD");

		AssertElementNotPresent(locator1 = "Button#EDIT");

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.changePermission(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			selectPermission = "Can Comment",
			userName = "userfn userln"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentComment.addPG(
			commentBody = "DM Document Comment Body",
			dmDocumentTitle = "DM Document Title"
		);

		AssertElementNotPresent(locator1 = "Button#EDIT");

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.changePermission(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			selectPermission = "Can Update",
			userName = "userfn userln"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.editPG(
			dmDocumentDescriptionEdit = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edited"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title Edited"
		);
	}

	@description = "This test ensures that users can Order By Shared Date in the Shared with Me app."
	@priority = "3"
	test OrderBySharedDate {
		DMDocument.addMultiplePG(
			dmDocumentFileList = "Document_1.jpeg,Document_2.docx",
			viewableBy = "Owner"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "Document_1.jpeg");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoShare(dmDocumentTitle = "Document_2.docx");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Shared With Me"
		);

		ManagementBar.setFilterAndOrder(orderBy = "Shared Date");

		ManagementBar.toggleViewOrder(order = "Descending");
	}

	@description = "This test asserts that users can share via Shared With Me app."
	@priority = "5"
	test ShareViaSharedWithMe {
		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			shareable = "true",
			userEmailAddress = "userea@liferay.com"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Shared With Me"
		);

		DMNavigator.gotoShareViaSharedWithMe(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(
			shareable = "true",
			userEmailAddress = "userea2@liferay.com"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test"
		);
	}

	@description = "This test makes sure only owners see the Collaborators List. Collaborators will only see the owner of the document. This usecase also tests that a user can successfully remove collaborators through Manage Collaborators and asserts that empty message displays when all collaborators are removed."
	@priority = "5"
	test ViewAndRemoveCollaborators {
		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocumentSharing.addDocumentWithOnlyOwnerPermissions(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoShare(dmDocumentTitle = "DM Document Title");

		DMDocument.sharePG(userEmailAddress = "userea@liferay.com,userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title"
		);

		DMDocumentSharing.viewCollaborators(collaboratorList = "userfn,userfn2");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test"
		);

		var key_collaborator = "userfn";
		var key_text = "Manage Collaborators";

		AssertElementNotPresent(
			locator1 = "DocumentsAndMediaShare#COLLABORATOR_TOOLTIP",
			value1 = "userfn"
		);

		AssertElementNotPresent(
			locator1 = "Button#ANY",
			value1 = "Manage Collaborators"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentUploader = "Test Test"
		);

		DMDocumentSharing.removeCollaborator(
			collaboratorList = "userfn,userfn2",
			emptyStateMessage = "true"
		);
	}
}