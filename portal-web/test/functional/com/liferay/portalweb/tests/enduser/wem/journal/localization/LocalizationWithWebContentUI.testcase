@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Web Content Administration";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "The Web Content creator can add a localized web content via source editor."
	@priority = "5"
	test AddLocalizedWebContentViaSourceEditor {
		property portal.acceptance = "true";
		property testray.component.names = "Training,Web Content Administration";

		task ("Given a site designer has a page with a Web Content Display and Language Selector widgets") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Web Content Display");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Language Selector");
		}

		task ("When the site designer adds a web content in English via source editor") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			WebContentDisplayPortletNavigator.gotoAdd();

			WebContent.addCP(webContentTitle = "Basic S.P.A.C.E. Banner");

			CKEditor.addSourceContent(content = '''
<h2 class="text-center">Space Program Academy of Continuing Education</h2>

<p class="text-center">Dare to Dream out of this world</p>
''');

			PortletEntry.publish();
		}

		task ("Then the site designer could view web content in Web Content Display") {
			WaitForElementNotPresent(
				key_text = "Publish",
				locator1 = "Button#ANY");

			WebContentDisplayPortlet.viewContent(
				webContentContent = "Space Program Academy of Continuing Education Dare to Dream out of this world",
				webContentTitle = "Basic S.P.A.C.E. Banner");
		}

		task ("When the site designer adds a Chinese translation to web content via source editor") {
			WebContentDisplayPortletNavigator.gotoEdit(
				menuItem = "Edit Web Content",
				webContentTitle = "Basic S.P.A.C.E. Banner");

			PortletEntry.changeLocale(locale = "ja-JP");

			WebContent.addCP(webContentTitle = "Basic S.P.A.C.E. Banner (Japanese Translation)");

			CKEditor.addContentInWebContent(
				content = "A Japanese translation of the basic front page banner",
				fieldLabel = "Description");

			CKEditor.addSourceContent(content = '''
<h2 class="text-center">Space Program 大学生涯教育</h2>

<p class="text-center">地球から、宇宙の果てへ</p>
''');

			Button.clickPublish();
		}

		task ("Then the site designer could view the translation after changing the user language to Chinese") {
			LanguagePortlet.selectLanguagePG(
				locale = "ja_JP",
				textIcon = "日本語-日本");

			WebContentDisplayPortlet.viewContent(
				webContentContent = "Space Program 大学生涯教育 地球から、宇宙の果てへ",
				webContentTitle = "Basic S.P.A.C.E. Banner (Japanese Translation)");
		}

		task ("When the site designer changes the user language to English") {
			LanguagePortlet.selectLanguagePG(
				locale = "en_US",
				textIcon = "english-United States");
		}

		task ("Then the site designer could view the web content in English") {
			WebContentDisplayPortlet.viewContent(
				webContentContent = "Space Program Academy of Continuing Education Dare to Dream out of this world",
				webContentTitle = "Basic S.P.A.C.E. Banner");

			AssertTextNotEquals(
				index = "1",
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = "Space Program 大学生涯教育 地球から、宇宙の果てへ");
		}
	}

	@description = "This is a test for LPS-141232. The user can add a web content with Spanish translation on CKEditor."
	@priority = "5"
	test AddWebContentWithSpanishTranslation {
		property portal.acceptance = "true";
		property testray.component.names = "Localization,Web Content Administration,WYSIWYG";

		task ("Given the site designer has a page where a Web Content Display widget displays a translated web content") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Language Selector");

			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "Web Content Content",
				webContentTitle = "Web Content Title");

			PortletEntry.changeLocale(locale = "es-ES");

			WebContent.addCP(
				webContentContent = "Web Contenido Contenido",
				webContentTitle = "Web Contenido Titulo");

			PortletEntry.publish();

			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			WidgetPages.addRecentContent(assetTitle = "Web Content Title");
		}

		task ("When the site designer changes the user language to Spanish") {
			LanguagePortlet.selectLanguagePG(
				locale = "es_ES",
				textIcon = "español-España");
		}

		task ("Then the site designer could view the web content in Spanish") {
			WebContentDisplayPortlet.viewContent(
				webContentContent = "Web Contenido Contenido",
				webContentTitle = "Web Contenido Titulo");
		}

		task ("When the site designer opens the translated web content via Web Content Display") {
			WebContentDisplayPortletNavigator.gotoEdit(
				menuItem = "Editar contenido web",
				webContentTitle = "Web Contenido Titulo");

			PortletEntry.changeLocale(locale = "es-ES");
		}

		task ("The the site designer could view the web content in Spanish") {
			WebContent.viewCP(
				webContentContent = "Web Contenido Contenido",
				webContentTitle = "Web Contenido Titulo");
		}
	}

	@description = "Validate translations in web content admin."
	@priority = "4"
	test WebContentAdministrationLocalization {
		property testray.component.names = "Localization,Web Content Administration";

		task ("Given the site designer has a page where a Web Content Display widget displays a web content based on translated structure and template") {
			task ("Add a Web Content Display and Language Selector widget to page") {
				JSONLayout.addWidgetToPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					widgetName = "Web Content Display");

				JSONLayout.addWidgetToPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					widgetName = "Language Selector");
			}

			task ("Add a web content structure with Chinese translation") {
				WebContentStructures.openWebContentStructuresAdmin(siteURLKey = "test-site-name");

				WebContentStructures.addCP(
					description = "WC Structure Description",
					structureName = "WC Structure Name");

				WebContentStructures.addLocalization(
					locale = "fr-FR",
					locale2 = "zh-CN",
					localization1Name = "Structure du contenu Web",
					localization2Name = "wc 结构名称");

				DataEngine.addField(
					fieldFieldLabel = "Text",
					fieldName = "Text");

				WebContentStructures.saveCP();
			}

			task ("Add a web content template with Chinese translation") {
				WebContentTemplates.openWebContentTemplatesAdmin(siteURLKey = "test-site-name");

				WebContentTemplates.addCP(
					structureName = "WC Structure Name",
					templateDescription = "WC Template Description",
					templateFieldNames = "Text",
					templateName = "WC Template Name");

				WebContentTemplates.localizeTemplateName(
					locale = "fr-FR",
					locale2 = "zh-CN",
					localization1Name = "Modele de contenu Web",
					localization2Name = "wc 模板名称",
					templateName = "WC Template Name");

				DDLDataDefinition.save();
			}

			task ("Add a web content with French translation") {
				WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

				WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

				WebContent.addWithStructureCP(
					structureName = "WC Structure Name",
					templateName = "WC Template Name",
					webContentText = "Web Content Text",
					webContentTitle = "Web Content Title");

				PortletEntry.changeLocale(locale = "fr-FR");

				WebContent.addWithStructureCP(
					webContentText = "Contenu de Contenu Web",
					webContentTitle = "Titre du contenu Web");

				PortletEntry.publish();
			}

			task ("Select the web content in Web Content Display") {
				Navigator.gotoSitePage(
					pageName = "Test Page Name",
					siteName = "Test Site Name");

				WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Title");

				IFrame.closeFrame();
			}

			task ("View web content is shown") {
				WebContentDisplayPortlet.viewContent(
					webContentContent = "Web Content Text",
					webContentTitle = "Web Content Title");
			}
		}

		task ("When the site designer changes the user language to French") {
			LanguagePortlet.selectLanguagePG(
				locale = "fr_FR",
				textIcon = "français-France");
		}

		task ("Then the site designer could see the French translations on Web Content Display") {
			WebContentDisplayPortlet.viewContent(
				webContentContent = "Contenu de Contenu Web",
				webContentTitle = "Titre du contenu Web");
		}

		task ("When the site designer changes the user language to French in web content editor") {
			WebContentDisplayPortletNavigator.gotoEdit(
				menuItem = "Modifier le contenu de Web",
				webContentTitle = "Titre du contenu Web");

			PortletEntry.changeLocale(locale = "fr-FR");
		}

		task ("Then the site designer could view the French translations") {
			AssertTextEquals(
				locator1 = "TextInput#TITLE",
				value1 = "Titre du contenu Web");

			AssertTextEquals.assertValue(
				key_fieldFieldLabel = "Text",
				locator1 = "WCEditWebContent#TEXT_INPUT",
				value1 = "Contenu de Contenu Web");

			WebContent.viewStructureAndTemplateLocalization(
				panel = "Modèle par défaut",
				structureLocalizationName = "Structure du contenu Web",
				templateLocalizationName = "Modele de contenu Web");
		}

		task ("When the site designer changes the user language to Chinese on page") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			LanguagePortlet.selectLanguagePG(
				locale = "zh-CN",
				textIcon = "中文-中国");
		}

		task ("Then the site designer should see web content in English on Web Content Display") {
			WebContentDisplayPortlet.viewContent(
				webContentContent = "Web Content Text",
				webContentTitle = "Web Content Title");
		}

		task ("When the site designer changes the user language to Chinese in web content editor") {
			WebContentDisplayPortletNavigator.gotoEdit(
				menuItem = "编辑 Web 内容",
				webContentTitle = "Web Content Title");
		}

		task ("Then the site designer could view the Chinese translations") {
			WebContent.viewStructureAndTemplateLocalization(
				panel = "默认模板",
				structureLocalizationName = "wc 结构名称",
				templateLocalizationName = "wc 模板名称");
		}

		task ("When the site designer changes the user language to English on page") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			LanguagePortlet.selectLanguagePG(
				locale = "en_US",
				textIcon = "english-United States");
		}

		task ("Then the site designer could view the web content in English on Web Content Display") {
			WebContentDisplayPortlet.viewContent(
				webContentContent = "Web Content Text",
				webContentTitle = "Web Content Title");
		}
	}

}