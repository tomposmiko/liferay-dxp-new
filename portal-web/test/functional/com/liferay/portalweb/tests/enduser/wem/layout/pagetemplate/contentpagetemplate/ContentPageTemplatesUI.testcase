@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Page Templates";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			HeadlessSite.addSite(siteName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-153367. The page creator could configure the content page template in a new tab."
	@priority = 4
	test ConfigureContentPageTemplateInANewTab {
		task ("Given a page creator has a content page template") {
			JSONLayoutpagetemplate.addLayoutPageTemplateCollection(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Collection");

			JSONLayoutpagetemplate.addLayoutPageTemplateEntry(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Collection",
				layoutPageTemplateEntryName = "Page Template Name",
				layoutPageTemplateStatus = "Draft",
				layoutPageTemplateType = "Content Page Template");
		}

		task ("When the page creator accesses to the page editor of content page template") {
			PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "test-site-name");

			PageTemplatesAdmin.gotoPageTemplate(pageTemplateName = "Page Template Name");

			PageEditor.assertFragmentSidebarLoaded();
		}

		task ("Then the page creator could configure content page template in a new tab") {
			LexiconEntry.gotoHeaderMenuItem(menuItem = "Configure");

			SelectWindow.selectPopUp(locator1 = "null");

			AssertElementPresent(
				key_title = "General",
				locator1 = "Header#H2_TITLE");

			AssertElementPresent(
				key_sectionTitle = "Categorization",
				locator1 = "PagesAdmin#SECTION_TITLE");
		}
	}

	@description = "This is a test for LPS-132422 and LPS-154130. The list of actions appear in right order for page templates. The portlet is named Page Templates on a local site."
	@priority = 3
	test ViewOrderOfPageTemplatesActions {
		task ("Add a content page template") {
			JSONLayoutpagetemplate.addLayoutPageTemplateCollection(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Collection");

			JSONLayoutpagetemplate.addLayoutPageTemplateEntry(
				groupName = "Test Site Name",
				layoutPageTemplateCollectionName = "Page Template Collection",
				layoutPageTemplateEntryName = "Page Template Name",
				layoutPageTemplateStatus = "Approved",
				layoutPageTemplateType = "Content Page Template");
		}

		task ("Change template to draft") {
			ApplicationsMenu.gotoSite(site = "Test Site Name");

			ProductMenu.gotoPortlet(
				category = "Design",
				portlet = "Page Templates");

			Click(
				key_tab = "Page Templates",
				locator1 = "NavTab#TAB_LINK");

			Navigator.gotoNavNested(navNested = "Page Template Collection");

			PageTemplatesAdmin.gotoPageTemplate(pageTemplateName = "Page Template Name");

			PageEditor.assertFragmentSidebarLoaded();

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");
		}

		task ("Change thumbnail of template") {
			PageTemplatesAdmin.openPageTemplatesAdmin(siteURLKey = "test-site-name");

			PageTemplatesAdmin.gotoPageTemplateEllipsisItem(
				item = "Change Thumbnail",
				pageTemplateName = "Page Template Name");

			ItemSelector.uploadFile(uploadFileName = "Document_1.png");

			LexiconCard.viewCardThumbnail(card = "Page Template Name");

			SelectFrameTop(value1 = "relative=top");
		}

		task ("Assert the actions order of a collection") {
			Click.waitForMenuToggleJSClick(
				key_headerName = "Page Template Collection",
				locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");

			MenuItem.viewOrder(menuItemList = "Edit,Permissions,Delete");

			Click.waitForMenuToggleJSClick(
				key_headerName = "Page Template Collection",
				locator1 = "Portlet#H2_HEADER_VERTICAL_ELLIPSIS");
		}

		task ("Assert the actions order of a page template") {
			LexiconEntry.openEntryMenu(rowEntry = "Page Template Name");

			MenuItem.viewOrder(menuItemList = "Edit,Preview,Move To,Change Thumbnail,Remove Thumbnail,Discard Draft,Rename,Export,Configure,Permissions,Delete");

			LexiconEntry.openEntryMenu(rowEntry = "Page Template Name");
		}
	}

}