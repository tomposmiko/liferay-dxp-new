@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Site Pages Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");
	}

	tearDown {
		JSONGroup.deleteGroupByName(groupName = "Test Site Name");
	}

	@priority = "5"
	test AddWidgetsToDifferentColumns {
		for (var widgetName : list "Asset Publisher,Blogs,Bookmarks,Breadcrumb,Categories Navigation,Documents and Media") {
			JSONLayout.addWidgetToPublicLayout(
				column = "1",
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "${widgetName}");
		}

		for (var widgetName : list "Language Selector,Media Gallery,Message Boards,My Sites,Navigation Menu,Related Assets") {
			JSONLayout.addWidgetToPublicLayout(
				column = "2",
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "${widgetName}");
		}

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		Portlet.viewTitle(portletName = "Language Selector");
	}

	@priority = "5"
	test AddWidgetsToPrivateLayout {
		JSONLayout.addPrivateLayout(
			groupName = "Test Site Name",
			layoutName = "Private Page Name");

		for (var widgetName : list "Asset Publisher,Blogs,Bookmarks,Breadcrumb,Categories Navigation,Documents and Media,Language Selector,Media Gallery,Message Boards,My Sites,Navigation Menu,Related Assets,Search Results,Site Map,Sites Directory,Tags Navigation,Type Facet,Web Content Display,Wiki") {
			JSONLayout.addWidgetToPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Private Page Name",
				widgetName = "${widgetName}");
		}

		Navigator.gotoPrivateSitePage(
			pageName = "Private Page Name",
			siteName = "Test Site Name");

		Portlet.viewTitle(portletName = "Asset Publisher");
	}

	@priority = "5"
	test AddWidgetsToPublicLayout {
		for (var widgetName : list "Asset Publisher,Blogs,Bookmarks,Breadcrumb,Categories Navigation,Documents and Media,Language Selector,Media Gallery,Message Boards,My Sites,Navigation Menu,Related Assets,Search Results,Site Map,Sites Directory,Tags Navigation,Type Facet,Web Content Display,Wiki") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "${widgetName}");
		}

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Test Site Name");

		Portlet.viewTitle(portletName = "Asset Publisher");
	}

	@priority = "5"
	test UpdateLayoutTemplate {
		for (var layoutTemplate : list "1 Column,2 Columns (50/50),2 Columns (30/70),2 Columns (70/30),3 Columns,1-2 Columns (30/70),1-2 Columns (70/30),1-2-1 Columns (50/50),1-2-1 Columns (70/30),1-3-1 Columns,1-3-2 Columns,2-1-2 Columns,2-2 Columns,3-2-3 Columns") {
			JSONLayout.updateLayoutTemplateOfPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				layoutTemplate = "${layoutTemplate}");

			var groupId = JSONGroupAPI._getGroupIdByName(groupName = "Test Site Name");

			var typeSettings = JSONLayoutAPI._getTypeSettingsByName(
				groupId = "${groupId}",
				layoutName = "Test Page Name",
				privateLayout = "false");

			var layoutTemplateId = JSONLayoutUtil._getLayoutTemplateId(
				layoutTemplate = "${layoutTemplate}");

			if (!(contains("${typeSettings}","${layoutTemplateId}"))) {
				fail("${layoutTemplateId} is not in 'typeSettings'");
			}
		}
	}

}