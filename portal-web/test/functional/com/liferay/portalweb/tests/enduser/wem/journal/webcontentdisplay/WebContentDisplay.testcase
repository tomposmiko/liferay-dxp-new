@component-name = "portal-wcd"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Display";
	var pageName = "Web Content Display Page";
	var portletName = "Web Content Display";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page",
			widgetName = "Web Content Display");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test AddAudioViaWebContent {
		property custom.properties = "editor.wysiwyg.portal-impl.portlet.ddm.text_html.ftl=ckeditor${line.separator}xuggler.enabled=true";
		property dummy.socket.proxy.disabled = "true";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WebContentDisplay#AddAudioViaWebContent";
		property testray.component.names = "Training,Web Content Administration";

		ServerAdministration.openServerAdmin();

		ServerAdministration.configureExternalServices(installXuggler = "true");

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		ServerAdministration.openServerAdmin();

		ServerAdministration.configureExternalServices(enableXuggler = "true");

		DMDocument.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp3",
			dmDocumentTitle = "Document_1.mp3");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.mp3");

		DMNavigator.gotoURLDetail();

		var dmDocumentURL = selenium.getElementValue("//input[contains(@id,'url')]");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addViaCKEditor(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.uploadAudio(
			dmDocumentURL = "${dmDocumentURL}",
			navTab = "URL");

		PortletEntry.publish();

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewAudioViaWCD();
	}

	@priority = "4"
	test AddDraftNotApproved {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addDraftPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(
			draft = "true",
			webContentTitle = "WC WebContent Title");
	}

	@priority = "5"
	test AddExistingPageAsDisplayPageInSiteCP {
		property testray.component.names = "Training,Web Content Administration";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page Name");

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		AssetPublisherPortlet.configureDisplaySettings(displaySettings = "Set as the Default Asset Publisher for This Page");

		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Test Site Name",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.editDisplayPage(
			pageName = "Site Page Name",
			pageType = "Public Pages",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		WebContent.viewPGViaAP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title");
	}

	@priority = "5"
	test AddImageToWebContentViaItemSelector {
		property testray.component.names = "Training,Web Content Administration";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Image Page");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		ItemSelector.gotoItemSelectorViaAlloyEditor();

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_3.png");

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Web Content Image Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoSitePage(
			pageName = "Web Content Image Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Image Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		AssertElementPresent(locator1 = "WCD#WEB_CONTENT_INLINE_IMAGE");
	}

	@priority = "4"
	test AddNewWebContentViaAddContentPanel {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Web Content Page");

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name");

		Content.addNewPG(assetType = "Basic Web Content");

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.publishViaWCD();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test AddVideoViaWebContent {
		property custom.properties = "editor.wysiwyg.portal-impl.portlet.ddm.text_html.ftl=ckeditor${line.separator}xuggler.enabled=true";
		property dummy.socket.proxy.disabled = "true";
		property test.name.skip.portal.instance = "WebContentDisplay#AddVideoViaWebContent";
		property testray.component.names = "Web Content Administration";

		ServerAdministration.openServerAdmin();

		ServerAdministration.configureExternalServices(installXuggler = "true");

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		ServerAdministration.openServerAdmin();

		ServerAdministration.configureExternalServices(enableXuggler = "true");

		DMDocument.openDocumentsAndMediaAdmin(siteURLKey = "test-site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp4",
			dmDocumentTitle = "Document_1.mp4");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.mp4");

		DMNavigator.gotoURLDetail();

		var dmDocumentURL = selenium.getElementValue("//input[contains(@id,'url')]");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addViaCKEditor(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.uploadVideo(
			dmDocumentURL = "${dmDocumentURL}",
			navTab = "URL");

		PortletEntry.publish();

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewVideoViaWCD();
	}

	@priority = "5"
	test AddWebContent {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test AddWebContentPortalScopeCurrentPage {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		for (var i : list "1,2") {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				panel = "Site Administration",
				portlet = "Pages");

			SitePages.addPublicPage(pageName = "Web Content Display Page${i}");

			Navigator.gotoSitePage(
				pageName = "Web Content Display Page${i}",
				siteName = "Test Site Name");

			Portlet.addPG(portletName = "Web Content Display");
		}

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name");

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContentDisplayPortlet.configureScopePG(scopeSelection = "Web Content Display Page1");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name");

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContentDisplayPortlet.viewConfigureScopePG(scopeSelection = "Web Content Display Page1");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name");

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContentDisplayPortlet.configureScopePG(scopeSelection = "Web Content Display Page1");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name");

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContentDisplayPortlet.viewConfigureScopePG(scopeSelection = "Web Content Display Page1");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name");

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContent.addPGViaWCD(
			portletNameScoped = "Web Content Display (Web Content Display Page1)",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewDefaultMessage();

		MouseOver(locator1 = "Portlet#PORTLET_CONTENT");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "5"
	test AddWebContentViaAddContentPanel {
		property testray.component.names = "Web Content Display,Training";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Content.addPG(
			assetTitle = "WC WebContent Title",
			pageName = "Web Content Display Page",
			webContentContent = "WC WebContent Content");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@description = "This is a use case for LPS-70386."
	@priority = "5"
	test AddWebContentWithPortletURL {
		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "Web Content Title");

		var portalURL = PropsUtil.get("portal.url");

		AlloyEditor.addSourceContent(content = '''<p><span><a href="${portalURL}/web/test-site-name/site-page-name/-/testportlet">text</a></span></p>''');

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Title");

		Navigator.gotoSitePage(
			pageName = "Site Page Name",
			siteName = "Test Site Name");

		Click(
			key_contentText = "text",
			locator1 = "WCD#WEB_CONTENT_TEXT_LINK_URL");

		Portlet.viewTitle(portletName = "testportlet");
	}

	@description = "Add a web content article with a custom DDM structure and template and display it in the web content display widget."
	@priority = "5"
	test AddWithStructure {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display,Training";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateFile = "wc_template.ftl",
			templateName = "WC Template Name");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addStructuredPGViaWCD(
			structureFieldName = "Text",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			textBoxFieldName = "TextBox",
			webContentText = "WC WebContent Text",
			webContentTextBox = "WC WebContent TextBox",
			webContentTitle = "WC WebContent Title");

		AssertElementPresent(locator1 = "//div[contains(@class,journal-content-article)]//h1[contains(@class,'text')][contains(.,'WC WebContent Text')]");

		AssertElementPresent(locator1 = "//div[contains(@class,journal-content-article)]//h2[contains(@class,'text-box')][contains(.,'WC WebContent TextBox')]");
	}

	@priority = "4"
	test AssertExpired {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(
			expiredContent = "true",
			webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test ChangeTemplate {
		property testray.component.names = "Web Content Display";

		WebContentTemplates.openWebContentTemplatesAdmin(siteURLKey = "test-site-name");

		WebContentTemplates.addCP(
			structureName = "Basic Web Content",
			templateFieldNames = "Content,Content,Content",
			templateName = "Second Basic Template");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			templateName = "Second Basic Template",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content WC WebContent Content WC WebContent Content");

		WebContentDisplayPortletNavigator.gotoEdit(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title");

		WebContent.selectTemplateCP(
			structureName = "Basic Web Content",
			templateName = "Basic Web Content");

		WebContent.publishViaWCD();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test EditWebContent {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortletNavigator.gotoEdit(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title");

		WebContent.editPGViaWCD(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitleEdit = "WC WebContent Title Edit");
	}

	@priority = "4"
	test LocalizeWebContent {
		property test.name.skip.portal.instance = "WebContentDisplay#LocalizeWebContent";
		property testray.component.names = "Localization,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Language Selector");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortletNavigator.gotoEdit(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addCP(
			webContentContent = "世界您好 Content",
			webContentTitle = "世界您好 Title");

		Button.clickPublish();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		LanguagePortlet.selectLanguagePG(
			locale = "zh-CN",
			textIcon = "中文-中国");

		WebContent.viewPGViaWCD(webContentContent = "世界您好 Content");

		LanguagePortlet.tearDownLanguagePG();

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test SearchWebContent {
		property testray.component.names = "Web Content Display";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.searchWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.searchWebContentNo(webContentTitle = "WC2 WebContent2 Title2");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.searchWebContent(
			webContentSearchValue = "&quot;WC WebContent Title&quot;",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.searchWebContentNo(
			webContentSearchValue = "&quot;WC2 WebContent2 Title2&quot;",
			webContentTitle = "WC2 WebContent2 Title2");
	}

	@priority = "5"
	test SelectWebContent {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display,Training";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test SelectWebContentScopeGlobal {
		property testray.component.names = "Web Content Display";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Global",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.configureScopePG(scopeSelection = "Global");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewConfigureScopePG(scopeSelection = "Global");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@description = "This is a use case for LPS-71941."
	@priority = "5"
	test UndeployWebContentDisplayModuleViaGogoShell {
		property test.name.skip.portal.instance = "WebContentDisplay#UndeployWebContentDisplayModuleViaGogoShell";

		GogoShell.openGogoShellAdmin();

		var moduleID = GogoShell.getModuleID(moduleName = "com.liferay.journal.content.web");

		GogoShell.stopModule(moduleID = "${moduleID}");

		GogoShell.viewModuleStatus(
			moduleName = "com.liferay.journal.content.web",
			moduleStatus = "Resolved");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.viewUndeployMessage();

		Click(locator1 = "Portlet#PORTLET_CONTENT");

		Portlet.deletePG(portletName = "com_liferay_journal_content_web_portlet_JournalContentPortlet");

		GogoShell.openGogoShellAdmin();

		GogoShell.startModule(moduleID = "${moduleID}");

		GogoShell.viewModuleStatus(
			moduleName = "com.liferay.journal.content.web",
			moduleStatus = "Active");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");
	}

	@priority = "4"
	test ViewAllFileTypesEnabled {
		property test.name.skip.portal.instance = "WebContentDisplay#ViewAllFileTypesEnabled";
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Connectors",
			configurationName = "OpenOffice Integration",
			configurationScope = "System Scope");

		FormFields.enableCheckbox(fieldName = "serverEnabled");

		SystemSettings.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration");

		WebContentDisplayPortlet.configureSetupPG(userToolNameList = "DOC,ODT,PDF,TXT");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewEnabledFileTypesPGViaWCD(fileTypes = "DOC,ODT,PDF,TXT");
	}

	@priority = "4"
	test ViewAllSettingsEnabledWCDConfiguration {
		property test.name.skip.portal.instance = "WebContentDisplay#ViewAllSettingsEnabledWCDConfiguration";
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content 1",
			webContentTitle = "Web Content Title 1");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.addCP(
			webContentContent = "Web Contenido Contenido 1",
			webContentTitle = "Web Contenido Título 1");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title 1");

		JSONWebcontent.addWebContent(
			content = "Web Content Content 2",
			groupName = "Test Site Name",
			title = "Web Content Title 2");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title 1");

		WebContent.addExistingRelatedAssetCP(
			assetTitle = "Web Content Title 2",
			assetType = "Basic Web Content",
			siteName = "Test Site Name");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Title 1");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration");

		WebContentDisplayPortlet.configureSetupPG(
			enableViewCountIncrement = "true",
			metadataNameList = "Related Assets,Ratings,Comments,Comment Ratings",
			userToolNameList = "Translations,Print");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewAllSettingsEnabledPG(
			locale = "español-España",
			relatedAssetTitle = "Web Content Title 2",
			webContentContentLocalized = "Web Contenido Contenido 1",
			webContentTitleLocalized = "Web Contenido Título 1");
	}

	@priority = "4"
	test ViewArticleWithGuestViewPermission {
		property testray.component.names = "Permissions,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "true",
			roleTitle = "guest");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.viewNoPermissionPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest");

		Navigator.openURL();

		Navigator.openSiteURL(siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoEntryMenuItem(
			entry = "WC WebContent Title",
			menuItem = "Permissions");

		IFrame.selectPermissionsFrame();

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "true",
			roleTitle = "guest");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewNoContentAsGuestPGViaWCD();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewEditTemplate {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			templateName = "Basic Web Content",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortlet.editTemplate(
			editTemplateButton = "true",
			structureName = "Basic Web Content",
			templateName = "Template Edit",
			templateScript = "Template Edited Extra Content",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test ViewPortletWCDShowAvailableLocales {
		property testray.component.names = "Localization,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortletNavigator.gotoEdit(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addCP(
			webContentContent = "世界您好 Content",
			webContentTitle = "世界您好 Title");

		Button.clickPublish();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration");

		WebContentDisplayPortlet.configureSetupPG(userToolNameList = "Translations");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		LanguagePortlet.selectLanguagePG(
			locale = "zh-cn",
			portletName = "JournalContentPortlet",
			textIcon = "中文-中国");

		WebContent.viewPGViaWCD(webContentContent = "世界您好 Content");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			portletName = "JournalContentPortlet",
			textIcon = "english-United States");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test ViewWebContentDisplayPortletMessages {
		property testray.component.names = "Web Content Display";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewDefaultMessage();

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortlet.removeWebContent();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewDefaultMessage();

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewRecycleBinMessage(webContentTitle = "WC WebContent Title");

		WebContentDisplayPortlet.undoMoveToRecycleBin();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContent.deleteCP(
			siteURLKey = "test-site-name",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewDeletedArticle();
	}

	@priority = "4"
	test ViewWithPaginationScript {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name");

		WebContent.addPGViaWCD(
			webContentContent = "@page_break@ Home @page_break@",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPageBreak();

		WebContentDisplayPortlet.viewContentPageBreak(webContentContent = "Home");
	}

}