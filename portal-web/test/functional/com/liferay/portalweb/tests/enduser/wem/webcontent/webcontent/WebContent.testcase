@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "4"
	test AddWebContentDraft {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "DRAFT",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AddWebContentExpirationDate {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.addExpirationDateCP(expirationDate = "01/02/3000");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewExpirationDateCP(expirationDate = "01/02/3000");
	}

	@priority = "4"
	test AddWebContentTitleEscapeCharacter {
		property testray.component.names = "Web Content Administration,XSS";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContentNavigator.gotoEditCP(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "4"
	test CannotRepublishExpiredWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		Button.clickPublish();

		Alert.viewRequestFailedToComplete();

		Alert.viewExpireContentFailedMessage();
	}

	@priority = "4"
	test CompareWebContentVersionsHistory {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent New Content",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent New Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEntryMenuItem(
			entry = "WC WebContent New Title",
			menuItem = "View History"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Compare to...",
			rowEntry = "WC WebContent Title"
		);

		WebContent.viewCompareVersions(
			newContent = "WC WebContent New Content",
			version = "1.1"
		);
	}

	@priority = "5"
	test DeleteWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.deleteCP(
			siteURLKey = "test-site-name",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test DeleteWebContentTitleEscapeCharacter {
		property testray.component.names = "Web Content Administration,XSS";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.deleteCP(
			siteURLKey = "test-site-name",
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "4"
	test EditBasicWebContentStructureAndTemplate {
		property test.name.skip.portal.instance = "WebContent#EditBasicWebContentStructureAndTemplate";
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "global");

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content");

		PortletEntry.inputName(name = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		WebContentStructures.saveCP(structureName = "Basic Web Content Edit");

		WebContent.openWebContentAdmin(siteURLKey = "global");

		NavItem.gotoTemplates();

		WebContentNavigator.gotoEntryMenuItem(
			entry = "Basic Web Content",
			menuItem = "Edit"
		);

		PortletEntry.inputName(name = "Basic Web Content Edit");

		Panel.expandPanel(panel = "Details");

		PortletEntry.inputDescription(description = "Basic Web Content Description");

		for (var templateFieldName : list "Date,Image") {
			WebContentTemplates.inputTemplateAddScreenFields(
				templateFieldNames = "${templateFieldName}"
			);
		}

		WebContentStructures.saveCP();

		WebContent.openWebContentAdmin(siteURLKey = "global");

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		WebContent.openWebContentAdmin(siteURLKey = "global");

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.viewCP(
			structureName = "Basic Web Content Edit",
			templateDescription = "Basic Web Content Description",
			templateName = "Basic Web Content Edit",
			templateScript = '''${Image.getData()}'''
		);
	}

	@priority = "4"
	test EditWCAddLocalization {
		property testray.component.names = "Localization,Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		WebContent.addCP(
			webContentContent = "WC Contenido de la web Contenido",
			webContentTitle = "WC Contenido de la web Titulo"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC Contenido de la web Contenido",
			webContentTitle = "WC Contenido de la web Titulo"
		);
	}

	@priority = "5"
	test EditWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "5"
	test EditWebContentViaArticleTitle {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.searchCP(webContentTitle = "WC WebContent Title");

		LexiconEntry.gotoEntry(rowEntry = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "3"
	test ExpireEditWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.expireCP(webContentTitleList = "WC WebContent Title Edit");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content Edit",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@description = "This is a use case for LPS-80208."
	@priority = "4"
	test ExpireLastestVersion {
		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page"
		);

		Navigator.gotoSitePage(pageName = "Test Page", siteName = "Test Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title Edit"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title Edit");

		Navigator.gotoSitePage(pageName = "Test Page", siteName = "Test Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test ExpireMultipleWebContent {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		for (var i : list "1,2,3") {
			WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "WC WebContent Title ${i}"
			);

			PortletEntry.publish();
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.expireCP(
			webContentTitleList = "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3,"
		);

		for (var i : list "1,2,3") {
			WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title ${i}");

			WebContent.viewStatus(
				webContentContent = "WC WebContent Content",
				webContentStatus = "Expired",
				webContentTitle = "WC WebContent Title ${i}"
			);
		}
	}

	@priority = "4"
	test ExpireWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test MoveMultipleWebContentToFolder {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		for (var webContentTitle : list "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3") {
			WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "${webContentTitle}"
			);

			PortletEntry.publish();
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.moveMultipleToFolderCP(
			folderName = "WC Folder Name",
			rowEntryCheckList = "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		for (var webContentTitle : list "WC WebContent Title 1,WC WebContent Title 2,WC WebContent Title 3") {
			WebContent.viewTitle(webContentTitle = "${webContentTitle}");
		}
	}

	@priority = "4"
	test MoveWebContentToFolder {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.moveToFolderCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "5"
	test MoveWebContentToFolderTraining {
		property testray.component.names = "Training";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.moveToFolderCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test PublishDraftWebContent {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "DRAFT",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.publish(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewApprovedStatus(webContentTitle = "WC WebContent Title");
	}

	@priority = "5"
	test SearchWebContent {
		property testray.component.names = "Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.searchCP(
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.searchNoResultsCP(
			searchQuery = "WC2 WebContent2 Title2",
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test UserEditWebContent {
		property testray.component.names = "Permissions,Roles,Users and Organizations,Web Content Administration";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		JSONRole.addRegularRole(
			roleKey = "Web Content Administrator Role",
			roleTitle = "Web Content Administrator Role"
		);

		for (var resourceActionIndex : list "ADD_STRUCTURE,ADD_FOLDER,ADD_FEED,ADD_ARTICLE,VIEW,UPDATE,SUBSCRIBE,PERMISSIONS,ADD_TEMPLATE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal",
				roleTitle = "Web Content Administrator Role"
			);
		}

		for (var resourceActionIndex : list "ADD_DISCUSSION,VIEW,UPDATE_DISCUSSION,UPDATE,SUBSCRIBE,PERMISSIONS,EXPIRE,DELETE_DISCUSSION,DELETE") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Web Content Administrator Role"
			);
		}

		for (var resourceActionIndex : list "VIEW,UPDATE,SUBSCRIBE,PERMISSIONS,DELETE,ADD_SUBFOLDER,ADD_ARTICLE,ACCESS") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalFolder",
				roleTitle = "Web Content Administrator Role"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Web Content Administrator Role"
		);

		for (var resourceActionIndex : list "VIEW,ACCESS_IN_CONTROL_PANEL") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
				roleTitle = "Web Content Administrator Role"
			);
		}

		User.openUsersAdmin();

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		User.openUsersAdmin();

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Role.openRolesAdmin();

		Role.assignRegRoleCP(
			roleTitle = "Web Content Administrator Role",
			userScreenName = "usersn"
		);

		Site.openSiteMembershipsAdmin(siteURLKey = "test-site-name");

		Site.addAllMembersCP();

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea@liferay.com");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewUserEditCP(
			userFirstLast = "userfn userln",
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ViewContentNotLostWithBlankTitle {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addNullCP(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test ViewDisplayStyleCP {
		property testray.component.names = "Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewDisplayStyleCP(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test ViewMultipleCategoriesViaWebContent {
		property testray.component.names = "Categories,Web Content Administration";

		JSONCategory.addVocabulary(
			groupName = "Test Site Name",
			title = "Vocabulary Name"
		);

		for (var index : list "1,2,3,4,5") {
			JSONCategory.addCategory(
				groupName = "Test Site Name",
				title = "Category Name ${index}",
				vocabularyName = "Vocabulary Name"
			);
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithMultipleCategories(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5",
			vocabularyName = "Vocabulary Name",
			webContentContent = "WC Content Body",
			webContentTitle = "WC Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5",
			webContentTitle = "WC Content Title"
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Category Name 1,Category Name 2,Category Name 3,Category Name 4,Category Name 5"
		);
	}

	@priority = "4"
	test ViewMultipleVocabulariesViaAddWebContent {
		property testray.component.names = "Categories,Web Content Administration";

		for (var index : list "1,2,3,4,5") {
			JSONCategory.addVocabulary(
				groupName = "Test Site Name",
				title = "Vocabulary Name ${index}"
			);

			JSONCategory.addCategory(
				groupName = "Test Site Name",
				title = "Category Name",
				vocabularyName = "Vocabulary Name ${index}"
			);
		}

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "WC Title");

		WebContent.viewCategorizationVocabularyCP(
			vocabularyNameList = "Vocabulary Name 1,Vocabulary Name 2,Vocabulary Name 3,Vocabulary Name 4,Vocabulary Name 5"
		);
	}

	@priority = "3"
	test WebContentAdministrationPaginatingRelatedAssets {
		property testray.component.names = "Related Assets,Web Content Administration";

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 1 Content",
			webContentTitle = "WC WebContent 1 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 1 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 2 Content",
			webContentTitle = "WC WebContent 2 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 2 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 3 Content",
			webContentTitle = "WC WebContent 3 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 3 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 4 Content",
			webContentTitle = "WC WebContent 4 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 4 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 5 Content",
			webContentTitle = "WC WebContent 5 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 5 Title");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 6 Content",
			webContentTitle = "WC WebContent 6 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 6 Title");

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContent.viewTitle(webContentTitle = "WC WebContent 3 Title");

		WebContent.paginateRelatedAssets(
			assetType = "Basic Web Content",
			itemsPerPage = "5",
			webContentTitle = "WC WebContent 3 Title"
		);

		WebContent.viewPaginateRelatedAssets(
			itemsPerPage = "5 Entries",
			numberOfPages = "Showing 1 to 5 of 6 entries."
		);

		WebContent.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent 3 Title");

		WebContent.addExistingRelatedAssetCP(
			assetTitle = "WC WebContent 5 Title",
			assetType = "Basic Web Content",
			siteName = "Test Site Name"
		);

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent 3 Title"
		);

		WebContentDisplayPortlet.configureSetupPG(metadataNameList = "Related Assets");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewRelatedAssetsPGViaWCD(assetTitle = "WC WebContent 5 Title");
	}
}