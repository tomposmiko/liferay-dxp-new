@component-name = "portal-collaboration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property custom.properties = "default.layout.template.id=1_column";
	property testray.main.component.name = "Announcements";
	var pageName = "Announcements Page";
	var portletName = "Announcements";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Announcements Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Announcements Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		Portlet.addPG(portletName = "Announcements");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Announcements Page");

			AnnouncementsEntry.tearDownPG();

			Page.tearDownCP();
		}
	}

	@priority = "4"
	test AddAnnouncementsEntry {
		property test.name.skip.portal.instance = "PGAnnouncements#AddAnnouncementsEntry";

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);
	}

	@priority = "4"
	test AddAnnouncementsEntryFutureDate {
		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addEntryWithFutureDate(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Pause(locator1 = "10000");

		AssertClick(
			locator1 = "Announcements#NAVIGATION_ENTRIES_UNREAD",
			value1 = "Unread"
		);

		AssertTextNotPresent(value1 = "Announcements Entry Title");

		Pause(locator1 = "120000");

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);
	}

	@priority = "3"
	test AddAnnouncementsEntryPastExpirationDate {
		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com",
			expirationDate = "12/31/2013",
			pastDate = "true"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AssertTextNotPresent(value1 = "Announcements Entry Title");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Announcements and Alerts"
		);

		AssertTextEquals(
			locator1 = "Message#NO_ENTRIES",
			value1 = "No entries were found."
		);
	}

	@priority = "4"
	test AddAnnouncementsEntryPriorityImportant {
		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com",
			priority = "Important"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);
	}

	@priority = "3"
	test AddAnnouncementsEntrySite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Announcements Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Announcements Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoSitePage(pageName = "Announcements Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Announcements");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Navigator.gotoSitePage(pageName = "Announcements Page", siteName = "Site Name");

		AnnouncementsEntry.viewPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);
	}

	@priority = "5"
	test DeleteAnnouncementsEntry {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PGAnnouncements#DeleteAnnouncementsEntry";

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.deletePG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);

		AnnouncementsEntry.viewDeletePG(
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);
	}

	@priority = "5"
	test EditAnnouncementsEntry {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PGAnnouncements#EditAnnouncementsEntry";

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.editPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryContentEdit = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title",
			entryTitleEdit = "Announcements Entry Title Edit",
			entryURLEdit = "http://www.alloyui.com"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title Edit"
		);
	}

	@priority = "5"
	test ViewPreviousAnnouncementEntries {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PGAnnouncements#ViewPreviousAnnouncementEntries";

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com"
		);

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.markAsReadPG(
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);

		AnnouncementsEntry.viewReadPG(
			announcementType = "General",
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title"
		);

		AssertClick(
			locator1 = "Announcements#NAVIGATION_ENTRIES_UNREAD",
			value1 = "Unread"
		);

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");
	}
}