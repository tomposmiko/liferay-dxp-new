@component-name = "portal-wcd"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Display";
	var pageName = "Web Content Display Page";
	var portletName = "Web Content Display";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Web Content Display Page"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.addPG(portletName = "Web Content Display");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "4"
	test AddDraftNotApproved {
		property testray.component.names = "Web Content Display";

		WebContent.addDraftPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(draft = "true", webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test AddNewWebContentViaAddContentPanel {
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Page");

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		Content.addNewPG(assetType = "Basic Web Content");

		IFrame.selectEditAssetFrame();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.publishViaWCD();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "5"
	test AddWebContent {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test AddWebContentPortalScopeCurrentPage {
		property testray.component.names = "Web Content Display";

		for (var i : list "1,2") {
			ProductMenu.gotoPortlet(
				category = "Build",
				panel = "Site Administration",
				portlet = "Pages"
			);

			SitePages.addPublicPage(pageName = "Web Content Display Page${i}");

			Navigator.gotoSitePage(
				pageName = "Web Content Display Page${i}",
				siteName = "Test Site Name"
			);

			Portlet.addPG(portletName = "Web Content Display");
		}

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.configureScopePG(
			scopeSelection = "Web Content Display Page1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewConfigureScopePG(
			scopeSelection = "Web Content Display Page1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.configureScopePG(
			scopeSelection = "Web Content Display Page1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewConfigureScopePG(
			scopeSelection = "Web Content Display Page1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page1",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewDefaultMessage();

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page2",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "5"
	test AddWebContentViaAddContentPanel {
		property testray.component.names = "Web Content Display,Training";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Content.addPG(
			assetTitle = "WC WebContent Title",
			pageName = "Web Content Display Page",
			webContentContent = "WC WebContent Content"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@description = "Add a web content article with a custom DDM structure and template and display it in the web content display widget."
	@priority = "5"
	test AddWithStructure {
		property app.server.types = "jboss,resin,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display,Training";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateFile = "wc_template.ftl",
			templateName = "WC Template Name"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addStructuredPGViaWCD(
			structureFieldName = "Text",
			structureName = "WC Structure Name",
			textBoxFieldName = "TextBox",
			webContentText = "WC WebContent Text",
			webContentTextBox = "WC WebContent TextBox",
			webContentTitle = "WC WebContent Title"
		);

		AssertElementPresent(
			locator1 = "//div[contains(@class,journal-content-article)]//h1[contains(@class,'text')][contains(.,'WC WebContent Text')]"
		);

		AssertElementPresent(
			locator1 = "//div[contains(@class,journal-content-article)]//h2[contains(@class,'text-box')][contains(.,'WC WebContent TextBox')]"
		);
	}

	@priority = "4"
	test AssertExpired {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(
			expiredContent = "true",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test ChangeTemplate {
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Web Content Page");

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "Basic Web Content",
			templateFieldNames = "Content,Content,Content",
			templateName = "Second Basic Template"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		Content.addNewPG(assetType = "Basic Web Content");

		IFrame.selectEditAssetFrame();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.selectTemplateCP(
			structureName = "Basic Web Content",
			templateName = "Second Basic Template"
		);

		WebContent.publishViaWCD();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(
			webContentContent = "WC WebContent Content WC WebContent Content WC WebContent Content"
		);

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.selectTemplateCP(
			structureName = "Basic Web Content",
			templateName = "Basic Web Content"
		);

		WebContent.publishViaWCD();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test EditWebContent {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.editPGViaWCD(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitleEdit = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test LocalizeWebContent {
		property test.name.skip.portal.instance = "WebContentDisplay#LocalizeWebContent";
		property testray.component.names = "Localization,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.addPG(portletName = "Language Selector");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "zh-CN");

		WebContent.addCP(
			webContentContent = "世界您好 Content",
			webContentTitle = "世界您好 Title"
		);

		Button.clickPublish();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		LanguagePortlet.selectLanguagePG(locale = "zh-CN", textIcon = "中文-中国");

		WebContent.viewPGViaWCD(webContentContent = "世界您好 Content");

		LanguagePortlet.tearDownLanguagePG();

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "5"
	test RemoveWCDPortletSite {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display,Training";

		Portlet.deletePG(portletName = "Web Content Display");
	}

	@priority = "4"
	test SearchWebContent {
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.searchWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.searchWebContentNo(
			webContentTitle = "WC2 WebContent2 Title2"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.searchWebContent(
			webContentSearchValue = "&quot;WC WebContent Title&quot;",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.searchWebContentNo(
			webContentSearchValue = "&quot;WC2 WebContent2 Title2&quot;",
			webContentTitle = "WC2 WebContent2 Title2"
		);
	}

	@priority = "5"
	test SelectWebContent {
		property portal.acceptance = "true";
		property testray.component.names = "Web Content Display,Training";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test SelectWebContentScopeGlobal {
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.configureScopePG(scopeSelection = "Global");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewConfigureScopePG(scopeSelection = "Global");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test ViewAllFileTypesEnabled {
		property test.name.skip.portal.instance = "WebContentDisplay#ViewAllFileTypesEnabled";
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Connectors",
			configurationName = "OpenOffice Integration",
			configurationScope = "System Scope"
		);

		FormFields.enableCheckbox(fieldName = "serverEnabled");

		SystemSettings.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration"
		);

		WebContentDisplayPortlet.configureSetupPG(userToolNameList = "DOC,ODT,PDF,TXT");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewEnabledFileTypesPGViaWCD(
			fileTypes = "DOC,ODT,PDF,TXT"
		);
	}

	@priority = "4"
	test ViewAllSettingsEnabledWCDConfiguration {
		property test.name.skip.portal.instance = "WebContentDisplay#ViewAllSettingsEnabledWCDConfiguration";
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content 1",
			webContentTitle = "Web Content Title 1"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title 1");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content 2",
			webContentTitle = "Web Content Title 2"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title 2");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title 1");

		WebContent.addExistingRelatedAssetCP(
			assetTitle = "Web Content Title 2",
			assetType = "Basic Web Content",
			siteName = "Liferay",
			webContentTitle = "Web Content Title 1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "Web Content Title 1"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration"
		);

		WebContentDisplayPortlet.configureSetupPG(
			enableViewCountIncrement = "true",
			metadataNameList = "Related Assets,Comment Ratings,Comments,Ratings",
			userToolNameList = "Print"
		);

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewAllSettingsEnabledPG(
			relatedAssetTitle = "Web Content Title 2",
			webContentContent = "Web Content Content 1"
		);
	}

	@priority = "4"
	test ViewArticleWithGuestViewPermission {
		property testray.component.names = "Permissions,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "true",
			roleTitle = "guest"
		);

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest"
		);

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.viewNoPermissionPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest"
		);

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "WC WebContent Title"
		);

		IFrame.selectPermissionsFrame();

		Role.viewPermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			permissionFlagged = "true",
			roleTitle = "guest"
		);

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest"
		);

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewNoContentAsGuestPGViaWCD();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewEditTemplate {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortlet.editTemplate(
			editTemplateButton = "true",
			structureName = "Basic Web Content",
			templateName = "Template Edit",
			templateScript = "Template Edited Extra Content",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test ViewPortletWCDShowAvailableLocales {
		property testray.component.names = "Localization,Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentNavigator.gotoEditPGViaWCD(
			menuItem = "Edit Web Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.changeLocale(fieldName = "Title", locale = "zh-CN");

		WebContent.addCP(
			webContentContent = "世界您好 Content",
			webContentTitle = "世界您好 Title"
		);

		Button.clickPublish();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration"
		);

		WebContentDisplayPortlet.configureSetupPG(userToolNameList = "Translations");

		WebContentDisplayPortlet.saveConfiguration();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		LanguagePortlet.selectLanguagePG(
			locale = "zh-cn",
			portletName = "JournalContentPortlet",
			textIcon = "中文-中国"
		);

		WebContent.viewPGViaWCD(webContentContent = "世界您好 Content");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			portletName = "JournalContentPortlet",
			textIcon = "English-United States"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "4"
	test ViewWebContentDisplayPortletMessages {
		property testray.component.names = "Web Content Display";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewDefaultMessage();

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		WebContentDisplayPortlet.removeWebContent();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewDefaultMessage();

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewRecycleBinMessage(
			webContentTitle = "WC WebContent Title"
		);

		WebContentDisplayPortlet.undoMoveToRecycleBin();

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContentDisplayPortlet.viewDeletedArticle();
	}

	@priority = "4"
	test ViewWithPaginationScript {
		property testray.component.names = "Web Content Display";

		Navigator.gotoSitePage(
			pageName = "Web Content Display Page",
			siteName = "Test Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "@page_break@ Welcome @page_break@",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPageBreak();

		WebContentDisplayPortlet.viewContentPageBreak(webContentContent = "Welcome");
	}
}