@component-name = "portal-collaboration"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Bookmarks";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Bookmarks Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Bookmarks Page",
			widgetName = "Bookmarks");

		Navigator.gotoPage(pageName = "Bookmarks Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Bookmark.tearDownCP();

			PagesAdmin.openPagesAdmin(siteURLKey = "guest");

			PagesAdmin.deletePage(pageName = "Bookmarks Page");
		}
	}

	@priority = "5"
	@refactorneeded
	test AddBookmark {
		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.viewBookmark(
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");
	}

	@priority = "4"
	@refactorneeded
	test AddFolder {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");
	}

	@priority = "4"
	@refactorneeded
	test AddFolderBookmark {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Refresh();

		Bookmark.viewBookmark(
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");
	}

	@priority = "5"
	@refactorneeded
	test AddFolderBookmarkURLInvalid {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.addInvalidURLPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURLInvalid = "www.liferay.com",
			folderName = "Test Folder Name");
	}

	@priority = "5"
	@refactorneeded
	test DeleteFolder {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.deletePG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");
	}

	@priority = "5"
	@refactorneeded
	test DeleteFolderBookmark {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.deletePG(bookmarkName = "Test Bookmark Name");
	}

	@priority = "5"
	@refactorneeded
	test EditFolder {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.editPG(
			folderDescription = "Test Folder Description",
			folderDescriptionEdit = "Test Folder Description Edit",
			folderName = "Test Folder Name",
			folderNameEdit = "Test Folder Name Edit");
	}

	@priority = "5"
	@refactorneeded
	test EditFolderBookmark {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.editPG(
			bookmarkName = "Test Bookmark Name",
			bookmarkNameEdit = "Test Bookmark Name Edit",
			bookmarkURL = "https://www.liferay.com",
			bookmarkURLEdit = "https://portal.liferay.dev");
	}

	@priority = "4"
	@refactorneeded
	test MoveFolderBookmarkToFolder {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description 1",
			folderName = "Test Folder Name 1");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name 1");

		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description 2",
			folderName = "Test Folder Name 2");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.moveToFolderPG(
			bookmarkName = "Test Bookmark Name",
			folderName = "Test Folder Name 1",
			folderName2 = "Test Folder Name 2",
			pageName = "Bookmarks Page");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		var key_assetName = "Test Folder Name 2";

		AssertClick.assertPartialTextClickAt(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "Test Folder Name 2");

		var key_assetName = "Test Bookmark Name";

		AssertTextEquals.assertPartialText(
			locator1 = "Bookmarks#DESCRIPTIVE_ENTRY_TITLE",
			value1 = "Test Bookmark Name");
	}

	@priority = "5"
	@refactorneeded
	test RemoveBookmarkPortlet {
		Portlet.deletePG(portletName = "Bookmarks");
	}

	@priority = "4"
	@refactorneeded
	test SearchFolderBookmark {
		BookmarksFolder.addPG(
			folderDescription = "Test Folder Description",
			folderName = "Test Folder Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		Bookmark.addPG(
			bookmarkDescription = "Test Bookmark Description",
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		SearchPortlets.searchEmbedded(searchTerm = "Test Bookmark Name");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Test Bookmark Name",
			searchAssetType = "Bookmarks Entry",
			searchTerm = "Test Bookmark Name");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		SearchPortlets.searchEmbedded(searchTerm = "asdf");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "asdf");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		BookmarksFolder.gotoPG(folderName = "Test Folder Name");

		SearchPortlets.searchEmbedded(searchTerm = '''"Test Bookmark Name"''');

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Test Bookmark Name",
			searchAssetType = "Bookmarks Entry",
			searchTerm = '''"Test Bookmark Name"''');
	}

}