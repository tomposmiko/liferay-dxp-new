@component-name = "portal-security"
definition {

	property custom.properties = "feature.flag.LPS-142518=true";
	property portal.release = "quarantine";
	property portal.upstream = "true";
	property testray.main.component.name = "Cookies";

	setUp {
		task ("Setup: Setup portal instance") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}
	}

	@description = "This is a use case for LPS-142518. TC-9 Verify that Accept All at the Cookie Banner could be set and cookies are stored with declined values."
	@priority = "5"
	test CookiesBannerAcceptAllSelected {
		property test.name.skip.portal.instance = "CookiesBanner#CookieBannerAcceptAllSelected";

		task ("Given: User click on Accept all") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandling();

			CookieBanner.cookiesBannerAcceptAll();
		}

		task ("Then: All cookie consent category related cookies are created and saved with 'accepted' as value.") {
			CookieHelper.checkAllCookieAreAcceptedAndSaved();
		}
	}

	@description = "This is a use case for LPS-152844. Combined AC-1, AC-2, AC-3, AC-4. Verify that Cookie Banner could be enabled, and customized."
	@priority = "5"
	test CookiesBannerCouldBeEnabledAndCustomized {
		property test.name.skip.portal.instance = "CookiesBanner#CookieBannerCouldBeEnabledAndCustomized";

		task ("Given: a site configured to show the Banner") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandling();

			CookieBannerAdmin.setCustomTextForAllFields(text = "CUSTOM");
		}

		task ("When: the End User first visits the site") {
			CookieHelper.siteVisit();
		}

		task ("Then: they see the Banner text as the Description is configured for the Banner in the site administration.") {
			CookieBanner.verifyCustomTextsArePresent(key_text = "CUSTOM");
		}

		task ("And: they see the 'Decline All' button on the right side of the Banner, next to the 'Accept All' button.") {
			CookieBanner.verifyDeclineAllButtonIsPresent();
		}
	}

	@description = "This is a use case for LPS-148320. Combined AC-1, AC-3. Verify that Cookie Banner could be enabled and customized via OSGI file."
	@priority = "5"
	test CookiesBannerCouldBeEnabledAndCustomizedViaOSGIFile {
		property test.name.skip.portal.instance = "CookiesBanner#CookiesBannerCouldBeEnabledAndCustomizedViaOSGIFile";

		task ("Given: a site configured to show the Banner via OSGI file") {
			OSGiConfig.copyOSGiConfigFile(
				osgiConfigFileBaseDir = "test/functional/com/liferay/portalweb/tests/coreinfrastructureee/security/dependencies",
				osgiConfigFileName = "com.liferay.cookies.configuration.CookiesPreferenceHandlingConfiguration.scoped~default.config");

			OSGiConfig.copyOSGiConfigFile(
				osgiConfigFileBaseDir = "test/functional/com/liferay/portalweb/tests/coreinfrastructureee/security/dependencies",
				osgiConfigFileName = "com.liferay.cookies.configuration.CookiesBannerConfiguration.scoped~default.config");

			OSGiConfig.copyOSGiConfigFile(
				osgiConfigFileBaseDir = "test/functional/com/liferay/portalweb/tests/coreinfrastructureee/security/dependencies",
				osgiConfigFileName = "com.liferay.cookies.configuration.CookiesConsentConfiguration.scoped~default.config");

			var siteId = JSONGroupAPI._getGroupIdByName(
				groupName = "Guest",
				site = "true");

			AntCommand(
				locator1 = "build-test-cookies.xml",
				value1 = "update-cookies-osgi-site-configuration -DsiteId=${siteId}");

			User.logoutAndLoginPG();

			CookieNavigator.gotoSiteSettings(portlet = "Banner");

			CookieBannerAdmin.verifyAllConfigurationElementsAreConfigured(text = "CUSTOM");
		}

		task ("When: modify configuration entries and click cancel button") {
			CookieBannerAdmin.setCustomTextForAllFields(
				cancel = "true",
				text = "Modify CUSTOM");
		}

		task ("Then: all the configuration value changes are not saved.") {
			CookieNavigator.gotoSiteSettings(portlet = "Banner");

			CookieBannerAdmin.verifyAllConfigurationElementsAreConfigured(text = "CUSTOM");
		}
	}

	@description = "This is a use case for LPS-142518. TC-10 Verify that Decline All at the Cookie Banner could be set and cookies are stored with declined values."
	@priority = "5"
	test CookiesBannerDeclineAllSelected {
		property test.name.skip.portal.instance = "CookiesBanner#CookieBannerDeclineAllSelected";

		task ("Given: User click on Decline all") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandling();

			CookieBanner.cookiesBannerDeclineAll();
		}

		task ("Then: All cookie consent category related cookies are created and saved with 'declined' as value.") {
			CookieHelper.checkAllCookieAreDeclinedAndSaved();
		}
	}

	@description = "This is a use case for LPS-148320. Combined AC-1, AC-2, AC-4. Verify Privacy Policy Links can be configured from a local site similarly to an external page with giving its url."
	@priority = "5"
	test PrivacyPolicyLinksCanBeConfiguredFromALocalSite {
		property test.name.skip.portal.instance = "CookiesBanner#PrivacyPolicyLinksCanBeConfiguredFromALocalSite";

		task ("Given: a site configured to show the Banner") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "PolicyPage");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Guest",
				layoutName = "PolicyPage",
				widgetName = "Type Facet");
		}

		task ("When: the End User opens the 'Cookie Consent' panel and clicks on the 'Cookie Policy Link's Display Link Text' with the configured URL as a link on that after the Description") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandling();

			CookieNavigator.gotoSiteSettings(portlet = "Banner");

			CookieBannerAdmin.saveSettings(privacyPolicyLink = "/web/guest/policypage");

			CookieBanner.clickOnPrivacyPolicyLink(privacyPolicyLink = "/web/guest/policypage");
		}

		task ("Then: they go to the 'Cookie Policy Link' page.") {
			CookieHelper.verifyPolicyPageIsVisible(policyLink = "/web/guest/policypage");
		}
	}

}