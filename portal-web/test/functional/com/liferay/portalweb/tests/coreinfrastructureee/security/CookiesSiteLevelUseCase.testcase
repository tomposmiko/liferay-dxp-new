@component-name = "portal-security"
definition {

	property ci.retries.disabled = "true";
	property custom.properties = "feature.flag.LPS-142518=true${line.separator}jsonws.web.service.paths.excludes=${line.separator}system.properties.set=true${line.separator}system.properties.set.override=true";
	property custom.system.properties = "cookie.http.only.names.excludes=GUEST_LANGUAGE_ID";
	property portal.release = "quarantine";
	property portal.upstream = "true";
	property testray.main.component.name = "Cookies";

	setUp {
		task ("Setup: Setup portal instance") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}
	}

	@description = "This is a use case for LPS-170904 TC-3. Verify only functional cookies are set when Site level configuration is Disabled, and the user is a first-time visitor."
	@priority = 5
	test VerifyFunctionalCookiesForFirstVisitInSiteLevelDisableImplicitMode {
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyFunctionalCookiesForFirstVisitInSiteLevelDisableImplicitMode";

		task ("Given: Site Administrator disabled the cookie preference handling in site level and the implicit cookie consent mode.") {
			Site.openSiteSettingsAdmin(siteURLKey = "guest");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.disablePreferenceHandlingWithOutCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");
		}

		task ("When: End User first visits the site") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then: Verify No cookies are set, only the functional cookie: GUEST_LANGUAGE_ID is set verify cookie banner is not present.") {
			CookieBanner.verifyCookieBannerIsNotPresent();

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper._checkSelectedCookieValue(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");
		}
	}

	@description = "This is a use case for LPS-170904 TC-2. Verify only functional cookies are set in Site level and Implicit mode, when the user is a first-time visitor."
	@priority = 5
	test VerifyFunctionalCookiesForFirstVisitInSiteLevelImplicitMode {
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyFunctionalCookiesForFirstVisitInSiteLevelImplicitMode";

		task ("Given: Site Administrator enabled the cookie preference handling in site level and the implicit cookie consent mode.") {
			Site.openSiteSettingsAdmin(siteURLKey = "guest");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithOutCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");
		}

		task ("When: End User first visits the site") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then: Verify only the functional cookie is set cookie banner is present.") {
			CookieBanner.verifyCookieBannerIsPresent();

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper._checkSelectedCookieValue(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");
		}
	}

	@description = "This is a use case for LPS-170904 TC-4. Previously enabled and set cookies are deleted when Site level configuration is Disabled."
	@priority = 5
	test VerifyFunctionalCookiesForNotFirstVisitInSiteLevelDisableImplicitMode {
		property custom.system.properties = "cookie.http.only.names.excludes=GUEST_LANGUAGE_ID";
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyFunctionalCookiesForNotFirstVisitInSiteLevelDisableImplicitMode";

		task ("Given: Site Administrator enabled agreed on the cookie usage,then disable the cookie preference handling in site level.") {
			Site.openSiteSettingsAdmin(siteURLKey = "guest");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookieBanner.cookiesBannerAcceptAll();

			CookieHelper.checkAllCookieAreAcceptedAndSaved();

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.disablePreferenceHandlingWithOutCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");
		}

		task ("When: End User second visits the site") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then: Verify only the functional cookie is set cookie banner is present.") {
			CookieBanner.verifyCookieBannerIsNotPresent();

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper._checkSelectedCookieValue(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");
		}
	}

	@description = "This is a use case for LPS-170904 TC-9. Verify Instance level settings don't overwrite Site level settings when both are active"
	@priority = 5
	test VerifyInstanceCookieSettingDontOverwiteSiteLevelWhenBothActive {
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyInstanceCookieSettingDontOverwiteSiteLevelWhenBothActive";

		task ("Given: Enabled the cookie preference handling with explicit mode in site and instance level.") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://localhost:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");

			CookieBannerAdmin.setCustomTextForAllFieldsAtSiteLevel(
				baseURL = "http://localhost:8080",
				siteURLKey = "guest",
				text = "SITE_LEVEL");

			Site.openSiteSettingsAdmin(siteURLKey = "guest");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://localhost:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsent();

			CookieBannerAdmin.setCustomTextForAllFields(text = "INSTANCE_LEVEL");
		}

		task ("When: End User first visits the site") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then: Verify No cookies are set, not even the functional cookie: GUEST_LANGUAGE_ID verify cookie banner with site level is present.") {
			CookieBanner.verifyCookieBannerIsPresent();

			AssertTextEquals(
				key_text = "SITE_LEVEL_1",
				locator1 = "CookieBannerAdmin#CONTENT_TEXT",
				value1 = "SITE_LEVEL_1 SITE_LEVEL_3");

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper.checkSelectedCookieIsNotPresent(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");
		}

		task ("And: End User first visits the instance, Verify cookie banner with instance level is present.") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:8080",
				userEmailAddress = "test@liferay.com");

			CookieBanner.verifyCookieBannerIsPresent();

			AssertTextEquals(
				key_text = "INSTANCE_LEVEL_1",
				locator1 = "CookieBannerAdmin#CONTENT_TEXT",
				value1 = "INSTANCE_LEVEL_1 INSTANCE_LEVEL_3");
		}
	}

	@description = "This is a use case for LPS-170904 TC-11. Multiple Site URLs for the same site, cookies appear related to other correct domains"
	@priority = 5
	test VerifyMultipleSiteURLsForSameSiteCookiesConfigurationRelated {
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyMultipleSiteURLsForSameSiteCookiesConfigurationRelated";

		task ("Given: Site Administrator enabled the cookie preference handling in site1 with explicit cookie consent mode.") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");

			HeadlessSite.addSite(siteName = "Site Name 1");

			CookieHelper.createSitePageWithCookieBannerConfigurationPortlet(groupName = "Site Name 1");

			JSONUser.addUserToSite(
				groupName = "Site Name 1",
				userEmailAddress = "userea@liferay.com");

			JSONUser.addUserToSite(
				groupName = "Site Name 1",
				userEmailAddress = "test@liferay.com");

			JSONRole.assignSiteRoleToUser(
				groupName = "Site Name 1",
				roleTitle = "Site Administrator",
				userEmailAddress = "test@liferay.com");

			Site.openSiteSettingsAdmin(siteURLKey = "site-name-1");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			Site.openSiteSettingsAdmin(siteURLKey = "site-name-1");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.baker.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "site-name-1");
		}

		task ("When: End User first visits www.baker.com on the site1") {
			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.baker.com:8080",
				userEmailAddress = "test@liferay.com");

			CookieNavigator.gotoSiteSettings(
				baseURL = "http://www.baker.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "site-name-1");
		}

		task ("Then: Verify that the same Site1's site-level cookie configuration is present.") {
			FormFields.viewCheckboxChecked(fieldName = "Enabled");

			FormFields.viewCheckboxChecked(fieldName = "Explicit Cookie Consent Mode");
		}
	}

	@description = "This is a use case for LPS-170904 TC-1. Verify no cookies are set in Site level and Explicit mode, when the user is a first-time visitor"
	@priority = 5
	test VerifyNoCookiesForFirstVisitInSiteLevelExplicitMode {
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifyNoCookiesForFirstVisitInSiteLevelExplicitMode";

		task ("Given: Site Administrator enabled the cookie preference handling in site level and the explicit cookie consent mode.") {
			Site.openSiteSettingsAdmin(siteURLKey = "guest");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "guest");
		}

		task ("When: End User first visits the site") {
			UserBar.signOut();

			CookieHelper.deleteAllCookiesAndRefreshPage();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");
		}

		task ("Then: Verify No cookies are set, not even the functional cookie: GUEST_LANGUAGE_ID verify cookie banner is present.") {
			CookieBanner.verifyCookieBannerIsPresent();

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper.checkSelectedCookieIsNotExist(cookieName = "GUEST_LANGUAGE_ID");
		}
	}

	@description = "This is a use case for LPS-170904 TC-10. Verify Site 1 cookies don't appear when visiting Site 2"
	@priority = 5
	test VerifySite1CookiesDontAppearWhenVisitingSite2 {
		property custom.system.properties = "cookie.http.only.names.excludes=GUEST_LANGUAGE_ID";
		property test.name.skip.portal.instance = "CookiesSiteLevelUseCase#VerifySite1CookiesDontAppearWhenVisitingSite2";

		task ("Given: Site Administrator enabled the cookie preference handling in site1 with explicit cookie consent mode.") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");

			for (var count : list "1,2") {
				HeadlessSite.addSite(siteName = "Site Name ${count}");

				CookieHelper.createSitePageWithCookieBannerConfigurationPortlet(groupName = "Site Name ${count}");

				JSONUser.addUserToSite(
					groupName = "Site Name ${count}",
					userEmailAddress = "userea@liferay.com");

				JSONUser.addUserToSite(
					groupName = "Site Name ${count}",
					userEmailAddress = "test@liferay.com");

				JSONRole.assignSiteRoleToUser(
					groupName = "Site Name ${count}",
					roleTitle = "Site Administrator",
					userEmailAddress = "test@liferay.com");
			}

			Site.openSiteSettingsAdmin(siteURLKey = "site-name-1");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.able.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsentInSiteSettings(
				baseURL = "http://www.able.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "site-name-1");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "userea@liferay.com");

			Navigator.openSiteURL(
				baseURL = "http://www.able.com:8080",
				siteName = "Site Name 1");
		}

		task ("And: Verify Site1 No cookies are set, not even the functional cookie: GUEST_LANGUAGE_ID enable cookie in site2 with implicit mode.") {
			CookieBanner.verifyCookieBannerIsPresent();

			CookieConsentPanel.verifyCookiesForCookieCategoriesAreNotPresent();

			CookieHelper.checkSelectedCookieIsNotPresent(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:8080",
				userEmailAddress = "test@liferay.com");

			Site.openSiteSettingsAdmin(siteURLKey = "site-name-2");

			Site.addVirtualHostsURLCP(
				pageVirtualHosts = "true",
				pageVirtualHostURL = "www.baker.com");

			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.baker.com:8080",
				userEmailAddress = "test@liferay.com");

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithOutCookieConsentInSiteSettings(
				baseURL = "http://www.baker.com:8080",
				portlet = "Preference Handling",
				siteURLKey = "site-name-2");
		}

		task ("When: End User first visits the site2") {
			UserBar.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.baker.com:8080",
				userEmailAddress = "userea@liferay.com");

			Navigator.openSiteURL(
				baseURL = "http://www.baker.com:8080",
				siteName = "Site Name 2");
		}

		task ("Then: Verify only the functional cookie is set cookie banner is present Nothing to do with site1 setting.") {
			CookieBanner.verifyCookieBannerIsPresent();

			CookieHelper._checkSelectedCookieValue(
				cookieName = "GUEST_LANGUAGE_ID",
				expectedCookieValue = "en_US");
		}
	}

}