@component-name = "portal-clustering"
definition {

	property app.server.bundles.size = "1";
	property cluster.enabled = "true";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.upstream = "true";
	property remote.elasticsearch.enabled = "true";
	property testray.main.component.name = "Clustering";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PagesAdmin.tearDownCP();

			BlogsEntry.tearDownCP();
		}
	}

	@priority = 4
	test CacheReplicationbyCopy {
		property custom.properties = "ehcache.replicator.properties.test.cache=replicatePutsViaCopy=true";
		property test.name.skip.portal.instance = "ClusteringMissingPlugins#CacheReplicationbyCopy";

		Clustering.viewClusterStatusInConsole();

		Clustering.deployClusteringModule(nodePort = 8080);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Could not resolve module: com.liferay.portal.cluster.multiple.sample.web",
			nodePort = 8080);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "STARTED com.liferay.portal.cluster.multiple.sample.web",
			nodePort = 8080);

		Groovy.runScriptViaGogoShell(scriptFile = "groovy-script-portal-cache-put-modules.groovy");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Put test.key into test.cache",
			nodePort = 8080);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Unable to deserialize object",
			nodePort = 9080);

		Groovy.runScriptViaGogoShell(
			expectedOutput = "test.cache is empty",
			nodePort = 9080,
			scriptFile = "groovy-script-portal-cache-get.groovy");

		Groovy.runScriptViaGogoShell(
			nodePort = 9080,
			scriptFile = "groovy-script-portal-cache-remove.groovy");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Removed test.key from test.cache",
			nodePort = 8080);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Removed test.key from test.cache",
			nodePort = 9080);

		Groovy.runScriptViaGogoShell(scriptFile = "groovy-script-portal-cache-put-modules.groovy");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Unable to deserialize object",
			nodePort = 9080);

		Clustering.deployClusteringModule(nodePort = 9080);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Could not resolve module: com.liferay.portal.cluster.multiple.sample.web",
			nodePort = 9080);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "STARTED com.liferay.portal.cluster.multiple.sample.web",
			nodePort = 9080);

		Groovy.runScriptViaGogoShell(
			expectedOutput = "test.cache is empty",
			nodePort = 9080,
			scriptFile = "groovy-script-portal-cache-get.groovy");

		Groovy.runScriptViaGogoShell(scriptFile = "groovy-script-portal-cache-remove.groovy");

		Groovy.runScriptViaGogoShell(scriptFile = "groovy-script-portal-cache-put-modules.groovy");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Put test.key into test.cache",
			nodePort = 9080);
	}

	@priority = 4
	test ScheduleJobOnAllClusterNodes {
		property test.name.skip.portal.instance = "ClusteringMissingPlugins#ScheduleJobOnAllClusterNodes";

		Clustering.viewClusterStatusInConsole();

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 8080);

		Groovy.runScriptViaGogoShell(
			expectedOutput = "This node is master node",
			scriptFile = "groovy-script-master-slave.groovy");

		Groovy.runScriptViaGogoShell(
			expectedOutput = "This node is slave node",
			nodePort = 9080,
			scriptFile = "groovy-script-master-slave.groovy");

		Clustering.deployClusteringModule(nodePort = 9080);

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 9080);

		// Pausing 10 seconds due to LRQA-75909

		Pause(locator1 = 10000);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Run job at ",
			nodePort = 8080);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Run job at ",
			nodePort = 9080);

		Clustering.deployClusteringModule(nodePort = 8080);

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 8080);

		// Pausing 10 seconds due to LRQA-75909

		Pause(locator1 = 10000);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Run job at ",
			nodePort = 8080);

		Clustering.shutdownSpecificServer(nodePort = 8080);

		Groovy.runScriptViaGogoShell(
			expectedOutput = "This node is master node",
			nodePort = 9080,
			scriptFile = "groovy-script-master-slave.groovy");

		// Pausing 10 seconds due to LRQA-75909

		Pause(locator1 = 10000);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Run job at ",
			nodePort = 9080);
	}

	@priority = 4
	test ScheduleJobOnClusterNode1 {
		property test.name.skip.portal.instance = "ClusteringMissingPlugins#ScheduleJobOnClusterNode1";

		Clustering.viewClusterStatusInConsole();

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 9080);

		Clustering.deployClusteringModule(nodePort = 8080);

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 8080);

		WaitForConsoleTextPresent(value1 = "STARTED com.liferay.portal.cluster.multiple.sample.web_1.0.0");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Run job at ",
			nodePort = 8080);

		Clustering.shutdownSpecificServer(nodePort = 8080);

		Groovy.runScriptViaGogoShell(
			expectedOutput = "This node is master node",
			nodePort = 9080,
			scriptFile = "groovy-script-master-slave.groovy");

		// Pausing 10 seconds due to LRQA-75909

		Pause(locator1 = 10000);

		Clustering.viewTextNotPresentOnSpecificNode(
			exceptionText = "Run job at ",
			nodePort = 9080);

		Clustering.deployClusteringModule(nodePort = 9080);

		Clustering.enableDebugging(
			categoryName = "com.liferay.portal.cluster.multiple.sample.web.internal",
			nodePort = 9080);

		WaitForConsoleTextPresent(value1 = "Cluster sample command is null");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Scheduler job com.liferay.portal.cluster.multiple.sample.web.internal.scheduler.ClusterSampleSchedulerJobConfiguration.com.liferay.portal.cluster.multiple.sample.web.internal.scheduler.ClusterSampleSchedulerJobConfiguration already exists",
			nodePort = 9080);

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Run job at ",
			nodePort = 9080);
	}

}