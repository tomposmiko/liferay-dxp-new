@component-name = "portal-core-infrastructure-portal-services-ee"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Auditing";
	property testray.testcase.product.edition = "EE";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.tearDownCP();

			Role.tearDownCP();
		}
	}

	@priority = "4"
	test ViewResourceActionsCP {
		property test.name.skip.portal.instance = "CPAuditreportsUsecaseEE#ViewResourceActionsCP";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search"
		);

		SearchAdministration.executeSearchActions(
			actionsDescription = "Reindex all search indexes."
		);

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		var key_userScreenName = "test";

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "test"
		);

		Pause(locator1 = "5000");

		var userId = selenium.getElementValue("UsersAndOrganizationsEditUser#DETAILS_USER_ID_FIELD");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		Audit.searchCP(
			searchTerm = "${userId}",
			userId = "${userId}",
			userName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		Audit.searchCP(searchTerm = "Test Test", userName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		Audit.searchCP(
			resourceId = "${userId}",
			searchTerm = "${userId}",
			userName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		Audit.searchCP(
			resourceName = "User",
			searchTerm = "User",
			userName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		Audit.searchCP(
			resourceAction = "Login",
			searchTerm = "Login",
			userName = "Test Test"
		);

		User.logoutPG();

		User.loginUserInvalidPG(
			password = "user",
			userEmailAddress = "test@liferay.com"
		);

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		var key_resourceAction = "Login Failure";
		var key_resourceName = "User";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "Login Failure"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "test1@liferay.com",
			userFirstName = "test1",
			userLastName = "test1",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "test1");

		Close.closeWindow(locator1 = "title=Welcome - ${siteName}");

		SelectWindow(
			locator1 = "title=Users and Organizations - Control Panel - ${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		var key_resourceAction = "Impersonate";
		var key_resourceName = "User";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "Impersonate"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Role1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(roleTitle = "Role1", userScreenName = "test1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.addCP(userGroupName = "User Group1");

		UserGroup.assignMemberCP(
			userGroupName = "User Group1",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Audit"
		);

		var key_resourceAction = "Add";
		var key_resourceName = "Role";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_NAME",
			value1 = "Role"
		);

		var key_resourceAction = "Add";
		var key_resourceName = "Role";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "Add"
		);

		var key_resourceAction = "Assign";
		var key_resourceName = "User";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_NAME",
			value1 = "User"
		);

		var key_resourceAction = "Assign";
		var key_resourceName = "User";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "Assign"
		);

		var key_resourceAction = "Add";
		var key_resourceName = "User Group";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_NAME",
			value1 = "User Group"
		);

		var key_resourceAction = "Add";
		var key_resourceName = "User Group";

		AssertTextEquals(
			locator1 = "AuditReports#REPORTS_TABLE_RESOURCE_ACTION",
			value1 = "Add"
		);

		AssertTextEquals(
			locator1 = "xpath=(//tr[contains(.,'Assign') and contains(.,'User')]/td[4])[2]",
			value1 = "User"
		);

		AssertTextEquals(
			locator1 = "xpath=(//tr[contains(.,'Assign') and contains(.,'User')]/td[5])[2]",
			value1 = "Assign"
		);
	}
}