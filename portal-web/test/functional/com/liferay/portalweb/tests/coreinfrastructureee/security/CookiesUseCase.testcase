@component-name = "portal-security"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Cookies";

	setUp {
		task ("Setup: Setup portal instance") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			CookiePreferenceHandlingAdmin.enablePreferenceHandlingInInstanceSettings();
		}
	}

	@description = "This is a use case for LPS-142518. TC-1, TC-2 and TC-3: Verify that Cookie Banner is visible with the options configured by the site admin."
	@priority = 5
	test CookieBannerAndCookieConsentPanelElementsAreVisible {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CookiesUseCase#CookieBannerAndCookieConsentPanelElementsAreVisible";

		task ("Given: Cookie banner and Cookie Consent portlet are present") {
			CookieBanner.verifyAllElementsArePresent();
		}

		task ("When: User accept all cookies at the Cookie Consent portlet.") {
			CookieConsentPanel.cookiesAcceptAll();
		}

		task ("Then: All cookie consent category related cookies are created and saved with 'accepted' as value.") {
			CookieHelper.checkAllCookieAreAcceptedAndSaved();
		}

		task ("And: Cookie Consent portlet in the popup is closed.") {
			CookieBanner.checkCookieConsentPanelIsNotVisible();
		}
	}

	@description = "This is a use case for LRQA-75234. Verify that cookies are deleted when lifespan is over via simulated delete."
	@priority = 5
	test CookieBannerBecameVisibleWhenCookiesAreRemovedOrExpired {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CookiesUseCase#CookieBannerBecameVisibleWhenCookiesAreRemovedOrExpired";

		task ("Given: Cookie Banner is present on the Site.") {
			CookieBanner.cookiesBannerAcceptAll();
		}

		task ("When: User deletes the accepted cookies") {
			CookieHelper.checkAllCookieAreAcceptedAndSaved();

			CookieHelper.deleteAllCookiesAndRefreshPage();
		}

		task ("Then: Cookie Banner is visible again") {
			CookieBanner.verifyAllElementsArePresent();
		}
	}

	@description = "This is a use case for LPS-142518. TC-8 Verify that cookies will have 6 months of lifetime when they are accepted or declined. Blocked by LRCI-2917."
	@ignore = "true"
	@priority = 5
	test CookiesLifetimeIsSixMonthsWhenTheyAreSaved {
		property portal.acceptance = "quarantine";
		property test.name.skip.portal.instance = "CookiesUseCase#CookiesLifetimeIsSixMonthsWhenTheyAreSaved";

		task ("Given: Cookie Banner is present on the Site.") {
			CookieBanner.cookiesBannerAcceptAll();
		}

		task ("When: User accepts all cookie categories") {
			CookieHelper.checkAllCookieAreAcceptedAndSaved();
		}

		task ("Then: Cookie category related cookies are saved with 6 months as expiration time.") {
			CookieBanner.checkIfCookiesHasSixMonthsAsExpirationDate();
		}
	}

	@description = "This is a use case for LPS-159221 TC-1. Verifying that Cookies are not saved until End-User sets them via Cookie Banner. Blocked by LPS-162952."
	@ignore = "true"
	@priority = 5
	test VerifyingExplicitCookieWorfklow {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CookiesUseCase#VerifyingExplicitCookieWorfklow";

		task ("Given: Cookie preference handling is saved with Explicit Consent mode enabled.") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithCookieConsent();

			CookieBanner.verifyCookieBannerIsPresent();
		}

		task ("Then: Cookies are saved with false as value except the NECESSARY coookie.") {
			CookieHelper.checkEachCookiesSavedValue(
				cookieNameListWithFalseValue = "CONSENT_TYPE_PERSONALIZATION,CONSENT_TYPE_FUNCTIONAL,CONSENT_TYPE_PERFORMANCE",
				cookieNameListWithTrueValue = "CONSENT_TYPE_NECESSARY");
		}
	}

	@description = "This is a use case for LPS-159221 TC-2. Verifying that Cookies are saved beforehand with true as value, and we didn't show the Cookie Banner. Blocked by LPS-162952."
	@ignore = "true"
	@priority = 5
	test VerifyingImplicitCookieWorfklow {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CookiesUseCase#VerifyingImplicitCookieWorfklow";

		task ("Given: Cookie preference handling is saved with Explicit Consent mode is disabled.") {
			CookiePreferenceHandlingAdmin.enablePreferenceHandlingWithoutCookieConsent();

			CookieBanner.verifyCookieBannerIsPresent();
		}

		task ("Then: Cookies are saved with true as value.") {
			CookieHelper.checkEachCookiesSavedValue(cookieNameListWithTrueValue = "CONSENT_TYPE_NECESSARY,CONSENT_TYPE_PERSONALIZATION,CONSENT_TYPE_FUNCTIONAL,CONSENT_TYPE_PERFORMANCE");
		}
	}

	@description = "This is a use case for LPS-156903. Verify the order of menu items after Cookie Preference Handling is enabled"
	@priority = 3
	test VerifyOrderOfMenuItemsInSiteSettings {
		property test.name.skip.portal.instance = "CookiesUseCase#CookiesLifetimeIsSixMonthsWhenTheyAreSaved";

		task ("Verify the order of menu items in Site Settings") {
			AssertVisible(locator1 = "CookieBannerAdmin#MENU_ITEMS_IN_ORDER");
		}
	}

}