@component-name = "portal-search"
definition {

	property portal.release = "true";
	property portal.suite.search.engine = "elasticsearch7";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Search";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			MessageboardsThread.tearDownCP();

			JSONUser.tearDownNonAdminUsers();

			WebContent.tearDownCP();

			DMDocument.tearDownCP();

			WikiPage.tearDownCP();

			Vocabulary.tearDownCP();

			Tag.tearDownCP(site = "Guest");

			PagesAdmin.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-159730."
	@priority = 4
	test AssertURLforSuggestionsResults {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "New Search Page");

		// Workaround for LPS-164852

		SearchPortlets.configureEmbeddedSearchBar(destinationPage = "/new-search-page");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.gotoSuggestionResultDetails(searchAssetTitle = "Apple");

		SearchBarSuggestions.viewSuggestionResultDetails(searchAssetTitle = "Apple");

		var currentURL = selenium.getCurrentUrl();

		if (!(contains(${currentURL}, "/new-search-page"))) {
			fail("URL should contain /new-search-page");
		}
	}

	@priority = 4
	test CanConfigureSearchContributorSize {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple Pie");

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
			suggestionContributorOrder = 1,
			suggestionContributorSize = 1);

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie");
	}

	@priority = 4
	test CanCopyPasteInputFields {
		SearchPortlets.gotoEmbeddedOptions(portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Click.javaScriptClick(
			key_text = "Add Contributor",
			locator1 = "Button#ANY");

		Click.clickAt(
			key_suggestionContributorOrder = 1,
			locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME");

		SearchBarSuggestions.copyConfiguration(
			contributorOrder = 1,
			suggestionContributor = "Display Group Name");

		SearchBarSuggestions.pasteConfiguration(
			contributorOrder = 2,
			suggestionContributor = "Display Group Name");

		AssertVisible(
			key_suggestionContributorOrder = 2,
			locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
			value1 = "suggestions");

		SearchBarSuggestions.copyConfiguration(
			contributorOrder = 1,
			suggestionContributor = "Size");

		SearchBarSuggestions.pasteConfiguration(
			contributorOrder = 2,
			suggestionContributor = "Size");

		AssertVisible(
			key_suggestionContributorOrder = 2,
			locator1 = "SearchBarSuggestions#SUGGESTION_CONTRIBUTOR_SIZE",
			value1 = 5);
	}

	@priority = 4
	test CanViewBasicAndBlueprintSuggestionsTogether {
		property test.run.environment = "EE";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		Blueprints.openBlueprintsAdmin();

		Blueprints.createBlueprint(title = "Empty Blueprint");

		Navigator.openURL();

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
			addContributor = "true",
			suggestionContributor = "Blueprint",
			suggestionContributorBlueprint = "Empty Blueprint",
			suggestionContributorDisplayGroupName = "blueprint suggestions",
			suggestionContributorOrder = 2,
			suggestionContributorSize = 5);

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple",
			suggestionContributorDisplayGroupName = "suggestions");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple",
			suggestionContributorDisplayGroupName = "blueprint suggestions");
	}

	@priority = 4
	test CanViewSearchBarSuggestionsResultDetails {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Apple Pie",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "DM Document Description",
			searchAssetTitle = "Apple Pie");

		SearchBarSuggestions.showMoreSuggestions();

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Web Content Article");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple Pie",
			searchAssetType = "Document");

		Type(
			locator1 = "Search#SEARCH_BAR_WIDGET",
			value1 = "Apple");

		SearchBarSuggestions.gotoSuggestionResultDetails(searchAssetTitle = "Apple Pie");

		SearchBarSuggestions.viewSuggestionResultDetails(searchAssetTitle = "Apple Pie");
	}

	@description = "This is a use case for LPS-166050. When using a Blueprint to drive Search Bar suggestions, I can configure a character threshold that applies to this group"
	@priority = 3
	test ConfigureBlueprintContributorCharacterThresholds {
		task ("Add Web Content and Blueprint") {
			JSONWebcontent.addWebContent(
				content = "WC WebContent Content",
				groupName = "Guest",
				title = "Pineapple");

			Blueprints.openBlueprintsAdmin();

			Blueprints.createBlueprint(title = "Empty Blueprint");
		}

		Navigator.gotoPage(pageName = "Home");

		task ("Add and configure Contributors") {
			SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
				characterThreshold = 1,
				suggestionContributor = "Blueprint",
				suggestionContributorBlueprint = "Empty Blueprint",
				suggestionContributorDisplayGroupName = "Blueprint 1",
				suggestionContributorOrder = 1,
				suggestionContributorSize = 2);

			Refresh();

			SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
				addContributor = "true",
				characterThreshold = 3,
				suggestionContributor = "Blueprint",
				suggestionContributorBlueprint = "Empty Blueprint",
				suggestionContributorDisplayGroupName = "Blueprint 3",
				suggestionContributorOrder = 2,
				suggestionContributorSize = 2);

			Refresh();

			SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
				addContributor = "true",
				characterThreshold = 5,
				suggestionContributor = "Blueprint",
				suggestionContributorBlueprint = "Empty Blueprint",
				suggestionContributorDisplayGroupName = "Blueprint 5",
				suggestionContributorOrder = 3,
				suggestionContributorSize = 2);
		}

		task ("Assert that 'Blueprint 1' shows up as a display group and 'Pineapple' appears as a suggestion in that group") {
			Type(
				locator1 = "Search#EMBEDDED_SEARCH_BAR",
				value1 = "p");

			SearchBarSuggestions.viewSuggestions(
				searchAssetTitle = "Pineapple",
				suggestionContributorDisplayGroupName = "Blueprint 1");
		}

		task ("Assert that 'Blueprint 3' shows up as a display group and 'Pineapple' appears as a suggestion in that group") {
			Type(
				locator1 = "Search#EMBEDDED_SEARCH_BAR",
				value1 = "pin");

			SearchBarSuggestions.viewSuggestions(
				searchAssetTitle = "Pineapple",
				suggestionContributorDisplayGroupName = "Blueprint 3");
		}

		task ("Assert that 'Blueprint 5' shows up as a display group and 'Pineapple' appears as a suggestion in that group") {
			Type(
				locator1 = "Search#EMBEDDED_SEARCH_BAR",
				value1 = "pinea");

			SearchBarSuggestions.viewSuggestions(
				searchAssetTitle = "Pineapple",
				suggestionContributorDisplayGroupName = "Blueprint 5");
		}
	}

	@description = "This is a use case for LPS-155317"
	@priority = 4
	test DisablingSuggestionsSAPHidesSuggestionsFromGuests {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Service Access Policy");

		ServiceAccessPolicy.editServiceAccessPolicy(
			enabled = "false",
			policyName = "SEARCH_SUGGESTIONS");

		Navigator.openURL();

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "App");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SignOut.signOut();

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "App");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple");

		SignIn.signIn(userEmailAddress = "test@liferay.com");
	}

	@priority = 4
	test DisplaySuggestionsAfterCharacterThresholdIsMet {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Apple",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(characterThresholdForDisplayingSuggestions = 3);

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Ap");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "App");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "DM Document Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");
	}

	@description = "This is a use case for LPS-162509."
	@priority = 4
	test HonorLetUserChooseSiteScope {
		JSONWebcontent.addWebContent(
			content = "Content",
			description = "Apple WC Description",
			groupName = "Guest",
			title = "Apple Web Content");

		JSONWebcontent.addWebContent(
			content = "Content ",
			description = "Banana WC Description",
			groupName = "Global",
			title = "Banana Web Content");

		SearchPortlets.configureEmbeddedSearchBar(searchScope = "Let the User Choose");

		SearchPortlets.chooseEmbeddedScope(searchScope = "Everything");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Web Content");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "Apple WC Description",
			searchAssetTitle = "Apple Web Content");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "Banana WC Description",
			searchAssetTitle = "Banana Web Content");

		Refresh();

		SearchPortlets.chooseEmbeddedScope(searchScope = "This Site");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Web Content");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Banana Web Content");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "Apple WC Description",
			searchAssetTitle = "Apple Web Content");
	}

	@priority = 4
	test ShowHTMLAsPlainText {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Content Page Name",
			type = "content");

		JSONLayout.publishLayout(
			groupName = "Guest",
			layoutName = "Test Content Page Name");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "test");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "Page: Test Content Page Name",
			searchAssetTitle = "Test Content Page Name",
			suggestionContributorDisplayGroupName = "Suggestions");
	}

	@priority = 5
	test ViewBasicSuggestionsAcrossDifferentScopes {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Apple Pie",
			groupName = "Site Name",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie");

		Refresh();

		SearchPortlets.configureEmbeddedSearchBar(searchScope = "Everything");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "DM Document Description",
			searchAssetTitle = "Apple Pie");
	}

	@priority = 3
	test ViewBlueprintContributorZeroCharacterThreshold {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "Software");

		Blueprints.openBlueprintsAdmin();

		Blueprints.createBlueprint(title = "Test Blueprint");

		Blueprints.addElement(element = "Text Match Over Multiple Fields");

		Type(
			ariaLabel = "Text to Match",
			locator1 = "TextInput#ANY_WITH_AIRA_LABEL",
			value1 = "software");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Home");

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
			characterThreshold = 0,
			suggestionContributor = "Blueprint",
			suggestionContributorBlueprint = "Test Blueprint",
			suggestionContributorDisplayGroupName = "Blueprint 0",
			suggestionContributorSize = 5);

		Click(locator1 = "Search#EMBEDDED_SEARCH_BAR");

		SearchBarSuggestions.viewSuggestions(
			searchAssetTitle = "Software",
			suggestionContributorDisplayGroupName = "Blueprint 0");
	}

	@priority = 5
	test ViewBlueprintSuggestionsAcrossDifferentScopes {
		property test.run.environment = "EE";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Guest",
			title = "Apple Guest");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Apple Pie Guest",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "WC WebContent Description",
			groupName = "Site Name",
			title = "Apple Site Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Apple Pie Site Name",
			groupName = "Site Name",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Blueprints.openBlueprintsAdmin();

		Blueprints.createBlueprint(title = "Test Blueprint");

		Navigator.gotoNavNested(navNested = "Query Settings");

		Check.checkNotVisible(
			locator1 = "Radio#ANY",
			radioLabel = "Selected Types");

		Button.click(button = "Select Asset Types");

		Check.checkNotVisible(
			assetType = "Web Content Article",
			locator1 = "Blueprints#BLUEPRINTS_SEARCHABLE_ASSET_TYPE_CHECKBOX");

		Button.clickDone();

		PortletEntry.save();

		Navigator.openURL();

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
			suggestionContributor = "Blueprint",
			suggestionContributorBlueprint = "Test Blueprint");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple Guest");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie Guest");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Site Name");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie Site Name");

		SearchPortlets.configureEmbeddedSearchBar(searchScope = "Everything");

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "Apple");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple Guest");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie Guest");

		SearchBarSuggestions.viewSuggestions(
			searchAssetDescription = "WC WebContent Description",
			searchAssetTitle = "Apple Site Name");

		SearchBarSuggestions.viewNoResultAssetTitle(searchAssetTitle = "Apple Pie Site Name");
	}

	@description = "This is a use case for LPS-162509."
	@priority = 4
	test ViewSuggestionsLocalizedDisplayGroupName {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Language Override");

		Click(locator1 = "Button#PLUS");

		Type(
			locator1 = "TextInput#KEY",
			value1 = "top-search-keywords");

		Type(
			key_text = "en-US",
			locator1 = "TextInput#ANY",
			value1 = "Top Search Keywords");

		PortletEntry.save();

		Blueprints.openBlueprintsAdmin();

		Blueprints.createBlueprint(title = "Test Blueprint");

		Navigator.openURL();

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(suggestionContributorSize = 3);

		SearchBarSuggestions.configureEmbeddedSearchBarSuggestions(
			addContributor = "true",
			suggestionContributor = "Blueprint",
			suggestionContributorBlueprint = "Test Blueprint",
			suggestionContributorDisplayGroupName = "top-search-keywords",
			suggestionContributorOrder = 2,
			suggestionContributorSize = 3);

		Type(
			locator1 = "Search#EMBEDDED_SEARCH_BAR",
			value1 = "test");

		AssertTextEquals.assertPartialText(
			key_suggestionContributorDisplayGroupName = "Top Search Keywords",
			locator1 = "SearchBarSuggestions#RESULTS_LIST_SUGGESTION_CONTRIBUTOR_DISPLAY_GROUP_NAME",
			value1 = "TOP SEARCH KEYWORDS");
	}

}