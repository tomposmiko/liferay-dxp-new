@component-name = "portal-user-management-and-portal-configuration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Roles";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Role.tearDownCP();

			DDLList.tearDownCP();

			DDLDataDefinition.tearDownCP();

			User.tearDownCP();

			UserGroup.tearDownCP();

			Organization.tearDownCP();

			Team.tearDownCP();

			Site.tearDownCP();

			Bookmark.tearDownCP();

			DMDocument.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "4"
	test EditTeamPermissions {
		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "User"
		);

		JSONRole.addSiteRole(
			roleKey = "Roles Siterole Name",
			roleTitle = "Roles Siterole Name"
		);

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,ADD_TO_PAGE,CONFIGURATION,PERMISSIONS,PREFERENCES,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_site_memberships_web_portlet_SiteMembershipsPortlet",
				roleTitle = "Roles Siterole Name",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "ADD_COMMUNITY,ADD_LAYOUT,ADD_LAYOUT_BRANCH,ADD_LAYOUT_SET_BRANCH,ASSIGN_MEMBERS,ASSIGN_USER_ROLES,CONFIGURE_PORTLETS,DELETE,EXPORT_IMPORT_LAYOUTS,EXPORT_IMPORT_PORTLET_INFO,MANAGE_ANNOUNCEMENTS,MANAGE_ARCHIVED_SETUPS,MANAGE_LAYOUTS,MANAGE_STAGING,MANAGE_SUBGROUPS,MANAGE_TEAMS,PERMISSIONS,PREVIEW_IN_DEVICE,PUBLISH_PORTLET_INFO,PUBLISH_STAGING,UPDATE,VIEW,VIEW_MEMBERS,VIEW_SITE_ADMINISTRATION,VIEW_STAGING") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.portal.kernel.model.Group",
				roleTitle = "Roles Siterole Name",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "ASSIGN_MEMBERS,DELETE,PERMISSIONS,UPDATE,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.portal.kernel.model.Team",
				roleTitle = "Roles Siterole Name",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "ADD_TO_PAGE,CONFIGURATION,PERMISSIONS,PREFERENCES,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_journal_content_web_portlet_JournalContentPortlet",
				roleTitle = "Roles Siterole Name",
				roleType = "site"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "Site Name", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Roles Siterole Name",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(pageName = "Site Page Name", portletName = "Web Content Display");

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		var key_teamName = "Site Team Name";

		AssertTextEquals(
			locator1 = "Permissions#CONFIGURATION_PERMISSIONS_TEAM_ROLE_NAME",
			value1 = "Site Team Name"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Web Content Display");

		var key_teamName = "Site Team Name";

		AssertTextEquals(
			locator1 = "Permissions#CONFIGURATION_PERMISSIONS_TEAM_ROLE_NAME",
			value1 = "Site Team Name"
		);

		Navigator.openURL();

		PermissionsInline.gotoSiteTeamsCP(
			portletName = "Site Teams",
			siteScopeName = "Site Name",
			teamName = "Site Team Name"
		);

		for (var permissionDefinitionKey : list "ACTION_ASSIGN_MEMBERS,ACTION_DELETE,ACTION_PERMISSIONS,ACTION_UPDATE,ACTION_VIEW") {
			Team.definePermissionPG(
				permissionDefinitionKey = "${permissionDefinitionKey}",
				teamName = "Site Team Name"
			);
		}

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Team.editCP(
			teamDescriptionEdit = "Site Team Description Edit",
			teamName = "Site Team Name",
			teamNameEdit = "Site Team Name Edit"
		);

		Team.assignMembersCP(
			teamName = "Site Team Name Edit",
			userScreenName = "usersn"
		);
	}

	@priority = "4"
	test GroupScopePermissionCheck {
		property osgi.app.includes = "bookmarks";
		property test.name.skip.portal.instance = "RolesandpermissionsUsecase#GroupScopePermissionCheck";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Group Scope Role Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCmdCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BOOKMARKS_RESOURCE_PERMISSIONS_BOOKMARKS_ENTRY_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Group Scope Role Name",
			siteNameScope = "Liferay"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Bookmarks Page");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Portlet.addPG(portletName = "Bookmarks");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.addPG(
			bookmarkName = "Test Bookmark1 Name",
			bookmarkURL = "https://www.liferay.com",
			bookmarkViewableBy = "Owner"
		);

		Navigator.gotoPage(pageName = "Bookmarks Page");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addCP(siteName = "google.com Name", siteType = "Blank");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Bookmarks Page");

		Navigator.gotoSitePage(
			pageName = "Bookmarks Page",
			siteName = "google.com Name"
		);

		Portlet.addPG(portletName = "Bookmarks");

		Navigator.gotoSitePage(
			pageName = "Bookmarks Page",
			siteName = "google.com Name"
		);

		Bookmark.addPG(
			bookmarkName = "Test Bookmark2 Name",
			bookmarkURL = "https://www.google.com",
			bookmarkViewableBy = "Owner"
		);

		Navigator.gotoSitePage(
			pageName = "Bookmarks Page",
			siteName = "google.com Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "google.com Name", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(
			roleTitle = "Group Scope Role Name",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.gotoPG(
			bookmarkName = "Test Bookmark1 Name",
			bookmarkURL = "https://www.liferay.com"
		);

		Bookmark.viewEntry(
			bookmarkName = "Test Bookmark1 Name",
			bookmarkURL = "https://www.liferay.com"
		);

		Navigator.gotoSitePage(
			pageName = "Bookmarks Page",
			siteName = "google.com Name"
		);

		Bookmark.viewNoPG(
			bookmarkName = "Test Bookmark2 Name",
			bookmarkURL = "https://www.google.com"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "3"
	test NoGuestRolePermissionsFromPrivateLayout {
		property custom.properties = "permissions.check.guest.enabled=false";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPrivatePage(pageName = "Private Blogs Page");

		PermissionsInline.gotoSitepageCP(
			pageName = "Private Blogs Page",
			privacy = "Private Pages"
		);

		AssertElementNotPresent(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			key_roleTitle = "Guest"
		);

		Navigator.openPrivateSitePageURL(
			pageName = "Private Blogs Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Blogs");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		AssertElementNotPresent(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			key_roleTitle = "Guest"
		);
	}

	@priority = "4"
	test RolesOrganizationSearch {
		property osgi.module.configuration.file.names = "com.liferay.portal.search.web.internal.configuration.SearchWebConfiguration.config";
		property osgi.module.configurations = "classicSearchPortletInFrontPage=&quot;true&quot;";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Organization");

		Role.add(roleTitle = "Roles Orgrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENT_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "Organization Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserOrganizationCP(
			orgName = "Organization Name",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserOrganizationCP(
			orgName = "Organization Name",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignOrgRoleCP(
			roleTitle = "Roles Orgrole Name",
			userScreenName = "usersn2"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoSite(site = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Documents and Media Page");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		DMDocument.addPG(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "Test Document");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Owner,Site Member,Organization User"
		);

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		ClassicSearch.search(searchTerm = "Test Document");

		ClassicSearch.viewSearchResultPG(
			searchAssetTitle = "Test Document",
			searchAssetType = "Document"
		);

		var key_searchAssetTitle = "Test Document";

		AssertClick(
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE",
			value1 = "Test Document"
		);

		DMDocument.viewPGViaSearch(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no documents or media files in this folder."
		);

		ClassicSearch.search(searchTerm = "Test Document");

		ClassicSearch.viewSearchNoPG(
			searchAssetTitle = "Test Document",
			searchNoResults = "true",
			searchTerm = "Test Document"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Organization Name"
		);

		DMDocument.viewPG(
			dmDocumentDescription = "This is a test document.",
			dmDocumentTitle = "Test Document"
		);

		ClassicSearch.search(searchTerm = "Test Document");

		ClassicSearch.viewSearchResultPG(
			searchAssetTitle = "Test Document",
			searchAssetType = "Document"
		);

		var key_searchAssetTitle = "Test Document";

		AssertClick(
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE",
			value1 = "Test Document"
		);

		DMDocument.viewPGViaSearch(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test RolesPermissionsDynamicDataLists {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONRole.addSiteRole(
			roleKey = "Data Recorder Name",
			roleTitle = "Data Recorder Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_RECORD",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleTitle = "Data Recorder Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "View",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleTitle = "Data REcorder Name",
			roleType = "site"
		);

		JSONRole.addSiteRole(
			roleKey = "Records Manager Name",
			roleTitle = "Records Manager Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "UPDATE",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleTitle = "Records Manager Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleTitle = "Records Manager Name",
			roleType = "site"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Data Recorder Name",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Records Manager Name",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Dynamic Data Lists Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(
			ddlListDescription = "Liferay Employee Profiles",
			ddlListName = "Employees"
		);

		DDLDataDefinition.addViaDDLDisplayPG(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Employee Profile Data Definition"
		);

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Employee",
			fieldName = "Employee"
		);

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Start Date",
			fieldName = "StartDate"
		);

		DynamicDataMapping.addField(
			field = "Decimal",
			fieldFieldLabel = "Salary",
			fieldName = "Salary"
		);

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Profile Picture",
			fieldName = "ProfilePicture"
		);

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Resume",
			fieldName = "Resume"
		);

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Age",
			fieldName = "Age"
		);

		DynamicDataMapping.addField(
			field = "Number",
			fieldFieldLabel = "Weekly Hours",
			fieldName = "WeeklyHours"
		);

		DynamicDataMapping.addField(
			field = "Radio",
			fieldFieldLabel = "Department",
			fieldName = "Department"
		);

		DynamicDataMapping.editFieldOptions(
			field = "Radio",
			fieldFieldLabel = "Department",
			fieldName = "Department",
			fieldOptionsNames = "Core Engineer,QA Engineer,Support Engineer",
			fieldOptionsValues = "1,2,3"
		);

		DynamicDataMapping.addField(
			field = "Select",
			fieldFieldLabel = "Years Worked",
			fieldName = "YearsWorked"
		);

		DynamicDataMapping.editFieldOptions(
			field = "Select",
			fieldFieldLabel = "Years Worked",
			fieldName = "YearsWorked",
			fieldOptionsNames = "1-2,3-5,5+",
			fieldOptionsValues = "1,2,3"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Name",
			fieldName = "Name"
		);

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Description",
			fieldName = "Description"
		);

		DDLDataDefinition.saveViaDDLDisplayPG();

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Employee Profile Data Definition"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Employee Profile Data Definition"
		);

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "Yes",
			fieldFieldLabel = "Employee",
			fieldName = "Employee"
		);

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2015",
			fieldFieldLabel = "Start Date",
			fieldName = "StartDate"
		);

		DDLRecord.populateFieldDecimal(
			ddlRecordFieldData = "35000",
			fieldFieldLabel = "Salary",
			fieldName = "Salary"
		);

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldFieldLabel = "Resume",
			fieldName = "Resume"
		);

		DDLRecord.populateFieldInteger(
			ddlRecordFieldData = "30",
			fieldFieldLabel = "Age",
			fieldName = "Age"
		);

		DDLRecord.populateFieldNumber(
			ddlRecordFieldData = "40",
			fieldFieldLabel = "Weekly Hours",
			fieldName = "WeeklyHours"
		);

		DDLRecord.populateFieldRadio(
			ddlRecordFieldData = "QA Engineer",
			fieldFieldLabel = "Department",
			fieldName = "Department"
		);

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "5+",
			fieldFieldLabel = "Years Worked",
			fieldName = "YearsWorked"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Joe Engineer",
			fieldFieldLabel = "Name",
			fieldName = "Name"
		);

		DDLRecord.populateFieldTextBox(
			ddlRecordFieldData = "Joe Engineer works in QA",
			fieldFieldLabel = "Description",
			fieldName = "Description"
		);

		PortletEntry.publish();

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		var key_ddlDataDefinitionName = "Employee Profile Data Definition";

		AssertElementPresent(locator1 = "DDL#TOOLBAR_ADD");

		AssertElementPresent(locator1 = "DDL#RECORD_TABLE_ELLIPSIS_1");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		AssertElementNotPresent(locator1 = "DDL#TOOLBAR_ADD");

		AssertElementPresent(locator1 = "DDL#RECORD_TABLE_ELLIPSIS_1");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");
	}

	@priority = "4"
	test RolesSiteSearch {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Site");

		Role.add(roleTitle = "Roles Siterole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENT_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Roles Siterole Name",
			roleType = "Site"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn1");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Roles Siterole Name",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Documents and Media Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "Test Document");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Owner,Site Member"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		SearchPortlets.searchEmbedded(searchTerm = "Test Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Test Document",
			searchAssetType = "Document"
		);

		var key_searchAssetTitle = "Test Document";

		AssertClick(
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE",
			value1 = "Test Document"
		);

		DMDocument.viewPGViaSearch(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no documents or media files in this folder."
		);

		SearchPortlets.searchEmbedded(searchTerm = "Test Document");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Test Document");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "This is a test document.",
			dmDocumentTitle = "Test Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Test Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Test Document",
			searchAssetType = "Document"
		);

		var key_searchAssetTitle = "Test Document";

		AssertClick(
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE",
			value1 = "Test Document"
		);

		DMDocument.viewPGViaSearch(
			dmDocumentDescription = "This is a test document.",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Test Document"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test RolesSitesPermissionsInheritance {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea3@liferay.com",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea3@liferay.com",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name 1", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name 2", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "Organization Name 2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name 3", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 1",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userName = "userfn1 userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 2",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userName = "userfn2 userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.assignOrgRoleCP(
			orgName = "Organization Name 2",
			roleTitle = "Organization Administrator",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 3",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userName = "userfn3 userln3",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.addCP(userGroupName = "UG UserGroup1 Name");

		UserGroup.addCP(userGroupName = "UG UserGroup2 Name");

		UserGroup.addCP(userGroupName = "UG UserGroup3 Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup1 Name",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup2 Name",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup3 Name",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Asset Publisher Page");

		JSONRole.addSiteRole(
			roleKey = "Movie Blogger Name",
			roleTitle = "Movie Blogger Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ENTRY",
			resourceName = "com.liferay.blogs",
			roleTitle = "Movie Blogger Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Movie Blogger Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_TO_PAGE",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Movie Blogger Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Movie Blogger Name",
			roleType = "site"
		);

		JSONRole.addSiteRole(roleKey = "Music Fan Name", roleTitle = "Music Fan Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.message.boards",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_CATEGORY",
			resourceName = "com.liferay.message.boards",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_MESSAGE",
			resourceName = "com.liferay.message.boards",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.message.boards.kernel.model.MBCategory",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_MESSAGE",
			resourceName = "com.liferay.message.boards.kernel.model.MBCategory",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.message.boards.kernel.model.MBMessage",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_TO_PAGE",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Music Fan Name",
			roleType = "site"
		);

		JSONRole.addSiteRole(
			roleKey = "Sports Journalist Name",
			roleTitle = "Sports Journalist Name"
		);

		for (var resourceActionIndex : list "ADD_DISCUSSION,DELETE,DELETE_DISCUSSION,EXPIRE,PERMISSIONS,SUBSCRIBE,UPDATE,UPDATE_DISCUSSION,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal.model.JournalArticle",
				roleTitle = "Sports Journalist Name",
				roleType = "site"
			);
		}

		for (var resourceActionIndex : list "ADD_ARTICLE,ADD_FEED,ADD_FOLDER,ADD_STRUCTURE,ADD_TEMPLATE,PERMISSIONS,SUBSCRIBE,UPDATE,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.journal",
				roleTitle = "Sports Journalist Name",
				roleType = "site"
			);
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Sports Journalist Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_TO_PAGE",
			resourceName = "com_liferay_asset_publisher_web_portlet_AssetPublisherPortlet",
			roleTitle = "Sports Journalist Name",
			roleType = "site"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignOrganizationAsMemberCP(orgName = "Organization Name 2");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserGroupAsMemberCP(userGroupName = "UG UserGroup3 Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn1 userln1",
			roleTitle = "Music Fan Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn2 userln2",
			roleTitle = "Movie Blogger Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Navigator.gotoNavItem(navItem = "User Groups");

		Site.assignSiteRoleCP(
			resourceName = "UG UserGroup3 Name",
			roleTitle = "Sports Journalist Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "Message Boards");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		var key_portletTitleName = "Message Boards";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Message Boards"
		);

		var key_portletTitleName = "Asset Publisher";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Asset Publisher"
		);

		MessageboardsThread.addPG(
			threadBody = "This is a thread by usersn1",
			threadSubject = "Music Thread 1"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		var key_portletTitleName = "Message Boards";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Message Boards"
		);

		var key_portletTitleName = "Asset Publisher";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Asset Publisher"
		);

		AssertElementNotPresent(locator1 = "MessageBoards#ADD_CATEGORY_BUTTON");

		AssertElementNotPresent(locator1 = "Button#PERMISSIONS");

		Blogs.addViaAP(
			entryContent = "This is a movie blog by usersn2",
			entryTitle = "Movie Blog"
		);

		Navigator.openSiteURL(siteName = "Organization Name 2");

		var key_portletTitleName = "Message Boards";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Message Boards"
		);

		AssertTextEquals(locator1 = "Button#ADD_CATEGORY", value1 = "Add Category");

		AssertTextEquals(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea3@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Asset Publisher Page",
			siteName = "Site Name"
		);

		var key_portletTitleName = "Message Boards";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Message Boards"
		);

		var key_portletTitleName = "Asset Publisher";

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Asset Publisher"
		);

		AssertElementNotPresent(locator1 = "Button#ADD_CATEGORY");

		WebContent.addPGViaAP(
			webContentContent = "This article is by usersn3, a member of user group 3 but not site name 1",
			webContentTitle = "User Group Article"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test SiteRoleBookmarksInlinePermissions {
		property osgi.app.includes = "bookmarks";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Site");

		Role.add(roleTitle = "Roles Siterole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCmdCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BOOKMARKS_RESOURCE_PERMISSIONS_BOOKMARKS_ENTRY_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			roleTitle = "Roles Siterole Name",
			roleType = "Site"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Bookmarks Page");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Portlet.addPG(portletName = "Bookmarks");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.addPG(
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com",
			bookmarkViewableBy = "Owner"
		);

		Navigator.gotoPage(pageName = "Bookmarks Page");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Bookmark.viewNoPG(
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Roles Siterole Name",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Bookmarks Page");

		Bookmark.viewBookmark(
			bookmarkName = "Test Bookmark Name",
			bookmarkURL = "https://www.liferay.com"
		);

		Navigator.gotoPage(pageName = "Bookmarks Page");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test TeamPermissionsSite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		for (var userNumber : list "1,2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.addCP(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userFirstName = "userfn${userNumber}",
				userLastName = "userln${userNumber}",
				userScreenName = "usersn${userNumber}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userScreenName = "usersn${userNumber}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editUserSiteCP(
				siteName = "Site Name",
				userScreenName = "usersn${userNumber}"
			);
		}

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		PortletEntry.viewEmptyMessage(entity = "Site Teams");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name"
		);

		Team.assignMembersCP(teamName = "Site Team Name", userScreenName = "usersn1");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "USA Ice Hockey Team Blog",
			pageTemplateName = "Blog"
		);

		PermissionsInline.gotoPagePG(pageName = "USA Ice Hockey Team Blog");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "guest"
		);

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_ADD_DISCUSSION_CHECKBOX",
			roleTitle = "site-member"
		);

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "site-member"
		);

		for (var permissionDefinitionKey : list "ACTION_ADD_DISCUSSION,ACTION_ADD_LAYOUT,ACTION_CONFIGURE_PORTLETS,ACTION_CUSTOMIZE,ACTION_DELETE,ACTION_DELETE_DISCUSSION,ACTION_PERMISSIONS,ACTION_UPDATE,ACTION_UPDATE_DISCUSSION,ACTION_VIEW") {
			Team.definePermissionPG(
				permissionDefinitionKey = "${permissionDefinitionKey}",
				teamName = "Site Team Name"
			);
		}

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.gotoSitePage(
			pageName = "USA Ice Hockey Team Blog",
			siteName = "Site Name"
		);

		for (var portletTitleName : list "Blogs,Tag Cloud,Recent Bloggers") {
			var key_portletTitleName = "${portletTitleName}";

			AssertTextEquals.assertTextCaseInsensitive(
				locator1 = "Portlet#SPECIFIC_TITLE",
				value1 = "${portletTitleName}"
			);
		}

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea2@liferay.com");

		AssertElementNotPresent(
			locator1 = "Home#PAGE",
			key_pageName = "USA Ice Hockey Team Blog"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewAutomaticAssignedRoles {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "CONTROL_PANEL_USERS_USERS_AND_ORGANIZATIONS_GENERAL_PERMISSIONS_ACCESS_IN_CONTROL_PANEL_CHECKBOX",
			permissionDefinitionValue = "Access in Control Panel",
			roleTitle = "Roles Regrole Name"
		);

		Role.viewPermissionCP(
			permissionDefinitionValue = "View Control Panel Menu",
			permissionNavigationValue = "Portal"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_PAGES_SITE_PAGES_GENERAL_PERMISSIONS_ACCESS_IN_SITE_ADMINISTRATION_CHECKBOX",
			permissionDefinitionValue = "Access in Site Administration",
			roleTitle = "Roles Regrole Name"
		);

		Role.viewPermissionCP(
			permissionDefinitionValue = "View Site Administration Menu",
			permissionNavigationValue = "Site Settings &gt; Site"
		);
	}

	@priority = "4"
	test ViewDocumentsAndMediaAddRepositoryPermissionSiteMemberRole {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_ADD_REPOSITORY_CHECKBOX",
			permissionDefinitionValue = "Add Repository",
			roleTitle = "Site Member",
			roleType = "Site"
		);

		AssertTextNotPresent(value1 = "action.ADD_REPOSITORY");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.removePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA_RESOURCE_PERMISSIONS_DOCUMENTS_ADD_REPOSITORY_CHECKBOX",
			permissionDefinitionValue = "Add Repository",
			roleTitle = "Site Member",
			roleType = "Site"
		);
	}

	@priority = "4"
	test ViewPreferencesPanelPermissionSiteMemberRole {
		property osgi.app.includes = "currency-converter";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Portlet.addPG(portletName = "Currency Converter");

		PermissionsInline.gotoConfigurationPG(portletName = "Currency Converter");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Site Member"
		);

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_PREFERENCES_CHECKBOX",
			roleTitle = "Site Member"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Portlet.gotoPortletOptions(
			portletName = "Currency Converter",
			portletOption = "Preferences"
		);

		AssertElementPresent(locator1 = "Home#PAGE", key_pageName = "Welcome");

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "HelloWorld#PORTLET_TITLE",
			value1 = "Hello World"
		);

		AssertElementPresent(locator1 = "HelloWorld#PORTLET_CONTENT");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewPrivatePageSiteMemberRole {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserGroupAsMemberCP(userGroupName = "UG UserGroup Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPrivatePage(pageName = "Private Page");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openPrivateURL(pageName = "Private Page");

		Page.viewSpecificPG(pageNameList = "Private Page");
	}

	@priority = "4"
	test ViewRegRolePermissionsDefaultView {
		JSONRole.addRegularRole(
			roleKey = "Roles Regrole Name",
			roleTitle = "Roles Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Roles Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Roles Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Roles Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ARTICLE",
			resourceName = "com.liferay.journal",
			roleTitle = "Roles Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.journal",
			roleTitle = "Roles Regrole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		SitePages.addPrivatePage(pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "Site Name", userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(
			roleTitle = "Roles Regrole Name",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		AssertVisible(locator1 = "Button#PLUS");

		Pause(locator1 = "3000");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		WebContent.viewWCViewableByPermissions();
	}
}