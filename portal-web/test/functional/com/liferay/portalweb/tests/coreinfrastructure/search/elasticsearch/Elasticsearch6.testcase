@component-name = "portal-search"
definition {
	property portal.release = "true";
	property portal.suite.search.engine = "elasticsearch6";
	property portal.upstream = "true";
	property testray.main.component.name = "Elasticsearch Impl";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			MessageboardsThread.tearDownCP();

			DMDocument.tearDownCP();

			Page.tearDownCP();
		}
	}

	@ignore = "true"
	@priority = "3"
	test AssertSystemSettingsPropogateToModule {
		// Ignoring test until LPS-65459 is resolved

		property test.name.skip.portal.instance = "Elasticsearch6#AssertSystemSettingsPropogateToModule";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Search",
			configurationName = "Elasticsearch 6",
			configurationScope = "System Scope"
		);

		SystemSettings.editTextAreaSetting(
			settingName = "Cluster Name",
			settingValue = "LiferayElasticsearchCluster1"
		);

		SystemSettings.saveConfiguration();

		Navigator.openSpecificURL(url = "http://localhost:9200");

		Elasticsearch.viewClusterStatus(
			clusterStatus = "&quot;cluster_name&quot; : &quot;LiferayElasticsearchCluster1&quot;"
		);
	}

	@priority = "5"
	test ElasticsearchRemoteClusterSmokeTest {
		property environment.acceptance = "false";
		property portal.acceptance = "true";
		property remote.elasticsearch.cluster.size = "2";
		property remote.elasticsearch.enabled = "true";
		property test.name.skip.portal.instance = "Elasticsearch6#ElasticsearchRemoteClusterSmokeTest";

		Elasticsearch.viewClusterStatusViaClusterHealthAPI(numberOfNodes = "2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Message Boards"
		);

		MessageboardsThread.addCP(threadBody = "Orange", threadSubject = "Apple");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "Orange",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Apple"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Apple");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document"
		);

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Orange");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Document"
		);

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Message Boards Message"
		);
	}

	@priority = "5"
	test OSGiConfigSmokeTest {
		property osgi.module.configuration.file.names = "com.liferay.portal.search.elasticsearch6.configuration.ElasticsearchConfiguration.config";
		property osgi.module.configurations = "clusterName=&quot;LiferayElasticsearchCluster1&quot;";
		property portal.acceptance = "true";

		Navigator.openSpecificURL(url = "http://localhost:9200");

		Elasticsearch.viewClusterStatus(
			clusterStatus = "&quot;cluster_name&quot; : &quot;LiferayElasticsearchCluster1&quot;"
		);
	}
}