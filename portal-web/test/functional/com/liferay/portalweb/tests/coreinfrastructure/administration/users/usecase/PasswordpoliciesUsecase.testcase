@component-name = "portal-user-management-and-portal-configuration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Password Policies";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.tearDownCP();

			PasswordPolicies.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-60180"
	@priority = "5"
	test InvalidResetPasswordInputAfterMailLink {
		property dummy.socket.proxy.disabled = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.configureMailServerSettings(
			userName = PropsUtil.get("email.address.2"),
			userPassword = PropsUtil.get("email.password.2")
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search"
		);

		SearchAdministration.executeSearchActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.enableSyntaxChecking(
			passwordPolicyName = "Default Password Policy"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		User.logoutPG();

		User.forgotPasswordSendResetLink(
			userEmailAddress = PropsUtil.get("email.address.3")
		);

		Pause(locator1 = "3000");

		Gmail.login(
			userEmailAddress = PropsUtil.get("email.address.3"),
			userPassword = PropsUtil.get("email.password.3")
		);

		Gmail.gotoHtmlMode();

		Gmail.viewMail(
			emailFromUserName = "Joe Bloggs",
			gmailAssetType = "Reset Your Password",
			gmailMessageBody = "You can reset your password for",
			gmailMessageTitle = "http://localhost:8080: Reset Your Password"
		);

		Gmail.openMessageLink(
			gmailAssetType = "Reset Your Password",
			pageName = "update_password",
			siteName = "${siteName}"
		);

		User.setPasswordByResetLink(
			newPassword1 = "Password1",
			newPassword2 = "Password2"
		);

		Refresh();

		User.setPasswordByResetLink(
			invalidateLength = "Short",
			newPassword1 = "test",
			newPassword2 = "test"
		);

		User.setPasswordByResetLink(
			newPassword1 = "Password1",
			newPassword2 = "Password1"
		);

		Gmail.gotoHtmlMode();

		Refresh();

		Gmail.deleteSpecificMail(
			gmailMessageTitleList = "Your New Account,Reset Your Password,Your New Password"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewInvalidPasswordChangeSyntax {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.enableSyntaxChecking(
			passwordPolicyName = "Default Password Policy"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			minimumNumbers = "1",
			newPassword = "password",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			newPassword = "pass",
			passwordTooShort = "true",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UserNavigator.gotoUser(userScreenName = "usersn");

		UserNavigator.gotoPassword();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "Password1"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "Password1"
		);

		PortletEntry.save();

		User.logoutPG();

		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "userea@liferay.com");

		Type(locator1 = "TextInput#PASSWORD", value1 = "Password1");

		Click(locator1 = "Button#SIGN_IN", value1 = "Sign In");

		AssertElementNotPresent(locator1 = "Button#SIGN_IN");

		User.acceptEndUserLicenseAgreement();

		Type(locator1 = "TextInput#PASSWORD", value1 = "password");

		Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "password");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "That password must contain at least 1 numbers."
		);

		Type(locator1 = "TextInput#PASSWORD", value1 = "pass");

		Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "pass");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "That password is too short. Please make sure your password is at least 6 characters long."
		);

		Type(locator1 = "TextInput#PASSWORD", value1 = "Password2");

		Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "Password2");

		Button.clickSave();

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		User.logoutPG();

		User.loginUserPG();
	}

	@priority = "4"
	test ViewPasswordChangeableAndChangeRequired {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		UserNavigator.gotoPassword();

		AssertElementPresent(
			locator1 = "Checkbox#CHECKBOX_DISABLED",
			key_checkboxName = "Require Password Reset"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.togglePasswordChangeRequired(
			enableChangeRequired = "false",
			passwordPolicyName = "Default Password Policy",
			passwordPolicyPanel = "Password Changes"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		UserNavigator.gotoPassword();

		AssertElementNotPresent(
			locator1 = "Checkbox#CHECKBOX_DISABLED",
			key_checkboxName = "Require Password Reset"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.togglePasswordChangeRequired(
			enableChangeRequired = "true",
			passwordPolicyName = "Default Password Policy",
			passwordPolicyPanel = "Password Changes"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		UserNavigator.gotoPassword();

		AssertElementPresent(
			locator1 = "Checkbox#CHECKBOX_DISABLED",
			key_checkboxName = "Require Password Reset"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		UserNavigator.gotoPassword();

		AssertElementNotPresent(
			locator1 = "Checkbox#CHECKBOX_DISABLED",
			key_checkboxName = "Require Password Reset"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.togglePasswordChangeable(
			enableChangeable = "false",
			passwordPolicyName = "Default Password Policy",
			passwordPolicyPanel = "Password Changes"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			changeable = "false",
			newPassword = "password2",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		UserBar.gotoMyAccount();

		MyAccount.editPasswordInvalidCP(changeable = "false", newPassword = "password2");
	}

	@priority = "5"
	test ViewUserAccountLockout {
		property environment.acceptance = "false";
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPoliciesNavigator.gotoPolicy(
			passwordPolicyName = "Default Password Policy"
		);

		PasswordPolicies.enableDefaultPasswordPolicyLockout();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPoliciesNavigator.gotoPolicy(
			passwordPolicyName = "Default Password Policy"
		);

		PasswordPolicies.viewPasswordPolicyLockout(
			passwordPolicyName = "Default Password Policy"
		);

		User.logoutPG();

		User.loginUserInvalidPG(
			loginAttempts = "3",
			maximumFailure = "3",
			password = "incorrectpassword",
			userEmailAddress = "userea@liferay.com"
		);

		User.loginUserPG();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.unlockUserAccount(userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG();
	}

	@priority = "4"
	test ViewUserAccountLockoutviaOrganizationPasswordPolicy {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn",
			userLastName = "userln",
			userName = "userfn userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.addCP(
			enableLockout = "true",
			maximumFailure = "3",
			passwordPolicyName = "Password Policy Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.assignOrgCP(
			orgName = "Organization Name",
			passwordPolicyName = "Password Policy Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPoliciesNavigator.gotoPolicy(
			passwordPolicyName = "Password Policy Name"
		);

		PasswordPolicies.viewPasswordPolicyLockout(
			maximumFailure = "3",
			passwordPolicyName = "Password Policy Name"
		);

		User.logoutPG();

		User.loginUserInvalidPG(
			loginAttempts = "3",
			maximumFailure = "3",
			password = "incorrectpassword",
			userEmailAddress = "userea@liferay.com"
		);

		User.loginUserPG();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.unlockUserAccount(userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(userEmailAddress = "userea@liferay.com");

		User.logoutPG();

		User.loginUserPG();
	}
}