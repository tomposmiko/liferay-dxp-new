@component-name = "portal-upgrades"
definition {

	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
	property portal.release = "true";
	property portal.suite.search.engine = "elasticsearch7";
	property portal.upstream = "true";
	property testray.main.component.name = "Upgrades Search";

	setUp {
		SignIn.signIn();

		SearchAdministration.executeReindex();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive704 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.0.4";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Search",
			configurationName = "Search Web",
			configurationScope = "System Scope");

		FormFields.enableCheckbox(fieldName = "classicSearchPortletInFrontPage");

		SystemSettings.saveConfiguration();

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive713 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive720 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.0";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive721 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive730 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.0";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive740 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.4.0";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive7110 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.1.10";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive7210 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.2.10";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive7310 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.3.10";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive7413 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.4.13";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive70106 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.0.10.6";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Search",
			configurationName = "Search Web",
			configurationScope = "System Scope");

		FormFields.enableCheckbox(fieldName = "classicSearchPortletInFrontPage");

		SystemSettings.saveConfiguration();

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchive72101 {
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.version = "7.2.10.1";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade721 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.release = "quarantine";
		property portal.version = "7.2.1";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade730 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property database.types = "mariadb,mysql,postgresql";
		property portal.release = "quarantine";
		property portal.version = "7.3.0";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade7110 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.release = "quarantine";
		property portal.version = "7.1.10";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade7210 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.release = "quarantine";
		property portal.version = "7.2.10";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade70106 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.release = "quarantine";
		property portal.version = "7.0.10.6";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Search",
			configurationName = "Search Web",
			configurationScope = "System Scope");

		FormFields.enableCheckbox(fieldName = "classicSearchPortletInFrontPage");

		SystemSettings.saveConfiguration();

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewClassicSearchPortletConfigurationArchiveAutoUpgrade72101 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-classic-search-portlet";
		property portal.release = "quarantine";
		property portal.version = "7.2.10.1";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewClassicSearchPortletConfiguration();
	}

	@priority = 5
	test ViewResultRankingsEntryArchive7310 {
		property data.archive.type = "data-archive-search-result-rankings";
		property portal.version = "7.3.10";
		property test.run.environment = "EE";

		Upgrade.viewResultRankingsEntry();
	}

	@priority = 5
	test ViewResultRankingsEntryArchive7413 {
		property data.archive.type = "data-archive-search-result-rankings";
		property portal.version = "7.4.13";
		property test.run.environment = "EE";

		Upgrade.viewResultRankingsEntry();
	}

	@priority = 5
	test ViewSearchBarWidgetTemplateArchive7310 {
		property data.archive.type = "data-archive-search-bar-widget-template";
		property portal.version = "7.3.10";
		property test.run.environment = "EE";

		Upgrade.ViewSearchBarWidgetTemplate();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive713 {
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.1.3";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive720 {
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.0";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive721 {
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.2.1";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive730 {
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.3.0";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive740 {
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.version = "7.4.0";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive7110 {
		property data.archive.type = "data-archive-search-portlets";
		property portal.version = "7.1.10";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive7210 {
		property data.archive.type = "data-archive-search-portlets";
		property portal.version = "7.2.10";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive7310 {
		property data.archive.type = "data-archive-search-portlets";
		property portal.version = "7.3.10";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive7413 {
		property data.archive.type = "data-archive-search-portlets";
		property portal.version = "7.4.13";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchive72101 {
		property data.archive.type = "data-archive-search-portlets";
		property portal.version = "7.2.10.1";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchiveAutoUpgrade721 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.release = "quarantine";
		property portal.version = "7.2.1";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchiveAutoUpgrade730 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-search-portlets";
		property database.types = "mariadb,mysql,postgresql";
		property portal.release = "quarantine";
		property portal.version = "7.3.0";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchiveAutoUpgrade7110 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-search-portlets";
		property portal.release = "quarantine";
		property portal.version = "7.1.10";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchiveAutoUpgrade7210 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-search-portlets";
		property portal.release = "quarantine";
		property portal.version = "7.2.10";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	@priority = 5
	test ViewSearchPortletsConfigurationArchiveAutoUpgrade72101 {
		property custom.properties = "upgrade.database.auto.run=true";
		property data.archive.type = "data-archive-search-portlets";
		property portal.release = "quarantine";
		property portal.version = "7.2.10.1";
		property skip.upgrade-legacy-database = "true";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSearchPortletsConfiguration();
	}

	test ViewSearchWidgetTemplatesArchive7413U43 {
		property data.archive.type = "data-archive-search-widget-templates";
		property portal.version = "7.4.13.u43";
		property test.assert.warning.exceptions = "true";

		ApplicationDisplayTemplates.openWidgetTemplatesAdmin(siteURLKey = "guest");

		for (var facetType : list "Category,Custom,Folder,Modified,Site,Tag,Type,User") {
			AssertVisible(
				key_tableEntry = "U43 ${facetType} Facet Template",
				locator1 = "LexiconTable#TABLE_ENTRY_TITLE");
		}

		Search.openSearchPage();

		SearchPortlets.searchEmbedded(searchTerm = "test");

		AssertElementNotPresent(locator1 = "Message#ERROR");

		for (var facetType : list "Category,Custom,Folder,Modified,Site,Tag,Type,User") {
			Portlet.gotoPortletOptions(
				portletName = "${facetType} Facet",
				portletOption = "Configuration");

			SelectFrame(locator1 = "IFrame#CONFIGURATION");

			AssertSelectedLabel(
				locator1 = "Select#DISPLAY_TEMPLATE",
				value1 = "U43 ${facetType} Facet Template");

			IFrame.closeFrame();
		}

		AssertElementPresent(
			facetName = "Category Facet",
			facetValue = "fruit",
			locator1 = "Search#FACET_COMPACT_LAYOUT_ITEM");

		AssertElementPresent(
			facetName = "Custom Facet",
			facetValue = "test",
			locator1 = "Search#FACET_LABEL_LAYOUT_ITEM");

		AssertElementPresent(
			facetName = "Folder Facet",
			facetValue = "WC Folder",
			locator1 = "Search#FACET_LABEL_LAYOUT_ITEM");

		AssertElementPresent(
			locator1 = "Search#MODIFIED_FACET_SELECTION",
			range = "Past Hour");

		AssertElementPresent(
			facetName = "Site Facet",
			facetValue = "Test Test",
			locator1 = "Search#FACET_COMPACT_LAYOUT_ITEM");

		AssertElementPresent(
			facetName = "Tag Facet",
			facetValue = "food",
			locator1 = "Search#FACET_CLOUD_LAYOUT_ITEM");

		AssertElementPresent(
			facetName = "Type Facet",
			facetValue = "Web Content Article",
			locator1 = "Search#FACET_LABEL_LAYOUT_ITEM");

		AssertElementPresent(
			facetName = "User Facet",
			facetValue = "test test",
			locator1 = "Search#FACET_COMPACT_LAYOUT_ITEM");
	}

	test ViewSXPBlueprintsAndElementsArchive7310U6 {
		property data.archive.type = "data-archive-sxp";
		property portal.version = "7.3.10.u6";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSXPBlueprintAndElements();
	}

	test ViewSXPBlueprintsAndElementsArchive7413U33 {
		property data.archive.type = "data-archive-sxp";
		property portal.version = "7.4.13.u33";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		Upgrade.viewSXPBlueprintAndElements();
	}

	@description = "This is a use case for LPS-147329."
	test ViewSXPLocalizedElementsArchive7413U63 {
		property data.archive.type = "data-archive-sxp-localized";
		property portal.version = "7.4.13.u63";
		property test.assert.warning.exceptions = "true";
		property test.run.environment = "EE";

		task ("Assert elements within existing blueprint query builder add element sidebar are using English translations and not language keys") {
			Blueprints.openBlueprintsAdmin();

			Blueprints.gotoBlueprint(title = "Test Blueprint");

			Blueprints.searchAddElementsSidebar(element = "Text Match");

			AssertElementPresent(
				key_element = "Text Match Over Multiple Fields",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_NAME");

			AssertTextEquals.assertPartialText(
				key_element = "Text Match Over Multiple Fields",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_DESCRIPTION",
				value1 = "Search for a text match over multiple text fields.");

			Blueprints.searchAddElementsSidebar(element = "Title");

			AssertElementPresent(
				key_element = "Custom Element Title in English",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_NAME");

			AssertTextEquals.assertPartialText(
				key_element = "Custom Element Title in English",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_DESCRIPTION",
				value1 = "Custom Element Description in English");
		}

		task ("Assert element instances within existing blueprint are using English translations and not language keys") {
			AssertElementPresent(
				key_element = "Text Match Over Multiple Fields",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Search for a text match over multiple text fields",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Custom Element Title in English",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Custom Element Description in English",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");
		}

		Navigator.gotoBack();

		task ("Assert elements within Elements admin are using English translations") {
			Navigator.gotoNavItem(navItem = "Elements");

			Blueprints.viewEntryTitle(title = "Text Match Over Multiple Fields");

			Blueprints.viewEntryDescription(
				description = "Search for a text match over multiple text fields",
				title = "Text Match Over Multiple Fields");

			Blueprints.viewEntryTitle(title = "Custom Element Title in English");

			Blueprints.viewEntryDescription(
				description = "Custom Element Description in English",
				title = "Custom Element Title in English");
		}

		task ("Assert title and description in OOTB element JSON configuration is using language keys") {
			Blueprints.gotoEntry(title = "Text Match Over Multiple Fields");

			AssertTextEquals.assertPartialText(
				locator1 = "Blueprints#CODE_MIRROR_EDITOR",
				value1 = "text-match-over-multiple-fields");

			AssertTextEquals.assertPartialText(
				locator1 = "Blueprints#CODE_MIRROR_EDITOR",
				value1 = "text-match-over-multiple-fields-description");
		}

		Navigator.gotoBack();

		task ("Assert elements in Elements admin are using correct translations when using Portuguese locale") {
			Navigator.ensureLocaleURL(locale = "pt");

			Blueprints.viewEntryTitle(title = "Corresponder texto por vários campos");

			Blueprints.viewEntryDescription(
				description = "Buscar por uma correspondência de texto por vários campos de texto",
				title = "Corresponder texto por vários campos");

			Blueprints.viewEntryTitle(title = "Título em Português");

			Blueprints.viewEntryDescription(
				description = "Descrição em Português",
				title = "Título em Português");
		}

		task ("Assert OOTB elements within blueprint query builder add element sidebar are using correct translations when using Portuguese locale") {
			Navigator.gotoNavItem(navItem = "Blueprints");

			Blueprints.gotoBlueprint(title = "Test Blueprint");

			Blueprints.searchAddElementsSidebar(element = "Corresponder");

			AssertElementPresent(
				key_element = "Corresponder texto por vários campos",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_NAME");

			AssertTextEquals.assertPartialText(
				key_element = "Corresponder texto por vários campos",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_DESCRIPTION",
				value1 = "Buscar por uma correspondência de texto por vários campos de texto.");

			Blueprints.searchAddElementsSidebar(element = "Título");

			AssertElementPresent(
				key_element = "Título em Português",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_NAME");

			AssertTextEquals.assertPartialText(
				key_element = "Título em Português",
				locator1 = "Blueprints#BLUEPRINTS_ADD_ELEMENTS_SIDEBAR_ELEMENT_DESCRIPTION",
				value1 = "Descrição em Português");
		}

		task ("Assert element instances within existing blueprint are using correct translations when using Portuguese locale") {
			AssertElementPresent(
				key_element = "Corresponder texto por vários campos",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Buscar por uma correspondência de texto por vários campos de texto",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Título em Português",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");

			AssertElementPresent(
				key_element = "Descrição em Português",
				locator1 = "Blueprints#BLUEPRINTS_ADDED_ELEMENT");
		}
	}

	@priority = 5
	test ViewSynonymsEntryArchive7310 {
		property data.archive.type = "data-archive-search-synonyms";
		property portal.version = "7.3.10";
		property test.run.environment = "EE";

		Upgrade.viewSynonymsEntry();
	}

	@priority = 5
	test ViewSynonymsEntryArchive7413 {
		property data.archive.type = "data-archive-search-synonyms";
		property portal.version = "7.4.13";
		property test.run.environment = "EE";

		Upgrade.viewSynonymsEntry();
	}

}