@component-name = "portal-permissions"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Roles";
	property testray.main.component.name = "Roles";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			User.tearDownCP();

			Role.tearDownCP();

			Site.tearDownCP();

			PortalSettings.tearDownCP();
		}
	}

	@priority = "4"
	test AddSiteRegRole {
		Permissions.setUpRegRoleLoginUserCP(
			page = "Public Pages",
			portletName = "Sites",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_site_admin_web_portlet_SiteAdminPortlet",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_roles_admin_web_portlet_RolesAdminPortlet",
			roleTitle = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		AssertElementNotPresent(locator1 = "Button#ADD");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_COMMUNITY",
			resourceName = "90",
			roleTitle = "Regrole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		Permissions.removePermissionViaAPI(
			resourceAction = "ADD_COMMUNITY",
			resourceName = "90",
			roleTitle = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		AssertElementNotPresent(locator1 = "Button#ADD");
	}

	@priority = "5"
	test SearchPermissions {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "CONTROL_PANEL_GENERAL_PERMISSIONS_GO_TO_CONTROL_PANEL_CHECKBOX",
			permissionDefinitionValue = "View Control Panel Menu",
			roleTitle = "Roles Regrole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(
			roleTitle = "Roles Regrole Name",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Parent Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(
			parentSiteName = "Parent Site Name",
			siteName = "Child SiteName"
		);

		ProductMenu.gotoSite(site = "Parent Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "Parent Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn userln",
			roleTitle = "Site Administrator"
		);

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn userln",
			roleTitle = "Site Administrator"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_siteName = "Parent Site Name";

		Search.searchCP(searchTerm = "Parent");

		ProductMenuHelper.closeProductMenu();

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "Parent Site Name"
		);

		AssertTextNotPresent(value1 = "Child SiteName");

		var key_siteName = "Child SiteName";

		Search.searchCP(searchTerm = "Child");

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "Child SiteName"
		);

		AssertTextNotPresent(value1 = "Parent Site Name");

		Search.searchCP(searchTerm = "Site");

		var key_siteName = "Parent Site Name";

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "Parent Site Name"
		);

		var key_siteName = "Child SiteName";

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "Child SiteName"
		);

		Site.viewSiteAdminPermissionsCP(siteName = "Parent Site Name");

		Site.viewSiteAdminPermissionsCP(siteName = "Child SiteName");
	}

	@priority = "4"
	test ViewSiteManageChildSiteSiteRole {
		Permissions.setUpSiteRoleLoginUserCP(
			pageName = "Site Page",
			portletName = "Sites",
			roleTitle = "Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName1");

		ProductMenu.gotoSite(site = "Child SiteName1");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(roleTitle = "Regrole Name", userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_site_admin_web_portlet_SiteAdminPortlet",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "UPDATE",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Siterole Name",
			roleType = "site"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_COMMUNITY",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Siterole Name",
			roleType = "site"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_siteName = "Site Name";

		Click.waitForMenuToggleJSClick(locator1 = "Sites#SITE_TABLE_ACTIONS");

		MenuItem.click(menuItem = "Add Child Site");

		LexiconEntry.gotoEntry(rowEntry = "Blank Site");

		PortletEntry.inputName(name = "Child SiteName2");

		Click(locator1 = "Button#SAVE", value1 = "Save");

		PortletEntry.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_siteName = "Child SiteName1";

		Click.waitForMenuToggleJSClick(locator1 = "Sites#SITE_TABLE_ACTIONS");

		MenuItem.viewNotPresent(menuItem = "Add Child Site");

		MenuItem.viewNotPresent(menuItem = "Delete");

		var key_site = "Child SiteName2";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "Child SiteName2"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Pages");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "MANAGE_SUBGROUPS",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Siterole Name",
			roleType = "site"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_site = "Child SiteName1";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "Child SiteName1"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Pages");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_site = "Child SiteName2";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "Child SiteName2"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Pages");

		Permissions.removePermissionViaAPI(
			resourceAction = "MANAGE_SUBGROUPS",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Siterole Name",
			roleType = "site"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_siteName = "Child SiteName1";

		Click.waitForMenuToggleJSClick(locator1 = "Sites#SITE_TABLE_ACTIONS");

		MenuItem.viewNotPresent(menuItem = "Add Child Site");

		MenuItem.viewNotPresent(menuItem = "Delete");

		var key_site = "Child SiteName2";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "Child SiteName2"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Pages");
	}

	@priority = "4"
	test ViewSiteManagePagesRegRole {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Permissions.setUpRegRoleLoginUserCP(
			portletName = "Sites",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_site_admin_web_portlet_SiteAdminPortlet",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No sites were found."
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "MANAGE_LAYOUTS",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_site = "${siteName}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "${siteName}"
		);

		var key_siteName = "${siteName}";

		AssertElementPresent(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_site = "Site Name";

		AssertClick.assertPartialTextClickAt(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
			value1 = "Site Name"
		);

		var key_siteName = "Site Name";

		AssertElementPresent(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME"
		);

		Permissions.removePermissionViaAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name"
		);

		Permissions.removePermissionViaAPI(
			resourceAction = "MANAGE_LAYOUTS",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No sites were found."
		);
	}
}