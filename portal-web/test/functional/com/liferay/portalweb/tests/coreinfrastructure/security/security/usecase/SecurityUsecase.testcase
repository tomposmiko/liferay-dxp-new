@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Security";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			Page.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-83566."
	@priority = "5"
	test EscapeUrlRedirectWithGroovyScript {
		property test.name.skip.portal.instance = "SecurityUsecase#EscapeUrlRedirectWithGroovyScript";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration");

		ServerAdministration.executeScript(
			language = "Groovy",
			script = '''
import com.liferay.portal.kernel.util.PortalUtil;

out.println(PortalUtil.escapeRedirect("/"));
''');

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "/");
	}

	@description = "This is a use case for LPS-87768."
	@priority = "5"
	test NoPermissionFromUnauthorizedURLAsPowerUser {
		property test.name.skip.portal.instance = "SecurityUsecase#NoPermissionFromUnauthorizedURLAsPowerUser";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Power User",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		WaitForSPARefresh();

		var authToken = Page.getAuthTokenFromHtmlSource();
		var plid = Page.getPlidFromHtmlSource();
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = '''${portalURL}/c/portal/update_layout?cmd=add&p_p_col_id=column-1&p_p_col_pos=0&p_p_id=com_liferay_marketplace_store_web_portlet_MarketplacePurchasedPortlet&p_auth=${authToken}&p_l_id=${plid}''');

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		AssertElementNotPresent(
			key_portletName = "Purchased",
			locator1 = "Portlet#BODY");
	}

	@priority = "5"
	test ValidateCannotOverwriteOSGiServiceIdentifier {
		property portal.acceptance = "true";
		var portalURL = PropsUtil.get("portal.url");
		var url = "${portalURL}/c/portal/json_service?serviceClassName=com.liferay.portal.kernel.service.AccountServiceUtil&amp;serviceMethodName=getOSGiServiceIdentifier&amp;p_auth=";

		Api.gotoPAuthURL(url = "${url}");

		AssertElementPresent(locator1 = "JSONWS#SECURITY_EMPTY_PAGE");
	}

	@priority = "4"
	test ValidateCannotStealAdminAccount {
		property test.name.skip.portal.instance = "SecurityUsecase#ValidateCannotStealAdminAccount";
		var pAuth = Api.getPAuth();
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openSpecificURL(url = "${portalURL}/api/jsonws/group/get-group/group-id/20126?p_auth=${pAuth}");

		AssertTextEquals(
			locator1 = "Home#ERROR_MESSAGE_ALERT_ERROR",
			value1 = "Forbidden");
	}

	@priority = "5"
	test ValidateForwardURLPG {
		property custom.properties = "virtual.hosts.valid.hosts=localhost,127.0.0.1,${ip.address}";
		property portal.acceptance = "true";
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/html/common/forward_jsp.jsp?FORWARD_URL=http://www.msn.com");

		Pause(locator1 = "3000");

		AssertElementPresent(
			key_pageName = "Home",
			locator1 = "Home#PAGE");

		AssertTextEquals(
			locator1 = "HelloWorld#PORTLET_TITLE",
			value1 = "Hello World");

		AssertElementPresent(locator1 = "HelloWorld#PORTLET_CONTENT");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Test");

		Navigator.openSpecificURL(url = '''${portalURL}/html/common/forward_jsp.jsp?FORWARD_URL=${portalURL}/web/guest/test''');

		AssertElementPresent(
			key_pageName = "Test",
			locator1 = "Home#PAGE");
	}

	@description = "This is a use case for LPS-73595."
	@priority = "5"
	test ViewJSLoaderModulesURLNoWiki {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/o/js_loader_modules");

		AssertConsoleTextPresent(value1 = "com.liferay.wiki.engine.html");

		AssertConsoleTextPresent(value1 = "com.liferay.wiki.engine.text");

		AssertTextNotPresent(value1 = "com.liferay.wiki.engine.html");

		AssertTextNotPresent(value1 = "com.liferay.wiki.engine.text");
	}

	@description = "This is a use case for LPS-55622."
	@priority = "5"
	test ViewNoInvokedPortletViaURL {
		property portal.acceptance = "true";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/home/?p_p_id=asdf&amp;p_p_lifecycle=0&amp;p_p_state=maximized&amp;_asdf_mvcPath=/html/portlet/portal_settings/edit_company.jsp");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "This portlet could not be found. Please redeploy it or remove it from the page.");
	}

}