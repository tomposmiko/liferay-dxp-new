@component-name = "portal-search"
definition {
	property portal.release = "true";
	property portal.suite.search.engine = "elasticsearch6";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Search";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			MessageboardsThread.tearDownCP();

			User.tearDownCP();

			WebContent.tearDownCP();

			DMDocument.tearDownCP();

			WikiPage.tearDownCP();

			Vocabulary.tearDownCP();

			Tag.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "4"
	test NavigateToSearchResultsViaURL {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "This is a blog about Potatoes",
			entryTitle = "Potato Blog"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Search Page");

		Navigator.gotoPage(pageName = "Search Page");

		SearchPortlets.addWidgets(
			searchPortletList = "Type Facet,Search Results,Search Bar"
		);

		Portlet.dragAndDropPortletToColumnPG(
			columnNumberFrom = "1",
			columnNumberTo = "2",
			portletName = "Search Results"
		);

		SearchPortlets.configureWidgetParameterNames(
			keywordsParameterName = "keywordparameter",
			scopeParameterName = "scopeparameter"
		);

		SearchPortlets.configureWidgetScope(searchScope = "Let the User Choose");

		SearchPortlets.selectWidgetScopeInput(searchScope = "Everything");

		SearchPortlets.searchWidget(searchTerm = "Potato");

		SearchFacetPortlet.checkFacet(facetValueName = "Blogs Entry");

		var portalURL = PropsUtil.get("portal.url");

		AssertLocation(
			value1 = "${portalURL}/web/guest/search-page?keywordparameter=Potato&scopeparameter=everything&type=com.liferay.blogs.model.BlogsEntry"
		);

		var searchURL = selenium.getCurrentUrl();

		Navigator.openURL();

		Navigator.openSpecificURL(url = "${searchURL}");

		AssertTextEquals(locator1 = "Search#SEARCH_BAR_WIDGET", value1 = "Potato");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Potato Blog",
			searchAssetType = "Blogs Entry"
		);

		AssertChecked(locator1 = "Checkbox#ANY_CHECKBOX", checkboxName = "Blogs Entry");
	}

	@priority = "4"
	test SearchBlogsEntry {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Blogs Entry Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Blogs Entry Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Blogs Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Blogs Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Blogs");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Entry");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Blogs1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Blogs1");

		SearchPortlets.searchEmbedded(searchTerm = "Entry1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Entry1");

		SearchPortlets.searchEmbedded(searchTerm = "Content1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Content1");

		SearchPortlets.searchEmbedded(searchTerm = "Title1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Title1");
	}

	@priority = "4"
	test SearchBlogsEntryCategory {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithCategory(
			categoryName = "Category Name",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Category Name");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Category");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Name");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Category1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Category1");

		SearchPortlets.searchEmbedded(searchTerm = "Name1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Name1");
	}

	@ignore = "true"
	@priority = "4"
	test SearchBlogsEntryCategoryQuotes {
		// Ignoring test until LPS-73326 is resolved

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "Category Name",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithCategory(
			categoryName = "Category Name",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Category Name&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Category&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Name&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Category Name1&quot;");

		SearchResultPortlet.viewNoSearchResults(
			searchTerm = "&quot;Category Name1&quot;"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Category1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Category1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Name1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Name1&quot;");
	}

	@priority = "4"
	test SearchBlogsEntryQuotes {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Entry Title&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Entry Title&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Title&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Entry Content&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Entry&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Entry Content&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Entry&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Content&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Content&quot;");

		SearchResultPortlet.viewNoSearchResults(
			searchTerm = "&quot;Blogs Content&quot;"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Blogs1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Entry1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Entry1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Title1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Title1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Content1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;Content1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Entry Title1&quot;");

		SearchResultPortlet.viewNoSearchResults(
			searchTerm = "&quot;Blogs Entry Title1&quot;"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;Blogs Entry Content1&quot;");

		SearchResultPortlet.viewNoSearchResults(
			searchTerm = "&quot;Blogs Entry Content1&quot;"
		);
	}

	@priority = "4"
	test SearchBlogsEntryTag {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithTag(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			tagName = "tag name"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "tag name");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "tag");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "name");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "tag1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "tag1");

		SearchPortlets.searchEmbedded(searchTerm = "name1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "name1");
	}

	@priority = "4"
	test SearchBlogsEntryTagQuotes {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithTag(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			tagName = "tag name"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "&quot;tag name&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;tag&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;name&quot;");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Blogs Entry Content",
			searchAssetTitle = "Blogs Entry Title",
			searchAssetType = "Blogs Entry"
		);

		SearchPortlets.searchEmbedded(searchTerm = "&quot;tag name1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;tag name1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;tag1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;tag1&quot;");

		SearchPortlets.searchEmbedded(searchTerm = "&quot;name1&quot;");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "&quot;name1&quot;");
	}

	@priority = "4"
	test SearchDeletedWebContent {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC Title"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "WC Title");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No results were found that matched the keywords"
		);
	}

	@description = "This test will set up a search page and search on a newly added site. It will also use different scopes to assert search results for assets from multiple sites"
	@priority = "4"
	test SearchDifferentScopesViaNewSite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "Apple"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name 2");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Apple"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name 3");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(entryContent = "Blogs Entry Content", entryTitle = "Apple");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site 3 Home Page");

		SitePages.addPublicPage(
			inheritChanges = "disable",
			pageName = "Search Page",
			pageTemplateName = "Search"
		);

		// Workaround for LPS-80521

		Navigator.gotoSitePage(pageName = "Search Page", siteName = "Site Name 3");

		Navigator.gotoSitePage(pageName = "Site 3 Home Page", siteName = "Site Name 3");

		SearchPortlets.configureDestination(destinationPage = "Search Page");

		SearchPortlets.configureEmbeddedScope(searchScope = "Let the User Choose");

		SearchPortlets.selectEmbeddedScopeInput(searchScope = "Everything");

		SearchPortlets.searchEmbedded(searchTerm = "Apple");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "Apple/Web Content Article,Apple/Document,Apple/Blogs Entry",
			searchTerm = "Apple"
		);

		SearchPortlets.selectEmbeddedScopeInput(searchScope = "This Site");

		SearchPortlets.searchEmbedded(searchTerm = "Apple");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Apple",
			searchAssetType = "Blogs Entry",
			searchTerm = "Apple"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "Apple/Web Content Article,Apple/Document"
		);
	}

	@description = "This test will assert that configurations set within the Embedded search bar will be used when searching via the Widget search bar"
	@priority = "4"
	test SearchDifferentScopesViaSearchWidget {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Potato Document"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Test Site");

		ProductMenu.gotoSite(site = "Test Site");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "This is a blog about Potatoes",
			entryTitle = "Potato Blog"
		);

		var currentDate = DateUtil.getFormattedDate("0", "MMM d, YYYY");
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/search");

		SearchPortlets.configureEmbeddedScope(searchScope = "Everything");

		SearchPortlets.searchWidget(searchTerm = "Potato");

		SearchResultPortlet.viewSearchResults(
			entryDate = "${currentDate}",
			searchAssetSummary = "This is a blog about Potatoes",
			searchAssetTitle = "Potato Blog",
			searchAssetType = "Blogs Entry",
			searchTerm = "Potato"
		);

		SearchResultPortlet.viewSearchResults(
			entryDate = "${currentDate}",
			searchAssetTitle = "Potato Document",
			searchAssetType = "Document",
			searchTerm = "Potato"
		);

		SearchPortlets.configureEmbeddedScope(searchScope = "This Site");

		SearchPortlets.searchWidget(searchTerm = "Potato");

		SearchResultPortlet.viewSearchResults(
			entryDate = "${currentDate}",
			searchAssetTitle = "Potato Document",
			searchAssetType = "Document",
			searchTerm = "Potato"
		);

		SearchResultPortlet.viewSearchResultNotPresent(
			searchAssetTitle = "Potato Blog",
			searchAssetType = "Blogs Entry"
		);
	}

	@priority = "5"
	test SearchDocumentsAndMediaDocument {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentSize = "0k",
			dmDocumentTitle = "DM Document Title",
			tagNameList = "moon rocks"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "DM");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "DM Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "DM Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "moon rocks");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchFacetPortlet.checkFacet(facetValueName = "moon rocks");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document"
		);

		SearchPortlets.searchEmbedded(searchTerm = "DM1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM1");

		SearchPortlets.searchEmbedded(searchTerm = "Document1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Document1");

		SearchPortlets.searchEmbedded(searchTerm = "Title1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Title1");
	}

	@description = "This is a use case for LPS-81931"
	@priority = "5"
	test SearchGlobalTemplateSmoke {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry 1 Content",
			entryTitle = "Blogs Entry 1 Title"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Home");

		SitePages.addPublicPage(
			inheritChanges = "disable",
			pageName = "Search Global Template Page",
			pageTemplateName = "Search"
		);

		Navigator.gotoSitePage(
			pageName = "Search Global Template Page",
			siteName = "Site Name"
		);

		SearchPortlets.configureDestination(
			destinationPage = "Search Global Template Page"
		);

		for (var portlet : list "Category Facet,Folder Facet,Modified Facet,Search Bar,Search Options,Search Results,Tag Facet,Type Facet,User Facet") {
			AssertElementPresent(locator1 = "Portlet#BODY", key_portletName = "${portlet}");
		}

		Portlet.deletePG(portletName = "Search Options");

		for (var portlet : list "Category Facet,Folder Facet,Modified Facet,Search Bar,Search Results,Tag Facet,Type Facet,User Facet") {
			AssertElementPresent(locator1 = "Portlet#BODY", key_portletName = "${portlet}");
		}

		Navigator.gotoSitePage(pageName = "Home", siteName = "Site Name");

		SearchPortlets.searchEmbedded(searchTerm = "Blogs");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Blogs Entry 1 Title",
			searchAssetType = "Blogs Entry",
			searchTerm = "Blogs"
		);
	}

	@priority = "4"
	test SearchMessageBoardsThread {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Message Boards Page");

		Navigator.gotoPage(pageName = "Message Boards Page");

		Portlet.addPG(portletName = "Message Boards");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "MB Thread Message Subject");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "MB Thread Message Body");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "MB");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Thread");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Message");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Subject");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Body");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "MB Thread Message Body",
			searchAssetTitle = "MB Thread Message Subject",
			searchAssetType = "Message Boards Message"
		);

		SearchPortlets.searchEmbedded(searchTerm = "MB1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "MB1");

		SearchPortlets.searchEmbedded(searchTerm = "Thread1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Thread1");

		SearchPortlets.searchEmbedded(searchTerm = "Message1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Message1");

		SearchPortlets.searchEmbedded(searchTerm = "Subject1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Subject1");

		SearchPortlets.searchEmbedded(searchTerm = "Body1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Body1");
	}

	@priority = "4"
	test SearchUser {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "userfn userln");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);

		SearchPortlets.searchEmbedded(searchTerm = "userfn");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);

		SearchPortlets.searchEmbedded(searchTerm = "userln");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);

		SearchPortlets.searchEmbedded(searchTerm = "usersn");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);

		SearchPortlets.searchEmbedded(searchTerm = "userfn1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "userfn1");

		SearchPortlets.searchEmbedded(searchTerm = "userln1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "userln1");

		SearchPortlets.searchEmbedded(searchTerm = "usersn1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "usersn1");
	}

	@priority = "4"
	test SearchUserWildcard {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "users*");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);

		SearchPortlets.searchEmbedded(searchTerm = "userf*");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "userfn userln",
			searchAssetType = "User"
		);
	}

	test SearchUsingCustomFacet {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "WebContent Title 1");

		PortletEntry.publish();

		WebContent.viewVersion(version = "1.0", webContentTitle = "WebContent Title 1");

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/web/guest/search");

		Portlet.addPG(portletName = "Custom Facet");

		SearchFacetPortlet.configureCustomFacet(aggregationField = "version");

		SearchPortlets.searchEmbedded(searchTerm = "WebContent");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title 1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent"
		);

		AssertElementPresent(
			locator1 = "SearchResults#FACET_PORTLET_CHECKBOX_LABEL_SPECIFIC",
			key_checkboxName = "1.0",
			key_facetClass = "Custom Facet"
		);

		Check(
			locator1 = "SearchResults#FACET_PORTLET_CHECKBOX_SPECIFIC",
			key_checkboxName = "1.0",
			key_facetClass = "Custom Facet"
		);

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title 1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContent Title 1");

		WebContent.addCP(webContentTitle = "WebContent Title 1.1");

		PortletEntry.publish();

		WebContent.viewVersion(
			version = "1.1",
			webContentTitle = "WebContent Title 1.1"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "WebContent");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title 1.1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent"
		);

		AssertElementPresent(
			locator1 = "SearchResults#FACET_PORTLET_CHECKBOX_LABEL_SPECIFIC",
			key_checkboxName = "1.1",
			key_facetClass = "Custom Facet"
		);

		Check(
			locator1 = "SearchResults#FACET_PORTLET_CHECKBOX_SPECIFIC",
			key_checkboxName = "1.1",
			key_facetClass = "Custom Facet"
		);

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title 1.1",
			searchAssetType = "Web Content Article",
			searchTerm = "WebContent"
		);
	}

	@priority = "4"
	test SearchWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "WC WebContent Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "WC");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "WebContent");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "WC WebContent Content",
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article"
		);

		SearchPortlets.searchEmbedded(searchTerm = "WC1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "WC1");

		SearchPortlets.searchEmbedded(searchTerm = "WebContent1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "WebContent1");

		SearchPortlets.searchEmbedded(searchTerm = "Title1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Title1");

		SearchPortlets.searchEmbedded(searchTerm = "Content1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Content1");
	}

	@priority = "4"
	test SearchWikiPage {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Wiki Test Page");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		Portlet.addPG(portletName = "Wiki");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			pageName = "Wiki Test Page",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title"
		);

		Navigator.openURL();

		SearchPortlets.searchEmbedded(searchTerm = "Wiki Page Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Wiki Page Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Wiki");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Page");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Content");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "Wiki Page Content",
			searchAssetTitle = "Wiki Page Title",
			searchAssetType = "Wiki Page"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Wiki1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Wiki1");

		SearchPortlets.searchEmbedded(searchTerm = "Page1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Page1");

		SearchPortlets.searchEmbedded(searchTerm = "Title1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Title1");

		SearchPortlets.searchEmbedded(searchTerm = "Content1");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Content1");
	}

	@priority = "4"
	test SearchXSSAsset {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Message Boards Page");

		Navigator.gotoPage(pageName = "Message Boards Page");

		Portlet.addPG(portletName = "Message Boards");

		Navigator.gotoPage(pageName = "Message Boards Page");

		MessageboardsThread.addPG(
			threadBody = '''<script>alert(123);</script>''',
			threadSubject = "Thread Subject"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Liferay Alert");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Thread Subject",
			searchAssetType = "Message Boards Message",
			searchAssetSummary = '''<script>alert(123);</script>'''
		);

		var actualScript = '''<script>alert(123);</script>''';

		var escapedScript = '''&lt;script&gt;<span class="highlight">alert</span>(123);&lt;/script&gt;''';

		AssertHTMLSourceTextNotPresent(value1 = "${actualScript}");

		AssertHTMLSourceTextPresent(value1 = "${escapedScript}");
	}

	@priority = "5"
	test ViewMultipleFacetURLs {
		property osgi.app.includes = "bookmarks";
		var searchPage = "Search Page";

		JSONCategory.addVocabularyByGroupName(
			groupName = "Guest",
			title = "Fruit Vocabulary"
		);

		JSONCategory.addCategoryByGroupName(
			groupName = "Guest",
			title = "organic",
			vocabularyName = "Fruit Vocabulary"
		);

		var organicCategoryId = JSONCategory.getCategoryId(
			categoryName = "organic",
			groupName = "Guest",
			vocabularyName = "Fruit Vocabulary"
		);

		var webContentFolderName1 = "WC Folder Name 1";
		var portalURL = PropsUtil.get("portal.url");

		var curl = '''
			${portalURL}/api/jsonws/journal.journalfolder/add-folder \
				-u test@liferay.com:test \
				-d groupId=20126 \
				-d parentFolderId=0 \
				-d name=${webContentFolderName1} \
				-d description=''
		''';
		var webContentFolderId1 = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${webContentFolderName1}')]['folderId']");
		var webContentFolderId1 = StringUtil.replace("${webContentFolderId1}", "[&quot;", "");
		var webContentFolderId1 = StringUtil.replace("${webContentFolderId1}", "&quot;]", "");

		var webContentserviceContext1 = '''{"assetTagNames": ["ripe"], "assetCategoryIds": ["${organicCategoryId}"]}''';

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content 1",
			folderId = "${webContentFolderId1}",
			groupName = "Guest",
			serviceContext = "${webContentserviceContext1}",
			title = "apple"
		);

		var webContentFolderName2 = "WC Folder Name 2";
		var portalURL = PropsUtil.get("portal.url");

		var curl = '''
			${portalURL}/api/jsonws/journal.journalfolder/add-folder \
				-u test@liferay.com:test \
				-d groupId=20126 \
				-d parentFolderId=0 \
				-d name=${webContentFolderName2} \
				-d description=''
		''';
		var webContentFolderId2 = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${webContentFolderName2}')]['folderId']");
		var webContentFolderId2 = StringUtil.replace("${webContentFolderId2}", "[&quot;", "");
		var webContentFolderId2 = StringUtil.replace("${webContentFolderId2}", "&quot;]", "");

		var webContentserviceContext1 = '''{"assetTagNames": ["fresh"]}''';

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content 2",
			folderId = "${webContentFolderId2}",
			groupName = "Guest",
			serviceContext = "${webContentserviceContext1}",
			title = "orange"
		);

		var liferaySiteId = JSONGroup._getSiteIdByGroupName(groupName = "Guest");

		JSONGroup.addGroup(groupName = "New Site");

		var newSiteId = JSONGroup._getSiteIdByGroupName(groupName = "New Site");

		ProductMenu.gotoSite(site = "New Site");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithTag(
			entryContent = "Apple Blog Entry Content",
			entryTitle = "apple",
			tagName = "sweet"
		);

		Navigator.openURL();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Bookmarks"
		);

		Bookmark.addWithTagCP(
			bookmarkName = "banana",
			bookmarkURL = "https://www.liferay.com",
			skipViewBookmark = "true",
			tagNameList = "fresh,ripe,test"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Bookmarks"
		);

		Bookmark.addCategoryCP(
			bookmarkName = "banana",
			categoryName = "organic",
			vocabularyName = "Fruit Vocabulary"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "${searchPage}");

		Navigator.gotoPage(pageName = "${searchPage}");

		SearchPortlets.addWidgets(
			searchPortletList = "Search Options,Category Facet,Folder Facet,Site Facet,Tag Facet,Type Facet,User Facet,Search Results,Search Bar"
		);

		Portlet.dragAndDropPortletToColumnPG(
			columnNumberFrom = "1",
			columnNumberTo = "2",
			portletName = "Search Results"
		);

		SearchPortlets.configureWidgetScope(searchScope = "Everything");

		SearchPortlets.configureSearchOptions(
			allowEmptySearches = "true",
			basicFacetSelection = "true"
		);

		SearchPortlets.searchWidget(searchTerm = "apple");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article",
			searchTerm = "apple"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "banana/Bookmarks,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "type",
			facetValueName = "Web Content Article",
			searchPage = "${searchPage}",
			searchTerm = "apple"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article",
			searchTerm = "apple"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,banana/Bookmarks,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "type",
			facetValueName = "Blogs Entry",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article",
			searchTerm = "apple"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "banana/Bookmarks,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.uncheckFacetAndViewURL(
			facetClass = "type",
			facetValueName = "Web Content Article",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry",
			searchTerm = "apple"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Web Content Article,banana/Bookmarks,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.clearAllFacetsAndViewURL(searchURL = "${testSearchURL}");

		SearchPortlets.searchWidget(searchTerm = "test");

		var testSearchURL = SearchPortlets.getSearchTermURL(
			searchPage = "${searchPage}",
			searchTerm = "test"
		);

		AssertLocation(value1 = "${testSearchURL}");

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Bookmarks,orange/Web Content Article",
			searchTerm = "test"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "category",
			facetValue = "${organicCategoryId}",
			facetValueName = "organic",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Bookmarks",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "user",
			facetValueName = "userfn userln",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "banana/Bookmarks",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,apple/Web Content Article,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.uncheckFacetAndViewURL(
			facetClass = "user",
			facetValueName = "userfn userln",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Bookmarks",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.clearAllFacetsAndViewURL(searchURL = "${testSearchURL}");

		SearchPortlets.searchWidget(searchTerm = "test");

		var testSearchURL = SearchPortlets.getSearchTermURL(
			searchPage = "${searchPage}",
			searchTerm = "test"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "tag",
			facetValueName = "sweet",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "tag",
			facetValueName = "fresh",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,banana/Bookmarks,orange/Web Content Article",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Web Content Article"
		);

		var siteName = TestCase.getSiteName();

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "site",
			facetValue = "${liferaySiteId}",
			facetValueName = "${siteName}",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "site",
			facetValue = "${newSiteId}",
			facetValueName = "New Site",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Blogs Entry,banana/Bookmarks,orange/Web Content Article",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.uncheckFacetAndViewURL(
			facetClass = "site",
			facetValue = "${newSiteId}",
			facetValueName = "New Site",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "banana/Bookmarks,orange/Web Content Article",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,apple/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "folder",
			facetValue = "${webContentFolderId2}",
			facetValueName = "WC Folder Name 2",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "orange/Web Content Article",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Bookmarks"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "tag",
			facetValueName = "ripe",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "orange/Web Content Article",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,apple/Web Content Article,banana/Bookmarks"
		);

		var testSearchURL = SearchFacetPortlet.uncheckFacetAndViewURL(
			facetClass = "folder",
			facetValue = "${webContentFolderId2}",
			facetValueName = "WC Folder Name 2",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.uncheckFacetAndViewURL(
			facetClass = "tag",
			facetValueName = "fresh",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article,banana/Bookmarks",
			searchTerm = "test"
		);

		SearchResultPortlet.viewMultipleSearchResultsNotPresent(
			noResultsList = "apple/Blogs Entry,orange/Web Content Article"
		);

		var testSearchURL = SearchFacetPortlet.clearAllFacetsAndViewURL(searchURL = "${testSearchURL}");

		SearchPortlets.searchWidget(searchTerm = "organic");

		var testSearchURL = SearchPortlets.getSearchTermURL(
			searchPage = "${searchPage}",
			searchTerm = "organic"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "category",
			facetValue = "${organicCategoryId}",
			facetValueName = "organic",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "folder",
			facetValue = "${webContentFolderId1}",
			facetValueName = "WC Folder Name 1",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "site",
			facetValue = "${liferaySiteId}",
			facetValueName = "${siteName}",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "tag",
			facetValueName = "ripe",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "type",
			facetValueName = "Web Content Article",
			searchURL = "${testSearchURL}"
		);

		var testSearchURL = SearchFacetPortlet.checkFacetAndViewURL(
			facetClass = "user",
			facetValueName = "test test",
			searchURL = "${testSearchURL}"
		);

		SearchResultPortlet.viewMultipleSearchResults(
			resultsList = "apple/Web Content Article",
			searchTerm = "organic"
		);
	}

	@priority = "5"
	test ViewSearchResultDetails {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "SearchUsecase#ViewSearchResultDetails";

		SearchPortlets.searchEmbedded(searchTerm = "Test Test");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "Test Test",
			searchAssetType = "User"
		);

		SearchPortlets.gotoResultDetails(searchAssetTitle = "Test Test");

		SearchPortlets.viewUserResultDetails(
			pageName = "Welcome",
			userName = "Test Test"
		);
	}

	@priority = "4"
	test ViewStagedAndLiveContentInSearchResults {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			inheritChanges = "disable",
			pageName = "search",
			pageTemplateName = "Search"
		);

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.addArticleCP(
			webContentContent = "WebContent Content",
			webContentTitle = "WebContent Title"
		);

		Navigator.gotoStagedSitePage(pageName = "search", siteName = "Site Name");

		SearchPortlets.searchEmbedded(searchTerm = "Web Content Article");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title",
			searchAssetType = "Web Content Article"
		);

		ProductMenu.gotoLiveSite();

		SearchPortlets.searchEmbedded(searchTerm = "Web Content Article");

		SearchResultPortlet.viewSearchResultNotPresent(
			searchAssetTitle = "WebContent Title",
			searchAssetType = "Web Content Article"
		);

		// LPS-83060

		/* <execute macro="SearchPortlets#configureEmbeddedScope">
			<var name="searchScope" value="Everything" />
		</execute>

		<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Web Content Article" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResultNotPresent">
			<var name="searchAssetTitle" value="WebContent Title" />
			<var name="searchAssetType" value="Web Content Article" />
		</execute>

		<execute macro="SearchPortlets#configureEmbeddedScope">
			<var name="searchScope" value="This Site" />
		</execute> */

		Navigator.gotoStagedView();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteStagedCP(
			pageName = "search",
			siteName = "Site Name",
			webContentTitle = "WebContent Title"
		);

		Navigator.gotoStagedSitePage(pageName = "search", siteName = "Site Name");

		SearchPortlets.searchEmbedded(searchTerm = "Web Content Article");

		SearchResultPortlet.viewSearchResultNotPresent(
			searchAssetTitle = "WebContent Title",
			searchAssetType = "Web Content Article"
		);

		ProductMenu.gotoLiveSite();

		SearchPortlets.searchEmbedded(searchTerm = "Web Content Article");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WebContent Title",
			searchAssetType = "Web Content Article"
		);
	}
}