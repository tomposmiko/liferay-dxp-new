@component-name = "portal-user-management-and-portal-configuration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Portal Settings";

	setUp {
		User.firstLoginPG();
	}

	tearDown {
		PortalSettings.tearDownCP();

		User.tearDownCP();

		Role.tearDownCP();

		Organization.tearDownCP();

		UserGroup.tearDownCP();

		Site.tearDownCP();

		WebContent.tearDownCP();

		Page.tearDownCP();
	}

	@priority = "5"
	test EditDefaultUserAssociationsOrganizationSites {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(orgName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsOrganizationSitesCP(
			orgName = "Organization Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewConfigurationUsersDefaultUserAssociationsOrganizationSitesCP(
			orgName = "Organization Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationOrganizationSitesCP(
			orgName = "Organization Name",
			siteName = "Organization Name"
		);
	}

	@priority = "4"
	test EditDefaultUserAssociationsRoles {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsRolesCP(
			roleTitle = "Roles Regrole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewConfigurationUsersDefaultUserAssociationsRolesCP(
			roleTitle = "Roles Regrole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationRolesCP(roleTitle = "Roles Regrole Name");
	}

	@priority = "4"
	test EditDefaultUserAssociationsSites {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsSitesCP(
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewConfigurationUsersDefaultUserAssociationsSitesCP(
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationSitesCP(siteName = "Site Name");
	}

	@priority = "4"
	test EditDefaultUserAssociationsUserGroups {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsUserGroupsCP(
			userGroupName = "UG UserGroup Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewConfigurationUsersDefaultUserAssociationsUserGroupsCP(
			userGroupName = "UG UserGroup Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationUserGroupsCP(userGroupName = "UG UserGroup Name");
	}

	@priority = "5"
	test EnterReservedEmailAddress {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.enterReservedEmailAddressCP(
			userEmailAddress = "userea@liferay.com"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addReservedEmailAddressCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);
	}

	@priority = "5"
	test EnterReservedScreenName {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.enterReservedScreenNameCP(userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addReservedScreenNameCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);
	}

	@priority = "4"
	test ViewContentSharingDisabledAcrossSitesViaAP {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureContentSharingAcrossSitesCP(enableAcrossSite = "false");

		PortalSettings.configureContentSharingSubSitesCP(subSites = "enabledByDefault");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "AP Test Page");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "WC Test Page");

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.openSiteURL(siteName = "Child SiteName");

		Portlet.addPG(portletName = "Web Content Display");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		Navigator.openSiteURL(siteName = "Site Name");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Child SiteName",
			siteScopeType = "Child Site"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		AssetPublisherPortlet.viewConfigureSiteScopeContentSharingPG(
			childSite = "true",
			contentSharingAcrossSitesEnabled = "false",
			globalSiteName = "Global",
			globalSiteType = "Global",
			liferaySiteName = "Liferay",
			liferaySiteType = "Site"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		AssetPublisherPortlet.viewContentSharingPG(
			assetContent = "WC WebContent Content",
			assetTitle = "WC WebContent Title",
			siteScope1 = "Site Name",
			siteScope2 = "Child SiteName"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Blogs.addViaAPSelectScope(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			siteScope = "Site Name"
		);

		Navigator.openSiteURL(siteName = "Child SiteName");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureSiteScopePG(
			siteName = "Site Name",
			siteScopeType = "Parent Site"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		AssetPublisherPortlet.viewConfigureSiteScopeContentSharingPG(
			childSite = "true",
			contentSharingAcrossSitesEnabled = "false",
			globalSiteName = "Global",
			globalSiteType = "Global",
			liferaySiteName = "Liferay",
			liferaySiteType = "Site"
		);

		Navigator.openSiteURL(siteName = "Child SiteName");

		AssetPublisherPortlet.viewContentSharingPG(
			assetContent = "Blogs Entry Content",
			assetTitle = "Blogs Entry Title",
			siteScope1 = "Site Name",
			siteScope2 = "Child SiteName"
		);
	}

	@priority = "4"
	test ViewContentSharingEnabledAcrossSitesViaAP {
		property test.name.skip.portal.instance = "CPPortalSettings#ViewContentSharingEnabledAcrossSitesViaAP";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureContentSharingAcrossSitesCP(enableAcrossSite = "true");

		PortalSettings.configureContentSharingSubSitesCP(subSites = "enabledByDefault");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "AP Test Page");

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.openSiteURL(siteName = "Site Name");

		AssetPublisherPortlet.viewConfigureSiteScopeContentSharingPG(
			contentSharingAcrossSitesEnabled = "true",
			globalSiteName = "Global",
			globalSiteType = "Global",
			liferaySiteName = "${siteName}",
			liferaySiteType = "Site"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Blogs.addViaAP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "AP Test Page");

		Navigator.gotoPage(pageName = "AP Test Page");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoPage(pageName = "AP Test Page");

		AssetPublisherPortlet.viewConfigureSiteScopeContentSharingPG(
			contentSharingAcrossSitesEnabled = "true",
			currentSite = "true",
			globalSiteName = "Global",
			globalSiteType = "Global",
			liferaySiteName = "Liferay",
			liferaySiteType = "Current Site"
		);

		Navigator.gotoPage(pageName = "AP Test Page");

		AssetPublisherPortlet.configureAddSiteScopes(otherSite = "Site Name");

		Navigator.gotoPage(pageName = "AP Test Page");

		AssetPublisherPortlet.viewContentSharingPG(
			assetContent = "Blogs Entry Content",
			assetTitle = "Blogs Entry Title",
			siteScope1 = "Site Name",
			siteScope2 = "${siteName}"
		);
	}

	@priority = "3"
	test ViewDefaultUserAssociations {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewDefaultUserAssociationsCP();
	}

	@priority = "3"
	test ViewEmailNotificationsAccountCreatedNotification {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewEmailNotificationsAccountCreatedNotificationCP();
	}

	@priority = "3"
	test ViewEmailNotificationsPasswordChangedNotification {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewEmailNotificationsPasswordChangedNotificationCP();
	}

	@priority = "3"
	test ViewEmailNotificationsSender {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewEmailNotificationsSenderCP();
	}

	@priority = "3"
	test ViewReservedCredentialsScreenNames {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewReservedCredentialsScreenNamesCP();
	}
}