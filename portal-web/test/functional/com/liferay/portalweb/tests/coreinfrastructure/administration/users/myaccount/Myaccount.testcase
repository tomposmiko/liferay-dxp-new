@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Users and Organizations";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.tearDownCP();
		}
	}

	@priority = "5"
	test AddOrganizationMember {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		MyAccount.addOrganization(organizationName = "Organization Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn",
			userLastName = "userln",
			userName = "userfn userln",
			userScreenName = "usersn");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.gotoCP(
			orgName = "Organization Name",
			searchToken = "Organization");

		Organization.viewAssignMemberCP(
			userName = "userfn userln",
			userScreenName = "usersn");
	}

	@priority = "4"
	test AddOrganizations {
		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		for (var i : list "1,2,3") {
			MyAccount.addOrganization(organizationName = "Organization Name ${i}");

			UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

			Search.searchPG(
				portletName = "My Organizations",
				searchTerm = "Organization Name ${i}");
		}
	}

	@priority = "5"
	test DeleteOrganization {
		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		MyAccount.addOrganization(organizationName = "Organization Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.deletePG(orgName = "Organization Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.viewNoOrganizationsFoundCP();
	}

	@priority = "5"
	test EditOrganizationSite {
		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		MyAccount.addOrganization(organizationName = "Organization Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.addSitePG(orgName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.viewCP(
			siteMember = "Organization",
			siteName = "Organization Name",
			siteType = "Private");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.editSiteCP(
			orgName = "Organization Name",
			orgNameEdit = "Organization Name Edit");

		UserBar.gotoDropdownItem(dropdownItem = "My Organizations");

		Organization.searchCP(
			orgName = "Organization Name Edit",
			searchTerm = "Organization Name Edit");

		Organization.viewCP(
			orgName = "Organization Name Edit",
			orgType = "Organization");
	}

	@priority = "4"
	test ViewMyAccount {
		Navigator.openURL();

		Navigator.gotoAccountSettings();

		MyAccount.view();
	}

	@priority = "4"
	test ViewMyAccountUser {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		Navigator.gotoAccountSettings();

		MyAccount.view();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@description = "This is a use case for LPS-76106."
	@priority = "5"
	test ViewMyAccountUserViaURL {
		var portalURL = PropsUtil.get("portal.url");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openSpecificURL(url = "${portalURL}/group/control_panel/manage?p_p_id=com_liferay_my_account_web_portlet_MyAccountPortlet&p_p_lifecycle=1");

		MyAccount.view();

		AssertConsoleTextPresent(value1 = "not allowed to access URL ${portalURL}/group/control_panel/manage and portlet com_liferay_my_account_web_portlet_MyAccountPortlet");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test ViewMyAccountViaSignInPortlet {
		Portlet.addPG(portletName = "Sign In");

		AssertClick(
			locator1 = "SignIn#PORTLET_CONTENT_USER_NAME",
			value1 = "Test Test");

		MyAccount.view();
	}

}