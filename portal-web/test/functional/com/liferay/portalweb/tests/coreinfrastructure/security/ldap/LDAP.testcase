@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "LDAP";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			Page.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-65498."
	@priority = "5"
	test ImportLDAPUserWithBlankPassword {
		property apacheds.blank.user.password.enabled = "true";
		property apacheds.enabled = "true";
		property app.server.types = "tomcat";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "false";
		property test.name.skip.portal.instance = "LDAP#ImportLDAPUserWithBlankPassword";

		task ("Add LDAP server and test connection") {
			PortalSettings.addLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.testLDAPConnection();
		}

		task ("Configure LDAP settigs") {
			var enableSettingList = "enabled,ldapImportEnabled,importOnStartup";

			PortalSettings.configureLDAPSetting(enableSettingList = "${enableSettingList}");

			PortalSettings.viewEnabledLDAPSetting(enableSettingList = "${enableSettingList}");
		}

		task ("shutdown and start server") {
			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");
		}

		task ("Login and reindex sarch indexes") {
			User.firstLoginPG();

			// LRQA-46018

			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Search");

			SearchAdministration.executeSearchActions(actionsDescription = "Reindex search indexes.");
		}

		task ("View user information and assert -Unable to encrypt blank password- message not present on console") {
			ApplicationsMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations");

			User.viewCP(
				userEmailAddress = "ldapuseremail@liferay.com",
				userFirstName = "ldapusergivenname",
				userLastName = "ldapusersn",
				userScreenName = "ldapusercn");

			AssertConsoleTextNotPresent(value1 = "Unable to encrypt blank password");
		}
	}

	@description = "This is a use case for LPS-30529."
	@priority = "4"
	test ResetFieldsValueForImportedLDAPUser {
		property apacheds.enabled = "true";
		property custom.properties = "field.enable.com.liferay.portal.kernel.model.Contact.male=true";
		property test.name.skip.portal.instance = "LDAP#ResetFieldsValueForImportedLDAPUser";

		task ("Add LDAP server and test connection") {
			PortalSettings.addLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.testLDAPConnection();
		}

		task ("Configure LDAP settings") {
			var enableSettingList = "enabled,ldapImportEnabled,importOnStartup";

			PortalSettings.configureLDAPSetting(enableSettingList = "${enableSettingList}");

			PortalSettings.viewEnabledLDAPSetting(enableSettingList = "${enableSettingList}");
		}

		task ("Shutdown and start server") {
			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");
		}

		task ("Login and reindex search indexes") {
			User.firstLoginPG();

			// LRQA-46018

			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Search");

			SearchAdministration.executeSearchActions(actionsDescription = "Reindex search indexes.");
		}

		task ("View user information") {
			ApplicationsMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations");

			User.viewCP(
				userEmailAddress = "ldapuseremail@liferay.com",
				userFirstName = "ldapusergivenname",
				userLastName = "ldapusersn",
				userScreenName = "ldapusercn");
		}

		task ("Edit user gender") {
			Navigator.gotoBack();

			User.editUserGenderCP(
				userGender = "Female",
				userName = "ldapusergivenname ldapusersn");
		}

		task ("Edit user job title") {
			Navigator.gotoBack();

			User.editUserJobTitleCP(
				userJobTitle = "QA",
				userName = "ldapusergivenname ldapusersn");
		}

		task ("Edit user suffix") {
			Navigator.gotoBack();

			User.editUserSuffixCP(
				userName = "ldapusergivenname ldapusersn",
				userSuffix = "Phd");
		}

		task ("Edit user password") {
			Navigator.gotoBack();

			User.editPasswordCP(
				userEmailAddress = "ldapuseremail@liferay.com",
				userScreenName = "ldapusercn");
		}

		task ("Logout, login and assert configurations persisted") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ldapuseremail@liferay.com",
				userLoginFullName = "ldapusergivenname ldapusersn");

			UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

			AssertTextEquals(
				key_userGender = "Female",
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECTED",
				value1 = "Female");

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
				value1 = "QA");

			AssertTextEquals(
				key_userSuffix = "Phd",
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SUFFIX_SELECTED",
				value1 = "Phd");
		}
	}

	@description = "This is a use case for LPS-73381."
	@priority = "4"
	test ViewHiddenSecurityCredential {
		property test.name.skip.portal.instance = "LDAP#ViewHiddenSecurityCredential";

		task ("Add Server and edit security credential") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "System Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "LDAP",
				configurationName = "Servers",
				configurationScope = "Virtual Instance Scope");

			Button.clickAdd();

			SystemSettings.editSecurityCredential(securityCredential = "123456");
		}
	}

	@description = "This is a use case for LPS-73381."
	@priority = "3"
	test ViewLDAPInstanceSettingsDoNotAffectSystemSettings {
		property test.name.skip.portal.instance = "LDAP#ViewInstanceSettingsEnableLDAPAuthNotAffectSystemSetting";

		task ("Enable LDAP Authentication") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "System Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "LDAP",
				configurationName = "Authentication",
				configurationScope = "Virtual Instance Scope");

			FormFields.viewCheckboxNotChecked(fieldName = "Enabled");

			PortalSettings.configureLDAPSetting(enableSettingList = "enabled");
		}

		task ("Assert LDAP Authentication enabled checkbox is not checked") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "System Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "LDAP",
				configurationName = "Authentication",
				configurationScope = "Virtual Instance Scope");

			FormFields.viewCheckboxNotChecked(fieldName = "Enabled");
		}
	}

}