@component-name = "portal-performance-and-fault-tolerance-ce"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property app.server.bundles.size = "1";
	property cluster.enabled = "true";
	property remote.elasticsearch.enabled = "true";
	property test.run.environment = "CE";
	property testray.main.component.name = "Clustering";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();

			BlogsEntry.tearDownCP();
		}
	}

	@priority = "5"
	test AddAndDeleteBlogEntriesOnSeparateNodes {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "ClusteringCE#AddAndDeleteBlogEntriesOnSeparateNodes";

		Clustering.viewClusterStatusInConsole();

		Page.assertNodePortPG(nodePort = "8080");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page1");

		Navigator.gotoPage(pageName = "Test Page1");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "Test Page1");

		Blogs.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "9080");

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page1",
			url = "http://localhost:9080"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		Navigator.openNodePort(nodePort = "9080");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page2");

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page2",
			url = "http://localhost:9080"
		);

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page2",
			url = "http://localhost:9080"
		);

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page2",
			url = "http://localhost:9080"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page2",
			url = "http://localhost:9080"
		);

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title",
			nodePort = "9080"
		);

		Navigator.openSpecificURL(url = "http://localhost:9080");

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			panel = "Site Administration",
			portlet = "Recycle Bin"
		);

		RecycleBin.emptyCP();

		User.logoutPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoPage(pageName = "Test Page2");

		BlogsEntry.viewNoPG(entryTitle = "Blogs Entry2 Title");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title"
		);

		SearchPortlets.searchEmbedded(searchTerm = "Entry2");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "Entry2");
	}

	@priority = "5"
	test ShutdownAndStartupNodes {
		property test.name.skip.portal.instance = "ClusteringCE#ShutdownAndStartupNodes";

		Clustering.viewClusterStatusInConsole();

		Page.assertNodePortPG(nodePort = "8080");

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "9080");

		Portlet.shutdownSpecificServer(nodePort = "8080");

		Page.assertNodePortPG(nodePort = "9080");

		Portlet.startSpecificServer(
			deleteLiferayHome = "true",
			keepCachedAppServerData = "true",
			nodePort = "8080"
		);

		Page.assertNodePortPG(nodePort = "9080");

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "8080");

		Portlet.shutdownSpecificServer(nodePort = "9080");

		Portlet.startSpecificServer(
			deleteLiferayHome = "true",
			keepCachedAppServerData = "true",
			nodePort = "9080"
		);

		Page.assertNodePortPG(nodePort = "8080");

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "9080");
	}

	@priority = "4"
	test ValidateDocumentOnSeparateNodes {
		property test.name.skip.portal.instance = "ClusteringCE#ValidateDocumentOnSeparateNodes";

		Clustering.viewClusterStatusInConsole();

		Page.assertNodePortPG(nodePort = "8080");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Documents and Media Page");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		DMDocument.viewAllPG(dmDocumentTitle = "DM Document Title");

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "9080");

		Navigator.gotoSpecificURLPage(
			pageName = "Documents and Media Page",
			url = "http://localhost:9080"
		);

		DMDocument.viewAllPG(dmDocumentTitle = "DM Document Title");

		User.logoutPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");
	}
}