@component-name = "portal-user-management-and-portal-configuration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Users and Organizations";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			User.tearDownCP();

			Role.tearDownCP();

			Site.tearDownCP();

			Suborganization.tearDownCP();

			Organization.tearDownCP();
		}
	}

	@priority = "3"
	test AddOrganizationName50Characters {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(
			orgName = "Organization Staging Organization Web Content Display",
			orgType = "Organization"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.searchCP(
			orgName = "Organization Staging Organization Web Content Display",
			searchTerm = "Organization Staging Organization Web Content Display"
		);

		Organization.viewCP(
			orgName = "Organization Staging Organization Web Content Display",
			orgType = "Organization"
		);
	}

	@priority = "4"
	test AddUserSpecialCharacters {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "&lt;userfn&gt;",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.viewCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "&lt;userfn&gt;",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleTitle = "Administrator", userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		UserBar.gotoProfile();

		AssertTextEquals(locator1 = "Home#USER_NAME_HEADER", value1 = "<userfn> userln");
	}

	@priority = "5"
	test AssignImportedUserGroupToSuborganizationSites {
		property liferay.training.dependency.jars = "02-content-management/exercise-src/01-engaging-users-with-content/com.liferay.training.contentloader.jar";
		property portal.release = "false";
		property portal.upstream = "false";
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Mock LDAP Page");

		Navigator.gotoPage(pageName = "Mock LDAP Page");

		Portlet.addPG(pageName = "Mock LDAP Page", portletName = "Mock LDAP");

		Navigator.gotoPage(pageName = "Mock LDAP Page");

		MockLDAP.selectJsonFile(fileName = "space-groups.json", tabName = "User Groups");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		Pagination.changePagination(itemsPerPage = "20");

		Pagination.viewResults(results = "Showing 1 to 11 of 11 entries.");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		LAR.importPortlet(
			larFileName = "organizations-7.0.lar",
			uploadFrom = "dependencies"
		);

		for (var suborgName : list "Accounting,Business Administration,College of Agricultural Science,College of Business,College of Engineering") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			UsersAndOrganizationsNavigator.gotoOrganizations();

			Organization.addSiteCP(orgName = "${suborgName}", orgType = "Organization");

			Navigator.gotoBack();

			Organization.manageMembershipOptionsInSites(
				allowManualMembershipManagement = "true",
				orgName = "${suborgName}"
			);
		}

		ProductMenu.gotoSite(site = "College of Agricultural Science");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserGroupAsMemberCP(userGroupName = "Agricultural Science");

		ProductMenu.gotoSite(site = "College of Business");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		for (var userGroupName : list "Business: Accounting,Business: Business Administration") {
			Site.assignUserGroupAsMemberCP(userGroupName = "${userGroupName}");
		}

		for (var siteName : list "Accounting,Business Administration") {
			ProductMenu.gotoSite(site = "${siteName}");

			ProductMenu.gotoPortlet(
				category = "Members",
				panel = "Site Administration",
				portlet = "Site Memberships"
			);

			Site.assignUserGroupAsMemberCP(userGroupName = "Business: ${siteName}");
		}
	}

	@priority = "4"
	test CannotViewSiteSettingsInUserPersonalSite {
		ProductMenu.gotoPersonalSite();

		ProductMenuHelper.expandPanel(panel = "Site Administration");

		ProductMenuHelper.expandCategory(category = "Configuration");

		AssertElementNotPresent(locator1 = "ProductMenu#PRODUCT_MENU_PANEL_MENU_ITEM");
	}

	@priority = "4"
	test ImpersonatingAdministratorandOwner {
		property test.name.skip.portal.instance = "UsersandorganizationsUsecase#ImpersonatingAdministratorandOwner";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONRole.addRegularRole(roleTitle = "Impersonating Role Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "Impersonating Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_users_admin_web_portlet_UsersAdminPortlet",
			roleTitle = "Impersonating Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_users_admin_web_portlet_UsersAdminPortlet",
			roleTitle = "Impersonating Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.portal.kernel.model.User",
			roleTitle = "Impersonating Role Name"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "IMPERSONATE",
			resourceName = "com.liferay.portal.kernel.model.User",
			roleTitle = "Impersonating Role Name"
		);

		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		JSONUser.addUser(
			userEmailAddress = "userea3@liferay.com",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		JSONRole.assignRoleToUser(
			roleTitle = "Impersonating Role Name",
			userEmailAddress = "userea1@liferay.com"
		);

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea3@liferay.com"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea3@liferay.com",
			userScreenName = "usersn3"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(
			notAdmin = "true",
			siteName = "${siteName}",
			userScreenName = "usersn2"
		);

		Close.closeWindow(locator1 = "title=Welcome - ${siteName}");

		SelectWindow(
			locator1 = "title=Users and Organizations - Control Panel - ${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.attemptImpersonateCP(
			notAdmin = "true",
			siteName = "${siteName}",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.attemptImpersonateCP(
			notAdmin = "true",
			siteName = "${siteName}",
			userScreenName = "test"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea1@liferay.com"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "usersn2");

		Close.closeWindow(locator1 = "title=Welcome - ${siteName}");

		SelectWindow(
			locator1 = "title=Users and Organizations - Control Panel - ${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "usersn3");

		Close.closeWindow(locator1 = "title=Welcome - ${siteName}");

		SelectWindow(
			locator1 = "title=Users and Organizations - Control Panel - ${siteName}"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "test");

		Close.closeWindow(locator1 = "title=Welcome - ${siteName}");

		SelectWindow(
			locator1 = "title=Users and Organizations - Control Panel - ${siteName}"
		);
	}

	@priority = "5"
	test MultipleUsersandOrganizations {
		property test.name.skip.portal.instance = "UsersandorganizationsUsecase#MultipleUsersandOrganizations";
		property testray.component.names = "Training";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search"
		);

		SearchAdministration.executeSearchActions(
			actionsDescription = "Reindex all search indexes."
		);

		var count = "1";

		while (!("${count}" == "6")) {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.addCP(
				userEmailAddress = "userea${count}@liferay.com",
				userFirstName = "userfn${count}",
				userLastName = "userln${count}",
				userScreenName = "usersn${count}"
			);

			var count = MathUtil.sum("${count}", "1");
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name 1", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCategorizationCP(
			orgName = "Organization Name 1",
			tagName = "alpha"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name 2", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "Organization Name 2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCategorizationCP(
			orgName = "Organization Name 2",
			tagName = "bravo"
		);

		var count = "1";

		while (!("${count}" == "5")) {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			Organization.addCP(
				orgName = "Suborganization Name ${count}",
				orgType = "Organization"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			UsersAndOrganizationsNavigator.gotoOrganizations();

			Organization.searchCP(
				orgName = "Suborganization Name ${count}",
				searchTerm = "Suborganization Name ${count}"
			);

			Organization.selectParentOrganizationCP(
				orgName = "Suborganization Name ${count}",
				parentOrgName = "Organization Name 2"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			UsersAndOrganizationsNavigator.gotoOrganizations();

			Organization.viewParentOrganizationCP(
				orgName = "Suborganization Name ${count}",
				parentOrgExist = "true",
				parentOrgName = "Organization Name 2",
				subOrgName = "Suborganization Name ${count}"
			);

			var count = MathUtil.sum("${count}", "1");
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.searchCP(
			orgName = "Organization Name 1",
			searchTerm = "Organization Name 1"
		);

		Organization.viewCP(orgName = "Organization Name 1", orgType = "Organization");

		Navigator.gotoBack();

		Organization.searchCP(
			orgName = "Organization Name 2",
			searchTerm = "Organization Name 2"
		);

		Organization.viewCP(orgName = "Organization Name 2", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		for (var userScreenName : list "usersn1,usersn2,usersn3,usersn4,usersn5") {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
				value1 = "${userScreenName}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 1",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userName = "userfn1 userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 1",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userName = "userfn3 userln3",
			userScreenName = "usersn3"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 1",
			userFirstName = "userfn5",
			userLastName = "userln5",
			userName = "userfn5 userln5",
			userScreenName = "usersn5"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		var key_orgName = "Organization Name 1";

		Click(locator1 = "UsersAndOrganizations#ORGANIZATION_TABLE_NAME");

		for (var userName : list "userfn1 userln1,userfn3 userln3,userfn5 userln5") {
			var key_userScreenName = "${userName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}"
			);
		}

		for (var userName : list "userfn2 userln2,userfn4 userln4") {
			var key_userScreenName = "${userName}";

			AssertElementNotPresent(locator1 = "UsersAndOrganizations#USER_TABLE_NAME");
		}

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		var key_siteName = "Organization Name 1";

		AssertElementNotPresent(locator1 = "Sites#SITE_TABLE_NAME");

		var key_siteName = "Organization Name 2";

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "Organization Name 2"
		);

		ProductMenu.viewNoSite(site = "Organization Name 1");

		ProductMenu.viewNoSite(site = "Organization Name 2");

		UserBar.gotoDashboard();

		Site.viewNoMySitesViaMySitesPG(siteName = "Organization Name 1");

		Site.viewNoMySitesViaMySitesPG(siteName = "Organization Name 2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name 2",
			userFirstName = "Test",
			userLastName = "Test",
			userName = "Test Test",
			userScreenName = "test"
		);

		UserBar.gotoDashboard();

		Site.viewNoMySitesViaMySitesPG(siteName = "Organization Name 1");

		Site.viewMySitesViaMySitesPG(
			memberCount = "1",
			siteName = "Organization Name 2"
		);

		Site.gotoSiteViaMySitesPG(siteName = "Organization Name 2");

		SelectWindow(locator1 = "Home - Organization Name 2 - ${siteName}");

		Page.viewSpecificPG(pageNameList = "Home,Wiki");

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#SPECIFIC_TITLE",
			value1 = "Message Boards",
			key_portletTitleName = "Message Boards"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.basicSearchCP(
			userBasicSearch = "Basic",
			userName = "userfn1 userln1",
			userScreenName = "usersn1"
		);

		User.basicSearchCP(
			userBasicSearch = "Basic",
			userName = "userfn2 userln2",
			userScreenName = "usersn2"
		);

		User.basicSearchCP(
			userBasicSearch = "Basic",
			userName = "userfn3 userln3",
			userScreenName = "usersn3"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.searchCP(orgName = "Organization Name 1", searchTerm = "alpha");

		Organization.searchCP(orgName = "Organization Name 2", searchTerm = "bravo");

		Organization.searchCP(orgName = "Organization Name 1", searchTerm = "1");

		Organization.searchCP(orgName = "Organization Name 2", searchTerm = "2");

		Organization.searchCP(
			orgName = "Suborganization Name 1",
			searchTerm = "Suborganization"
		);

		Organization.searchCP(
			orgName = "Suborganization Name 2",
			searchTerm = "Suborganization"
		);
	}

	@priority = "5"
	test OrganizationAdministratorActivate {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "CONTROL_PANEL_GENERAL_PERMISSIONS_GO_TO_CONTROL_PANEL_CHECKBOX",
			permissionDefinitionValue = "View Control Panel Menu",
			permissionNavigationKey = "CONTROL_PANEL_GENERAL_PERMISSIONS",
			permissionNavigationValue = "General Permissions",
			roleTitle = "Authenticated",
			roleUser = "User"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userName = "userfn1 userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.assignOrgRoleCP(
			orgName = "Organization Name",
			roleTitle = "Organization Administrator",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userName = "userfn2 userln2",
			userScreenName = "usersn2"
		);

		User.logoutPG();

		User.loginUserPG(userEmailAddress = "userea1@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.deactivateCP(deactivateType = "Actions", userFirstName = "userfn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.activateCP(userName = "userfn2 userln2", userScreenName = "usersn2");

		User.logoutUserPG();

		User.loginPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@priority = "3"
	test OrganizationDropDownItems {
		for (var siteName : list "Site Name A,Site Name B,Site Name C,Site Name D,Site Name E,Site Name F,Site Name G,Site Name H") {
			ProductMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites"
			);

			Site.addCommunityCP(siteName = "${siteName}");
		}

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		for (var siteName : list "Site Name A,Site Name B,Site Name C,Site Name D,Site Name E,Site Name F,Site Name G,Site Name H") {
			var key_siteName = "${siteName}";

			AssertTextEquals.assertPartialText(
				locator1 = "Sites#SITE_TABLE_NAME",
				value1 = "${siteName}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Site Name M", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Site Name M",
			userFirstName = "Test",
			userLastName = "Test",
			userName = "Test Test",
			userScreenName = "test"
		);

		AssertTextPresent(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_MENU_ITEM",
			value1 = "Site Name H"
		);
	}

	@priority = "3"
	test OrganizationSiteDefaultUserAssociations {
		property test.name.skip.portal.instance = "UsersandorganizationsUsecase#OrganizationSiteDefaultUserAssociations";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addCP(siteName = "Site Name Alpha", siteType = "Blank");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(
			orgName = "Organization Site Bravo",
			orgType = "Organization"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "Organization Site Bravo"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsSitesCP(
			siteName = "Site Name Alpha"
		);

		PortalSettings.editConfigurationUsersDefaultUserAssociationsOrganizationSitesCP(
			orgName = "Organization Site Bravo"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationSitesCP(siteName = "Site Name Alpha");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.gotoEditCP(userScreenName = "usersn");

		User.viewUserInfomationSitesCP(siteName = "Organization Site Bravo");
	}

	@priority = "3"
	test OrganizationUserManagement {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		Organization.addAddressCP(
			orgAddressCity = "Diamond Bar",
			orgAddressCountry = "United States",
			orgAddressPostal = "91765",
			orgAddressRegion = "California",
			orgAddressStreet = "1400 Montefino Ave",
			orgAddressType = "Billing"
		);

		Organization.addPhoneNumbersCP(orgPhoneNumber = "1-877-543-3729");

		Organization.addAdditionalEmailAddressesCP(
			orgAdditionalEmailAddress = "testuser@liferay.com"
		);

		Organization.addWebsitesCP(orgWebsite = "http://www.liferay.com");

		Organization.addServicesCP(
			orgServicesClosed = "18:00",
			orgServicesOpen = "08:00"
		);

		Organization.addCommentCP(
			orgComment = "This is a test organization.",
			orgName = "Organization Name"
		);

		Organization.addReminderQueriesCP(
			orgLocalizedLanguage = "Japanese (Japan)",
			orgName = "Organization Name",
			orgReminderQueriesDefaultLanguage = "This is just a test",
			orgReminderQuery = "Nihongo"
		);
	}

	@priority = "4"
	test ValidateRegExPasswordPolicyCP {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "test1@liferay.com",
			userFirstName = "test1",
			userLastName = "test1",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.enableSyntaxChecking(
			allowDictionaryWords = "false",
			passwordPolicyName = "Default Password Policy"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.editSyntaxChecking(
			minimumAlphaNumeric = "0",
			minimumLength = "0",
			minimumLowerCase = "0",
			minimumNumbers = "0",
			minimumSymbols = "0",
			minimumUpperCase = "0",
			passwordPolicyName = "Default Password Policy",
			regularExpression = "(?=.{4})(?:[a-zA-Z]*)"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			newPassword = "NO1else",
			regex = "(?=.{4})(?:[a-zA-Z]*)",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			newPassword = "tryingHARD",
			resetPassword = "tryingHARDER",
			syntaxCheckingEnabled = "true",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.editSyntaxChecking(
			passwordPolicyName = "Default Password Policy",
			regularExpression = "(?=.{6})(?:[a-zA-Z0-9]*)"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			newPassword = "abcABC",
			resetPassword = "abcdABCD",
			syntaxCheckingEnabled = "true",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			newPassword = "123ABC",
			resetPassword = "1234ABCD",
			syntaxCheckingEnabled = "true",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			newPassword = "1-2-3ABC",
			regex = "(?=.{6})(?:[a-zA-Z0-9]*)",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Password Policies"
		);

		PasswordPolicies.editSyntaxChecking(
			minimumNumbers = "2",
			passwordPolicyName = "Default Password Policy"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			minimumNumbers = "2",
			newPassword = "abcABC",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordInvalidCP(
			newPassword = "12AB",
			regex = "(?=.{6})(?:[a-zA-Z0-9]*)",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			newPassword = "12ABcd",
			resetPassword = "123ABcd",
			syntaxCheckingEnabled = "true",
			userEmailAddress = "test1@liferay.com",
			userScreenName = "test1"
		);
	}

	@priority = "4"
	test ViewContentInCustomOrganizationTypeSite {
		property test.name.skip.portal.instance = "UsersandorganizationsUsecase#ViewContentInCustomOrganizationTypeSite";
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Organization");

		Role.add(roleTitle = "Canada Orgrole");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Organization");

		Role.add(roleTitle = "United States Orgrole");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		Navigator.gotoBack();

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		Navigator.gotoBack();

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "North America", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Users",
			configurationName = "Organization Type",
			configurationScope = "System Scope"
		);

		AssertClick(locator1 = "Button#ADD", value1 = "Add");

		for (var settingName : list "Name,Children Types") {
			SystemSettings.editTextAreaSetting(
				settingName = "${settingName}",
				settingValue = "Location"
			);
		}

		for (var fieldName : list "countryEnabled,rootable") {
			FormFields.enableCheckbox(fieldName = "${fieldName}");
		}

		SystemSettings.saveConfiguration();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(
			orgCountry = "United States",
			orgName = "United States",
			orgParent = "North America",
			orgType = "Location"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(
			orgCountry = "Canada",
			orgName = "Canada",
			orgParent = "North America",
			orgType = "Location"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(
			organizationSite = "Community Site",
			orgName = "United States"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(organizationSite = "Community Site", orgName = "Canada");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Canada",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userName = "userfn1 userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "United States",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userName = "userfn2 userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignOrgRoleCP(roleTitle = "Canada Orgrole", userScreenName = "usersn1");

		Navigator.gotoBack();

		User.assignOrgRoleCP(
			roleTitle = "United States Orgrole",
			userScreenName = "usersn2"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/canada");

		MessageboardsPortlet.gotoInlinePermissionsPG();

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Site Member"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/canada");

		MessageboardsPortlet.gotoInlinePermissionsPG();

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = "Canada Orgrole"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/canada");

		MessageboardsThread.addPG(
			threadBody = "Canada Message Body",
			threadSubject = "Canada Message Subject"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/united-states");

		MessageboardsPortlet.gotoInlinePermissionsPG();

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest,Site Member"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/united-states");

		MessageboardsPortlet.gotoInlinePermissionsPG();

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = "United States Orgrole"
		);

		Navigator.openSpecificURL(url = "${portalURL}/web/united-states");

		MessageboardsThread.addPG(
			threadBody = "United States Message Body",
			threadSubject = "United States Message Subject"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea1@liferay.com");

		Navigator.openSpecificURL(url = "${portalURL}/web/united-states");

		MessageboardsThread.viewDoNotHaveRequiredPermissionsPG(
			threadSubject = "United States Message Subject"
		);

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea2@liferay.com");

		Navigator.openSpecificURL(url = "${portalURL}/web/canada");

		MessageboardsThread.viewDoNotHaveRequiredPermissionsPG(
			threadSubject = "Canada Message Subject"
		);
	}
}