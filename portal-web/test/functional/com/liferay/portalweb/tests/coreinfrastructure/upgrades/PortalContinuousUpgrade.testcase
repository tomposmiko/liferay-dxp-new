@component-name = "portal-database-upgrade-framework"
definition {

	property app.server.types = "tomcat";
	property ci.retries.disabled = "true";
	property database.types = "db2,mariadb,mysql,oracle,postgresql,sqlserver";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.upgrades = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Database Upgrade Framework";

	@priority = 4
	test AutoUpgradeFromLatest7413Update {
		property database.bare.enabled = "true";
		property skip.start.app.server = "true";
		property test.assert.warning.exceptions = "true";
		property test.name.skip.portal.instance = "PortalContinuousUpgrade#AutoUpgradeFromLatest7413Update";

		var releaseBundleVersion = PropsUtil.get("test.released.release.bundle.version");
		var releaseBundleZipURL = PropsUtil.get("test.released.test.portal.bundle.zip.url");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-released-bundle-test-environment -Dtest.released.release.bundle.version=${releaseBundleVersion} -Dtest.released.test.portal.bundle.zip.url=${releaseBundleZipURL}");

		Portlet.startServer(keepOsGiState = "true");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "wait-for-license-activation");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:8080",
			userEmailAddress = "test@liferay.com");

		WebContentNavigator.openWebContentAdmin(
			baseURL = "http://localhost:8080",
			siteURLKey = "guest");

		WebContentNavigator.gotoAddCP();

		PortletEntry.inputTitle(title = "WC WebContent Title");

		CKEditor.addContentInWebContent(
			content = "WC WebContent Content",
			fieldLabel = "Content");

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Portlet.shutdownServer();

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-original-bundle-test-environment");

		Portlet.startServer(deleteLiferayHome = "false");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:8080",
			userEmailAddress = "test@liferay.com");

		WebContentNavigator.openWebContentAdmin(
			baseURL = "http://localhost:8080",
			siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");
	}

	@priority = 4
	test AutoUpgradeFromLatest7413UpdateWithDBPartitionEnabled {
		property database.bare.enabled = "true";
		property database.partition.enabled = "true";
		property database.types = "mysql";
		property skip.start.app.server = "true";
		property test.assert.warning.exceptions = "true";
		property test.name.skip.portal.instance = "PortalContinuousUpgrade#AutoUpgradeFromLatest7413UpdateWithDBPartitionEnabled";

		var releaseBundleVersion = PropsUtil.get("test.released.release.bundle.version");
		var releaseBundleZipURL = PropsUtil.get("test.released.test.portal.bundle.zip.url");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-released-bundle-test-environment -Dtest.released.release.bundle.version=${releaseBundleVersion} -Dtest.released.test.portal.bundle.zip.url=${releaseBundleZipURL}");

		Portlet.startServer(keepOsGiState = "true");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "wait-for-license-activation");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:8080",
			userEmailAddress = "test@liferay.com");

		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.able.com",
			virtualHost = "www.able.com",
			webId = "www.able.com");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		Portlet.shutdownServer();

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-original-bundle-test-environment");

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		SQL.assertDatabaseCount(
			databaseFilter = "lpartition%",
			databaseSubstring = "lpartition",
			expectedCount = 1);
	}

	@priority = 4
	test AutoUpgradeFromLatest7413UpdateWithDBPartitionEnabledAndHeadlessAPI {
		property database.bare.enabled = "true";
		property database.partition.enabled = "true";
		property database.types = "mysql";
		property skip.start.app.server = "true";
		property test.assert.warning.exceptions = "true";
		property test.name.skip.portal.instance = "PortalContinuousUpgrade#AutoUpgradeFromLatest7413UpdateWithDBPartitionEnabledAndHeadlessAPI";

		var releaseBundleVersion = PropsUtil.get("test.released.release.bundle.version");
		var releaseBundleZipURL = PropsUtil.get("test.released.test.portal.bundle.zip.url");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-released-bundle-test-environment -Dtest.released.release.bundle.version=${releaseBundleVersion} -Dtest.released.test.portal.bundle.zip.url=${releaseBundleZipURL}");

		Portlet.startServer(keepOsGiState = "true");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "wait-for-license-activation");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@liferay.com",
			virtualHostsURL = "http://localhost:8080");

		HeadlessPortalInstanceAPI.addPortalInstance(
			domain = "www.able.com",
			portalInstanceId = "www.able.com",
			virtualHost = "www.able.com");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@www.able.com",
			virtualHostsURL = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		Portlet.shutdownServer();

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "prepare-upgrade-original-bundle-test-environment");

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@www.able.com",
			virtualHostsURL = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		SQL.assertDatabaseCount(
			databaseFilter = "lpartition%",
			databaseSubstring = "lpartition",
			expectedCount = 1);
	}

}