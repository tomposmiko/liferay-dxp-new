@component-name = "extra-apps-content-targeting"
definition {
	property custom.properties = "layout.parallel.render.enable=false";
	property extraapps.plugins.includes = "content-targeting";
	property ignore.errors = "IX_DC6100CC";
	property portal.release = "false";
	property portal.upstream = "false";
	property test.run.environment = "EE";
	property testray.component.names = "Content Targeting";
	property testray.main.component.name = "Content Targeting";

	setUp {
		TestCase.setUpPortalInstance();

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test CampaignAddMultipleWithPrioritiesViaCampaignDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Gender",
			userSegmentName = "User Segment Name Gender"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Signed In",
			userSegmentName = "User Segment Name Signed In"
		);

		ContentTargetingUserSegment.addUserAttributesUserSignedInRuleCP();

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Low Priority",
			webContentTitle = "Low Priority Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Low Priority Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Higher Priority",
			webContentTitle = "Higher Priority Web Content Title"
		);

		PortletEntry.publishAndWait();

		WebContent.viewTitle(webContentTitle = "Higher Priority Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Low Priority Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name Gender"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(
			campaignName = "Low Priority Campaign Name"
		);

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description High Priority",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Higher Priority Campaign Name",
			campaignPriorityField = "2",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name Signed In"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(
			campaignName = "Higher Priority Campaign Name"
		);

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Low Priority Campaign Name",
			contentTitle = "Low Priority Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Higher Priority Campaign Name",
			contentTitle = "Higher Priority Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "2"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		CampaignDisplayPortlet.viewPG(
			entryContentText = "Web Content Content Higher Priority",
			viewCampaignSelected = "Higher Priority Campaign Name"
		);

		CampaignDisplayPortlet.viewPG(
			previewCampaignList = "Higher Priority Campaign Name,Low Priority Campaign Name,default"
		);
	}

	@priority = "5"
	test CampaignAddViaCampaignContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		CampaignDisplayPortlet.viewPG(
			entryContentText = "Web Content Content",
			previewCampaignList = "Campaign Name,default",
			viewCampaignSelected = "Campaign Name"
		);
	}

	@priority = "4"
	test CampaignDeleteMultiple {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description 2",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name 2",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description 3",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name 3",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.deleteAllCP();
	}

	@priority = "4"
	test CampaignViewContentViewsReports {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionContentCP(
			contentMetricName = "Content Metric Name",
			contentTitle = "DM Document Title",
			linkId = "Content id",
			menulistContent = "Basic Document"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoEditReport(
			campaignName = "Campaign Name",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.viewTrackingActionsCP(
			campaignName = "Campaign Name",
			contentMetricName = "Content Metric Name",
			contentTitle = "DM Document Title",
			viewTrackingActionsList = "Content"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.updateReport(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			contentViewsDescription = "true",
			notEnoughInfoContentView = "true",
			trackingActionsDescription = "true",
			viewReportType = "Content Views"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			contentType = "Basic Document",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.updateReport(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			viewReportType = "Content Views"
		);

		ContentTargetingCampaign.viewContentReportCP(
			reportsContentTableList = "DM Document Title,Document,View,4",
			reportTitle = "DM Document Title"
		);
	}

	/* LRQA-24692
	<command name="CampaignViewInSimulatorPG" priority="5">
		<property name="content.targeting.release" value="true" />

		<execute macro="ProductMenu#gotoSite">
			<var name="site" value="Site Name" />
		</execute>

		<execute macro="ProductMenu#gotoPortlet">
			<var name="category" value="Configuration" />
			<var name="panel" value="Site Administration" />
			<var name="portlet" value="Audience Targeting" />
		</execute>

		<execute macro="ContentTargetingUserSegment#addCP">
			<var name="userSegmentDescription" value="User Segment Description Male" />
			<var name="userSegmentName" value="User Segment Name Male" />
		</execute>

		<execute macro="ContentTargetingUserSegment#addUserAttributesGenderRuleCP">
			<var name="genderRadio" value="Male" />
		</execute>

		<execute macro="PortletEntry#save" />

		<execute macro="ProductMenu#gotoSite">
			<var name="site" value="Site Name" />
		</execute>

		<execute macro="ProductMenu#gotoPortlet">
			<var name="category" value="Configuration" />
			<var name="panel" value="Site Administration" />
			<var name="portlet" value="Audience Targeting" />
		</execute>

		<execute macro="ContentTargetingUserSegment#addCP">
			<var name="userSegmentDescription" value="User Segment Description Female" />
			<var name="userSegmentName" value="User Segment Name Female" />
		</execute>

		<execute macro="ContentTargetingUserSegment#addUserAttributesGenderRuleCP">
			<var name="genderRadio" value="Female" />
		</execute>

		<execute macro="PortletEntry#save" />

		<execute macro="ProductMenu#gotoSite">
			<var name="site" value="Site Name" />
		</execute>

		<execute macro="ProductMenu#gotoPortlet">
			<var name="category" value="Configuration" />
			<var name="panel" value="Site Administration" />
			<var name="portlet" value="Audience Targeting" />
		</execute>

		<execute macro="ContentTargetingCampaign#addCP">
			<var name="campaignDescription" value="Campaign Description Male" />
			<var name="campaignEndDate" value="1/1/2099" />
			<var name="campaignEndTime" value="12:00 PM" />
			<var name="campaignName" value="Campaign Name Male" />
			<var name="campaignPriorityField" value="3" />
			<var name="campaignStartDate" value="1/1/2015" />
			<var name="campaignStartTime" value="12:00 AM" />
			<var name="userSegmentSelect" value="User Segment Name Male" />
		</execute>

		<execute macro="ContentTargetingCampaign#saveCP" />

		<execute macro="ProductMenu#gotoSite">
			<var name="site" value="Site Name" />
		</execute>

		<execute macro="ProductMenu#gotoPortlet">
			<var name="category" value="Configuration" />
			<var name="panel" value="Site Administration" />
			<var name="portlet" value="Audience Targeting" />
		</execute>

		<execute macro="ContentTargetingCampaign#addCP">
			<var name="campaignDescription" value="Campaign Description Female" />
			<var name="campaignEndDate" value="1/1/2099" />
			<var name="campaignEndTime" value="12:00 PM" />
			<var name="campaignName" value="Campaign Name Female" />
			<var name="campaignPriorityField" value="3" />
			<var name="campaignStartDate" value="1/1/2015" />
			<var name="campaignStartTime" value="12:00 AM" />
			<var name="userSegmentSelect" value="User Segment Name Female" />
		</execute>

		<execute macro="ContentTargetingCampaign#saveCP" />

		<execute macro="Navigator#openSiteURL">
			<var name="siteName" value="Site Name" />
		</execute>

		<execute macro="MobileDevice#previewPG">
			<var name="deviceType" value="desktop" />
		</execute>

		<execute macro="ContentTargetingSimulator#viewCampaignsViaSimulatorPG">
			<var name="viewCampaignMatched" value="Campaign Name Male" />
			<var name="viewCampaignOther" value="Campaign Name Female" />
		</execute>
	</command>
	*/

	@priority = "4"
	test CampaignViewOtherwiseDisplayContentViaCampaignDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Otherwise",
			webContentTitle = "Web Content Title Otherwise"
		);

		PortletEntry.publishAndWait();

		WebContent.viewTitle(webContentTitle = "Web Content Title Otherwise");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.configureOtherwiseRule(
			contentTitle = "Web Content Title Otherwise",
			contentType = "Basic Web Content"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		CampaignDisplayPortlet.viewPG(
			entryContentText = "Web Content Content Otherwise",
			previewCampaignList = "Campaign Name,default",
			viewCampaignSelected = "Default"
		);
	}

	@priority = "4"
	test CampaignViewOtherwiseDontDisplayViaCampaignDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		CampaignDisplayPortlet.viewPG(
			previewCampaignList = "Campaign Name,default",
			viewCampaignSelected = "Default",
			viewDontDisplay = "true"
		);
	}

	@priority = "3"
	test CampaignViewStatusCP {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description Started",
			campaignEndDate = "01/01/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name Started",
			campaignPriorityField = "3",
			campaignStartDate = "01/01/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name Started");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description Finished",
			campaignEndDate = "01/02/2015",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name Finished",
			campaignPriorityField = "3",
			campaignStartDate = "01/01/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name Finished");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewCampaignCP(
			campaignDescription = "Campaign Description Started",
			campaignName = "Campaign Name Started",
			campaignPriority = "3",
			campaignStatus = "Started"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewCampaignCP(
			campaignDescription = "Campaign Description Finished",
			campaignName = "Campaign Name Finished",
			campaignPriority = "3",
			campaignStatus = "Finished"
		);
	}

	@priority = "4"
	test CampaignViewTrackingActionReports {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionContentCP(
			contentMetricName = "Content Metric Name",
			contentTitle = "DM Document Title",
			linkId = "Content id",
			menulistContent = "Basic Document"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoEditReport(
			campaignName = "Campaign Name",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.viewTrackingActionsCP(
			campaignName = "Campaign Name",
			contentMetricName = "Content Metric Name",
			contentTitle = "DM Document Title",
			viewTrackingActionsList = "Content"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.updateReport(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			notEnoughInfoTrackingAction = "true",
			viewReportType = "Content Report Name"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Campaign Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			contentType = "Basic Document",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.updateReport(
			campaignName = "Campaign Name",
			contentTitle = "DM Document Title",
			viewReportType = "Content Report Name"
		);

		ContentTargetingCampaign.viewMetricReport(
			metricName = "Content Metric Name",
			metricReportsTableList = "Content Metric Name,View,2"
		);
	}

	@priority = "3"
	test ClusteringWithContentTargeting {
		property app.server.bundles.size = "1";
		property cluster.enabled = "true";
		property content.targeting.release = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		Navigator.gotoPage(pageName = "Test Page Name");

		Page.assertNodePortPG(nodePort = "8080");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Male Users"
		);

		PortletEntry.save();

		User.logoutPG(password = "test", userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com"
		);

		Page.assertNodePortPG(nodePort = "9080");

		Navigator.openSpecificURL(url = "http://localhost:9080");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Male Users",
			vocabularyName = "User Segment",
			webContentContent = "Web Content targeted to a User Segment",
			webContentTitle = "Targeted Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Targeted Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Male Users",
			vocabularyName = "User Segment"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page Name",
			url = "http://localhost:9080"
		);

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Targeted Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "Male Users"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSpecificURLPage(
			pageName = "Test Page Name",
			url = "http://localhost:9080"
		);

		UserSegmentContentDisplayPortlet.viewEntryPG(
			belongsTo = "true",
			viewUserSegmentSelected = "Male Users"
		);
	}

	@priority = "4"
	test CTValidationExportImport {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		PortletEntry.publish();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "WC Title"
		);

		PortletEntry.save();

		LAR.gotoExport(siteScopeName = "Site Name");

		LexiconEntry.gotoAdd();

		LAR.configureExportOptions(
			contentName = "Audience Targeting",
			subContent = "User Segments",
			uncheckSubSubContent = "Referenced Content"
		);

		LAR.configureExportOptions(uncheckContentNameList = "Web Content");

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var valueName = selenium.getText("//span/a/span");

		echo("value name ${valueName}");

		var larFileName = RegexUtil.replace("${valueName}", "([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();

		SelectFrame(value1 = "relative=top");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Import Site");

		LAR.importSiteCP(
			importCampaignValidationError = "true",
			larFileName = "${larFileName}",
			siteName = "Import Site"
		);

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.viewContentVisitedRuleEmpty(
			userSegmentName = "User Segment Name"
		);
	}

	@priority = "4"
	test CTValidationStaging {
		property content.targeting.release = "true";

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		PortletEntry.publish();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoStagingSite();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "WC Title"
		);

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(
			contentDateRange = "All",
			contentName = "Audience Targeting",
			subContent = "User Segments",
			uncheckSubSubContent = "Referenced Content"
		);

		Staging.configurePublishToLive(uncheckContentNameList = "Web Content");

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.viewContentVisitedRuleEmpty(
			userSegmentName = "User Segment Name"
		);
	}

	@priority = "4"
	test ExportImportDeletions {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM"
		);

		ContentTargetingCampaign.saveCP();

		LAR.gotoExport(siteScopeName = "Site Name");

		LexiconEntry.gotoAdd();

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LexiconEntry.changeExportDisplayStyle(displayStyle = "table");

		var valueName = selenium.getText("//*[@data-qa-id='row']//td[contains(@class,'download')]//span[last()]");

		echo("value name ${valueName}");

		var larFileName = RegexUtil.replace("${valueName}", "([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();

		SelectFrame(value1 = "relative=top");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Import Site");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Import Site");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.deleteAllCP();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.deleteAllCP();

		LAR.gotoExport(siteScopeName = "Site Name");

		LexiconEntry.gotoAdd();

		LAR.configureExportOptions(
			checkContentNameList = "Audience Targeting",
			contentDeletion = "true"
		);

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LexiconEntry.changeExportDisplayStyle(displayStyle = "table");

		var valueName = selenium.getText("//*[@data-qa-id='row']//td[contains(@class,'download')]//span[last()]");

		echo("value name ${valueName}");

		var larFileName = RegexUtil.replace("${valueName}", "([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		LexiconEntry.changeExportDisplayStyle(displayStyle = "list");

		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();

		SelectFrame(value1 = "relative=top");

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Import"
		);

		LAR.importSiteCP(
			checkContentNameList = "Audience Targeting",
			contentDeletion = "true",
			larFileName = "${larFileName}",
			siteName = "Import Site"
		);

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.viewNotPresentCP(
			userSegmentName = "User Segment Name"
		);

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewNotPresentCP(campaignName = "Campaign Name");
	}

	@priority = "5"
	test ExportImportSmoke {
		property content.targeting.release = "true";

		LAR.setupContentTargeting();

		Navigator.openURL();

		LAR.gotoExport(siteScopeName = "Site Name");

		LexiconEntry.gotoAdd();

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var valueName = selenium.getText("//*[@data-qa-id='row']//td[contains(@class,'download')]//span[last()]");

		echo("value name ${valueName}");

		var larFileName = RegexUtil.replace("${valueName}", "([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();

		SelectFrame(value1 = "relative=top");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Import Site");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Import Site");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Import Site");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content",
			previewUserSegmentList = "User Segment Name,default",
			viewUserSegmentSelected = "User Segment Name"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Import Site");

		CampaignDisplayPortlet.viewPG(
			entryContentText = "Web Content Content",
			previewCampaignList = "Campaign Name,default",
			viewCampaignSelected = "Campaign Name"
		);
	}

	@priority = "4"
	test ExportImportViewOnlyContentCTWithReferencedWCImported {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC Content Unreferenced",
			webContentTitle = "WC Title Unreferenced"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC Title Unreferenced");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionContentCP(
			contentMetricName = "Content Metric Name",
			contentTitle = "Web Content Title",
			menulistContent = "Basic Web Content"
		);

		PortletEntry.save();

		LAR.gotoExport(siteScopeName = "Site Name");

		LexiconEntry.gotoAdd();

		LAR.configureExportOptions(checkContentNameList = "Audience Targeting");

		LAR.configureExportOptions(uncheckContentNameList = "Web Content");

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var valueName = selenium.getText("//*[@data-qa-id='row']//td[contains(@class,'download')]//span[last()]");

		echo("value name ${valueName}");

		var larFileName = RegexUtil.replace("${valueName}", "([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();

		SelectFrame(value1 = "relative=top");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Import Site");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Import Site");

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		ProductMenu.gotoSite(site = "Import Site");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewNotPresentCP(webContentTitle = "WC Title Unreferenced");
	}

	@priority = "4"
	test StagingContentTargeting {
		property content.targeting.release = "true";

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "Male Users Description",
			userSegmentName = "Male Users"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Male Users",
			vocabularyName = "User Segment",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "Male Users"
		);

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionPageCP(
			pageAlias = "Page Alias",
			pageFriendlyURL = "/test-page-name"
		);

		ContentTargetingCampaign.saveCP();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Campaign Content Display");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.enableUserSegementFilter();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "User Segment Content List");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.gotoPortletOptions(
			portletName = "Campaign Content Display",
			portletOption = "Configuration"
		);

		CampaignDisplayPortlet.configureCampaignRule(
			campaignName = "Campaign Name",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1"
		);

		CampaignDisplayPortlet.savePG();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.gotoPortletOptions(
			portletName = "User Segment Content Display",
			portletOption = "Configuration"
		);

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "Male Users"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.configureAssetTypePG(
			assetSubtype = "Any",
			selectedAsset = "Web Content Article"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		CampaignDisplayPortlet.viewPG(
			entryContentText = "Web Content Content",
			previewCampaignList = "Campaign Name,default",
			viewCampaignSelected = "Campaign Name"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content",
			previewUserSegmentList = "Male Users,default",
			viewUserSegmentSelected = "Male Users"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		ContentTargeting.viewEntryOnStagingLiveMode(
			entryContentText = "Web Content Content",
			portletName = "User Segment Content Display",
			previewContentList = "Male Users,default",
			viewSelectedContent = "Male Users"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ContentTargeting.viewEntryOnStagingLiveMode(
			entryContentText = "Web Content Content",
			portletName = "Campaign Content Display",
			previewContentList = "Campaign Name,default",
			viewSelectedContent = "Campaign Name"
		);
	}

	@priority = "4"
	test StagingCTDeletions {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		LAR.setupContentTargeting(stagingSetup = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.deleteAllCP();

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.deleteAllCP();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		CampaignDisplayPortlet.viewContentNoLongerExistsAfterDeletion();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewNoContentPG();
	}

	@priority = "4"
	test StagingCTDisabled {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(
			siteName = "Site Name",
			uncheckContent = "Audience Targeting"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "User Segment Name",
			vocabularyName = "User Segment",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "User Segment Name",
			vocabularyName = "User Segment"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.enableUserSegementFilter();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.editGenderRule(
			genderRadioPath = "FEMALE",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);
	}

	@priority = "4"
	test StagingCTEnabled {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "User Segment Name",
			vocabularyName = "User Segment",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "User Segment Name",
			vocabularyName = "User Segment"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.enableUserSegementFilter();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.editGenderRule(
			genderRadioPath = "FEMALE",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Test Page Name",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);
	}

	@priority = "4"
	test UserSegmentAddCategorizationToContent {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Female Users"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Female Users",
			vocabularyName = "User Segment",
			webContentContent = "Web Content targeted to a User Segment",
			webContentTitle = "Targeted Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Targeted Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Female Users",
			vocabularyName = "User Segment"
		);
	}

	@priority = "4"
	test UserSegmentAddFromGlobalSiteViaCampaign {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		ContentTargetingCampaign.saveCP();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewCampaignCP(
			campaignDescription = "Campaign Description",
			campaignName = "Campaign Name",
			campaignPriority = "3",
			campaignStatus = "Started",
			userSegmentSelect = "User Segment Name"
		);
	}

	@priority = "4"
	test UserSegmentAddFromParentSiteViaCampaign {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Page Name");

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "2",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		ContentTargetingCampaign.saveCP();

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewCampaignCP(
			campaignDescription = "Campaign Description",
			campaignName = "Campaign Name",
			campaignPriority = "2",
			campaignStatus = "Started",
			userSegmentSelect = "User Segment Name"
		);
	}

	@priority = "4"
	test UserSegmentAddGlobalCategorizationToSiteContent {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Female Users"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Female Users",
			userSegmentDetailTitle = "User Segment (Global)",
			vocabularyName = "User Segment",
			webContentContent = "Web Content targeted to a User Segment",
			webContentTitle = "Targeted Web Content Title"
		);
	}

	@priority = "4"
	test UserSegmentAddMultipleViaUserContentDisplayPortletPG {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		for (var ruleName : list "Admin,Page Visited,Male,Woman") {
			ProductMenu.gotoSite(site = "Site Name");

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC Content ${ruleName}",
				webContentTitle = "WC Title ${ruleName}"
			);

			PortletEntry.publishAndWait();

			WebContent.viewTitle(webContentTitle = "WC Title ${ruleName}");
		}

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Site Role Admin User Segment"
		);

		ContentTargetingUserSegment.addUserAttributesSiteRoleRuleCP(
			siteRole = "Site Administrator",
			siteRoleSite = "Site Name"
		);

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Male User Segment"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Page Visited User Segment"
		);

		ContentTargetingUserSegment.addBehaviorPageVisitedRuleCP(
			friendlyURL = "/site-page-name"
		);

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addMultipleCP(
			usersEmailsList = "male@liferay.com,woman@liferay.com,wcmuser@liferay.com"
		);

		for (var userScreenName : list "male,woman,wcmuser") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "${userScreenName}@liferay.com",
				userScreenName = "${userScreenName}"
			);

			ProductMenu.gotoSite(site = "Site Name");

			ProductMenu.gotoPortlet(
				category = "Members",
				panel = "Site Administration",
				portlet = "Site Memberships"
			);

			Site.assignUserAsMemberCP(
				userFirstName = "${userScreenName}",
				userLastName = "${userScreenName}",
				userScreenName = "${userScreenName}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserGenderCP(userGender = "Female", userName = "woman woman");

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "WC Title Page Visited",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "Page Visited User Segment,Male User Segment"
		);

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "WC Title Admin",
			contentType = "Basic Web Content",
			rowNumber = "2",
			toAny = "true",
			userSegmentName = "Site Role Admin User Segment"
		);

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "WC Title Male",
			contentType = "Basic Web Content",
			rowNumber = "3",
			toAny = "true",
			userSegmentName = "Male User Segment"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "WC Title Woman",
			otherwiseContentType = "Basic Web Content"
		);

		UserSegmentContentDisplayPortlet.savePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "male@liferay.com",
			userLoginFullName = "male"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "WC Content Male"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "wcmuser@liferay.com",
			userLoginFullName = "WCM User"
		);

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "WC Content Page Visited"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "woman@liferay.com",
			userLoginFullName = "woman"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "WC Content Woman"
		);
	}

	@priority = "4"
	test UserSegmentAddParentSiteCategorizationToChildSiteContent {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child SiteName");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Female Users"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Female Users",
			userSegmentDetailTitle = "User Segment (Site Name)",
			vocabularyName = "User Segment",
			webContentContent = "Web Content targeted to a User Segment",
			webContentTitle = "Targeted Web Content Title"
		);
	}

	@priority = "4"
	test UserSegmentAddWithAllViaUserSegmentContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content All",
			webContentTitle = "Web Content Title All"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title All");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Otherwise",
			webContentTitle = "Web Content Title Otherwise"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title Otherwise");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Age",
			userSegmentName = "User Segment Name Age"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "10",
			youngerThanAge = "99"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Reg Role",
			userSegmentName = "User Segment Name Reg Role"
		);

		ContentTargetingUserSegment.addUserAttributesRegularRoleRuleCP(
			regularRole = "Guest"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Web Content Title All",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name Age,User Segment Name Reg Role"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "Web Content Title Otherwise",
			otherwiseContentType = "Basic Web Content"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content Otherwise",
			previewUserSegmentList = "User Segment Name Age and User Segment Name Reg Role,default",
			viewUserSegmentSelected = "Default"
		);
	}

	@priority = "4"
	test UserSegmentAddWithAnyViaUserSegmentContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Any",
			webContentTitle = "Web Content Title Any"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title Any");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Otherwise",
			webContentTitle = "Web Content Title Otherwise"
		);

		PortletEntry.publishAndWait();

		WebContent.viewTitle(webContentTitle = "Web Content Title Otherwise");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Age",
			userSegmentName = "User Segment Name Age"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "10",
			youngerThanAge = "99"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description Reg Role",
			userSegmentName = "User Segment Name Reg Role"
		);

		ContentTargetingUserSegment.addUserAttributesRegularRoleRuleCP(
			regularRole = "Guest"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Web Content Title Any",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAny = "true",
			userSegmentName = "User Segment Name Age,User Segment Name Reg Role"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "Web Content Title Otherwise",
			otherwiseContentType = "Basic Web Content"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content Any",
			previewUserSegmentList = "User Segment Name Age or User Segment Name Reg Role,default"
		);
	}

	@priority = "4"
	test UserSegmentAddWithBelongsViaUserSegmentContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description 1",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "DM Document Title 1"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description 2",
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "DM Document Title 2"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "DM Document Title 1",
			contentType = "Basic Document",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "DM Document Title 2",
			otherwiseContentType = "Basic Document"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			previewUserSegmentList = "User Segment Name,default"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "female@liferay.com",
			userFirstName = "female",
			userGender = "Female",
			userLastName = "female",
			userScreenName = "female"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "female@liferay.com",
			userScreenName = "female"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "female",
			userLastName = "female",
			userScreenName = "female"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "female@liferay.com",
			userLoginFullName = "female female"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		SikuliClick(locator1 = "UserSegmentContentDisplay#PREVIEW_DOCUMENT_1_PNG");
	}

	@priority = "4"
	test UserSegmentAddWithDoesNotBelongViaUserSegmentContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Female",
			webContentTitle = "Web Content Title Female"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title Female");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Male",
			webContentTitle = "Web Content Title Male"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title Male");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			contentTitle = "Web Content Title Female",
			contentType = "Basic Web Content",
			doesNotBelong = "true",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "Web Content Title Male",
			otherwiseContentType = "Basic Web Content"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content Male",
			previewUserSegmentList = "not User Segment Name,default"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "female@liferay.com",
			userFirstName = "female",
			userGender = "Female",
			userLastName = "female",
			userScreenName = "female"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			password = "password",
			userEmailAddress = "female@liferay.com",
			userScreenName = "female"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "female",
			userLastName = "female",
			userScreenName = "female"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "female@liferay.com",
			userLoginFullName = "female female"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "Web Content Content Female"
		);
	}

	@priority = "4"
	test UserSegmentAddWithOtherwiseDontDisplayAnythingViaUserSegmentContentDisplayPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Web Content Title",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			previewUserSegmentList = "User Segment Name,default",
			viewDontDisplay = "true",
			viewUserSegmentSelected = "Default"
		);
	}

	@priority = "4"
	test UserSegmentDeleteMultiple {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description 2",
			userSegmentName = "User Segment Name 2"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description 3",
			userSegmentName = "User Segment Name 3"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.deleteAllCP();
	}

	@priority = "4"
	test UserSegmentDisableAnonymousUserAnalytics {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureAudienceTargetingAnalytics(
			disableAnalyticsList = "Anonymous Users"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		LexiconEntry.gotoAdd();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		PortletEntry.publish();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC Title");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "WC Title"
		);

		ContentTargetingUserSegment.addBehaviorPageVisitedRuleCP(
			friendlyURL = "/test-page-name"
		);

		ContentTargetingUserSegment.addBehaviorScorePointsRuleCP(scorePoints = "3");

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEditCP(entryTitle = "Blogs Entry Title");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addCategory(
			categoryName = "User Segment Name",
			vocabularyName = "User Segment"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "User Segment Content Display Page");

		Navigator.gotoSitePage(
			pageName = "User Segment Content Display Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(
			portletName = "User Segment Content Display",
			portletOption = "Configuration"
		);

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "WC Title",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name"
		);

		UserSegmentContentDisplayPortlet.savePG();

		User.logoutPG();

		var count = "0";

		while (!("${count}" == "3")) {
			Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

			AssetPublisherPortlet.viewAssetDetailsPG(
				assetContent = "Blogs Entry Content",
				assetTitle = "Blogs Entry Title"
			);

			var count = MathUtil.sum("${count}", "1");
		}

		Navigator.gotoSitePage(
			pageName = "User Segment Content Display Page",
			siteName = "Site Name"
		);

		AssertTextNotPresent(value1 = "WC Content");

		User.loginPG(userEmailAddress = "userea@liferay.com");

		var count = "0";

		while (!("${count}" == "3")) {
			Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

			AssetPublisherPortlet.viewAssetDetailsPG(
				assetContent = "Blogs Entry Content",
				assetTitle = "Blogs Entry Title"
			);

			var count = MathUtil.sum("${count}", "1");
		}

		Navigator.gotoSitePage(
			pageName = "User Segment Content Display Page",
			siteName = "Site Name"
		);

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "WC Content"
		);
	}

	@priority = "4"
	test UserSegmentSimulateRulesViaSimulatorPG {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Male",
			webContentTitle = "Web Content Title Male"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title Male");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content Female",
			webContentTitle = "Web Content Title Female"
		);

		PortletEntry.publishAndWait();

		WebContent.viewTitle(webContentTitle = "Web Content Title Female");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Male User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Female User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(portletOption = "Configuration");

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "Web Content Title Male",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "Male User Segment Name"
		);

		UserSegmentContentDisplayPortlet.configureOtherwiseContentDisplayRule(
			otherwiseContentTitle = "Web Content Title Female",
			otherwiseContentType = "Basic Web Content"
		);

		UserSegmentContentDisplayPortlet.savePG();

		Navigator.openSiteURL(siteName = "Site Name");

		UserSegmentContentDisplayPortlet.viewEntryPG(
			entryContentText = "Web Content Content Male",
			viewUserSegmentSelected = "Male User Segment Name"
		);

		MobileDevice.previewPG(deviceType = "desktop");

		ContentTargetingSimulator.configureUserSegmentSimulator(
			configureUserSegmentMatched = "Female User Segment Name",
			configureUserSegmentNotMatched = "Male User Segment Name"
		);

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "Web Content Content Female"
		);
	}

	@priority = "4"
	test UserSegmentViewAnonymousUserDefaultBehavior {
		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentContent = "WC Content", webContentTitle = "WC Title");

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		LexiconEntry.gotoAdd();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		PortletEntry.publish();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC Title");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "WC Title"
		);

		ContentTargetingUserSegment.addBehaviorPageVisitedRuleCP(
			friendlyURL = "/test-page-name"
		);

		ContentTargetingUserSegment.addBehaviorScorePointsRuleCP(scorePoints = "3");

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEditCP(entryTitle = "Blogs Entry Title");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addCategory(
			categoryName = "User Segment Name",
			vocabularyName = "User Segment"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "User Segment Content Display Page");

		Navigator.gotoSitePage(
			pageName = "User Segment Content Display Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "User Segment Content Display");

		Portlet.gotoPortletOptions(
			portletName = "User Segment Content Display",
			portletOption = "Configuration"
		);

		UserSegmentContentDisplayPortlet.configureDisplayContent(
			belongs = "true",
			contentTitle = "WC Title",
			contentType = "Basic Web Content",
			rowNumber = "1",
			toAll = "true",
			userSegmentName = "User Segment Name"
		);

		UserSegmentContentDisplayPortlet.savePG();

		User.logoutPG();

		var count = "0";

		while (!("${count}" == "3")) {
			Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

			AssetPublisherPortlet.viewAssetDetailsPG(
				assetContent = "Blogs Entry Content",
				assetTitle = "Blogs Entry Title"
			);

			var count = MathUtil.sum("${count}", "1");
		}

		Navigator.gotoSitePage(
			pageName = "User Segment Content Display Page",
			siteName = "Site Name"
		);

		UserSegmentContentDisplayPortlet.viewContentOnly(
			entryContentText = "WC Content"
		);
	}

	@description = "This is a use case for WCM-1347."
	@priority = "4"
	test UserSegmentViewAnyContentWithCategorizationViaAPPortletAndExportImportLAR {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesUserSignedInRuleCP();

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "User Segment Name",
			vocabularyName = "User Segment",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "User Segment Name",
			vocabularyName = "User Segment"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.enableUserSegementFilter();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LAR.exportPortlet(larFileName = "Audience_Targeting.lar");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		var testName = TestCase.getTestName();

		LAR.exportPortlet(
			larFileName = "WebContent_portlet.lar",
			portletName = "Asset Publisher"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		LAR.exportPortlet(larFileName = "Asset_Publisher.portlet.lar");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Import Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LAR.importPortlet(
			larFileName = "Audience_Targeting.lar",
			portletName = "Asset Publisher"
		);

		Navigator.openSiteURL(siteName = "Import Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(larFileName = "WebContent_portlet.lar");

		Navigator.gotoSitePage(
			pageName = "Test Page Name",
			siteName = "Import Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		LAR.importPortlet(larFileName = "Asset_Publisher.portlet.lar");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);
	}

	@priority = "4"
	test UserSegmentViewInSimulatorPG {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Female User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Male User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Age 18 - 25"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "18",
			userSegmentName = "Age 18 - 25",
			youngerThanAge = "25"
		);

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Age 25 - 50"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "25",
			youngerThanAge = "50"
		);

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Age 50 - 100"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "50",
			userSegmentName = "Age 50 - 100",
			youngerThanAge = "100"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Site Member Name"
		);

		ContentTargetingUserSegment.addUserAttributesSiteMemberRuleCP(
			selectSiteMemberSite = "Site Name"
		);

		PortletEntry.save();

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Site Admin Role Name"
		);

		ContentTargetingUserSegment.addUserAttributesSiteRoleRuleCP(
			siteRole = "Site Administrator",
			siteRoleSite = "Site Name"
		);

		PortletEntry.save();

		Navigator.openSiteURL(siteName = "Site Name");

		MobileDevice.previewPG();

		ContentTargetingSimulator.viewUserSegmentsViaSimulator(
			userSegments = "Site Member Name,Male User Segment Name,Age 25 - 50,Site Admin Role Name,Female User Segment Name,Age 50 - 100,Age 18 - 25"
		);
	}

	@priority = "4"
	test UserSegmentViewSpecificContentWithCategorizationViaAPPortlet {
		property content.targeting.release = "true";

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "Male Users"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(genderRadio = "Male");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Male Users",
			vocabularyName = "User Segment",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCategorizationCategoryCP(
			categoryNameList = "Male Users",
			vocabularyName = "User Segment"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.enableUserSegementFilter();

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.configureAssetTypePG(
			assetSubtype = "Any",
			selectedAsset = "Web Content Article"
		);

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content Content",
			assetTitle = "Web Content Title"
		);
	}
}