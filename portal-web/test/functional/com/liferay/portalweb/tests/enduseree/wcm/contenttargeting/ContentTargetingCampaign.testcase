@component-name = "extra-apps-content-targeting"
definition {
	property custom.properties = "layout.parallel.render.enable=false";
	property extraapps.plugins.includes = "content-targeting";
	property ignore.errors = "IX_DC6100CC";
	property portal.release = "false";
	property portal.upstream = "false";
	property test.run.environment = "EE";
	property testray.component.names = "Content Targeting";
	property testray.main.component.name = "Content Targeting";

	setUp {
		TestCase.setUpPortalInstance();

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Site.tearDownCP();
		}
	}

	@priority = "5"
	test DeleteCampaignCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.deleteCampaignCP(campaignName = "Campaign Name");
	}

	@priority = "5"
	test EditCampaignCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "New US Description",
			userSegmentName = "New US Name"
		);

		PortletEntry.save();

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoAddReport(campaignName = "Campaign Name");

		ContentTargetingCampaign.addReportName(
			reportDescription = "Content Report Description",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.addTrackingActionCustomFormCP(
			formAlias = "Form Alias",
			formId = "Form id",
			formTrackingActionSelect = "Submit"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoEditReport(
			campaignName = "Campaign Name",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.viewTrackingActionsCP(
			campaignName = "Campaign Name",
			formAlias = "Form Alias",
			formId = "Form id",
			formTrackingActionSelect = "Submit",
			viewTrackingActionsList = "Custom Form"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.editCampaignCP(
			campaignDescriptionEdit = "Campaign Description Edit",
			campaignEndDateEdit = "1/1/2099",
			campaignEndTimeEdit = "12:00 AM",
			campaignName = "Campaign Name",
			campaignNameEdit = "Campaign Name Edit",
			campaignPriorityFieldEdit = "5",
			campaignStartDateEdit = "1/1/2015",
			campaignStartTimeEdit = "12:00 PM",
			userSegmentSelectEdit = "New US Name"
		);

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		Navigator.gotoNavTab(navTab = "Configuration");

		ContentTargeting.enableAnalytics(
			analyticsList = "YouTube Videos,Link,Link Clicks"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ContentTargeting.enableAnalyticsViaSiteSettings(
			analyticsList = "YouTube Videos,Link,Link Clicks"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoEditReport(
			campaignName = "Campaign Name Edit",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.editCustomReport(
			trackingActionAddList = "youtube,link",
			trackingActionDeleteList = "form"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.gotoEditReport(
			campaignName = "Campaign Name Edit",
			reportName = "Content Report Name"
		);

		ContentTargetingCampaign.viewTrackingActionsCP(
			campaignName = "Campaign Name Edit",
			linkAlias = "Link Alias",
			linkId = "Link id",
			linkTrackingActionSelect = "Click",
			viewTrackingActionsList = "Link,YouTube Videos",
			youtubeAlias = "Youtube Alias",
			youtubeTrackingActionSelect = "Playing",
			youtubeVideoId = "Youtube id"
		);
	}

	@priority = "3"
	test ViewInactiveCampaignCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.addCP(
			campaignDescription = "Campaign Description",
			campaignEndDate = "1/1/2099",
			campaignEndTime = "12:00 PM",
			campaignInactive = "true",
			campaignName = "Campaign Name",
			campaignPriorityField = "3",
			campaignStartDate = "1/1/2015",
			campaignStartTime = "12:00 AM",
			userSegmentSelect = "User Segment Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingCampaign.viewCampaignCP(
			campaignDescription = "Campaign Description",
			campaignName = "Campaign Name",
			campaignPriority = "3",
			campaignStatus = "Inactive"
		);
	}
}