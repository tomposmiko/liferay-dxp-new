@component-name = "portal-document-management-ee"
definition {
	property cmis.repository.type = "documentum6";
	property custom.properties = "session.store.password=true${line.separator}company.security.auth.type=screenName";
	property dummy.socket.proxy.disabled = "true";
	property osgi.app.includes = "documentum";
	property portal.release = "false";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		var documentumVMHostName = PropsUtil.get("cmis.repository.vm.host.name");

		AntCommand(
			locator1 = "build-test-documentum.xml",
			value1 = "clean-documentum-repository -Dssh.host=${documentumVMHostName}"
		);

		User.loginPG(authenticationMethod = "By Screen Name", userScreenName = "test");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Account Settings"
		);

		User.editDetailsViaMyAccount(userScreenNameEdit = "barthur");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "Account Settings"
		);

		User.editPasswordViaMyAccount(currentPassword = "test", newPassword = "barthur");

		User.logoutPG();

		User.loginPG(
			authenticationMethod = "By Screen Name",
			password = "barthur",
			userScreenName = "barthur"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoAddRepositoryCP();

		DMRepository.edit(dmRepositoryName = "Documentum Repository Name");

		DMRepository.addDocumentum(
			dmCabinetName = "Wombat Insurance Co",
			dmRepositoryFieldName = "documentum"
		);

		PortletEntry.save();

		ProductMenuHelper.closeProductMenu();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.viewCP(dmFolderName = "Claim Templates");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ProductMenuHelper.closeProductMenu();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.viewCP(dmFolderName = "Filed Claims");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ProductMenuHelper.closeProductMenu();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMRepository.tearDownCP();

			DMDocument.tearDownCP();

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "My Account",
				panel = "User",
				portlet = "Account Settings"
			);

			User.editDetailsViaMyAccount(userScreenNameEdit = "test");

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "My Account",
				panel = "User",
				portlet = "Account Settings"
			);

			User.editPasswordViaMyAccount(
				currentPassword = "password",
				newPassword = "test"
			);

			User.logoutPG();

			User.loginPG(
				authenticationMethod = "By Screen Name",
				password = "test",
				userScreenName = "test"
			);
		}
	}

	@priority = "5"
	test AddAllDocumentTypes {
		property test.name.skip.portal.instance = "CPDocumentum#AddAllDocumentTypes";

		for (var dmDocumentTitle : list "Document_1.doc,Document_1.docx,Document_1.jpeg,Document_1.jpg,Document_1.mp4,Document_1.pdf,Document_1.png,Document_1.ppt,Document_1.pptx,Document_1.txt,Document_1.xls,Document_1.xlsx") {
			DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

			DMDocument.addCP(
				dmDocumentFile = "${dmDocumentTitle}",
				dmDocumentTitle = "${dmDocumentTitle}"
			);

			DMNavigator.gotoDocumentCP(dmDocumentTitle = "${dmDocumentTitle}");

			DMDocument.viewCP(dmDocumentTitle = "${dmDocumentTitle}");

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Documents and Media"
			);
		}
	}

	@priority = "5"
	test CheckinDocument {
		property test.name.skip.portal.instance = "CPDocumentum#CheckinDocument";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.txt",
			dmDocumentTitle = "Document_3.txt"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_3.txt",
			dmRepositoryName = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_3.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMDocument.checkinCP(dmRepositoryName = "true");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		var key_dmDocumentTitle = "Document_3.txt";

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		DMDocument.viewCheckedinCP(
			dmDocumentVersionNumber = "1.1",
			dmRepositoryName = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_3.txt",
			recycleBinDisabled = "true"
		);
	}

	@description = "This is a use case for LPS-68454"
	@priority = "5"
	test DeleteCheckedoutDocument {
		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.txt",
			dmDocumentTitle = "Document_3.txt"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_3.txt",
			dmRepositoryName = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_3.txt");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_3.txt",
			recycleBinDisabled = "true"
		);

		AssertConsoleTextNotPresent(
			value1 = "Cannot prune sysobject Document_3.txt version tree since one or more of its versions are locked."
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_3.txt");
	}

	@priority = "5"
	test DeleteDocumentInSubfolder {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPDocumentum#DeleteDocumentInSubfolder";
		property testray.component.names = "Training";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.addSubfolderCP(dmSubFolderName = "DM Folder3 Name");

		DMFolder.viewCP(dmFolderName = "DM Folder3 Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "Document_2.doc"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewCP(dmDocumentTitle = "Document_2.doc");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_2.doc",
			recycleBinDisabled = "true"
		);

		DMNavigator.gotoHomeCP();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewDefaultCP();
	}

	@priority = "5"
	test DeleteSubfolder {
		property test.name.skip.portal.instance = "CPDocumentum#DeleteSubfolder";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.addSubfolderCP(dmSubFolderName = "DM Folder Name");

		DMFolder.deleteCP(dmFolderName = "DM Folder Name", recycleBinDisabled = "true");

		DMNavigator.gotoHomeCP();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.cannotViewCP(dmFolderName = "DM Folder Name");
	}

	@priority = "5"
	test EditDocumentFile {
		property test.name.skip.portal.instance = "CPDocumentum#EditDocumentFile";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.doc",
			dmDocumentTitle = "Document_3.doc"
		);

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_2.jpg",
			dmDocumentTitle = "Document_3.doc"
		);

		DMNavigator.gotoHomeCP();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewDocumentMetadataCP(
			metadataData = "image/jpeg",
			metadataLabel = "Content Type"
		);

		DMDocument.cannotViewDocumentMetadataCP(
			metadataData = "ISO-8859-1",
			metadataLabel = "Content Encoding"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_3.doc",
			recycleBinDisabled = "true"
		);
	}

	@priority = "5"
	test EditDocumentTitleFileNameAndFileExtension {
		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.docx",
			dmDocumentTitle = "Document_2.docx"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.docx");

		DMDocument.viewCP(dmDocumentTitle = "Document_2.docx");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.editCP(
			dmDocumentTitle = "Document_2.docx",
			dmDocumentTitleEdit = "Document_2_Edit.jpg"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ProductMenuHelper.closeProductMenu();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2_Edit.jpg");

		DMDocument.viewCP(dmDocumentTitle = "Document_2_Edit.jpg");
	}

	@priority = "5"
	test EditDocumentTitleRemoveFileExtension {
		property test.name.skip.portal.instance = "CPDocumentum#EditDocumentTitleRemoveFileExtension";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.docx",
			dmDocumentTitle = "Document_3.docx"
		);

		DMDocument.editCP(
			dmDocumentTitle = "Document_3.docx",
			dmDocumentTitleEdit = "Document_3"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ProductMenuHelper.closeProductMenu();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3");

		DMDocument.viewCP(dmDocumentTitle = "Document_3");
	}

	@priority = "5"
	test MoveCheckedoutDocumentToFolder {
		property test.name.skip.portal.instance = "CPDocumentum#MoveCheckedoutDocumentToFolder";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMFolder.addSubfolderCP(dmSubFolderName = "Documentum Subfolder Name");

		DMFolder.viewCP(dmFolderName = "Documentum Subfolder Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Document_1.txt"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.txt",
			dmRepositoryName = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.moveToSubFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Documentum Repository Name",
			dmSubFolderName = "Documentum Subfolder Name"
		);

		DMDocument.viewMovedToFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Documentum Subfolder Name"
		);

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMDocument.cancelCheckoutCP(dmRepositoryName = "true");
	}

	@priority = "5"
	test MoveDocumentToHome {
		property test.name.skip.portal.instance = "CPDocumentum#MoveDocumentToHome";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc"
		);

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "Document_1.doc",
			dmFolderName = "Home"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.doc");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.doc");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_1.doc");
	}

	@priority = "5"
	test SearchDocumentViaHome {
		property test.name.skip.portal.instance = "CPDocumentum#SearchDocumentViaHome";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.doc",
			dmDocumentTitle = "Document_3.doc"
		);

		DMNavigator.gotoHomeCP();

		Search.searchCP(searchTerm = "Document_3.doc");

		DMDocument.viewSearchResultsCP(
			dmDocumentTitle = "Document_3.doc",
			dmRepositoryName = "Documentum Repository Name"
		);
	}

	@priority = "5"
	test ViewEditedCheckedoutDocument {
		property test.name.skip.portal.instance = "CPDocumentum#ViewEditedCheckedoutDocument";

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.xls",
			dmDocumentTitle = "Document_1.xls"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.xls",
			dmRepositoryName = "true"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.editCP(
			checkedOut = "true",
			dmDocumentTitle = "Document_1.xls",
			dmDocumentTitleEdit = "Document_1_Edit.jpg"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1_Edit.jpg");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1_Edit.jpg");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMDocument.cancelCheckoutCP(dmRepositoryName = "true");
	}

	@priority = "5"
	test ViewRepository {
		property test.name.skip.portal.instance = "CPDocumentum#ViewRepository";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ProductMenuHelper.closeProductMenu();

		DMRepository.gotoCP(dmRepositoryName = "Documentum Repository Name");

		DMRepository.viewBreadcrumb(dmRepositoryName = "Documentum Repository Name");
	}
}