@component-name = "extra-apps-content-targeting"
definition {
	property custom.properties = "layout.parallel.render.enable=false";
	property extraapps.plugins.includes = "content-targeting";
	property ignore.errors = "IX_DC6100CC";
	property portal.release = "false";
	property portal.upstream = "false";
	property test.run.environment = "EE";
	property testray.component.names = "Content Targeting";
	property testray.main.component.name = "Content Targeting";

	setUp {
		TestCase.setUpPortalInstance();

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Test Page Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		ContentTargetingUserSegment.addCP(
			userSegmentDescription = "User Segment Description",
			userSegmentName = "User Segment Name"
		);

		PortletEntry.save();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Site.tearDownCP();
		}
	}

	@priority = "5"
	test AddUserSegmentBehaviorContentVisitedCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
			contentVisitedContent = "Basic Web Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			viewUserSegmentRuleList = "Content Visited",
			webContentTitle = "Web Content Title"
		);
	}

	@priority = "5"
	test AddUserSegmentBehaviorPageVisitedCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorPageVisitedRuleCP(
			friendlyURL = "/test-page-name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			friendlyURL = "/test-page-name",
			viewUserSegmentRuleList = "Page Visited"
		);
	}

	@priority = "5"
	test AddUserSegmentBehaviorPreviouslyVisitedSiteContainsCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorPreviouslyVisitedSiteRuleCP(
			condition = "Contains",
			conditionValue = "able.com"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			condition = "Contains",
			conditionValue = "able.com",
			viewUserSegmentRuleList = "Previously Visited Site"
		);
	}

	@priority = "5"
	test AddUserSegmentBehaviorPreviouslyVisitedSiteStartsWithCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorPreviouslyVisitedSiteRuleCP(
			condition = "Starts with",
			conditionValue = "http://www.able.com"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			condition = "Starts with",
			conditionValue = "http://www.able.com",
			viewUserSegmentRuleList = "Previously Visited Site"
		);
	}

	@priority = "5"
	test AddUserSegmentBehaviorScorePointsCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addBehaviorScorePointsRuleCP(scorePoints = "100");

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			scorePoints = "100",
			viewUserSegmentRuleList = "Score Points"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleBehaviorContentVisitedCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content 1",
			webContentTitle = "Web Content Title 1"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title 1");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content 2",
			webContentTitle = "Web Content Title 2"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title 2");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var webContentTitle : list "Web Content Title 1,Web Content Title 2") {
			ContentTargetingUserSegment.addBehaviorContentVisitedRuleCP(
				contentVisitedContent = "Basic Web Content",
				webContentTitle = "${webContentTitle}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			viewUserSegmentRuleList = "Content Visited",
			webContentTitle = "Web Content Title 1"
		);

		ContentTargetingUserSegment.viewRulesCP(
			ruleInstance = "2",
			viewUserSegmentRuleList = "Content Visited",
			webContentTitle = "Web Content Title 2"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleBehaviorPageVisitedCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var friendlyURL : list "/test-page-name,/site-page-name") {
			ContentTargetingUserSegment.addBehaviorPageVisitedRuleCP(
				friendlyURL = "${friendlyURL}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			friendlyURL = "/test-page-name",
			viewUserSegmentRuleList = "Page Visited"
		);

		ContentTargetingUserSegment.viewRulesCP(
			friendlyURL = "/site-page-name",
			ruleInstance = "2",
			viewUserSegmentRuleList = "Page Visited"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesCustomFieldCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Custom Fields"
		);

		CustomFields.addCP(
			customFieldName = "Usercustomfield",
			customFieldType = "Text Field - Indexed",
			resourceName = "User"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var customFieldValue : list "User Custom Field Value 1,User Custom Field Value 2") {
			ContentTargetingUserSegment.addUserAttributesCustomFieldCP(
				customFieldKey = "usercustomfield",
				customFieldValue = "${customFieldValue}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			customFieldKey = "usercustomfield",
			customFieldValue = "User Custom Field Value 1",
			viewUserSegmentRuleList = "Custom Field"
		);

		ContentTargetingUserSegment.viewRulesCP(
			customFieldKey = "usercustomfield",
			customFieldValue = "User Custom Field Value 2",
			ruleInstance = "2",
			viewUserSegmentRuleList = "Custom Field"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesOrganizationMemberCP {
		property content.targeting.release = "true";

		for (var orgName : list "Organization Name 1,Organization Name 2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			Organization.addCP(orgName = "${orgName}", orgType = "Organization");
		}

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var organizationName : list "Organization Name 1,Organization Name 2") {
			ContentTargetingUserSegment.addUserAttributesOrganizationMemberRuleCP(
				organizationName = "${organizationName}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name 1",
			viewUserSegmentRuleList = "Organization Member"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name 2",
			ruleInstance = "2",
			viewUserSegmentRuleList = "Organization Member"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesOrganizationRoleCP {
		property content.targeting.release = "true";

		for (var orgName : list "Organization Name 1,Organization Name 2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			Organization.addCP(orgName = "${orgName}", orgType = "Organization");
		}

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var organizationName : list "Organization Name 1,Organization Name 2") {
			ContentTargetingUserSegment.addUserAttributesOrganizationRoleRuleCP(
				organizationName = "${organizationName}",
				organizationRole = "Organization Owner"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name 1",
			organizationRole = "Organization Owner",
			viewUserSegmentRuleList = "Organization Role"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name 2",
			organizationRole = "Organization Owner",
			ruleInstance = "2",
			viewUserSegmentRuleList = "Organization Role"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesRegularRoleCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var regularRole : list "Administrator,Power User") {
			ContentTargetingUserSegment.addUserAttributesRegularRoleRuleCP(
				regularRole = "${regularRole}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			regularRole = "Administrator",
			viewUserSegmentRuleList = "Regular Role"
		);

		ContentTargetingUserSegment.viewRulesCP(
			regularRole = "Power User",
			ruleInstance = "2",
			viewUserSegmentRuleList = "Regular Role"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesSiteMemberCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		for (var selectSiteMemberSite : list "Site Name,${siteName}") {
			ContentTargetingUserSegment.addUserAttributesSiteMemberRuleCP(
				selectSiteMemberSite = "${selectSiteMemberSite}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			selectSiteMemberSite = "Site Name",
			viewUserSegmentRuleList = "Site Member"
		);

		ContentTargetingUserSegment.viewRulesCP(
			ruleInstance = "2",
			selectSiteMemberSite = "${siteName}",
			viewUserSegmentRuleList = "Site Member"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesSiteRoleCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var siteRole : list "Site Administrator,Site Owner") {
			ContentTargetingUserSegment.addUserAttributesSiteRoleRuleCP(
				siteRole = "${siteRole}",
				siteRoleSite = "Site Name"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			siteRole = "Site Administrator",
			siteRoleSite = "Site Name",
			viewUserSegmentRuleList = "Site Role"
		);

		ContentTargetingUserSegment.viewRulesCP(
			ruleInstance = "2",
			siteRole = "Site Owner",
			siteRoleSite = "Site Name",
			viewUserSegmentRuleList = "Site Role"
		);
	}

	@priority = "4"
	test AddUserSegmentMultipleUserAttributesUserGroupMemberCP {
		property content.targeting.release = "true";

		for (var userGroupName : list "User Group Name 1,User Group Name 2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "User Groups"
			);

			UserGroup.addCP(userGroupName = "${userGroupName}");
		}

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		for (var userGroupName : list "User Group Name 1,User Group Name 2") {
			ContentTargetingUserSegment.addUserAttributesUserGroupMemberRuleCP(
				userGroupName = "${userGroupName}"
			);
		}

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			userGroupName = "User Group Name 1",
			viewUserSegmentRuleList = "User Group Member"
		);

		ContentTargetingUserSegment.viewRulesCP(
			ruleInstance = "2",
			userGroupName = "User Group Name 2",
			viewUserSegmentRuleList = "User Group Member"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookAgeCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookAgeRuleCP(
			facebookOlderThanAge = "18",
			facebookYoungerThanAge = "50"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			facebookOlderThanAge = "18",
			facebookYoungerThanAge = "50",
			viewUserSegmentRuleList = "Facebook Age"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookCityCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookCityRuleCP(
			facebookCity = "Diamond Bar"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			facebookCity = "Diamond Bar",
			viewUserSegmentRuleList = "Facebook City"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookEducationCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookEducationRuleCP(
			facebookCollegeHighSchoolName = "UC Irvine",
			facebookEducationLevel = "College"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			facebookCollegeHighSchoolName = "UC Irvine",
			facebookEducationLevel = "College",
			viewUserSegmentRuleList = "Facebook Education"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookFriendsCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookFriendsRuleCP(
			moreLessThan = "More",
			numberOfFriends = "50"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			moreLessThan = "More",
			numberOfFriends = "50",
			viewUserSegmentRuleList = "Facebook Friends"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookGenderCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookGenderRuleCP(
			facebookGenderRadio = "Male"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			facebookGenderRadio = "Male",
			viewUserSegmentRuleList = "Facebook Gender"
		);
	}

	@priority = "5"
	test AddUserSegmentSocialFacebookPageLikeCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSocialFacebookPageLikeRuleCP(
			facebookURL = "liferay"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			facebookURL = "liferay",
			viewUserSegmentRuleList = "Facebook Page Like"
		);
	}

	@priority = "5"
	test AddUserSegmentSystemAttributesBrowserCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSystemAttributesBrowserRuleCP(
			browserName = "Firefox"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			browserName = "Firefox",
			viewUserSegmentRuleList = "Browser"
		);
	}

	@priority = "5"
	test AddUserSegmentSystemAttributesDeviceCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Mobile Device Families"
		);

		MobileDevice.addDeviceFamilyCP(
			classificationName = "Classification Name",
			deviceFamilyName = "Device Family Name"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSystemAttributesDeviceRuleCP(
			deviceFamilyName = "Device Family Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			deviceFamilyName = "Device Family Name",
			viewUserSegmentRuleList = "Device"
		);
	}

	@priority = "5"
	test AddUserSegmentSystemAttributesLocationCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSystemAttributesLocationRuleCP(
			countryName = "Spain",
			regionName = "Madrid"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			countryName = "Spain",
			regionName = "Madrid",
			viewUserSegmentRuleList = "Location"
		);
	}

	@priority = "5"
	test AddUserSegmentSystemAttributesOperatingSystemCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSystemAttributesOperatingSystemRuleCP(
			operatingSystemName = "Mac"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			operatingSystemName = "Mac",
			viewUserSegmentRuleList = "Operating System"
		);
	}

	@priority = "5"
	test AddUserSegmentSystemAttributesTimeCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addSystemAttributesTimeRuleCP(
			endTime = "11:30 PM",
			startTime = "10:30 AM"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			endTime = "11:30 PM",
			startTime = "10:30 AM",
			viewUserSegmentRuleList = "Access Time"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesAgeCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesAgeRuleCP(
			olderThanAge = "21",
			youngerThanAge = "99"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			olderThanAge = "21",
			viewUserSegmentRuleList = "Age",
			youngerThanAge = "99"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesCustomFieldCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Custom Fields"
		);

		CustomFields.addCP(
			customFieldName = "Usercustomfield",
			customFieldType = "Text Field - Indexed",
			resourceName = "User"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesCustomFieldCP(
			customFieldKey = "usercustomfield",
			customFieldValue = "User Custom Field Value"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			customFieldKey = "usercustomfield",
			customFieldValue = "User Custom Field Value",
			viewUserSegmentRuleList = "Custom Field"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesGenderCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesGenderRuleCP(
			genderRadio = "Female"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			genderRadio = "Female",
			viewUserSegmentRuleList = "Gender"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesOrganizationMemberCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesOrganizationMemberRuleCP(
			organizationName = "Organization Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name",
			viewUserSegmentRuleList = "Organization Member"
		);

		Organization.tearDownCP();
	}

	@priority = "5"
	test AddUserSegmentUserAttributesOrganizationRoleCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesOrganizationRoleRuleCP(
			organizationName = "Organization Name",
			organizationRole = "Organization Owner"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			organizationName = "Organization Name",
			organizationRole = "Organization Owner",
			viewUserSegmentRuleList = "Organization Role"
		);

		Organization.tearDownCP();
	}

	@priority = "5"
	test AddUserSegmentUserAttributesRegularRoleCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesRegularRoleRuleCP(
			regularRole = "Guest"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			regularRole = "Guest",
			viewUserSegmentRuleList = "Regular Role"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesSiteMemberCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesSiteMemberRuleCP(
			selectSiteMemberSite = "Site Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			selectSiteMemberSite = "Site Name",
			viewUserSegmentRuleList = "Site Member"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesSiteRoleCP {
		property content.targeting.release = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesSiteRoleRuleCP(
			siteRole = "Site Owner",
			siteRoleSite = "${siteName}"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			siteRole = "Site Owner",
			siteRoleSite = "${siteName}",
			viewUserSegmentRuleList = "Site Role"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesUserGroupMemberCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		UserGroup.addCP(userGroupName = "User Group Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesUserGroupMemberRuleCP(
			userGroupName = "User Group Name"
		);

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			userGroupName = "User Group Name",
			viewUserSegmentRuleList = "User Group Member"
		);
	}

	@priority = "5"
	test AddUserSegmentUserAttributesUserSignedInCP {
		property content.targeting.release = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.addUserAttributesUserSignedInRuleCP();

		PortletEntry.save();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Audience Targeting"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "User Segment Name"
		);

		ContentTargetingUserSegment.viewRulesCP(
			viewUserSegmentRuleList = "User Signed In"
		);
	}
}