@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";
	property test.run.environment = "EE";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Workflow._tearDownBlog();

		WorkflowMetrics.executeWorkflowScript(scriptName = "DeleteUsersAndRoles.groovy");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "No Workflow",
			workflowResourceValue = "Blogs Entry");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Workflow",
				panel = "Control Panel",
				portlet = "Metrics");

			WorkflowMetrics.tearDown();

		}
	}

	@description = "Verify the user can set a SLA to Single Approver workflow (LPS-99765)"
	@priority = "5"
	test AddSLAtoSingleApprover {
		property portal.acceptance = "true";

		var key_testSLADefinitionDays = "1";
		var key_testSLADefinitionHours = "0000";
		var key_testSLADefinitionDescription = "SLA Description";
		var key_testSLADefinitionEnd = "Process Ends: Approved";
		var key_testSLADefinitionName = "SLA Name";
		var key_testSLADefinitionStart = "Process Begins";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "${key_testSLADefinitionDays}",
			slaDefinitionDescription = "${key_testSLADefinitionDescription}",
			slaDefinitionEnd = "${key_testSLADefinitionEnd}",
			slaDefinitionHours = "${key_testSLADefinitionHours}",
			slaDefinitionName = "${key_testSLADefinitionName}",
			slaDefinitionStart = "${key_testSLADefinitionStart}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		WorkflowMetrics.goToCreatedSLAForm(workflowSLAName = "${key_testSLADefinitionName}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_NAME",
			value1 = "${key_testSLADefinitionName}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_DESCRIPTION",
			value1 = "${key_testSLADefinitionDescription}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_STEPS_START",
			value1 = "${key_testSLADefinitionStart}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_STEPS_STOP",
			value1 = "${key_testSLADefinitionEnd}");

		AssertTextEquals(
			locator1 = "WorkflowMetricsSLA#SLA_DEFINITION_DAYS",
			value1 = "${key_testSLADefinitionDays}");
	}

	@description = "Apply filter for Assignee in Performance of all assignees(LRQA-53635)"
	@priority = "5"
	test ApplyFilterForPerformanceOfAllAssignees {
		property test.name.skip.portal.instance = "WorkflowMetrics#ApplyFilterForPerformanceOfAllAssignees";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.createUsersAndAssignInstancesWithGroovy(
			numberOfBlogInstances = "3",
			numberOfUsers = "3");

		WorkflowMetrics.executeWorkflowScript(scriptName = "CompleteTasksAssignedToUsers.groovy");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_assigneesNumber = "3",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "1user user1",
			avgCompletionTime = "1min",
			isNotPresent = "2user user2,3user user3",
			taskCount = "1");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "2Role");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "2user user2",
			avgCompletionTime = "1min",
			isNotPresent = "1user user1,3user user3",
			taskCount = "1");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "3Role");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "3user user3",
			avgCompletionTime = "1min",
			isNotPresent = "1user user1,2user user2",
			taskCount = "1");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role,2Role");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Review");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "1user user1",
			avgCompletionTime = "1min",
			isNotPresent = "3user user3",
			taskCount = "1");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "2user user2",
			avgCompletionTime = "1min",
			isNotPresent = "3user user3",
			taskCount = "1");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Review");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Update");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No results were found.");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.searchForAssigneeName(assigneeName = "something else");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No results were found.");

		WorkflowMetrics.clearAllFilter();
	}

	@description = "Apply filter for workload distribution for all assignees(LRQA-53632)"
	@priority = "5"
	test ApplyFilterForWorkloadDistribution {
		property test.name.skip.portal.instance = "WorkflowMetrics#ApplyFilterForWorkloadDistribution";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "6",
			numberOfUsers = "6");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(
			key_assigneesNumber = "6",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3,4user user4,5user user5,6user user6",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "1");

		Click(
			key_assigneeName = "1user user1",
			locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_NAME_TABLE");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,1user user1");

		WorkflowMetrics.assertAllItemsValues(
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3,4user user4,5user user5,6user user6",
			isPresent = "Blogs Entry Title 1",
			taskName = "Review");

		Navigator.gotoBack();

		Click(
			assigneeName = "1user user1",
			locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_TASKCOUNT_OVERDUE");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,1user user1,Overdue");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "Once there are active processes, metrics will appear here.");

		Navigator.gotoBack();

		Click(
			assigneeName = "1user user1",
			locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_TASKCOUNT_ON_TIME");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,1user user1,On Time");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "Once there are active processes, metrics will appear here.");

		Navigator.gotoBack();

		Click(
			assigneeName = "1user user1",
			locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_TASKCOUNT_TOTAL_PENDING");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,1user user1");

		WorkflowMetrics.assertAllItemsValues(
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3,4user user4,5user user5,6user user6",
			isPresent = "Blogs Entry Title 1",
			taskName = "Review");

		Navigator.gotoBack();

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "2Role");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "2user user2",
			isNotPresent = "1user,user1,3user user3,4user user4,5user user5,6user user6",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "1");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role,3Role,4Role,5Role,6Role");

		AnnouncementsPortlet.configurePaginationCP(itemsPerPage = "5");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Review");

		Click(locator1 = "WorkflowMetrics#METRICS_WORKLOAD_BY_ASSIGNEE_SEARCH_ASSIGNEE_NAME");

		Click(locator1 = "Pagination#NEXT_LINK");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "6user user6",
			isNotPresent = "1user user1,2user user2,3user user3,4user user4,5user user5",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "1");
	}

	@description = "LRQA-53633 Automate LPS-103368: [Dashboard] Apply searches in the workload distribution for all assignees"
	@priority = "5"
	test ApplySearchesForAllAssignees {
		property test.name.skip.portal.instance = "WorkflowMetrics#ApplySearchesForAllAssignees";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(
			key_assigneesNumber = "3",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "2");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "1Role");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "2Role");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "2user user2",
			isNotPresent = "1user user1,3user user3",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "1");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "2Role");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "3Role");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "3user user3",
			isNotPresent = "1user user1,2user user2",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "1");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Review");

		WorkflowMetrics.searchForAssigneeName(assigneeName = "1user");

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "2");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Review");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValueProcessStep(workflowStep = "Update");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No results were found.");

		WorkflowMetrics.searchForAssigneeName(assigneeName = "something else");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No results were found.");

		WorkflowMetrics.clearAllFilter();

		WorkflowMetrics.viewWorkloadByAssignee(
			assigneeName = "1user user1",
			isNotPresent = "somethingelse",
			onTimeTaskCount = "0",
			overdueTaskCount = "0",
			totalPendingTaskCount = "2");
	}

	@description = "Verify if the default filter values are correct and if the chart is displayed (LPS-98001)"
	@priority = "5"
	test DefaultWorkflowMetricsFilterValues {
		property portal.acceptance = "true";

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.assertDefaultChartRangesAndUnits();

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Today",
			isNotPresent = "INST_DAY,INST_WEEK,INST_MONTH,INST_YEAR",
			isPresent = "INST_HOUR");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Yesterday",
			isNotPresent = "INST_DAY,INST_WEEK,INST_MONTH,INST_YEAR",
			isPresent = "INST_HOUR");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Last 7 Days",
			isNotPresent = "INST_HOUR,INST_WEEK,INST_MONTH,INST_YEAR",
			isPresent = "INST_DAY");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Last 30 Days",
			isNotPresent = "INST_HOUR,INST_MONTH,INST_YEAR",
			isPresent = "INST_DAY,INST_WEEK");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Last 90 Days",
			isNotPresent = "INST_HOUR,INST_YEAR",
			isPresent = "INST_DAY,INST_WEEK,INST_MONTH");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Last 180 Days",
			isNotPresent = "INST_DAY,INST_HOUR,INST_YEAR",
			isPresent = "INST_WEEK,INST_MONTH");

		WorkflowMetrics.verifyDefaultUnitsForEachDateRange(
			completionVelocityDateRange = "Last Year",
			isNotPresent = "INST_DAY,INST_HOUR,INST_YEAR",
			isPresent = "INST_WEEK,INST_MONTH");
	}

	@description = "LRQA-53628 Automate LPS-98517 [Dashboard] Filter items list by assignee name"
	@priority = "5"
	test FilterAllItemsListByAssigneeName {
		property test.name.skip.portal.instance = "WorkflowMetrics#FilterAllItemsListByAssigneeName";

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		WorkflowMetrics.executeWorkflowScript(scriptName = "CompleteTasksAssignedToUsers.groovy");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		for (var blogNumber : list "5,6,7,8") {
			JSONBlog.addEntry(
				entryContent = "Blogs Entry ${blogNumber} Content",
				entryTitle = "Blogs Entry Title ${blogNumber}");
		}

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		for (var assignUserNumber : list "1,2,3") {
			var InstanceNameNumber = ${assignUserNumber} + 4;

			Workflow.assignTaskToUser(
				assetTitle = "Blogs Entry Title ${InstanceNameNumber}",
				assetType = "Blogs Entry",
				assigneeName = "${assignUserNumber}user user${assignUserNumber}",
				workflowTask = "Review");
		}

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		WorkflowMetrics.viewItemFilterByOnAllItemsPage(
			allItemsFilterName = "Assignee",
			assigneeName = "1user user1",
			isNotPresent = "2user user2,3user user3",
			isPresent = "Blogs Entry Title 5",
			taskName = "Review");

		WorkflowMetrics.viewItemFilterByOnAllItemsPage(
			allItemsFilterName = "Assignee",
			assigneeName = "2user user2",
			isNotPresent = "1user user1,3user user3",
			isPresent = "Blogs Entry Title 6",
			taskName = "Review");

		WorkflowMetrics.viewItemFilterByOnAllItemsPage(
			allItemsFilterName = "Assignee",
			assigneeName = "3user user3",
			isNotPresent = "1user user1,2user user2",
			isPresent = "Blogs Entry Title 7",
			taskName = "Review");

		WorkflowMetrics.allItemPageFilterCheck(
			allItemsFilterName = "Process Status",
			assigneeName = "Pending");

		WorkflowMetrics.viewItemFilterByOnAllItemsPage(
			allItemsFilterName = "Process Status",
			assigneeName = "N/A",
			filterValueName = "Completed",
			isNotPresent = "1user user1,2user user2,3user user3",
			isPresent = "Blogs Entry Title 1,Blogs Entry Title 2,Blogs Entry Title 3,Blogs Entry Title 4",
			taskName = "Completed");
	}

	@description = "LRQA-53638 Automate LPS-100677: [Performance] Search for a step in all steps performance list and LRQA-53637 Automate LPS-100678: [Performance] Filter all step performance by completion period"
	@priority = "5"
	test SearchAndFilterOnPerformanceByStepPage {
		property test.name.skip.portal.instance = "WorkflowMetrics#SearchAndFilterOnPerformanceByStepPage";

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		WorkflowMetrics.executeWorkflowScript(scriptName = "CompleteTasksAssignedToUsers.groovy");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		Click(
			key_stepsNumber = "2",
			locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_CARD_VIEW_ALL_STEPS");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "update");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "Review",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "Update",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Yesterday");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.selectDateRangeFilter(dateRange = "Last 30 Days");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.searchForStep(stepName = "nothing");

		AssertElementPresent(locator1 = "WorkflowMetricsPerformanceByStep#METRICS_PERFORMANCE_BY_STEP_PAGE_NO_RESULTS_FOUND");

		Click(locator1 = "WorkflowMetrics#FILTER_CLEAR_ALL");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "1min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Review");

		WorkflowMetricsPerformanceByStep.viewPerformanceByStepValues(
			avgCompletionTimeValue = "0min",
			isNotPresent = "",
			slaBreachedValue = "0 (0%)",
			stepName = "Update");
	}

	@description = "Verify that the filters from All Items page are correctly loaded when accessed via Metrics Pending/Completed cards"
	@priority = "5"
	test VerifyAllItemsFilterFromMetrics {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#VerifyAllItemsFilterFromMetrics";

		var key_workflowInstanceName = "Blog Entry Title";
		var key_workflowProcessName = "Single Approver";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "${key_workflowProcessName}",
			workflowResourceValue = "Blogs Entry");

		Workflow.createWorkflowBlogInstance(workflowInstanceName = "${key_workflowInstanceName}");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "${key_workflowProcessName}");

		AssertTextEquals(
			locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_PENDING_ITEMS_VALUE",
			value1 = "1");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "${key_workflowProcessName}");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "ONTIME",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,On Time");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "OVERDUE",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,Overdue");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "UNTRACKED",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,Untracked");

		Workflow.completeWorkflowBlogInstance(workflowInstanceName = "${key_workflowInstanceName}");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "${key_workflowProcessName}");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		AssertTextEquals(
			locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_COMPLETED_ITEMS_VALUE",
			value1 = "1");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "${key_workflowProcessName}");

		AssertElementPresent(locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Completed,Last 30 Days");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "ONTIME",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Completed,Last 30 Days,On Time");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "OVERDUE",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Completed,Last 30 Days,Overdue");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "UNTRACKED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "${key_workflowProcessName}");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Completed,Last 30 Day,Untracked");
	}

	@description = "View that Custom Range is selected with shown input date"
	@priority = "5"
	test VerifyCustomRangeDateInput {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.assertDefaultChartRangesAndUnits();

		WorkflowMetrics.assertChartTotalValue(
			velocityUnitTotal = "inst / day",
			velocityValueTotal = "0.03");

		WorkflowMetrics.selectDateRange(
			completionVelocityDateRange = "Custom Range",
			endDateRange = "11/11/2018",
			startDateRange = "09/22/2018");

		AssertTextEquals(
			locator1 = "WorkflowMetrics#METRICS_COMPLETION_VELOCITY_DATE_RANGE_DROPDOWN",
			value1 = "Sep 22, 2018 - Nov 11, 2018");

		WorkflowMetrics.selectVelocityUnit(velocityUnit = "INST_WEEK");

		WorkflowMetrics.assertChartIsPresent(chartVelocityUnit = "Inst / Week");

		WorkflowMetrics.assertChartTotalValue(
			velocityUnitTotal = "inst / week",
			velocityValueTotal = "0");
	}

	@description = "LRQA-53639 - Automate LPS-100675"
	test VerifyFilterTopStepPerformance {

		var key_testSLADefinitionDays = "0";
		var key_testSLADefinitionHours = "0001";
		var key_testSLADefinitionHoursCheck = "00:01";
		var key_testSLADefinitionDescription = "SLA Description";
		var key_testSLADefinitionEnd = "Process Ends: Approved";
		var key_testSLADefinitionName = "SLA Name";
		var key_testSLADefinitionStart = "Process Begins";

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "${key_testSLADefinitionDays}",
			slaDefinitionDescription = "${key_testSLADefinitionDescription}",
			slaDefinitionEnd = "${key_testSLADefinitionEnd}",
			slaDefinitionHours = "${key_testSLADefinitionHours}",
			slaDefinitionName = "${key_testSLADefinitionName}",
			slaDefinitionStart = "${key_testSLADefinitionStart}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLAtoBecomeOverdue(timesToRun = "12");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.waitForCompletedSLAtoBecomeOverdue(timesToRun = "12");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			rowName = "Review",
			slaBreachedValue = "1 (100%)");

		WorkflowMetrics.selectDateRangePerformanceByStep(
			completionVelocityDateRange = "Custom Range",
			endDateRange = "11/11/2018",
			startDateRange = "09/22/2018");

		WorkflowMetrics.assertChartTotalValuePerformanceByStep(
			rowName = "Review",
			slaBreachedValue = "0 (0%)");
	}

	@description = "LRQA-53654 Automate LPS-88968: [Reports] View the summary of all pending items and what's their SLA status"
	test ViewPendingItems {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewPendingItems";

		var key_testSLADefinitionDays = "0";
		var key_testSLADefinitionHours = "0001";
		var key_testSLADefinitionDescription = "SLA Description";
		var key_testSLADefinitionEnd = "Process Ends: Approved";
		var key_testSLADefinitionName = "SLA Name";
		var key_testSLADefinitionStart = "Enters Task: Review";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "0",
			key_overdue = "0",
			key_pending = "1",
			key_untracked = "1");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "${key_testSLADefinitionDays}",
			slaDefinitionDescription = "${key_testSLADefinitionDescription}",
			slaDefinitionEnd = "${key_testSLADefinitionEnd}",
			slaDefinitionHours = "${key_testSLADefinitionHours}",
			slaDefinitionName = "${key_testSLADefinitionName}",
			slaDefinitionStart = "${key_testSLADefinitionStart}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "1",
			key_overdue = "0",
			key_pending = "1",
			key_untracked = "0");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLAtoBecomeOverdue(timesToRun = "12");

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "0",
			key_overdue = "1",
			key_pending = "1",
			key_untracked = "0");
	}

	@description = "LRQA-53634 - LPS-99441: [Performance] View performance for all assignees"
	@priority = "5"
	test ViewPerformanceByAssigneePage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewPerformanceByAssigneePage";

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		ScrollWebElementIntoView(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_EMPTY_STATE");

		WorkflowMetrics.executeWorkflowScript(scriptName = "CompleteTasksAssignedToUsers.groovy");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		ScrollWebElementIntoView(
			key_assigneesNumber = "3",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "1user user1",
			avgCompletionTime = "1min",
			taskCount = "2");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "2user user2",
			avgCompletionTime = "1min",
			taskCount = "1");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "3user user3",
			avgCompletionTime = "1min",
			taskCount = "1");

		Click(
			key_assigneesNumber = "3",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "1user user1",
			avgCompletionTime = "1min",
			taskCount = "2");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "2user user2",
			avgCompletionTime = "1min",
			taskCount = "1");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "3user user3",
			avgCompletionTime = "1min",
			taskCount = "1");
	}

	@description = "LRQA-53662 Automate LPS-92053 View process item detail page"
	@priority = "5"
	test ViewProcessItemDetailPage {
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewProcessItemDetailPage";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "PENDING",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		var getInstanceId = selenium.getText("WorkflowAllItems#WORKFLOW_INSTANCE_ID");

		WorkflowMetrics.validateInstanceDetails(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry",
			createdBy = "Test Test",
			currentAssignee = "Unassigned",
			currentStep = "Review",
			instanceId = "${getInstanceId}",
			processStatus = "Pending",
			slaMessage = "No SLA records for this item.");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "COMPLETED",
			workflowMetricsTab = "PERFORMANCE",
			workflowProcess = "Single Approver");

		WorkflowMetrics.validateInstanceDetails(processStatus = "Completed");
	}

	@description = "LRQA-53631 Automate LPS-97666: [Performance] View top assignee performance"
	test ViewTopAsigneePerformance {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewTopAsigneePerformance";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Title");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry Unapproved");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Unapproved",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Workflow",
			panel = "Control Panel",
			portlet = "Metrics");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.viewPerformanceByAssignee(
			assignee = "Test Test",
			avgCompletionTime = "1min",
			taskCount = "1");

		WorkflowMetrics.createUsersAndAssignInstancesWithGroovy(
			numberOfBlogInstances = "10",
			numberOfUsers = "10");

		WorkflowMetrics.executeWorkflowScript(scriptName = "CompleteTasksAssignedToUsers.groovy");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		AssertElementPresent(
			key_rowNumber = "10",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_TABLE_POSITION");

		AssertElementNotPresent(
			key_rowNumber = "11",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_TABLE_POSITION");

		AssertElementPresent(
			key_assigneesNumber = "11",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.selectDateRangePerformanceByAssignee(
			completionVelocityDateRange = "Custom Range",
			endDateRange = "11/11/2018",
			startDateRange = "09/22/2018");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_EMPTY_STATE");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_TAB");

		WorkflowMetrics.selectStepFilterPerformaceByAssignee(velocityUnit = "REVIEW");

		AssertElementPresent(
			key_assigneesNumber = "11",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.selectStepFilterPerformaceByAssignee(velocityUnit = "UPDATE");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_NO_RESULTS");
	}

	@description = "LRQA-53641 Automate LPS-97669 [Dashboard] View overloaded assignees"
	@priority = "5"
	test ViewWorkloadByAssigneeCard {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewWorkloadByAssigneeCard";

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "Review");

		WorkflowMetrics.viewWorkloadByAssigneeCard(
			assigneeName = "1user user1",
			tabName = "Total",
			taskCount = "2");

		WorkflowMetrics.viewWorkloadByAssigneeCard(
			assigneeName = "2user user2",
			tabName = "Total",
			taskCount = "1");

		WorkflowMetrics.viewWorkloadByAssigneeCard(
			assigneeName = "3user user3",
			tabName = "Total",
			taskCount = "1");

		WorkflowMetrics.viewUserWorkloadByStepOnAllItems(
			assigneeName = "1user user1",
			callingFrom = "CARD",
			isNotPresent = "2user user2,3user user3",
			isPresent = "Blogs Entry Title 1,Blogs Entry Title 4",
			taskName = "Review");

		WorkflowMetrics.verifyFiltersFromDashboard(isFilterOptionPresent = "Pending,1user user1,Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "Update");

		WorkflowMetrics.assertWorkloadByAssigneeCardEmptyMessage(
			emptyMessage = "There are no assigned items overdue at the moment.",
			tabName = "Overdue");

		WorkflowMetrics.assertWorkloadByAssigneeCardEmptyMessage(
			emptyMessage = "There are no assigned items on time at the moment.",
			tabName = "On Time");

		WorkflowMetrics.assertWorkloadByAssigneeCardEmptyMessage(
			emptyMessage = "There are no items assigned to users at the moment.",
			tabName = "Total");
	}

	@description = "LRQA-53630 Automate LPS-98518: [Dashboard] View workload distribution for all assignees"
	@priority = "5"
	test ViewWorkloadByAssigneePage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "WorkflowMetrics#ViewWorkloadByAssigneePage";

		WorkflowMetrics.createUsersAndAssignInstances(
			numberOfBlogInstances = "4",
			numberOfUsers = "3");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.selectWorkloadByAssigneeCardFilterValue(workflowStep = "All Steps");

		Click(
			key_assigneesNumber = "3",
			locator1 = "WorkflowMetrics#METRICS_PERFORMANCE_BY_ASSIGNEE_CARD_VIEW_ALL_ASSIGNEES_LINK");

		WorkflowMetrics.viewWorkloadByAssigneePage(
			assigneeName = "1user user1",
			taskCount = "2");

		WorkflowMetrics.viewWorkloadByAssigneePage(
			assigneeName = "2user user2",
			taskCount = "1");

		WorkflowMetrics.viewWorkloadByAssigneePage(
			assigneeName = "3user user3",
			taskCount = "1");

		WorkflowMetrics.viewUserWorkloadByStepOnAllItems(
			assigneeName = "1user user1",
			callingFrom = "PAGE",
			isNotPresent = "2user user2,3user user3",
			isPresent = "Blogs Entry Title 1,Blogs Entry Title 4",
			taskName = "Review");

		Navigator.gotoBack();

		WorkflowMetrics.viewUserWorkloadByStepOnAllItems(
			assigneeName = "2user user2",
			callingFrom = "PAGE",
			isNotPresent = "1user user1,3user user3",
			isPresent = "Blogs Entry Title 2",
			taskName = "Review");

		Navigator.gotoBack();

		WorkflowMetrics.viewUserWorkloadByStepOnAllItems(
			assigneeName = "3user user3",
			callingFrom = "PAGE",
			isNotPresent = "1user user1,2user user2",
			isPresent = "Blogs Entry Title 3",
			taskName = "Review");
	}

}