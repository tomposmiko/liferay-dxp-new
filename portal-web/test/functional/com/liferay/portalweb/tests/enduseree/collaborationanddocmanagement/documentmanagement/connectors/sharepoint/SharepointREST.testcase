@component-name = "portal-document-management-ee"
definition {
	property osgi.app.includes = "sharepoint-rest";
	property portal.ssl.enabled = "true";
	property portal.upstream = "false";
	property test.run.environment = "EE";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		var authorizationGrantEndpoint = PropsUtil.get("sharepoint.oauth.authorization.grant.endpoint");
		var authorizationTokenEndpoint = PropsUtil.get("sharepoint.oauth.authorization.token.endpoint");
		var clientId = PropsUtil.get("sharepoint.oauth.client.id");
		var clientSecret = PropsUtil.get("sharepoint.oauth.client.secret");
		var configurationName = PropsUtil.get("sharepoint.oauth.configuration.name");
		var configurationResource = PropsUtil.get("sharepoint.oauth.configuration.resource");
		var configurationScope = PropsUtil.get("sharepoint.oauth.configuration.scope");
		var siteDomain = PropsUtil.get("sharepoint.oauth.site.domain");
		var tenantId = PropsUtil.get("sharepoint.oauth.tenant.id");
		var userName = PropsUtil.get("sharepoint.oauth.user.name");
		var userPassword = PropsUtil.get("sharepoint.oauth.user.password");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Collaboration",
			configurationName = "Sharepoint OAuth2",
			configurationScope = "System Scope"
		);

		Click(locator1 = "Button#ADD");

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${configurationName}",
			key_text = "name"
		);

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${authorizationGrantEndpoint}",
			key_text = "authorizationGrantEndpoint"
		);

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${authorizationTokenEndpoint}",
			key_text = "authorizationTokenEndpoint"
		);

		Type(locator1 = "TextArea#ANY", value1 = "${clientId}", key_text = "clientId");

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${clientSecret}",
			key_text = "clientSecret"
		);

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${configurationScope}",
			key_text = "scope"
		);

		Type(locator1 = "TextArea#ANY", value1 = "${tenantId}", key_text = "tenantId");

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${siteDomain}",
			key_text = "siteDomain"
		);

		Type(
			locator1 = "TextArea#ANY",
			value1 = "${configurationResource}",
			key_text = "resource"
		);

		Button.clickSave();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoAddRepositoryCP();

		Type(
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "${configurationName}",
			key_fieldLabel = "Name"
		);

		DMRepository.addSharepoint(
			dmRepositoryLibraryPath = "Documentos compartidos",
			dmRepositoryName = "Sharepoint (${configurationName})",
			dmRepositorySiteAbsoluteURL = "https://liferaycolab.sharepoint.com"
		);

		PortletEntry.save();

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		AssertClick(
			locator1 = "DocumentsAndMedia#REPOSITORY_FOLDER_NAME_DESCRIPTIVE_VIEW",
			value1 = "${configurationName}",
			key_dmRepositoryName = "${configurationName}"
		);

		MicrosoftLogin.accountSignIn(
			userEmail = "${userName}",
			userPassword = "${userPassword}"
		);

		MicrosoftLogin.confirmSharepointApp(dmRepositoryName = "${configurationName}");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "4"
	test CheckinDocument {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.txt",
			dmDocumentTitle = "Document_3.txt"
		);

		Pause(locator1 = "5000");

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_3.txt",
			dmRepositoryName = "true"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_3.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		Pause(locator1 = "5000");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		DMDocument.checkinCP(dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		var key_dmDocumentTitle = "Document_3.txt";

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.txt");

		DMDocument.viewCheckedinCP(
			dmDocumentVersionNumber = "2.0",
			dmRepositoryName = "true"
		);
	}

	@priority = "4"
	test DeleteDocumentInSubfolder {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMFolder.addSubfolderCP(dmSubFolderName = "DM Folder3 Name");

		DMFolder.viewCP(dmFolderName = "DM Folder3 Name");

		DMDocument.addCP(
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "Document_2.doc"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewCP(dmDocumentTitle = "Document_2.doc");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.deleteCP(
			dmDocumentTitle = "Document_2.doc",
			recycleBinDisabled = "true"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder3 Name");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_2.doc");

		DMDocument.viewDefaultCP();
	}

	@priority = "4"
	test DeleteSubfolder {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMFolder.addSubfolderCP(dmSubFolderName = "DM Folder Name");

		DMFolder.deleteCP(dmFolderName = "DM Folder Name", recycleBinDisabled = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMFolder.cannotViewCP(dmFolderName = "DM Folder Name");
	}

	@priority = "4"
	test EditDocumentFile {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.doc",
			dmDocumentTitle = "Document_3.doc"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewCP(dmDocumentSize = "34KB", dmDocumentTitle = "Document_3.doc");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_2.jpg",
			dmDocumentTitle = "Document_3.doc"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.doc");

		DMDocument.viewCP(dmDocumentSize = "30KB", dmDocumentTitle = "Document_3.doc");

		DMDocument.viewDocumentMetadataCP(
			metadataData = "image/jpeg",
			metadataLabel = "Content Type"
		);

		DMDocument.cannotViewDocumentMetadataCP(
			metadataData = "ISO-8859-1",
			metadataLabel = "Content Encoding"
		);
	}

	@priority = "4"
	test MoveCheckedoutDocumentToFolder {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMFolder.addSubfolderCP(dmSubFolderName = "Sharepoint Subfolder");

		DMFolder.viewCP(dmFolderName = "Sharepoint Subfolder");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "Document_1.txt"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.txt",
			dmRepositoryName = "true"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		DMDocument.moveToSubFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Collaboration Test Application",
			dmSubFolderName = "Sharepoint Subfolder"
		);

		DMDocument.viewMovedToFolderCP(
			dmDocumentTitle = "Document_1.txt",
			dmFolderName = "Sharepoint Subfolder"
		);

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1.txt");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.txt");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");
	}

	@priority = "4"
	test MoveDocumentToHome {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.odt",
			dmDocumentTitle = "Document_1.odt"
		);

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "Document_1.odt",
			dmFolderName = "Home"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.odt");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.odt");

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.cannotViewCP(dmDocumentTitle = "Document_1.odt");
	}

	@priority = "4"
	test SearchDocumentViaHome {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.odt",
			dmDocumentTitle = "Document_3.odt"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		Search.searchCP(searchTerm = "Document_3.odt");

		DMDocument.viewSearchResultsCP(
			dmDocumentTitle = "Document_3.odt",
			dmRepositoryName = "Collaboration Test Application"
		);
	}

	@priority = "4"
	test ViewDocumentAsGuest {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(
			pageName = "Documents and Media Page",
			sitePageType = "Widget Page"
		);

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Documents and Media Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page"
		);

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRepository(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc"
		);

		DMDocument.viewPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc",
			dmRepositoryName = "true"
		);

		User.logoutPG();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_dmFolderName = "Collaboration Test Application";

		AssertClick(
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_FOLDER_TITLE",
			value1 = "Collaboration Test Application"
		);

		AssertElementPresent(locator1 = "MicrosoftLogin#LOGIN_EMAIL_FIELD");
	}

	@priority = "4"
	test ViewEditedCheckedoutDocument {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.xls",
			dmDocumentTitle = "Document_1.xls"
		);

		DMDocument.checkoutCP(
			dmDocumentTitle = "Document_1.xls",
			dmRepositoryName = "true"
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Document_1.xls");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_1_Edit.xls");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.viewIconLockedCP(dmDocumentTitle = "Document_1_Edit.xls");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1_Edit.xls");

		DMDocument.viewCheckedoutCP(dmRepositoryName = "true");
	}

	@priority = "4"
	test ViewOriginalFileExtensionAfterUnsuccessfulExtensionChange {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.docx",
			dmDocumentTitle = "Document_1.docx"
		);

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Document_1.docx");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_1.jpg");

		Click(locator1 = "Button#PUBLISH");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The source file does not have the same extension as the original file."
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_1.docx");

		DMDocument.viewCP(dmDocumentTitle = "Document_1.docx");
	}

	@priority = "4"
	test ViewOriginalFileExtensionAfterUnsuccessfulExtensionRemoval {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMDocument.addCP(
			dmDocumentFile = "Document_3.docx",
			dmDocumentTitle = "Document_3.docx"
		);

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Document_3.docx");

		DMDocument.editCmd(dmDocumentTitleEdit = "Document_3");

		Click(locator1 = "Button#PUBLISH");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The source file does not have the same extension as the original file."
		);

		Navigator.openSpecificURL(url = "https://localhost:8443");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_3.docx");

		DMDocument.viewCP(dmDocumentTitle = "Document_3.docx");
	}

	@priority = "4"
	test ViewRepository {
		DMRepository.gotoCP(dmRepositoryName = "Collaboration Test Application");

		DMRepository.viewBreadcrumb(dmRepositoryName = "Collaboration Test Application");
	}
}