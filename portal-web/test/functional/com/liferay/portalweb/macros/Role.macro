definition {
	macro add {
		LexiconEntry.gotoAdd();

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "New Role");

		PortletEntry.inputTitle(title = "${roleTitle}");

		if (isSet(roleDescription)) {
			PortletEntry.inputDescription(description = "${roleDescription}");
		}

		if (isSet(roleKey)) {
			Type(locator1 = "TextInput#KEY", value1 = "${roleKey}");
		}

		AssertClick(locator1 = "Button#SUBMIT", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro addAssignees {
		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#SELECT_ASSIGNEES");

		Search.searchCP(searchTerm = "${assigneeName}");

		var key_assigneeName = "${assigneeName}";

		AssertTextEquals(
			locator1 = "RolesAssignMembers#ADD_ASSIGNEE_TABLE_NAME",
			value1 = "${assigneeName}"
		);

		Check(locator1 = "RolesAssignMembers#ADD_ASSIGNEE_TABLE_CHECKBOX");

		SelectFrameTop(value1 = "relative=top");

		AssertClick(locator1 = "Button#ADD", value1 = "Add");

		Alert.viewSuccessMessage();
	}

	macro addStagingAdminRole {
		var roleTitle = "Staging Admin";

		RoleNavigator.gotoRoleType(roleType = "Site");

		Role.add(
			roleDescription = "${roleDescription}",
			roleKey = "${roleKey}",
			roleTitle = "${roleTitle}"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionsCP(
			permissionDefinitionKeys = "SITE_ADMIN_PAGES_SITE_PAGES_GENERAL_PERMISSIONS_ACTION_CHECKBOX,SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_SITE_ACTION_CHECKBOX,SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_PAGE_ACTION_CHECKBOX,SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_PAGE_VARIATION_ACTION_CHECKBOX,SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_SITE_PAGES_VARIATION_ACTION_CHECKBOX",
			roleTitle = "${roleTitle}",
			roleType = "Site"
		);
	}

	macro assignRegRoleCP {
		Search.searchCP(searchTerm = "${roleTitle}");

		var key_itemName = "${roleTitle}";

		AssertClick(locator1 = "ListGroupItem#ITEM_NAME_LINK", value1 = "${roleTitle}");

		Navigator.gotoNavItem(navItem = "Assignees");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#SELECT_ASSIGNEES");

		var key_userScreenName = "${userScreenName}";

		Search.searchCP(searchTerm = "${userScreenName}");

		AssertTextEquals(
			locator1 = "RolesAssignMembers#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);

		Check(locator1 = "RolesAssignMembers#USER_TABLE_CHECKBOX");

		SelectFrameTop(value1 = "relative=top");

		AssertClick(locator1 = "Button#ADD", value1 = "Add");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "RolesAssignMembers#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);
	}

	macro definePermissionCmdCP {
		Role.editPermissionCmdCP(
			define = "true",
			permissionDefinitionKey = "${permissionDefinitionKey}",
			permissionDefinitionKeyChange = "${permissionDefinitionKeyChange}",
			permissionDefinitionKeys = "${permissionDefinitionKeys}",
			permissionDefinitionKeySiteScope = "${permissionDefinitionKeySiteScope}",
			permissionNavigationKey = "${permissionNavigationKey}",
			permissionNavigationValue = "${permissionNavigationValue}",
			remove = "${remove}",
			roleTitle = "${roleTitle}",
			roleType = "${roleType}",
			roleUser = "${roleUser}",
			siteNameScope = "${siteNameScope}"
		);
	}

	macro definePermissionCP {
		Role.definePermissionCmdCP(
			permissionDefinitionKey = "${permissionDefinitionKey}",
			roleTitle = "${roleTitle}",
			roleType = "${roleType}",
			roleUser = "${roleUser}",
			siteNameScope = "${siteNameScope}"
		);

		Role.viewPermissionCP(
			permissionDefinitionKey = "${permissionDefinitionKey}",
			permissionDefinitionValue = "${permissionDefinitionValue}",
			permissionNavigationValue = "${permissionNavigationValue}",
			remove = "${remove}"
		);
	}

	macro definePermissionPG {
		var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
		var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

		if (IsElementPresent.isElementPresentAfterWait(locator1 = "IFrame#DIALOG")) {
			SelectFrame(locator1 = "IFrame#DIALOG");
		}

		if (isSet(permissionsList)) {
			for (var permissionDefinitionKey : list "${permissionsList}") {
				Check(locator1 = "Permissions#${permissionDefinitionKey}");
			}
		}
		else {
			Check(locator1 = "Permissions#${permissionDefinitionKey}");
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);

		AssertChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}

	macro definePermissionsCP {
		Role.definePermissionCmdCP(
			permissionDefinitionKeys = "${permissionDefinitionKeys}",
			roleTitle = "${roleTitle}",
			roleType = "${roleType}",
			roleUser = "${roleUser}"
		);
	}

	macro deleteCP {
		Search.searchCP(searchTerm = "Name");

		LexiconEntry.delete(rowEntry = "${roleTitle}");
	}

	macro editPermissionCmdCP {
		var key_roleTitle = "${roleTitle}";

		if (contains("Organization,Site", "${roleType}")) {
			Navigator.gotoNavItem(navItem = "${roleType} Roles");
		}
		else {
			Navigator.gotoNavItem(navItem = "Regular Roles");
		}

		Search.searchCP(searchTerm = "${roleTitle}");

		if (isSet(roleUser)) {
			var key_itemName = "${roleUser}";

			AssertTextEquals(locator1 = "ListGroupItem#ITEM_NAME", value1 = "${roleUser}");

			AssertClick(locator1 = "ListGroupItem#ITEM_NAME_LINK", value1 = "${roleUser}");
		}
		else {
			var key_itemName = "${roleTitle}";

			AssertTextEquals(locator1 = "ListGroupItem#ITEM_NAME", value1 = "${roleTitle}");

			AssertClick(locator1 = "ListGroupItem#ITEM_NAME_LINK", value1 = "${roleTitle}");
		}

		Navigator.gotoNavItem(navItem = "Define Permissions");

		if ((IsElementPresent.isElementPresentAfterWait(locator1 = "Message#INFO")) && (IsVisible(locator1 = "Message#INFO"))) {
			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "This role does not have any permissions."
			);
		}

		if (!(isSet(permissionDefinitionKeys))) {
			var permissionDefinitionKeys = "${permissionDefinitionKey}";
		}

		for (var permissionDefinitionKey : list "${permissionDefinitionKeys}") {
			if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_GENERAL_PERMISSIONS")) {
				var permissionNavigationKey = "CONTROL_PANEL_GENERAL_PERMISSIONS";
				var permissionNavigationValue = "General Permissions";
			}
			else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_ROLES")) {
				var permissionNavigationKey = "CONTROL_PANEL_USERS_ROLES";
				var permissionNavigationValue = "Roles";
			}
			else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_SITES_SITES")) {
				var permissionNavigationKey = "CONTROL_PANEL_SITES_SITES";
				var permissionNavigationValue = "Sites";
			}
			else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_USER_GROUPS")) {
				var permissionNavigationKey = "CONTROL_PANEL_USERS_USER_GROUPS";
				var permissionNavigationValue = "User Groups";
			}
			else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_USERS_AND_ORGANIZATIONS")) {
				var permissionNavigationKey = "CONTROL_PANEL_USERS_USERS_AND_ORGANIZATIONS";
				var permissionNavigationValue = "Users and Organizations";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_ASSET_PUBLISHER")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_ASSET_PUBLISHER";
				var permissionNavigationValue = "Asset Publisher";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_BLOGS")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_BLOGS";
				var permissionNavigationValue = "Blogs";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_BOOKMARKS")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_BOOKMARKS";
				var permissionNavigationValue = "Bookmarks";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_CALENDAR")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_CALENDAR";
				var permissionNavigationValue = "Calendar";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_CATEGORIES_NAVIGATION")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_CATEGORIES_NAVIGATION";
				var permissionNavigationValue = "Categories Navigation";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA";
				var permissionNavigationValue = "Documents and Media";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_LANGUAGE")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_LANGUAGE";
				var permissionNavigationValue = "Language Selector";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_MESSAGE_BOARDS")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_MESSAGE_BOARDS";
				var permissionNavigationValue = "Message Boards";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_WEB_CONTENT_DISPLAY")) {
				var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_WEB_CONTENT_DISPLAY";
				var permissionNavigationValue = "Web Content Display";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONFIGURATION_SITE_SETTINGS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONFIGURATION_SITE_SETTINGS";
				var permissionNavigationValue = "Site Settings";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_BLOGS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS";
				var permissionNavigationValue = "Blogs";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_BOOKMARKS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_BOOKMARKS";
				var permissionNavigationValue = "Bookmarks";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CATEGORIES")) {
				var permissionNavigationKey = "SITE_ADMIN_CATEGORIES";
				var permissionNavigationValue = "Categories";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA";
				var permissionNavigationValue = "Documents and Media";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS";
				var permissionNavigationValue = "Dynamic Data Lists";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_FORMS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_FORMS";
				var permissionNavigationValue = "Forms";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_KALEO_FORMS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_KALEO_FORMS";
				var permissionNavigationValue = "Kaleo Forms Admin";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_MESSAGE_BOARDS")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_MESSAGE_BOARDS";
				var permissionNavigationValue = "Message Boards";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_MEMBERS_SITE_MEMBERSHIPS")) {
				var permissionNavigationKey = "SITE_ADMIN_MEMBERS_SITE_MEMBERSHIPS";
				var permissionNavigationValue = "Site Memberships";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_MEMBERS_SITE_TEAMS")) {
				var permissionNavigationKey = "SITE_ADMIN_MEMBERS_SITE_TEAMS";
				var permissionNavigationValue = "Site Teams";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_PAGES_SITE_PAGES")) {
				var permissionNavigationKey = "SITE_ADMIN_PAGES_SITE_PAGES";
				var permissionNavigationValue = "Pages";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_WEB_CONTENT")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_WEB_CONTENT";
				var permissionNavigationValue = "Web Content";
			}
			else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_WIKI")) {
				var permissionNavigationKey = "SITE_ADMIN_CONTENT_WIKI";
				var permissionNavigationValue = "Wiki";
			}
			else if (contains("${permissionDefinitionKey}", "USER_MY_ACCOUNT_MY_WORKFLOW_TASKS")) {
				var permissionNavigationKey = "USER_MY_ACCOUNT_MY_WORKFLOW_TASKS";
				var permissionNavigationValue = "My Workflow Tasks";
			}

			if (!(IsElementPresent(locator1 = "RolesPermissions#${permissionDefinitionKey}"))) {
				Type(
					locator1 = "RolesPermissionsNavigation#SEARCH_FIELD",
					value1 = "${permissionNavigationValue}"
				);

				AssertClick(
					locator1 = "RolesPermissionsNavigation#${permissionNavigationKey}",
					value1 = "${permissionNavigationValue}"
				);

				AssertTextEquals(
					locator1 = "RolesPermissions#PERMISSION_HEADER",
					value1 = "${permissionNavigationValue}"
				);
			}

			if ("${define}" == "true") {
				Check(locator1 = "RolesPermissions#${permissionDefinitionKey}");
			}
			else if ("${remove}" == "true") {
				Uncheck(locator1 = "RolesPermissions#${permissionDefinitionKey}");
			}

			if (isSet(siteNameScope)) {
				var permissionDefinitionKeyChange = StringUtil.replace("${permissionDefinitionKey}", "CHECKBOX", "CHANGE_LINK");

				AssertClick(
					locator1 = "RolesPermissions#${permissionDefinitionKeyChange}",
					value1 = "Change"
				);

				var key_siteNameScope = "${siteNameScope}";

				SelectFrame(locator1 = "RolesPermissionsSelectSite#SELECT_SITE_IFRAME");

				AssertClick.assertPartialTextClickAt(
					locator1 = "RolesPermissionsSelectSite#SCOPE_SITES_TABLE_NAME",
					value1 = "${siteNameScope}"
				);

				var key_siteNameScope = "${siteNameScope}";
				var permissionDefinitionKeySiteScope = StringUtil.replace("${permissionDefinitionKey}", "CHECKBOX", "SITE_SCOPE");

				SelectFrame(value1 = "relative=top");

				AssertTextEquals.assertPartialText(
					locator1 = "RolesPermissions#${permissionDefinitionKeySiteScope}",
					value1 = "${siteNameScope}"
				);
			}
		}

		ScrollWebElementIntoView(locator1 = "RolesPermissions#SAVE_BUTTON");

		PortletEntry.save();
	}

	macro openRolesAdmin {
		Navigator.openWithAppendToBaseURL(
			urlAppend = "group/control_panel/manage?p_p_id=com_liferay_roles_admin_web_portlet_RolesAdminPortlet"
		);
	}

	macro removePermissionCP {
		Role.editPermissionCmdCP(
			permissionDefinitionKey = "${permissionDefinitionKey}",
			permissionDefinitionKeyChange = "${permissionDefinitionKeyChange}",
			permissionDefinitionKeys = "${permissionDefinitionKeys}",
			permissionDefinitionKeySiteScope = "${permissionDefinitionKeySiteScope}",
			permissionNavigationKey = "${permissionNavigationKey}",
			permissionNavigationValue = "${permissionNavigationValue}",
			remove = "true",
			roleTitle = "${roleTitle}",
			roleType = "${roleType}",
			roleUser = "${roleUser}",
			siteNameScope = "${siteNameScope}"
		);

		Role.viewPermissionCP(
			permissionDefinitionKey = "${permissionDefinitionKey}",
			permissionDefinitionValue = "${permissionDefinitionValue}",
			permissionNavigationValue = "${permissionNavigationValue}",
			remove = "true"
		);
	}

	macro removePermissionPG {
		var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
		var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

		if (IsElementPresent.isElementPresentAfterWait(locator1 = "IFrame#DIALOG")) {
			SelectFrame(locator1 = "IFrame#DIALOG");
		}

		Uncheck(locator1 = "Permissions#${permissionDefinitionKey}");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);

		AssertNotChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}

	macro removeStagingAdminRole {
		var roleTitle = "Staging Admin";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		RoleNavigator.gotoRoleType(roleType = "Site");

		Search.searchCP(searchTerm = "${roleTitle}");

		var key_itemName = "${roleTitle}";

		if (IsElementPresent.pauseIsElementPresent(locator1 = "ListGroupItem#ITEM_NAME")) {
			LexiconEntry.delete(rowEntry = "${roleTitle}");
		}
	}

	macro tearDownCP {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Search.searchCP(searchTerm = "Name");

		while (IsElementPresent.pauseIsElementPresent(locator1 = "ListGroupItem#ITEM_ACTIONS_DEFAULT")) {
			Click(locator1 = "ListGroupItem#ITEM_ACTIONS_DEFAULT");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(
				value1 = "Are you sure you want to delete this role? It will be deleted immediately. If it is a reviewer role, its task assignments will be deleted along with it."
			);
		}
	}

	macro viewCP {
		if (contains("Organization,Site", "${roleType}")) {
			Navigator.gotoNavItem(navItem = "${roleType} Roles");
		}
		else {
			Navigator.gotoNavItem(navItem = "Regular Roles");
		}

		var key_itemName = "${roleTitle}";

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "${roleTitle}");

		SiteAdmin.viewPortletTitle(portletTitle = "${roleTitle}");

		AssertTextEquals(locator1 = "TextInput#TITLE", value1 = "${roleTitle}");
	}

	macro viewDefaultCP {
		Search.searchCP(searchTerm = "Name");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No roles were found."
		);
	}

	macro viewPermissionCP {
		if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_GENERAL_PERMISSIONS")) {
			var permissionNavigationKey = "CONTROL_PANEL_GENERAL_PERMISSIONS";
			var permissionNavigationValue = "General Permissions";
		}
		else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_ROLES")) {
			var permissionNavigationKey = "CONTROL_PANEL_USERS_ROLES";
			var permissionNavigationValue = "Roles";
		}
		else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_SITES_SITES_RESOURCE_PERMISSIONS_SITE")) {
			var permissionNavigationKey = "CONTROL_PANEL_SITES_SITES";
			var permissionNavigationValue = "Site Settings";
		}
		else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_SITES_SITES")) {
			var permissionNavigationKey = "CONTROL_PANEL_SITES_SITES";
			var permissionNavigationValue = "Sites";
		}
		else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_USER_GROUPS")) {
			var permissionNavigationKey = "CONTROL_PANEL_USERS_USER_GROUPS";
			var permissionNavigationValue = "User Groups";
		}
		else if (contains("${permissionDefinitionKey}", "CONTROL_PANEL_USERS_USERS_AND_ORGANIZATIONS")) {
			var permissionNavigationKey = "CONTROL_PANEL_USERS_USERS_AND_ORGANIZATIONS";
			var permissionNavigationValue = "Users and Organizations";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_ASSET_PUBLISHER")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_ASSET_PUBLISHER";
			var permissionNavigationValue = "Asset Publisher";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_BLOGS")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_BLOGS";
			var permissionNavigationValue = "Blogs";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_BOOKMARKS")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_BOOKMARKS";
			var permissionNavigationValue = "Bookmarks";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_CALENDAR")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_CALENDAR";
			var permissionNavigationValue = "Calendar";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_DOCUMENTS_AND_MEDIA";
			var permissionNavigationValue = "Documents and Media";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_LANGUAGE")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_LANGUAGE";
			var permissionNavigationValue = "Language";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_MESSAGE_BOARDS")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_MESSAGE_BOARDS";
			var permissionNavigationValue = "Message Boards";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_APPLICATIONS_WEB_CONTENT_DISPLAY")) {
			var permissionNavigationKey = "SITE_ADMIN_APPLICATIONS_WEB_CONTENT_DISPLAY";
			var permissionNavigationValue = "Web Content Display";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_BLOGS")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS";
			var permissionNavigationValue = "Blogs";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_DOCUMENTS_AND_MEDIA";
			var permissionNavigationValue = "Documents and Media";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS";
			var permissionNavigationValue = "Dynamic Data Lists";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_MESSAGE_BOARDS")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_MESSAGE_BOARDS";
			var permissionNavigationValue = "Message Boards";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_MEMBERS_SITE_MEMBERSHIPS")) {
			var permissionNavigationKey = "SITE_ADMIN_MEMBERS_SITE_MEMBERSHIPS";
			var permissionNavigationValue = "Site Memberships";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_PAGES_SITE_PAGES")) {
			var permissionNavigationKey = "SITE_ADMIN_PAGES_SITE_PAGES";
			var permissionNavigationValue = "Pages";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_WEB_CONTENT")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_WEB_CONTENT";
			var permissionNavigationValue = "Web Content";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_CONTENT_WIKI")) {
			var permissionNavigationKey = "SITE_ADMIN_CONTENT_WIKI";
			var permissionNavigationValue = "Wiki";
		}

		if ("${permissionNavigationValue}" == "General Permissions") {
			var permissionNavigationValue = "Portal";
		}
		else if (contains("${permissionDefinitionKey}", "SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_SITE")) {
			var permissionNavigationValue = "Site";
		}

		var key_permissionDefinitionValue = "${permissionDefinitionValue}";
		var key_permissionNavigationValue = "${permissionNavigationValue}";

		if ("${remove}" == "true") {
			AssertElementNotPresent(
				locator1 = "RolesPermissionsSummary#PERMISSION_TABLE_PERMISSIONS"
			);

			AssertElementNotPresent(
				locator1 = "RolesPermissionsSummary#PERMISSION_TABLE_REMOVE"
			);
		}
		else {
			while (IsElementNotPresent(locator1 = "Roles#PERMISSION_TABLE_PERMISSIONS")) {
				AssertClick(locator1 = "Pagination#NEXT_LINK", value1 = "Next");
			}

			AssertTextEquals.assertPartialText(
				locator1 = "RolesPermissionsSummary#PERMISSION_TABLE_PERMISSIONS",
				value1 = "${permissionNavigationValue}"
			);

			AssertTextEquals(
				locator1 = "RolesPermissionsSummary#PERMISSION_TABLE_REMOVE",
				value1 = "Remove"
			);
		}
	}

	macro viewPermissionPG {
		var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
		var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

		if ("${permissionFlagged}" == "true") {
			AssertChecked(locator1 = "Permissions#${permissionDefinitionKey}");
		}
		else if ("${permissionFlagged}" == "false") {
			AssertNotChecked(locator1 = "Permissions#${permissionDefinitionKey}");
		}
	}
}