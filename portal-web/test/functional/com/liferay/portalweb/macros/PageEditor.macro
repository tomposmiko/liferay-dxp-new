definition {
	macro addFragment {
		PageEditor.expandFragmentCollection(collectionName = "${collectionName}");

		Click.clickNoMouseOverNoWaitForVisible(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_ADD_FRAGMENT_BUTTON",
			key_fragmentName = "${fragmentName}"
		);

		AssertElementPresent(
			locator1 = "Fragment#FRAGMENT_HEADER",
			key_fragmentName = "${fragmentName}"
		);
	}

	macro addWidget {
		PageEditor.gotoTab(tabName = "Widgets");

		Type.sendKeysApplicationSearch(
			locator1 = "PageEditor#WIDGETS_APPLICATION_SEARCH_FIELD",
			value1 = "${portletName}"
		);

		var key_portletName = "${portletName}";

		DragAndDrop(
			locator1 = "PageEditor#WIDGETS_ADD_PORTLET_DRAG_LINK",
			locator2 = "PageEditor#FRAGMENT_DROP_TARGET",
			value1 = "${portletName}"
		);

		Pause(locator1 = "5000");

		AssertTextEquals.assertPartialText(
			locator1 = "Portlet#PORTLET_CONTENT",
			value1 = "${portletName}"
		);
	}

	macro clickPublish {
		Button.click(
			button = "Publish"
		);
	}

	macro editFragmentImage {
		Click(
			locator1 = "Fragment#EDITABLE_FIELD",
			key_fragmentName = "${fragmentName}",
			key_id = "${id}"
		);

		Click(
			locator1 = "PageEditor#EDITABLE_FIELD_TOOLBAR_IMAGE_PROPERTIES_BUTTON"
		);

		Button.clickSelect();

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertElementPresent(locator1 = "Button#SELECT_FILE");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${fileName}"
		);

		Pause(
			locator1 = "3000"
		);

		SelectFrameTop();

		Click(locator1 = "Button#ADD");
	}

	macro editFragmentText {
		Click(
			locator1 = "Fragment#EDITABLE_FIELD",
			key_fragmentName = "${fragmentName}",
			key_id = "${id}"
		);

		Click(
			locator1 = "PageEditor#EDITABLE_FIELD_TOOLBAR_EDIT_BUTTON"
		);

		Type(
			locator1 = "Fragment#EDITABLE_FIELD_CK_EDITOR",
			value1 = "${text}",
			key_fragmentName = "${fragmentName}",
			key_id = "${id}"
		);

		Pause(locator1 = "3000");
	}

	macro expandFragmentCollection {
		AssertVisible(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL",
			key_collectionName = "${collectionName}"
		);

		if (IsElementPresent(locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_COLLAPSED", key_collectionName = "${collectionName}")) {
			AssertClick(
				locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_COLLAPSED",
				value1 = "${collectionName}",
				key_collectionName = "${collectionName}"
			);
		}

		AssertElementPresent(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL_EXPANDED",
			key_collectionName = "${collectionName}"
		);
	}

	macro gotoTab {
		Click(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_TAB_BUTTON",
			key_tabName = "${tabName}"
		);
	}

	macro removeFragment {
		MouseOver.mouseOverNotVisible(
			locator1 = "Fragment#FRAGMENT_HEADER",
			key_fragmentName = "${fragmentName}"
		);

		Click(
			locator1 = "Fragment#FRAGMENT_HEADER_DELETE_BUTTON",
			key_fragmentName = "${fragmentName}"
		);

		AssertElementNotPresent(
			locator1 = "Fragment#FRAGMENT_HEADER",
			key_fragmentName = "${fragmentName}"
		);
	}

	macro removeSection {
		MouseOver.mouseOverNotVisible(
			locator1 = "PageEditor#SECTION",
			key_position = "${position}"
		);

		Click(
			locator1 = "PageEditor#SECTION_HEADER_DELETE_BUTTON",
			key_position = "${position}"
		);
	}

	macro viewAutoSaveMessage {
		AssertTextEquals.assertPartialText(
			locator1 = "PageEditor#AUTOSAVE_MESSAGE",
			value1 = "Draft saved at"
		);
	}

	macro viewCollectionNotPresent {
		AssertElementNotPresent(
			locator1 = "PageEditor#FRAGMENT_SIDEBAR_COLLECTION_PANEL",
			key_collectionName = "${collectionName}"
		);
	}

	macro viewEditorEmpty {
		AssertElementPresent(locator1 = "PageEditor#EMPTY_MESSAGE");
	}

	macro viewFragment {
		AssertElementPresent(
			locator1 = "Fragment#FRAGMENT_HEADER",
			key_fragmentName = "${fragmentName}"
		);
	}

	macro viewFragmentEditableText {
		AssertTextEquals(
			locator1 = "Fragment#EDITABLE_FIELD",
			value1 = "${editableText}",
			key_fragmentName = "${fragmentName}",
			key_id = "${id}"
		);
	}

	macro viewFragmentOrder {
		AssertElementPresent(
			locator1 = "Fragment#FRAGMENT_HEADER_POSITION",
			key_fragmentName = "${fragmentName}",
			key_position = "${position}"
		);
	}
}