definition {
	macro configureDisplayContent {
		SelectFrame(locator1 = "IFrame#CONFIGURATION_DIALOG");

		var rowIndexNumber = selenium.getNumberDecrement("${rowNumber}");

		if (!("${rowIndexNumber}" == "0")) {
			var key_indexNumber = "${rowIndexNumber}";

			Click(locator1 = "ContentTargeting#PLUS_LINK");
		}

		var key_rowNumber = "${rowNumber}";

		if ("${belongs}" == "true") {
			Click(locator1 = "UserSegmentContentDisplay#RULE_PANEL_BELONGS_RADIO");
		}

		if ("${doesNotBelong}" == "true") {
			Click(locator1 = "UserSegmentContentDisplay#RULE_PANEL_DOES_NOT_BELONG_RADIO");
		}

		if ("${toAll}" == "true") {
			Click(locator1 = "UserSegmentContentDisplay#RULE_PANEL_ALL_RADIO");
		}

		if ("${toAny}" == "true") {
			Click(locator1 = "UserSegmentContentDisplay#RULE_PANEL_ANY_RADIO");
		}

		Click(
			locator1 = "UserSegmentContentDisplay#RULE_PANEL_USER_SEGMENT_SELECT_BUTTON"
		);

		SelectFrame(value1 = "relative=top");

		for (var userSegmentName : list "${userSegmentName}") {
			var key_userSegmentName = "${userSegmentName}";

			Click(
				locator1 = "UserSegmentContentDisplay#RULE_PANEL_USER_SEGMENT_SELECT_USER_SEGMENT_CHECKBOX"
			);
		}

		if (isSet(siteScope)) {
			var key_siteScope = "${siteScope}";

			AssertTextEquals.assertPartialText(
				locator1 = "UserSegmentContentDisplay#RULE_PANEL_USER_SEGMENT_SELECT_USER_SEGMENT_SCOPE",
				value1 = "User Segment (${siteScope})"
			);
		}

		Click(locator1 = "Icon#CLOSE");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Click(locator1 = "UserSegmentContentDisplay#RULE_PANEL_DISPLAY_CONTENT_SELECT");

		var key_menuItem = "${contentType}";

		MenuItem.click(menuItem = "${contentType}");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_rowEntry = "${contentTitle}";

		ClickNoError(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		SelectFrame(value1 = "relative=top");
	}

	macro configureOtherwiseContentDisplayRule {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(otherwiseContentType)) {
			ClickNoError(locator1 = "ContentTargeting#OTHERWISE_PANEL");

			ScrollWebElementIntoView(
				locator1 = "ContentTargeting#OTHERWISE_PANEL_DISPLAY_THIS_CONTENT_RADIO"
			);

			Click(locator1 = "ContentTargeting#OTHERWISE_PANEL_DISPLAY_THIS_CONTENT_RADIO");

			ClickNoError(locator1 = "ContentTargeting#OTHERWISE_PANEL_SELECT_CONTENT");

			MenuItem.click(menuItem = "${otherwiseContentType}");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#DIALOG");

			var key_rowEntry = "${otherwiseContentTitle}";

			ClickNoError(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");

			SelectFrame(value1 = "relative=top");
		}
		else {
			ClickNoError(locator1 = "ContentTargeting#OTHERWISE_PANEL");

			Click(locator1 = "ContentTargeting#OTHERWISE_PANEL_DONT_DISPLAY_ANYTHING_RADIO");

			SelectFrame(value1 = "relative=top");
		}
	}

	macro savePG {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		ClickNoError(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro viewConfiguredDisplayContent {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		var key_rowNumber = "${rowNumber}";

		if ("${belongs}" == "true") {
			AssertChecked(locator1 = "UserSegmentContentDisplay#RULE_PANEL_BELONGS_RADIO");
		}

		if ("${doesNotBelong}" == "true") {
			AssertChecked(
				locator1 = "UserSegmentContentDisplay#RULE_PANEL_DOES_NOT_BELONG_RADIO"
			);
		}

		if ("${toAll}" == "true") {
			AssertChecked(locator1 = "UserSegmentContentDisplay#RULE_PANEL_ALL_RADIO");
		}

		if ("${toAny}" == "true") {
			AssertChecked(locator1 = "UserSegmentContentDisplay#RULE_PANEL_ANY_RADIO");
		}

		var key_userSegmentName = "${userSegmentName}";

		AssertTextEquals(
			locator1 = "UserSegmentContentDisplay#RULE_PANEL_SELECTED_USER_SEGMENT",
			value1 = "${userSegmentName}"
		);

		var key_contentTitle = "${contentTitle}";

		AssertTextEquals(
			locator1 = "ContentTargeting#CARD_CONTENT_TITLE",
			value1 = "${contentTitle}"
		);

		var key_contentType = "${contentType}";

		AssertTextEquals.assertPartialText(
			locator1 = "ContentTargeting#CARD_CONTENT_TYPE",
			value1 = "${contentType}"
		);

		if (isSet(otherwiseContentType)) {
			Click(locator1 = "ContentTargeting#OTHERWISE_PANEL");

			AssertChecked(
				locator1 = "ContentTargeting#OTHERWISE_PANEL_DISPLAY_THIS_CONTENT_RADIO"
			);

			var key_contentType = "${otherwiseContentType}";

			AssertTextEquals.assertPartialText(
				locator1 = "ContentTargeting#OTHERWISE_PANEL_SELECTED_CONTENT_TYPE",
				value1 = "${otherwiseContentType}"
			);

			var key_contentTitle = "${otherwiseContentTitle}";

			AssertTextEquals(
				locator1 = "ContentTargeting#OTHERWISE_PANEL_SELECTED_CONTENT_TITLE",
				value1 = "${otherwiseContentTitle}"
			);
		}
	}

	macro viewContentOnly {
		AssertTextEquals(
			locator1 = "UserSegmentContentDisplay#ENTRY_CONTENT",
			value1 = "${entryContentText}"
		);
	}

	macro viewEntryPG {
		ContentTargeting.expandPreview(portletName = "User Segment Content Display");

		if (isSet(viewUserSegmentSelected)) {
			var key_viewEntrySelected = "${viewUserSegmentSelected}";

			AssertElementPresent(locator1 = "ContentTargeting#PREVIEW_ENTRY_SELECTED");
		}

		if (isSet(previewUserSegmentList)) {
			for (var previewEntry : list "${previewUserSegmentList}") {
				ContentTargeting.expandPreview(portletName = "User Segment Content Display");

				var key_previewEntry = "${previewEntry}";

				if ((isSet(entryContentText)) && (!("${previewEntry}" == "default"))) {
					AssertTextEquals(
						locator1 = "UserSegmentContentDisplay#ENTRY_CONTENT",
						value1 = "${entryContentText}"
					);
				}

				if (("viewDontDisplay" == "true") && ("${previewEntry}" == "default")) {
					AssertTextEquals(
						locator1 = "UserSegmentContentDisplay#ENTRY_CONTENT",
						value1 = "There are no matching rules"
					);
				}
			}
		}
	}

	macro viewNoContentPG {
		AssertTextEquals(
			locator1 = "UserSegmentContentDisplay#ENTRY_CONTENT",
			value1 = "The selected content no longer exists"
		);
	}
}