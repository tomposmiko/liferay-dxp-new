definition {

	macro assertTextInOSGIConfig {
		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		var fileContent = FileUtil.read("${liferayHome}/osgi/configs/${osgiConfigFileName}");

		if (contains("${fileContent}", "${text}")) {
			echo("File ${osgiConfigFileName} contains text ${text}");
		}
		else {
			fail("File ${osgiConfigFileName} does not contain text ${text}");
		}
	}

	macro assertTextNotInOSGIConfig {
		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		var fileContent = FileUtil.read("${liferayHome}/osgi/configs/${osgiConfigFileName}");

		if (contains("${fileContent}", "${text}")) {
			fail("File ${osgiConfigFileName} contains text ${text}");
		}
		else {
			echo("File ${osgiConfigFileName} does not contain text ${text}");
		}
	}

	macro copyOSGiConfigFile {
		Variables.assertDefined(parameterList = "${osgiConfigFileBaseDir},${osgiConfigFileName}");

		var configs = FileUtil.read("${osgiConfigFileBaseDir}/${osgiConfigFileName}");
		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		FileUtil.write("${liferayHome}/osgi/configs/${osgiConfigFileName}", "${configs}");
	}

	macro deleteOSGiConfigFile {
		Variables.assertDefined(parameterList = "${osgiConfigFileName}");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		FileUtil.delete("${liferayHome}/osgi/configs/${osgiConfigFileName}");
	}

	macro deployOSGiConfigFile {
		Variables.assertDefined(parameterList = "${osgiConfigs},${osgiConfigFileName}");

		var configList = "";

		for (var osgiConfig : list "${osgiConfigs}") {
			var configList = '''${osgiConfig}
${configList}''';
		}

		var liferayHome = PropsUtil.get("liferay.home.dir.name");

		FileUtil.write("${liferayHome}/osgi/configs/${osgiConfigFileName}", "${configList}");
	}

	macro editOSGiConfigFileFromTempFolder {
		var tempDir = PropsUtil.get("output.dir.name");

		Variables.assertDefined(parameterList = "${tempDir},${osgiConfigFileName}");

		var filePath = FileUtil.getCanonicalPath(${tempDir});

		var filePath = "${filePath}/${osgiConfigFileName}";

		FileUtil.replaceStringInFile("${filePath}", "${oldValue}", "${newValue}");
	}

}