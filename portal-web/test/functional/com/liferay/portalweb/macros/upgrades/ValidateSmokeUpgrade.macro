definition {

	macro changeDisplayStyle {
		task ("Change document view type but account for flakiness seen in test execution history") {
			WaitForPageLoad();

			Click(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

			if (IsElementNotPresent(key_menuItem = StringUtil.upperCaseFirstLetter(${displayStyle}), locator1 = "MenuItem#ANY_MENU_ITEM")) {
				Refresh();

				WaitForPageLoad();

				Click.mouseOverClick(locator1 = "Icon#CURRENT_DISPLAY_STYLE");
			}

			MenuItem.click(menuItem = StringUtil.upperCaseFirstLetter(${displayStyle}));
		}
	}

	macro getBuildNumber {
		var mysqlStatement = "SELECT buildNumber FROM Release_ WHERE servletContextName='portal';";

		var sqlResults = SQL.executeMySQLStatement(mysqlStatement = ${mysqlStatement});

		var portalBuildNumber = StringUtil.regexReplaceAll(${sqlResults}, "[buildNumber\n]", "");

		echo("## * Build Number is: ${portalBuildNumber}");

		return ${portalBuildNumber};
	}

	macro getSchemaVersion {
		var mysqlStatement = ${mysqlStatement};

		var sqlResults = SQL.executeMySQLStatement(mysqlStatement = ${mysqlStatement});

		var portalSchemaVersion = StringUtil.regexReplaceAll(${sqlResults}, "[schemaVersion\n]", "");

		echo("## * Schema Version is: ${portalSchemaVersion}");

		return ${portalSchemaVersion};
	}

	macro viewUpgrade {
		Navigator.gotoPage(pageName = "Web Content");

		WebContentDisplayPortlet.viewContent(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title");

		Navigator.gotoPage(pageName = "Document");

		ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

		DMDocument.viewPG(dmDocumentTitle = "Document1");

		DMDocument.expandInfo();

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Test Test");

		AssertTextEquals(
			key_dmDocumentVersionNumber = "1.0",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
			value1 = "VERSION 1.0");

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
			value1 = "APPROVED");

		var key_text = "Download";

		AssertTextEquals(
			locator1 = "Button#ANY",
			value1 = "Download");

		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = 0,
			startedByUserName = "Test Test",
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject");

		Navigator.gotoPage(pageName = "Wiki");

		WikiPage.viewFrontPagePG(
			wikiPageContent = "Wiki Front Page Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Blogs");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Navigator.openSiteURL(siteName = "Site Name");

		AssertVisible(
			key_pageName = "Site Page",
			locator1 = "Home#PAGE_ACTIVE");

		SignOut.signOut();

		SignIn.signIn(userEmailAddress = "user@liferay.com");

		Navigator.gotoPage(pageName = "Web Content");

		WebContentDisplayPortlet.viewContent(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title");

		Navigator.gotoPage(pageName = "Document");

		ValidateSmokeUpgrade.changeDisplayStyle(displayStyle = "list");

		DMDocument.viewPG(dmDocumentTitle = "Document1");

		DMDocument.expandInfo();

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Test Test");

		AssertTextEquals(
			key_dmDocumentVersionNumber = "1.0",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
			value1 = "VERSION 1.0");

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
			value1 = "APPROVED");

		AssertTextEquals(
			key_dmDocumentSize = "22 KB",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_DOWNLOAD",
			value1 = "Download");

		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = 0,
			startedByUserName = "Test Test",
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject");

		Navigator.gotoPage(pageName = "Wiki");

		WikiPage.viewFrontPagePG(
			wikiPageContent = "Wiki Front Page Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Blogs");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Navigator.openSiteURL(siteName = "Site Name");

		AssertVisible(
			key_pageName = "Site Page",
			locator1 = "Home#PAGE_ACTIVE");

		SignOut.signOut();

		SignIn.signIn();
	}

}