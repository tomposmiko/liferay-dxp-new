definition {

	macro configureBreadcrumb {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(checkSetupName)) {
			for (var checkSetupName : list ${checkSetupName}) {
				var key_checkSetupName = ${checkSetupName};

				Check.checkToggleSwitch(locator1 = "ToggleSwitch#SHOW_SPECIFIC_TOGGLE_SWITCH");
			}
		}

		if (isSet(uncheckSetupName)) {
			for (var uncheckSetupName : list ${uncheckSetupName}) {
				var key_checkSetupName = ${uncheckSetupName};

				Uncheck.uncheckToggleSwitch(locator1 = "ToggleSwitch#SHOW_SPECIFIC_TOGGLE_SWITCH");
			}
		}

		if (isSet(selectAdtType)) {
			Select(
				locator1 = "Select#DISPLAY_TEMPLATE",
				value1 = ${selectAdtType});
		}

		if (${configureWithoutSave} == "true") {
			echo("Configuring Breadcrumb without saving to check bug.");
		}
		else {
			WaitForElementPresent(
				key_text = "Save",
				locator1 = "Button#ANY_ENABLED");

			PortletEntry.save();
		}

		SelectFrame(value1 = "relative=top");
	}

	macro displayTemplatePreview {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		Select(
			locator1 = "Select#DISPLAY_TEMPLATE",
			value1 = ${displayStyle});

		SelectFrame(value1 = "relative=top");
	}

	macro saveDisplayPreview {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro seeFullNested {
		Click(
			ariaLabel = "See full nested",
			locator1 = "Button#ANY_WITH_ARIA_LABEL");
	}

	macro viewActiveEntry {
		AssertTextEquals(
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_ACTIVE_ENTRY",
			value1 = ${breadcrumbName});
	}

	macro viewADTApplied {
		var key_breadcrumbAdtType = ${breadcrumbAdtType};

		AssertElementPresent(locator1 = "BreadcrumbPortlet#BREADCRUMB_ADT");
	}

	macro viewBreadcrumbPath {
		var index = 1;

		for (var breadcrumbName : list ${breadcrumbNameList}) {
			AssertElementPresent(
				key_breadcrumbName = ${breadcrumbName},
				key_index = ${index},
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY_BY_INDEX");

			var index = ${index} + 1;
		}
	}

	macro viewConfigurationCheckboxes {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(checkSetupName)) {
			for (var checkSetupName : list ${checkSetupName}) {
				var key_checkSetupName = ${checkSetupName};

				AssertChecked.assertCheckedNotVisible(locator1 = "ToggleSwitch#SHOW_SPECIFIC_TOGGLE_SWITCH");
			}
		}

		if (isSet(uncheckSetupName)) {
			for (var uncheckSetupName : list ${uncheckSetupName}) {
				var key_checkSetupName = ${uncheckSetupName};

				AssertNotChecked.assertNotCheckedNotVisible(locator1 = "ToggleSwitch#SHOW_SPECIFIC_TOGGLE_SWITCH");
			}
		}

		SelectFrame(value1 = "relative=top");
	}

	macro viewConfigurationPreview {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		if (isSet(breadcrumbListVisible)) {
			if (IsElementPresent(key_infoMessage = "This change will only be shown after you refresh the current page.", locator1 = "Message#INFO_SPECIFIC")) {
				Refresh();

				Portlet.gotoPortletOptions(
					portletName = "Breadcrumb",
					portletOption = "Configuration");

				SelectFrame(locator1 = "IFrame#CONFIGURATION");
			}

			for (var breadcrumbName : list ${breadcrumbListVisible}) {
				Breadcrumb.viewEntry(breadcrumbName = ${breadcrumbName});
			}
		}

		if (isSet(breadcrumbListNotVisible)) {
			for (var breadcrumbName : list ${breadcrumbListNotVisible}) {
				var key_breadcrumbName = ${breadcrumbName};

				AssertElementNotPresent(
					key_breadcrumbName = ${breadcrumbName},
					locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY");
			}
		}

		SelectFrame(value1 = "relative=top");
	}

	macro viewDisplayTemplatePreview {
		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		AssertTextEquals.assertPartialText(
			locator1 = "Select#DISPLAY_TEMPLATE",
			value1 = ${displayStyle});

		SelectFrame(value1 = "relative=top");
	}

	macro viewEntry {
		AssertTextEquals(
			key_breadcrumbName = ${breadcrumbName},
			locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY",
			value1 = ${breadcrumbName});
	}

	macro viewPG {
		if (isSet(breadcrumbListVisible)) {
			for (var breadcrumbName : list ${breadcrumbListVisible}) {
				var key_breadcrumbName = ${breadcrumbName};

				AssertTextEquals(
					locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY",
					value1 = ${breadcrumbName});
			}
		}

		if (isSet(breadcrumbListNotVisible)) {
			for (var breadcrumbName : list ${breadcrumbListNotVisible}) {
				AssertElementNotPresent(
					key_breadcrumbName = ${breadcrumbName},
					locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY");
			}
		}
	}

	macro viewSpecificPG {
		if (isSet(breadcrumbListNotVisible)) {
			for (var breadcrumbName : list ${breadcrumbListNotVisible}) {
				AssertElementNotPresent(
					key_breadcrumbName = ${breadcrumbName},
					locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY");
			}
		}

		if (isSet(breadcrumListVisible)) {
			for (var breadcrumbName : list ${breadcrumbListVisible}) {
				AssertElementPresent(
					key_breadcrumbName = ${breadcrumbName},
					locator1 = "BreadcrumbPortlet#BREADCRUMB_SPECIFIC_ENTRY");
			}
		}
	}

}