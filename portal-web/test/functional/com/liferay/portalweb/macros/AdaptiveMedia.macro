definition {
	macro adaptAllImages {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Adapt All Images");

		Alert.viewSuccessMessage();
	}

	macro adaptRemainingImages {
		var key_imageName = "${imageName}";
		var key_percentAdapted = "${percentAdapted}";

		if (IsElementNotPresent(locator1 = "AdaptiveMediaTable#PROGRESS")) {
			Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

			MenuItem.click(menuItem = "Adapt Remaining");
		}

		AssertVisible(locator1 = "AdaptiveMediaTable#PROGRESS");

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#PROGRESS",
			value1 = "${percentAdapted}"
		);

		Alert.closeMessage(messageType = "GENERIC");
	}

	macro addImageResolution {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${imageName}");

		if (isSet(description)) {
			PortletEntry.inputDescription(description = "${description}");
		}

		Type(locator1 = "TextInput#MAX_WIDTH", value1 = "${maxWidth}");

		Type(locator1 = "TextInput#MAX_HEIGHT", value1 = "${maxHeight}");

		if (isSet(addHighDensityDisplay)) {
			Check(locator1 = "Checkbox#ADD_HIGH_DENSITY_DISPLAY");
		}

		if (isSet(customID)) {
			Click(locator1 = "Radio#CUSTOM_URL");

			Type(locator1 = "TextInput#IMAGE_ID", value1 = "${customID}");
		}

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		if (isSet(duplicate)) {
			Alert.viewErrorMessage(
				errorMessage = "A configuration with this ID already exists. Please enter a unique ID."
			);
		}
		else if (isSet(zero)) {
			Alert.viewErrorMessage(
				errorMessage = "Please enter a max width or max height value larger than 0."
			);
		}
		else if (isSet(noDimensions)) {
			AssertTextEquals(
				locator1 = "Message#REQUIRED_INFO",
				value1 = "At least one value is required."
			);
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro addNonNumericImageResolution {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${imageName}");

		Type(locator1 = "TextInput#MAX_WIDTH", value1 = "${maxWidth}");

		Type(locator1 = "TextInput#MAX_HEIGHT", value1 = "${maxHeight}");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertElementNotPresent(locator1 = "Message#SUCCESS");

		AssertTextEquals(
			locator1 = "Message#REQUIRED_INFO",
			value1 = "At least one value is required."
		);
	}

	macro deleteImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertElementNotPresent(locator1 = "AdaptiveMediaTable#NAME");
	}

	macro disableImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Disable");

		var key_imageState = "${imageState}";

		AssertTextEquals(locator1 = "AdaptiveMediaTable#STATE", value1 = "Disabled");

		if (isSet(percentAdapted)) {
			var key_percentAdapted = "${percentAdapted}";

			AssertCssValue(
				locator1 = "AdaptiveMediaTable#PROGRESS_BAR_COLOR",
				locator2 = "opacity",
				value1 = "0.5"
			);
		}
	}

	macro editImageResolution {
		var key_imageName = "${imageName}";
		var key_percentAdapted = "${percentAdapted}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Edit");

		if (!(contains("${imageNameEdit}", "{imageNameEdit}"))) {
			PortletEntry.inputName(name = "${imageNameEdit}");
		}

		AssertElementNotPresent(locator1 = "Checkbox#ADD_HIGH_DENSITY_DISPLAY");

		if (IsElementPresent(locator1 = "Message#INFO", value1 = "The images for this resolution are already adapted.")) {
			AssertNotEditable(locator1 = "TextInput#IMAGE_ID");

			AssertNotEditable(locator1 = "TextInput#MAX_HEIGHT");

			AssertNotEditable(locator1 = "TextInput#MAX_WIDTH");

			AssertNotEditable(locator1 = "Radio#AUTOMATIC_URL");

			AssertNotEditable(locator1 = "Radio#CUSTOM_URL");
		}
		else {
			if (!(contains("${maxHeightEdit}", "{maxHeightEdit}"))) {
				Type(locator1 = "TextInput#MAX_HEIGHT", value1 = "${maxHeightEdit}");
			}

			if (!(contains("${maxWidthEdit}", "{maxWidthEdit}"))) {
				Type(locator1 = "TextInput#MAX_WIDTH", value1 = "${maxWidthEdit}");
			}

			if (!(contains("${imageIDEdit}", "{imageIDEdit}"))) {
				Click(locator1 = "Radio#CUSTOM_URL");

				Type(locator1 = "TextInput#IMAGE_ID", value1 = "${imageIDEdit}");
			}
		}

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		if (isSet(noDimensions)) {
			AssertTextEquals(
				locator1 = "Message#REQUIRED_INFO",
				value1 = "At least one value is required."
			);
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro enableImageResolution {
		var key_imageName = "${imageName}";

		Click(locator1 = "AdaptiveMediaTable#IMAGE_RESOLUTION_OPTIONS");

		MenuItem.click(menuItem = "Enable");

		var key_imageState = "${imageState}";

		AssertTextEquals(locator1 = "AdaptiveMediaTable#STATE", value1 = "Enabled");
	}

	macro gotoImageVariantEntry {
		var key_imageName = "${imageName}";

		AssertClick(locator1 = "AdaptiveMediaTable#NAME", value1 = "${imageName}");
	}

	macro selectAdaptiveMediaImage {
		var key_imageName = "${imageName}";

		Check(locator1 = "Checkbox#ADAPTIVE_MEDIA_IMAGE");
	}

	macro viewImageResolutionTableEntry {
		var key_imageName = "${imageName}";

		AssertTextEquals(locator1 = "AdaptiveMediaTable#NAME", value1 = "${imageName}");

		var key_imageState = "${imageState}";

		if (isSet(imageState)) {
			AssertTextEquals(
				locator1 = "AdaptiveMediaTable#STATE",
				value1 = "${imageState}"
			);
		}

		var key_percentAdapted = "${percentAdapted}";

		if (isSet(percentAdapted)) {
			AssertTextEquals.assertPartialText(
				locator1 = "AdaptiveMediaTable#PROGRESS",
				value1 = "${percentAdapted}"
			);
		}

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#MAX_WIDTH",
			value1 = "${maxWidth}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AdaptiveMediaTable#MAX_HEIGHT",
			value1 = "${maxHeight}"
		);
	}

	macro viewImageVariantDescription {
		AssertTextEquals(locator1 = "TextArea#DESCRIPTION", value1 = "${description}");
	}

	macro viewImageVariantID {
		AssertTextEquals(locator1 = "TextInput#IMAGE_ID", value1 = "${imageVariantID}");
	}

	macro viewImageVariantURL {
		var key_imageName = "${imageName}";

		AssertElementPresent(locator1 = "AdaptiveMedia#IMAGE_VARIANT_SOURCE_URL");
	}

	macro viewNoImageResolution {
		var key_imageName = "${imageName}";

		AssertElementNotPresent(locator1 = "AdaptiveMediaTable#NAME");
	}

	macro viewNumberOfAdaptedImages {
		Click(locator1 = "AdaptiveMediaTable#INFO_ICON");

		var key_numberOfAdaptedImages = "${numberOfAdaptedImages}";

		AssertTextEquals(
			locator1 = "AdaptiveMediaTable#IMAGE_INFO_DETAILS_ADAPTED_IMAGES",
			value1 = "${numberOfAdaptedImages}"
		);

		Click(locator1 = "AdaptiveMediaTable#INFO_ICON");
	}
}