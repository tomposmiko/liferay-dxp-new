definition {
	macro addBehaviorContentVisitedRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Content Visited");

		Click(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_CONTENT_VISITED_SELECT_CONTENT_BUTTON"
		);

		MenuItem.click(menuItem = "${contentVisitedContent}");

		SelectFrame(locator1 = "IFrame#SELECT_CONTENT");

		LexiconEntry.gotoEntry(rowEntry = "${webContentTitle}");

		SelectFrame(value1 = "relative=top");
	}

	macro addBehaviorPageVisitedRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Page Visited");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_PAGE_VISITED_FRIENDLY_URL_FIELD",
			value1 = "${friendlyURL}"
		);
	}

	macro addBehaviorPreviouslyVisitedSiteRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(
			userSegmentRule = "Previously Visited Site"
		);

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_PREVIOUSLY_VISITED_SITE_CONDITION_SELECT",
			value1 = "${condition}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_PREVIOUSLY_VISITED_SITE_VALUE_FIELD",
			value1 = "${conditionValue}"
		);

		Click(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_PREVIOUSLY_VISITED_SITE_ADD_BUTTON"
		);
	}

	macro addBehaviorScorePointsRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Score Points");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_SCORE_POINTS_FIELD",
			value1 = "${scorePoints}"
		);
	}

	macro addCP {
		Navigator.gotoNavItem(navItem = "User Segments");

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${userSegmentName}");

		PortletEntry.inputDescription(description = "${userSegmentDescription}");
	}

	macro addRuleCmdCP {
		Type(
			locator1 = "ContentTargeting#FORM_SEARCH_FIELD",
			value1 = "${userSegmentRule}"
		);

		ContentTargetingUserSegment.expandCategory();

		var key_userSegmentRule = "${userSegmentRule}";

		DragAndDrop(
			locator1 = "EditUserSegment#USER_SEGMENT_RULES_RULE",
			locator2 = "ContentTargeting#FORM_BUILDER",
			value1 = "${userSegmentRule}"
		);
	}

	macro addSocialFacebookAgeRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook Age");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_AGE_OLDER_THAN_FIELD",
			value1 = "${facebookOlderThanAge}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_AGE_YOUNGER_OLDER_THAN_FIELD",
			value1 = "${facebookYoungerThanAge}"
		);
	}

	macro addSocialFacebookCityRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook City");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_CITY_FIELD",
			value1 = "${facebookCity}"
		);
	}

	macro addSocialFacebookEducationRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook Education");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_EDUCATION_LEVEL_SELECT",
			value1 = "${facebookEducationLevel}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_EDUCATION_COLLEGE_HIGH_SCHOOL_NAME_FIELD",
			value1 = "${facebookCollegeHighSchoolName}"
		);
	}

	macro addSocialFacebookFriendsRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook Friends");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_FRIENDS_MORE_LESS_THAN_SELECT",
			value1 = "${moreLessThan}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_FRIENDS_FIELD",
			value1 = "${numberOfFriends}"
		);
	}

	macro addSocialFacebookGenderRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook Gender");

		if ("${facebookGenderRadio}" == "Male") {
			Click(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_MALE_RADIO"
			);
		}
		else if ("${facebookGenderRadio}" == "Female") {
			Click(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_FEMALE_RADIO"
			);
		}
		else if ("${facebookGenderRadio}" == "Custom") {
			Click(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_CUSTOM_RADIO"
			);
		}
	}

	macro addSocialFacebookPageLikeRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Facebook Page Like");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_PAGE_LIKE_FIELD",
			value1 = "${facebookURL}"
		);
	}

	macro addSystemAttributesBrowserRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Browser");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_BROWSER_SELECT",
			value1 = "${browserName}"
		);
	}

	macro addSystemAttributesDeviceRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Device");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_DEVICE_SELECT",
			value1 = "${deviceFamilyName}"
		);
	}

	macro addSystemAttributesLocationRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Location");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_LOCATION_COUNTRY_SELECT",
			value1 = "${countryName}"
		);

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_LOCATION_REGION_SELECT",
			value1 = "${regionName}"
		);
	}

	macro addSystemAttributesOperatingSystemRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Operating System");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_SYSTEM_SELECT",
			value1 = "${operatingSystemName}"
		);
	}

	macro addSystemAttributesTimeRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Access Time");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_START_TIME_FIELD",
			value1 = "${startTime}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_END_TIME_FIELD",
			value1 = "${endTime}"
		);
	}

	macro addUserAttributesAgeRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Age");

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_AGE_OLDER_THAN_FIELD",
			value1 = "${olderThanAge}"
		);

		Type(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_AGE_YOUNGER_THAN_FIELD",
			value1 = "${youngerThanAge}"
		);
	}

	macro addUserAttributesCustomFieldCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Custom Field");

		Click(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_CUSTOM_FIELD_SELECT_BUTTON"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_CUSTOM_FIELD_SELECT",
			value1 = "${customFieldKey}"
		);

		Type(locator1 = "TextInput#CUSTOM_FIELD", value1 = "${customFieldValue}");

		Button.clickDone();

		SelectFrameTop();
	}

	macro addUserAttributesGenderRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Gender");

		if ("${genderRadio}" == "Male") {
			Click(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_GENDER_MALE_RADIO"
			);
		}
		else if ("${genderRadio}" == "Female") {
			Click(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_GENDER_FEMALE_RADIO"
			);
		}
	}

	macro addUserAttributesOrganizationMemberRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(
			userSegmentRule = "Organization Member"
		);

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_MEMBER_SELECT",
			value1 = "${organizationName}"
		);
	}

	macro addUserAttributesOrganizationRoleRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Organization Role");

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_ORGANIZATION_SELECT",
			value1 = "${organizationName}"
		);

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_ROLE_SELECT",
			value1 = "${organizationRole}"
		);
	}

	macro addUserAttributesRegularRoleRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Regular Role");

		var key_regularRole = "${regularRole}";

		AssertSelectedLabel(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_DEFAULT_REGULAR_ROLE",
			value1 = "Administrator"
		);

		Select(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_REGULAR_ROLE_SELECT",
			value1 = "${regularRole}"
		);
	}

	macro addUserAttributesSiteMemberRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Site Member");

		AssertClick(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SELECT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Click(
			locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK",
			key_siteName = "${selectSiteMemberSite}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro addUserAttributesSiteRoleRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "Site Role");

		AssertClick(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SELECT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#SELECT_SITE_ROLE");

		if (IsElementPresent(locator1 = "Message#INFO")) {
			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "Please select a site to which you will assign a site role."
			);

			AssertClick(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_SITE_ROLE_SITE_CHOOSE_BUTTON",
				value1 = "Choose",
				key_siteRoleSite = "${siteRoleSite}"
			);
		}

		AssertClick(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_SITE_ROLE_SITE_ROLE_CHOOSE_BUTTON",
			value1 = "Choose",
			key_siteRole = "${siteRole}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro addUserAttributesUserGroupMemberRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "User Group Member");

		AssertClick(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_SELECT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_USERGROUP_MEMBER_USER_GROUP_CHOOSE_BUTTON",
			value1 = "Choose",
			key_userGroupName = "${userGroupName}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro addUserAttributesUserSignedInRuleCP {
		ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "User Signed In");

		AssertTextEquals(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_USER_SIGNED_IN_MESSAGE",
			value1 = "This rule will be matched if the user is signed in."
		);
	}

	macro deleteAllCP {
		PortletEntry.selectAll();

		ClickNoError(locator1 = "Icon#DELETE");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();
	}

	macro deleteUserSegmentCP {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Delete",
			rowEntry = "${userSegmentName}"
		);

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No User Segments were found"
		);
	}

	macro editGenderRule {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${userSegmentName}"
		);

		ContentTargetingUserSegment.openFormField(usersegmentRuleName = "Gender");

		Click(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_GENDER_${genderRadioPath}_RADIO"
		);
	}

	macro editUserSegmentCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${userSegmentName}"
		);

		PortletEntry.inputName(name = "${userSegmentNameEdit}");

		PortletEntry.inputDescription(description = "${userSegmentDescriptionEdit}");

		if (isSet(userSegmentRuleDeleteList)) {
			for (var userSegmentRuleDelete : list "${userSegmentRuleDeleteList}") {
				var key_userSegmentRuleDelete = "${userSegmentRuleDelete}";

				ClickNoError(locator1 = "EditUserSegment#USER_SEGMENT_RULE_DELETE");

				AssertConfirm(value1 = "Are you sure you want to delete the selected field(s)?");
			}
		}

		if (isSet(userSegmentRuleAddList)) {
			for (var userSegmentRule : list "${userSegmentRuleAddList}") {
				ContentTargetingUserSegment.addRuleCmdCP(userSegmentRule = "${userSegmentRule}");
			}
		}
	}

	macro expandCategory {
		Pause(locator1 = "1000");

		if ((IsElementPresent(locator1 = "EditUserSegment#USER_SEGMENT_RULES_CATEGORY_COLLAPSED")) && (IsVisible(locator1 = "EditUserSegment#USER_SEGMENT_RULES_CATEGORY_COLLAPSED"))) {
			Click(locator1 = "EditUserSegment#USER_SEGMENT_RULES_CATEGORY_COLLAPSED");
		}

		AssertElementPresent(
			locator1 = "EditUserSegment#USER_SEGMENT_RULES_CATEGORY_EXPANDED"
		);
	}

	macro gotoViewReport {
		LexiconEntry.gotoEntry(rowEntry = "${userSegmentName}");

		Navigator.gotoNavItem(navItem = "Reports");

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_DESCRIPTION_TD3",
			value1 = "Displays the number of times that content has been viewed by a user who belongs to the current user segment.",
			key_rowEntry = "${userSegmentName}"
		);

		LexiconEntry.gotoEntry(rowEntry = "${reportName}");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Update");

		Pause(locator1 = "1000");
	}

	macro openFormField {
		var key_fieldName = "${usersegmentRuleName}";

		if (IsElementPresent(locator1 = "ContentTargeting#FORM_FIELD_COLLAPSED")) {
			Click(locator1 = "ContentTargeting#FORM_FIELD_COLLAPSED");
		}
	}

	macro viewContentVisitedRuleEmpty {
		LexiconEntry.gotoEntry(rowEntry = "${userSegmentName}");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Edit");

		AssertElementNotPresent(
			locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_CONTENT_VISITED_WEB_CONTENT_TITLE"
		);
	}

	macro viewCP {
		Navigator.gotoNavItem(navItem = "User Segments");

		LexiconEntry.viewEntryName(rowEntry = "${userSegmentName}");

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_DESCRIPTION_TD3",
			value1 = "${userSegmentDescription}",
			key_rowEntry = "${userSegmentName}"
		);
	}

	macro viewNotPresentCP {
		Navigator.gotoNavItem(navItem = "User Segments");

		LexiconEntry.viewNoEntry(rowEntry = "${userSegmentName}");
	}

	macro viewReportContentViews {
		var key_rowEntry = "${reportTitle}";

		for (var contentReports : list "${reportsContentTableList}") {
			var key_contentReports = "${contentReports}";
			var key_reportTitle = "${reportTitle}";

			AssertTextEquals(
				locator1 = "ContentTargeting#REPORT_TABLE_CONTENT",
				value1 = "${contentReports}"
			);
		}
	}

	macro viewRulesCP {
		for (var usersegmentRuleName : list "${viewUserSegmentRuleList}") {
			var key_userSegmentRuleName = "${usersegmentRuleName}";

			if (!(isSet(ruleInstance))) {
				var ruleInstance = "1";
			}

			AssertTextEquals.assertTextCaseInsensitive(
				locator1 = "EditUserSegment#USER_SEGMENT_RULE_APPLIED",
				value1 = "${usersegmentRuleName}"
			);

			if (!("${ruleInstance}" == "1")) {
				ContentTargetingUserSegment.openFormField(
					usersegmentRuleName = "${usersegmentRuleName}"
				);
			}

			if ("${usersegmentRuleName}" == "Content Visited") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_CONTENT_VISITED_WEB_CONTENT_TITLE",
					value1 = "${webContentTitle}"
				);
			}
			else if ("${usersegmentRuleName}" == "Score Points") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_SCORE_POINTS_FIELD",
					value1 = "${scorePoints}"
				);
			}
			else if ("${usersegmentRuleName}" == "Page Visited") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_BEHAVIOR_PAGE_VISITED_FRIENDLY_URL_FIELD",
					value1 = "${friendlyURL}"
				);
			}
			else if ("${usersegmentRuleName}" == "Previously Visited Site") {
				AssertTextPresent(
					locator1 = "ContentRow#ENTRY_CONTENT_ROW_1",
					value1 = "${condition}"
				);

				AssertTextPresent(
					locator1 = "ContentRow#ENTRY_CONTENT_ROW_1",
					value1 = "${conditionValue}"
				);
			}
			else if ("${usersegmentRuleName}" == "Facebook Education") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_EDUCATION_LEVEL_SELECT",
					value1 = "${facebookEducationLevel}"
				);

				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_EDUCATION_COLLEGE_HIGH_SCHOOL_NAME_FIELD",
					value1 = "${facebookCollegeHighSchoolName}"
				);
			}
			else if ("${usersegmentRuleName}" == "Facebook City") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_CITY_FIELD",
					value1 = "${facebookCity}"
				);
			}
			else if ("${usersegmentRuleName}" == "Facebook Page Like") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_PAGE_LIKE_FIELD",
					value1 = "${facebookURL}"
				);
			}
			else if ("${usersegmentRuleName}" == "Facebook Gender") {
				if ("${facebookGenderRadio}" == "Male") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_MALE_RADIO"
					);
				}
				else if ("${facebookGenderRadio}" == "Female") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_FEMALE_RADIO"
					);
				}
				else if ("${facebookGenderRadio}" == "Custom") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_CUSTOM_RADIO"
					);
				}
			}
			else if ("${usersegmentRuleName}" == "Facebook Friends") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_FRIENDS_MORE_LESS_THAN_SELECT",
					value1 = "${moreLessThan}"
				);

				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_FRIENDS_FIELD",
					value1 = "${numberOfFriends}"
				);
			}
			else if ("${usersegmentRuleName}" == "Facebook Age") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_AGE_OLDER_THAN_FIELD",
					value1 = "${facebookOlderThanAge}"
				);

				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_AGE_YOUNGER_OLDER_THAN_FIELD",
					value1 = "${facebookYoungerThanAge}"
				);
			}
			else if ("${usersegmentRuleName}" == "Site Member") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_SITE_MEMBER_SELECT",
					value1 = "${selectSiteMemberSite}",
					key_selectSiteMemberSite = "${selectSiteMemberSite}"
				);
			}
			else if ("${userSegmentRuleName}" == "Custom Field") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_CUSTOM_FIELD_ATTRIBUTE_CONTAINER",
					value1 = "${customFieldKey}: ${customFieldValue}"
				);
			}
			else if ("${usersegmentRuleName}" == "Gender") {
				if ("${facebookGenderRadio}" == "Male") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_MALE_RADIO"
					);
				}
				else if ("${facebookGenderRadio}" == "Female") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_FEMALE_RADIO"
					);
				}
				else if ("${facebookGenderRadio}" == "Custom") {
					AssertChecked(
						locator1 = "EditUserSegment#USER_SEGMENT_RULE_SOCIAL_FACEBOOK_GENDER_CUSTOM_RADIO"
					);
				}
			}
			else if ("${usersegmentRuleName}" == "Site Role") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_SITE_ROLE_SITE_ROLE_SELECT",
					value1 = "${siteRole}"
				);

				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_SITE_ROLE_SITE_SELECT",
					value1 = "${siteRoleSite}"
				);
			}
			else if ("${usersegmentRuleName}" == "User Group Member") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_USERGROUP_MEMBER_SELECT",
					value1 = "${userGroupName}"
				);
			}
			else if ("${usersegmentRuleName}" == "User Signed In") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_USER_SIGNED_IN_MESSAGE",
					value1 = "This rule will be matched if the user is signed in."
				);
			}
			else if ("${usersegmentRuleName}" == "Organization Role") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_ORGANIZATION_SELECT",
					value1 = "${organizationName}"
				);

				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_ROLE_SELECT",
					value1 = "${organizationRole}"
				);
			}
			else if ("${usersegmentRuleName}" == "Organization Member") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_ORGANIZATION_MEMBER_SELECT",
					value1 = "${organizationName}"
				);
			}
			else if ("${usersegmentRuleName}" == "Regular Role") {
				var key_regularRole = "${regularRole}";

				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_REGULAR_ROLE_SELECT",
					value1 = "${regularRole}"
				);
			}
			else if ("${usersegmentRuleName}" == "Age") {
				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_AGE_OLDER_THAN_FIELD",
					value1 = "${olderThanAge}"
				);

				AssertTextEquals(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_USER_ATTRIBUTES_AGE_YOUNGER_THAN_FIELD",
					value1 = "${youngerThanAge}"
				);
			}
			else if ("${usersegmentRuleName}" == "Location") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_LOCATION_COUNTRY_SELECT",
					value1 = "${countryName}"
				);

				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_LOCATION_REGION_SELECT",
					value1 = "${regionName}"
				);
			}
			else if ("${usersegmentRuleName}" == "Browser") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_BROWSER_SELECT",
					value1 = "${browserName}"
				);
			}
			else if ("${usersegmentRuleName}" == "Operating System") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_SYSTEM_SELECT",
					value1 = "${operatingSystemName}"
				);
			}
			else if ("${usersegmentRuleName}" == "Time") {
				Type(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_START_TIME_FIELD",
					value1 = "${startTime}"
				);

				Type(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_OPERATING_END_TIME_FIELD",
					value1 = "${endTime}"
				);
			}
			else if ("${usersegmentRuleName}" == "Device") {
				AssertSelectedLabel(
					locator1 = "EditUserSegment#USER_SEGMENT_RULE_SESSION_ATTRIBUTES_DEVICE_SELECT",
					value1 = "${deviceFamilyName}"
				);
			}
		}
	}
}