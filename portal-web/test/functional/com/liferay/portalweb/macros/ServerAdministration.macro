definition {
	macro addCategoryLogLevels {
		Navigator.gotoNavItem(navItem = "Log Levels");

		AssertClick(locator1 = "NavBar#ADD_CATEGORY", value1 = "Add Category");

		Type(
			locator1 = "ServerAdministrationLogLevels#ADD_CATEGORY_NAME_FIELD",
			value1 = "${categoryName}"
		);

		Select(
			locator1 = "ServerAdministrationLogLevels#ADD_CATEGORY_PRIORITY_SELECT",
			value1 = "${categoryPriority}"
		);

		PortletEntry.save();
	}

	macro configureExternalServices {
		Navigator.gotoNavItem(navItem = "External Services");

		if ("${enableOpenOfficeIntegration}" == "true") {
			Check(
				locator1 = "ServerAdministrationExternalServices#OPEN_OFFICE_ENABLED_CHECKBOX"
			);
		}
		else if ("${enableOpenOfficeIntegration}" == "false") {
			Uncheck(
				locator1 = "ServerAdministrationExternalServices#OPEN_OFFICE_ENABLED_CHECKBOX"
			);
		}

		if ((isSet(installXuggler)) && (IsElementNotPresent(locator1 = "ServerAdministrationExternalServices#XUGGLER_ENABLED_CHECKBOX"))) {
			Panel.expandPanel(
				panel = "Enabling Xuggler provides video conversion functionality."
			);

			AssertClick(
				locator1 = "ServerAdministrationExternalServices#XUGGLER_INSTALL_BUTTON",
				value1 = "Install"
			);

			Panel.expandPanel(
				panel = "Enabling Xuggler provides video conversion functionality."
			);

			AssertTextNotEquals(
				locator1 = "Message#INFO",
				value1 = "Xuggler requires the installation of native libraries that are distributed under the GPL license. If you are able to find your environment specified below, the server can automatically download and install the libraries for you. You will subsequently be required to restart the server. If your environment is not listed below, you will need to compile and install the libraries manually. Read more."
			);

			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "Xuggler has been installed. You need to reboot your server to apply changes."
			);

			AssertElementNotPresent(
				locator1 = "ServerAdministrationExternalServices#XUGGLER_JAR_FILE_SELECT"
			);
		}

		if ("${enableXuggler}" == "true") {
			AssertTextEquals(
				locator1 = "Message#INFO",
				value1 = "Xuggler appears to be installed correctly. Enable to allow audio and video preview generation."
			);

			Check(
				locator1 = "ServerAdministrationExternalServices#XUGGLER_ENABLED_CHECKBOX"
			);
		}

		PortletEntry.save();
	}

	macro configureFileUploadOverallMaximumFileSize {
		Type(
			locator1 = "ServerAdministrationFileUploads#GENERAL_OVERALL_MAX_FILE_SIZE_FIELD",
			value1 = "${maxFileSize}"
		);

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);
	}

	macro configureMailServerSettings {
		Navigator.gotoNavItem(navItem = "Mail");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_POP_SERVER",
			value1 = "pop.gmail.com"
		);

		Type(locator1 = "ServerAdministrationMail#INCOMING_PORT", value1 = "995");

		Check(
			locator1 = "ServerAdministrationMail#INCOMING_SECURE_NETWORK_CONNECTION_CHECKBOX"
		);

		if ("${needsReply}" == "true") {
			Type(
				locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
				value1 = "recent:${userName}"
			);
		}
		else {
			Type(
				locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
				value1 = "${userName}"
			);
		}

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PASSWORD",
			value1 = "${userPassword}"
		);

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_SMTP_SERVER",
			value1 = "smtp.gmail.com"
		);

		Type(locator1 = "ServerAdministrationMail#OUTGOING_PORT", value1 = "465");

		Check(locator1 = "ServerAdministrationMail#OUTGOING_SECURE_CONNECTION_CHECKBOX");

		if ("${needsReply}" == "true") {
			Type(
				locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME",
				value1 = "recent:${userName}"
			);
		}
		else {
			Type(
				locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME",
				value1 = "${userName}"
			);
		}

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_PASSWORD",
			value1 = "${userPassword}"
		);

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);
	}

	macro executeScript {
		Navigator.gotoNavItem(navItem = "Script");

		Select(
			locator1 = "ServerAdministrationScript#LANGUAGE_SELECT",
			value1 = "${language}"
		);

		Type(locator1 = "ServerAdministrationScript#SCRIPT_TEXT", value1 = "${script}");

		AssertClick(
			locator1 = "ServerAdministrationScript#EXECUTE_BUTTON",
			value1 = "Execute"
		);

		Alert.viewSuccessMessage();
	}

	macro executeServerResourcesActions {
		Navigator.gotoNavItem(navItem = "Resources");

		Panel.expandPanel(panel = "Clean Up Actions");

		var key_actionsDescription = "${actionsDescription}";

		AssertTextEquals.assertPartialText(
			locator1 = "ServerAdministrationResources#ACTIONS_TABLE_DESCRIPTION",
			value1 = "${actionsDescription}"
		);

		AssertClick(
			locator1 = "ServerAdministrationResources#ACTIONS_TABLE_EXECUTE",
			value1 = "Execute"
		);

		Alert.viewSuccessMessage();
	}

	macro tearDownDMFileUploadSettings {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		Navigator.gotoNavItem(navItem = "File Uploads");

		Type(
			locator1 = "ServerAdministrationFileUploads#DOCS_AND_MEDIA_MAX_FILE_SIZE_FIELD",
			value1 = ""
		);

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");
	}

	macro tearDownMailServerSettings {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		Navigator.gotoNavItem(navItem = "Mail");

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_POP_SERVER",
			value1 = "localhost"
		);

		Type(locator1 = "ServerAdministrationMail#INCOMING_PORT", value1 = "110");

		Uncheck(
			locator1 = "ServerAdministrationMail#INCOMING_SECURE_NETWORK_CONNECTION_CHECKBOX"
		);

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_USER_NAME",
			value1 = "weblogic"
		);

		Type(
			locator1 = "ServerAdministrationMail#INCOMING_PASSWORD",
			value1 = "password"
		);

		Type(
			locator1 = "ServerAdministrationMail#OUTGOING_SMTP_SERVER",
			value1 = "localhost"
		);

		Type(locator1 = "ServerAdministrationMail#OUTGOING_PORT", value1 = "25");

		Uncheck(
			locator1 = "ServerAdministrationMail#OUTGOING_SECURE_CONNECTION_CHECKBOX"
		);

		Type(locator1 = "ServerAdministrationMail#OUTGOING_USER_NAME", value1 = "");

		Type(locator1 = "ServerAdministrationMail#OUTGOING_PASSWORD", value1 = "");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);
	}
}