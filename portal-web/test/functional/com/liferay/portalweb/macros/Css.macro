definition {

	macro assertCssValueIsGreaterThan {
		var actual = Css.getCssValue(
			attribute = "${attribute}",
			element = "${element}");

		var actual = StringUtil.extractLeadingDigits("${actual}");

		TestUtils.isGreaterThan(
			actual = "${actual}",
			expected = "${expected}");
	}

	macro getCssValue {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"));

return computedStyle.getPropertyValue("${attribute}");

		''';

		var cssValue = selenium.getEval("${javascript}");

		return "${cssValue}";
	}

	macro getElementPropertyValue {
		WaitForSPARefresh();

		var javascript = '''
var value = document.evaluate("${element}", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.${property};

return value.toString();
	''';

		var propertyValue = selenium.getEval("${javascript}");

		return "${propertyValue}";
	}

	macro getPseudoElementCssValue {
		WaitForSPARefresh();

		var javascript = '''
function getWebElement(locator) {
	return document.evaluate(locator, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

var computedStyle = getComputedStyle(getWebElement("${element}"),'${pseudo}');

return computedStyle.getPropertyValue("${attribute}");

		''';

		var cssValue = selenium.getEval("${javascript}");

		return "${cssValue}";
	}

}