definition {
	macro addCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${campaignName}");

		PortletEntry.inputDescription(description = "${campaignDescription}");

		if (isSet(userSegmentSelect)) {
			Click(locator1 = "EditCampaign#CAMPAIGN_USER_SEGMENT_SELECT");

			Click(
				locator1 = "EditCampaign#SELECT_USER_SEGMENT_CHECKBOX",
				key_userSegmentName = "${userSegmentSelect}"
			);

			Click(locator1 = "Button#OK");
		}

		Type(
			locator1 = "EditCampaign#CAMPAIGN_START_DATE_FIELD",
			value1 = "${campaignStartDate}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_START_TIME_FIELD",
			value1 = "${campaignStartTime}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_END_DATE_FIELD",
			value1 = "${campaignEndDate}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_END_TIME_FIELD",
			value1 = "${campaignEndTime}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_PRIORITY_FIELD",
			value1 = "${campaignPriorityField}"
		);

		if ("${campaignInactive}" == "true") {
			Uncheck.uncheckHiddenToggleSwitch(locator1 = "ToggleSwitch#ACTIVE");
		}
	}

	macro addReportName {
		PortletEntry.inputName(name = "${reportName}");

		PortletEntry.inputDescription(description = "${reportDescription}");
	}

	macro addTrackingActionContentCP {
		ContentTargetingCampaign.addTrackingActionsCmd(
			campaignTrackingAction = "Content"
		);

		AssertElementPresent(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_SELECT_CONTENT_BUTTON"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_NAME_FIELD",
			value1 = "${contentMetricName}"
		);

		Click(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_SELECT_CONTENT_BUTTON"
		);

		MenuItem.click(menuItem = "${menulistContent}");

		SelectFrame(locator1 = "IFrame#SELECT_CONTENT");

		var key_rowEntry = "${contentTitle}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertPartialText(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_TRACKING_ACTION",
			value1 = "View"
		);
	}

	macro addTrackingActionCustomFormCP {
		ContentTargetingCampaign.addTrackingActionsCmd(
			campaignTrackingAction = "Custom Form"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_NAME_FIELD",
			value1 = "${formAlias}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_FORM_ID_FIELD",
			value1 = "${formId}"
		);

		Select(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_TRACKING_ACTION_SELECT",
			value1 = "${formTrackingActionSelect}"
		);
	}

	macro addTrackingActionDDLFormCP {
		ContentTargetingCampaign.addTrackingActionsCmd(campaignTrackingAction = "Form");

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_NAME_FIELD",
			value1 = "${formAlias}"
		);

		Click(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_FORM_NAME_FIELD"
		);

		Click(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_SELECT_BUTTON"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Search.searchCP(searchTerm = "${formName}");

		Click(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
			key_rowEntry = "${formName}"
		);

		SelectFrameTop();

		Select(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_TRACKING_ACTION_SELECT",
			value1 = "${formTrackingActionSelect}"
		);
	}

	macro addTrackingActionLinkCP {
		ContentTargetingCampaign.addTrackingActionsCmd(campaignTrackingAction = "Link");

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_ALIAS_FIELD",
			value1 = "${linkAlias}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_ID_FIELD",
			value1 = "${linkId}"
		);

		AssertTextEquals(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_TRACKING_ACTION",
			value1 = "Click"
		);
	}

	macro addTrackingActionPageCP {
		ContentTargetingCampaign.addTrackingActionsCmd(campaignTrackingAction = "Page");

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_PAGE_ALIAS_FIELD",
			value1 = "${pageAlias}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_PAGE_FRIENDLY_URL_FIELD",
			value1 = "${pageFriendlyURL}"
		);
	}

	macro addTrackingActionsCmd {
		Type(
			locator1 = "ContentTargeting#FORM_SEARCH_FIELD",
			value1 = "${campaignTrackingAction}"
		);

		var key_campaignTrackingAction = "${campaignTrackingAction}";

		DragAndDrop(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS",
			locator2 = "ContentTargeting#FORM_BUILDER",
			value1 = "${campaignTrackingAction}"
		);
	}

	macro addTrackingActionYoutubevideosCP {
		ContentTargetingCampaign.addTrackingActionsCmd(
			campaignTrackingAction = "YouTube Videos"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_ALIAS_FIELD",
			value1 = "${youtubeAlias}"
		);

		Type(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_VIDEO_ID_FIELD",
			value1 = "${youtubeVideoId}"
		);

		Select(
			locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_TRACKING_ACTION_SELECT",
			value1 = "${youtubeTrackingActionSelect}"
		);
	}

	macro deleteAllCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		PortletEntry.selectAll();

		ClickNoError(locator1 = "Icon#DELETE");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();
	}

	macro deleteCampaignCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoEllipsisMenuItemNoError(menuItem = "Delete");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);
	}

	macro editCampaignCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		PortletEntry.inputName(name = "${campaignNameEdit}");

		PortletEntry.inputDescription(description = "${campaignDescriptionEdit}");

		if (isSet(userSegmentSelectEdit)) {
			Click(locator1 = "EditCampaign#CAMPAIGN_USER_SEGMENT_SELECT");

			Click(
				locator1 = "EditCampaign#SELECT_USER_SEGMENT_CHECKBOX",
				key_userSegmentName = "${userSegmentSelectEdit}"
			);

			Click(locator1 = "Button#OK");
		}

		if (isSet(campaignStartDateEdit)) {
			Type(
				locator1 = "EditCampaign#CAMPAIGN_START_DATE_FIELD",
				value1 = "${campaignStartDateEdit}"
			);
		}
		else if (isSet(campaignStartTimeEdit)) {
			Type(
				locator1 = "EditCampaign#CAMPAIGN_START_TIME_FIELD",
				value1 = "${campaignStartTimeEdit}"
			);
		}
		else if (isSet(campaignEndDateEdit)) {
			Type(
				locator1 = "EditCampaign#CAMPAIGN_END_DATE_FIELD",
				value1 = "${campaignEndDateEdit}"
			);
		}
		else if (isSet(campaignEndTimeEdit)) {
			Type(
				locator1 = "EditCampaign#CAMPAIGN_END_TIME_FIELD",
				value1 = "${campaignEndTimeEdit}"
			);
		}
		else if (isSet(campaignPriorityFieldEdit)) {
			Type(
				locator1 = "EditCampaign#CAMPAIGN_PRIORITY_FIELD",
				value1 = "${campaignPriorityFieldEdit}"
			);
		}
	}

	macro editCustomReport {
		if (isSet(trackingActionDeleteList)) {
			for (var trackingActionDelete : list "${trackingActionDeleteList}") {
				var key_trackingAction = "${trackingActionDelete}";

				ClickNoError(locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DELETE");

				AssertConfirm(value1 = "Are you sure you want to delete the selected field(s)?");
			}
		}

		if (isSet(trackingActionAddList)) {
			for (var trackingActionAdd : list "${trackingActionAddList}") {
				var key_trackingAction = "${trackingActionAdd}";

				if ("${trackingActionAdd}" == "form") {
					ContentTargetingCampaign.addTrackingActionCustomFormCP(
						formAlias = "${formAlias}",
						formId = "${formId}",
						formTrackingActionSelect = "${formTrackingActionSelect}"
					);
				}
				else if ("${trackingActionAdd}" == "youtube") {
					ContentTargetingCampaign.addTrackingActionYoutubevideosCP(
						youtubeAlias = "Youtube Alias",
						youtubeTrackingActionSelect = "Playing",
						youtubeVideoId = "Youtube id"
					);
				}
				else if ("${trackingActionAdd}" == "content") {
					ContentTargetingCampaign.addTrackingActionContentCP(
						contentAlias = "${contentAlias}",
						contentTitle = "${contentTitle}",
						contentTrackingActionSelect = "${contentTrackingActionSelect}",
						linkId = "${linkId}",
						menulistContent = "${menulistContent}",
						reportDescription = "${reportDescription}",
						reportName = "${reportName}"
					);
				}
				else if ("${trackingActionAdd}" == "link") {
					ContentTargetingCampaign.addTrackingActionLinkCP(
						linkAlias = "Link Alias",
						linkId = "Link id",
						linkTrackingActionSelect = "Click"
					);
				}
				else if ("${trackingActionAdd}" == "page") {
					ContentTargetingCampaign.addTrackingActionPageCP(
						pageAlias = "${pageAlias}",
						pageFriendlyURL = "{pageFriendlyURL}",
						pageTrackingActionSelect = "${pageTrackingActionSelect]"
					);
				}
			}
		}
	}

	macro gotoAddReport {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoEntry(rowEntry = "${campaignName}");

		Navigator.gotoNavItem(navItem = "Reports");

		LexiconEntry.gotoAdd();
	}

	macro gotoEditReport {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoEntry(rowEntry = "${campaignName}");

		Navigator.gotoNavItem(navItem = "Reports");

		Click(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS",
			key_rowEntry = "${reportName}"
		);

		MenuItem.click(menuItem = "Edit");
	}

	macro saveCP {
		Pause(locator1 = "5000");

		PortletEntry.save();
	}

	macro updateReport {
		Navigator.gotoNavItem(navItem = "Campaigns");

		LexiconEntry.gotoEntry(rowEntry = "${campaignName}");

		Navigator.gotoNavItem(navItem = "Reports");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		if ("contentViewsDescription" == "true") {
			AssertTextEquals(
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_DESCRIPTION_TD3",
				value1 = "Displays the number of times that content has been viewed by users in the context of the current campaign.",
				key_rowEntry = "Content Views"
			);
		}

		LexiconEntry.gotoEntry(rowEntry = "${viewReportType}");

		var key_reportType = "${viewReportType}";

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Update");

		Pause(locator1 = "1000");

		Alert.viewSuccessMessage();

		if ("${notEnoughInfoContentView}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "There is not enough data to generate a content views report for the campaign ${campaignName}. Please make sure the Campaign Content Display application is available on any site page."
			);
		}

		if ("${notEnoughInfoTrackingAction}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "There is not enough data to generate this report. Please, make sure that at least one metric has been set for this report."
			);
		}
	}

	macro viewCampaignCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		var key_rowEntry = "${campaignName}";

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
			value1 = "${campaignName}"
		);

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_DESCRIPTION_TD3",
			value1 = "${campaignDescription}"
		);

		AssertTextEquals(
			locator1 = "EditCampaign#CAMPAIGN_TABLE_PRIORITY",
			value1 = "${campaignPriority}"
		);

		AssertTextEquals(
			locator1 = "EditCampaign#CAMPAIGN_TABLE_STATUS",
			value1 = "${campaignStatus}"
		);

		if (isSet(userSegmentSelect)) {
			LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "${campaignName}");

			AssertTextEquals(
				locator1 = "EditCampaign#CAMPAIGN_USER_SEGMENT_APPLIED",
				value1 = "${userSegmentSelect}"
			);
		}
	}

	macro viewContentReportCP {
		var key_reportTitle = "${reportTitle}";

		if ("${reportTitle}" == "DM Document Title") {
			SikuliAssertElementPresent(
				locator1 = "CampaignReports#CONTENT_GRAPH_DM_DOCUMENT_TITLE"
			);
		}
		else if ("${reportTitle}" == "Content Metric Name") {
			SikuliAssertElementPresent(
				locator1 = "CampaignReports#CONTENT_GRAPH_CONTENT_MERIC_NAME"
			);
		}

		for (var contentReports : list "${reportsContentTableList}") {
			var key_contentReports = "${contentReports}";

			AssertTextEquals(
				locator1 = "ContentTargeting#REPORT_TABLE_CONTENT",
				value1 = "${contentReports}"
			);
		}
	}

	macro viewMetricReport {
		var key_metricName = "${metricName}";

		for (var metricReports : list "${metricReportsTableList}") {
			var key_metricReports = "${metricReports}";

			AssertTextEquals(
				locator1 = "CampaignReports#METRIC_TABLE_CONTENT",
				value1 = "${metricReports}"
			);
		}
	}

	macro viewNotPresentCP {
		Navigator.gotoNavItem(navItem = "Campaigns");

		var key_campaignName = "${campaignName}";

		AssertElementNotPresent(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK");
	}

	macro viewTrackingActionsCP {
		for (var trackingAction : list "${viewTrackingActionsList}") {
			var key_trackingAction = "${trackingAction}";

			AssertTextEquals.assertTextCaseInsensitive(
				locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_APPLIED",
				value1 = "${trackingAction}"
			);

			var key_fieldName = "${trackingAction}";

			if (IsElementPresent(locator1 = "ContentTargeting#FORM_FIELD_COLLAPSED")) {
				Click(locator1 = "ContentTargeting#FORM_FIELD_COLLAPSED");
			}

			if ("${trackingAction}" == "Page") {
				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_PAGE_ALIAS_FIELD",
					value1 = "${pageAlias}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_PAGE_FRIENDLY_URL_FIELD",
					value1 = "${pageFriendlyURL}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_PAGE_TRACKING_ACTION",
					value1 = "View"
				);
			}
			else if ("${trackingAction}" == "Custom Form") {
				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_NAME_FIELD",
					value1 = "${formAlias}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_FORM_ID_FIELD",
					value1 = "${formId}"
				);

				AssertSelectedLabel(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CUSTOM_FORM_TRACKING_ACTION_SELECT",
					value1 = "${formTrackingActionSelect}"
				);
			}
			else if ("${trackngAction}" == "Form") {
				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_NAME_FIELD",
					value1 = "${formAlias}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_FORM_NAME_FIELD",
					value1 = "${formName}"
				);

				AssertSelectedLabel(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_DDL_FORM_TRACKING_ACTION_SELECT",
					value1 = "${formTrackingActionSelect}"
				);
			}
			else if ("${trackingAction}" == "Youtube") {
				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_ALIAS_FIELD",
					value1 = "${youtubeAlias}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_VIDEO_ID_FIELD",
					value1 = "${youtubeVideoId}"
				);

				AssertSelectedLabel(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_YOUTUBE_VIDEOS_TRACKING_ACTION_SELECT",
					value1 = "${youtubeTrackingActionSelect}"
				);
			}
			else if ("${trackingAction}" == "Content") {
				AssertValue(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_NAME_FIELD",
					value1 = "${contentMetricName}"
				);

				AssertTextEquals(
					locator1 = "ContentTargeting#CARD_CONTENT_TITLE",
					value1 = "${contentTitle}",
					key_contentTitle = "${contentTitle}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_CONTENT_TRACKING_ACTION",
					value1 = "View"
				);
			}
			else if ("${trackingAction}" == "Link") {
				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_ALIAS_FIELD",
					value1 = "${linkAlias}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_ID_FIELD",
					value1 = "${linkId}"
				);

				AssertTextEquals(
					locator1 = "EditCampaign#CAMPAIGN_TRACKING_ACTIONS_LINK_TRACKING_ACTION",
					value1 = "Click"
				);
			}
		}

		PortletEntry.save();
	}
}