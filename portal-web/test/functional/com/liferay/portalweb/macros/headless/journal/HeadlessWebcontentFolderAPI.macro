definition {

	macro _addSubfolderInAnExistingStructuredContentFolder {
		Variables.assertDefined(parameterList = "${name}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/structured-content-folders/${parentStructuredContentFolderId}/structured-content-folders \
				-u ${userEmailAddress}:${userPassword} \
				-H accept: application/json \
				-H Content-Type: application/json \
				-d {
                    "externalReferenceCode": "${externalReferenceCode}",
                    "name": "${name}"
				}
		''';

		var response = JSONCurlUtil.post("${curl}");

		return "${response}";
	}

	macro _addWebcontentFolder {
		Variables.assertDefined(parameterList = "${name}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "";
		}

		if (isSet(assetLibraryId)) {
			var api = "asset-libraries/${assetLibraryId}/structured-content-folders";
		}
		else {
			var api = "sites/${siteId}/structured-contents";
		}

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/${api} \
				-u ${userEmailAddress}:${userPassword} \
				-H accept: application/json \
				-H Content-Type: application/json \
				-d {
                    "externalReferenceCode": "${externalReferenceCode}",
                    "name": "${name}"
				}
		''';

		var response = JSONCurlUtil.post("${curl}");

		return "${response}";
	}

	macro _filterStructuredContentFolders {
		Variables.assertDefined(parameterList = "${filterValue}");

		if (isSet(assetLibraryId)) {
			var api = "asset-libraries/${assetLibraryId}/structured-content-folders";
		}
		else {
			var api = "sites/${siteId}/structured-contents";
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
            ${portalURL}/o/headless-delivery/v1.0/${api}?filter=${filterValue} \
            -u test@liferay.com:test \
            -H Content-Type: application/json
        ''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro _getStructuredContentFoldersByErcInAssetLibrary {
		Variables.assertDefined(parameterList = "${assetLibraryId},${externalReferenceCode}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
            ${portalURL}/o/headless-delivery/v1.0/asset-libraries/${assetLibraryId}/structured-content-folders/by-external-reference-code/${externalReferenceCode} \
            -u test@liferay.com:test \
            -H Content-Type: application/json
        ''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro assertExternalReferenceCodeWithCorrectValue {
		if (!(isSet(expectedExternalReferenceCodeValue))) {
			var expectedExternalReferenceCodeValue = HeadlessWebcontentFolderAPI.getUuidOfCreatedStructuredContentFolder(responseToParse = "${responseToParse}");
		}

		var actualExternalReferenceCodeValue = JSONUtil.getWithJSONPath("${responseToParse}", "$..externalReferenceCode");

		TestUtils.assertEquals(
			actual = "${actualExternalReferenceCodeValue}",
			expected = "${expectedExternalReferenceCodeValue}");
	}

	macro assertProperTotalCountOfStructuredContentFoldersInAssetLibrary {
		Variables.assertDefined(parameterList = "${assetLibraryId},${expectedStructuredContentFolderTotalCount}");

		var response = HeadlessWebcontentFolderAPI._filterStructuredContentFolders(
			assetLibraryId = "${assetLibraryId}",
			filterValue = "${filterValue}");

		var actualTotalCount = JSONUtil.getWithJSONPath("${response}", "$..['totalCount']");

		TestUtils.assertEquals(
			actual = "${actualTotalCount}",
			expected = "${expectedStructuredContentFolderTotalCount}");
	}

	macro assetProperNumberOfStructuredContentFolders {
		var actualNumbers = JSONUtil.getWithJSONPath("${responseToParse}", "$..['numberOfStructuredContentFolders']");

		TestUtils.assertEquals(
			actual = "${actualNumbers}",
			expected = "${expectedNumbers}");
	}

	macro createStructuredContentFolderInAssetLibrary {
		Variables.assertDefined(parameterList = "${assetLibraryId},${name}");

		var response = HeadlessWebcontentFolderAPI._addWebcontentFolder(
			assetLibraryId = "${assetLibraryId}",
			description = "${description}",
			externalReferenceCode = "${externalReferenceCode}",
			name = "${name}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}",
			viewableBy = "${viewableBy}");

		return "${response}";
	}

	macro createSubfolderInStructuredContentFolder {
		Variables.assertDefined(parameterList = "${parentStructuredContentFolderId},${name}");

		var response = HeadlessWebcontentFolderAPI._addSubfolderInAnExistingStructuredContentFolder(
			description = "${description}",
			externalReferenceCode = "${externalReferenceCode}",
			name = "${name}",
			parentStructuredContentFolderId = "${parentStructuredContentFolderId}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}",
			viewableBy = "${viewableBy}");

		return "${response}";
	}

	macro getElementOfCreatedStructuredContentFolder {
		Variables.assertDefined(parameterList = "${responseToParse},${element}");

		var elementValue = JSONUtil.getWithJSONPath("${responseToParse}", "${element}");

		return "${elementValue}";
	}

	macro getStructuredContentFoldersByErcInAssetLibrary {
		Variables.assertDefined(parameterList = "${assetLibraryId},${externalReferenceCode}");

		var response = HeadlessWebcontentFolderAPI._getStructuredContentFoldersByErcInAssetLibrary(
			assetLibraryId = "${assetLibraryId}",
			externalReferenceCode = "${externalReferenceCode}");

		return "${response}";
	}

	macro getUuidOfCreatedStructuredContentFolder {
		Variables.assertDefined(parameterList = "${responseToParse}");

		var folderId = JSONUtil.getWithJSONPath("${responseToParse}", "$.id");

		var mysqlStatement = "SELECT uuid_ FROM JournalFolder WHERE folderid = '${folderId}';";

		var sqlResults = SQL.executeMySQLStatement(mysqlStatement = "${mysqlStatement}");

		var uuidResult = StringUtil.regexReplaceAll("${sqlResults}", "[\r\n]", "");

		var structuredContentUuid = StringUtil.extractLast("${uuidResult}", "uuid_");

		return "${structuredContentUuid}";
	}

}