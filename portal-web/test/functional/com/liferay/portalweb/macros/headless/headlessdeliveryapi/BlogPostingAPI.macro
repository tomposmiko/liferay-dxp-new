definition {

	macro _createBlogPosting {
		Variables.assertDefined(parameterList = "${headline},${articleBody}");

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings \
			-u test@liferay.com:test \
			-H Content-Type: application/json \
            -d
					{
     "headline": "${headline}",
     "articleBody": "${articleBody}"
	}
		''';

		var curl = JSONCurlUtil.post("${curl}");

		return "${curl}";
	}

	macro _createNBlogPostings {
		Variables.assertDefined(parameterList = "${numberOfBlogPostingsToCreate},${createStrategy}");

		if (!(isSet(importStrategy))) {
			var importStrategy = "ON_ERROR_FAIL";
		}

		var body = BlogPostingAPI._createNBlogPostingsBody(
			numberOfBlogPostingsToCreate = "${numberOfBlogPostingsToCreate}",
			testCase = "${testCase}");
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings/batch?createStrategy=${createStrategy}\&importStrategy=${importStrategy} \
			-u test@liferay.com:test \
			-H Content-Type: application/json \
            -d ${body}
		''';

		var curl = JSONCurlUtil.post("${curl}");

		return "${curl}";
	}

	macro _createNBlogPostingsBody {
		if (!(isSet(headline))) {
			var headline = "headline";
		}

		if (!(isSet(articleBody))) {
			var articleBody = "articleBody";
		}

		if (!(isSet(externalReferenceCode))) {
			var externalReferenceCode = "erc";
		}

		if (!(isSet(testCase))) {
			var testCase = "";
		}

		if ("${testCase}" == "updateOneBlogPosting") {
			var response = BlogPostingAPI._getBlogPostings();

			var existingHeadline = BlogPostingAPI._getHeadlineOfExistingBlogPosting(response = "${response}");
			var existingArticleBody = BlogPostingAPI._getArticleBodyOfExistingBlogPosting(response = "${response}");
			var existingExternalReferenceCode = BlogPostingAPI._getExternalReferenceCodeOfExistingBlogPosting(response = "${response}");

			var body = '''
				[
					{
					"headline": "${existingHeadline}",
        			"articleBody": "${existingArticleBody}",
					"externalReferenceCode": "${existingExternalReferenceCode}"
					},
					{
					"headline": "headlineUpdated",
        			"articleBody": "articleBodyUpdated",
					"externalReferenceCode": "ercUpdated"
					}
				]
			''';
		}
		else {
			var size = ${numberOfBlogPostingsToCreate} + 1;
			var i = "1";
			var body = '''
		[
				''';

			while ("${i}" != "${size}" && (maxIterations = "100")) {
				var blogPostingBody = '''
					{
					"headline": "${headline}${i}",
        			"articleBody": "${articleBody}${i}",
					"externalReferenceCode": "${externalReferenceCode}${i}"
					}
			''';
				var j = ${i} + 1;

				if ("${j}" == "${size}") {
					var body = StringUtil.replace("${body}", "${body}", "${body}${blogPostingBody}]");
				}
				else {
					var blogPostingBody = StringUtil.replace("${blogPostingBody}", "${blogPostingBody}", "${blogPostingBody},");

					var body = StringUtil.replace("${body}", "${body}", "${body}${blogPostingBody}");
				}

				var i = ${i} + 1;
			}
		}

		return "${body}";
	}

	macro _deleteBlogPosting {
		Variables.assertDefined(parameterList = "${blogPostingId}");

		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");
		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/${blogPostingId} \
			-u test@liferay.com:test \
			-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.delete("${curl}");

		return "${curl}";
	}

	macro _getArticleBodyOfExistingBlogPosting {
		var articleBody = JSONUtil.getWithJSONPath("${response}", "$.items.[0].articleBody");

		return "${articleBody}";
	}

	macro _getBlogPostings {
		var portalURL = JSONCompany.getPortalURL();
		var siteId = JSONGroupAPI._getGroupIdByNameNoSelenium(
			groupName = "Guest",
			site = "true");

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/sites/${siteId}/blog-postings \
			-u test@liferay.com:test \
			-H Content-Type: application/json
		''';

		var curl = JSONCurlUtil.get("${curl}");

		return "${curl}";
	}

	macro _getExternalReferenceCodeOfExistingBlogPosting {
		var externalReferenceCode = JSONUtil.getWithJSONPath("${response}", "$.items.[0].externalReferenceCode");

		return "${externalReferenceCode}";
	}

	macro _getHeadlineOfExistingBlogPosting {
		var headline = JSONUtil.getWithJSONPath("${response}", "$.items.[0].headline");

		return "${headline}";
	}

	macro _updateOneBlogPostingBodyParameter {
		Variables.assertDefined(parameterList = "${blogPostingId},${bodyParameterKey},${bodyParameterValue},${updateStrategy}");

		var bodyKeyValuePair = '''"${bodyParameterKey}": "${bodyParameterValue}"''';
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/o/headless-delivery/v1.0/blog-postings/batch?updateStrategy=${updateStrategy} \
			-u test@liferay.com:test \
			-H Content-Type: application/json \
			-d
				[
					{
					${bodyKeyValuePair},
					"id": "${blogPostingId}"
					}
				]
		''';

		var response = JSONCurlUtil.put("${curl}");

		return "${response}";
	}

	macro deleteAllBlogPostings {
		var response = BlogPostingAPI._getBlogPostings();

		var blogPostingIdsList = JSONUtil.getWithJSONPath("${response}", "$.items.[*].id");

		for (var blogPostingId : list "${blogPostingIdsList}") {
			BlogPostingAPI._deleteBlogPosting(blogPostingId = "${blogPostingId}");
		}
	}

	macro getIdOfCreatedBlogPosting {
		var response = BlogPostingAPI._createBlogPosting(
			articleBody = "${articleBody}",
			headline = "${headline}");

		var blogPostingId = JSONUtil.getWithJSONPath("${response}", "$.['id']");

		return "${blogPostingId}";
	}

	macro getIdOfCreateNBlogPostingBatchEngineImportTask {
		var response = BlogPostingAPI._createNBlogPostings(
			createStrategy = "${createStrategy}",
			numberOfBlogPostingsToCreate = "${numberOfBlogPostingsToCreate}",
			testCase = "${testCase}");

		var importTaskId = JSONUtil.getWithJSONPath("${response}", "$.id");

		return "${importTaskId}";
	}

	macro getIdOfUpdateOneBlogPostingBodyParameter {
		var response = BlogPostingAPI._updateOneBlogPostingBodyParameter(
			blogPostingId = "${blogPostingId}",
			bodyParameterKey = "${bodyParameterKey}",
			bodyParameterValue = "${bodyParameterValue}",
			updateStrategy = "${updateStrategy}");

		var importTaskId = JSONUtil.getWithJSONPath("${response}", "$.id");

		return "${importTaskId}";
	}

	macro getNumberOfBlogPostingsCreated {
		var response = BlogPostingAPI._getBlogPostings();

		var numberOfBlogPostingsCreated = JSONUtil.getWithJSONPath("${response}", "$.totalCount");

		return "${numberOfBlogPostingsCreated}";
	}

}