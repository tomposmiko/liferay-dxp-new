definition {

	macro _configureExportSiteOptions {
		if (isSet(larFileName)) {
			Type(
				locator1 = "SitePagesExport#EXPORT_PROCESS_NAME",
				value1 = "${larFileName}");
		}

		if (isSet(contentDateRange)) {
			ContentConfiguration.contentDateRange(contentDateRange = "${contentDateRange}");
		}

		if ("${exportPermissions}" == "true") {
			ContentConfiguration.exportPermissions();
		}

		if ("${uncheckLogo}" == "true") {
			ContentConfiguration.uncheckLogo();
		}

		if ("${uncheckSitePagesSettings}" == "true") {
			ContentConfiguration.uncheckSitePagesSettings();
		}

		if ("${uncheckSiteTemplateSettings}" == "true") {
			ContentConfiguration.uncheckSiteTemplateSettings();
		}

		if (isSet(checkPageName)) {
			ContentConfiguration.checkPageName(checkPageName = "${checkPageName}");
		}

		if ("${contentDeletion}" == "true") {
			ContentConfiguration.contentDeletion();
		}

		if (isSet(checkContentNameList)) {
			ContentConfiguration.checkContentNameList(checkContentNameList = "${checkContentNameList}");
		}

		if (isSet(uncheckContentNameList)) {
			ContentConfiguration.uncheckContentNameList(uncheckContentNameList = "${uncheckContentNameList}");
		}

		if (isSet(uncheckSubContent)) {
			ContentConfiguration.uncheckSubContent(
				mainContent = "${mainContent}",
				uncheckSubContent = "${uncheckSubContent}");
		}

		if (isSet(uncheckSubSubContent)) {
			ContentConfiguration.uncheckSubSubContent(
				contentName = "${contentName}",
				subContent = "${subContent}",
				uncheckSubSubContent = "${uncheckSubSubContent}");
		}
	}

	macro _export {
		SelectFrame(locator1 = "IFrame#CONFIGURATION_DIALOG");

		if (isSet(portletName)) {
			if (IsNotChecked(locator1 = "ExportImport#CONTENT")) {
				Check(locator1 = "ExportImport#CONTENT");
			}
		}

		if (isSet(larFileName)) {
			Type(
				locator1 = "ExportImport#EXPORT_FILE_NAME",
				value1 = "${larFileName}");
		}

		if ("${exportIndividualDeletions}" == "true") {
			Check(locator1 = "Checkbox#DELETIONS");
		}

		if ("${exportPermissions}" == "true") {
			Check(locator1 = "Checkbox#PERMISSIONS");
		}

		AssertClick(
			locator1 = "Button#EXPORT",
			value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals(
			locator1 = "ExportImport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful");

		Click(locator1 = "ExportImport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile(locator1 = "${larFileName}");

		SelectFrame(value1 = "relative=top");

		AssertTextNotPresent(value1 = "The requested resource could not be found");
	}

	macro _exportSite {
		if (isSet(larFileName)) {
			Type(
				locator1 = "SitePagesExport#EXPORT_PROCESS_NAME",
				value1 = "${larFileName}");
		}

		LAR.exportWithAssertionOnSuccess();
	}

	macro _gotoExportImport {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Export / Import");

		Pause(locator1 = "3000");
	}

	macro _gotoExportSite {
		if (isSet(siteScopeName)) {
			Navigator.openSiteURL(siteName = "${siteScopeName}");
		}

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export");
	}

	macro _gotoImportSite {
		if (isSet(siteName)) {
			SitePages.openPagesAdmin(
				baseURL = "${baseURL}",
				siteURLKey = "${siteName}");
		}

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Import");
	}

	macro _importSite {
		Pause(locator1 = "15000");

		Click(locator1 = "Button#CONTINUE");

		if ("${importPermissions}" == "true") {
			Click(locator1 = "ExportImport#PERMISSIONS_TITLE");

			Check.checkToggleSwitch(locator1 = "Checkbox#PERMISSIONS");
		}

		if ("${privateLayout}" == "true") {
			Click(locator1 = "ExportImport#PRIVATE_LAYOUT");
		}

		if (isSet(checkContentNameList)) {
			ContentConfiguration.checkContentNameList(checkContentNameList = "${checkContentNameList}");
		}

		if ("${contentDeletion}" == "true") {
			Check.checkToggleSwitch(locator1 = "ToggleSwitch#DELETE_PORTLET_DATA");
		}

		if ("${mirrorWithOverwriting}" == "true") {
			LAR._mirrorWithOverwriting();
		}

		AssertVisible(locator1 = "Button#BACK");

		AssertClickNoError(
			locator1 = "SitePagesImport#IMPORT_BUTTON",
			value1 = "Import");

		Pause(locator1 = "5000");

		AssertTextEquals(
			locator1 = "SitePagesImport#CURRENT_AND_PREVIOUS_STATUS_1",
			value1 = "Successful");
	}

	macro _mirrorWithOverwriting {
		ScrollWebElementIntoView(
			key_panel = "Update Data",
			locator1 = "Panel#PANEL");

		Panel.expandPanel(panel = "Update Data");

		Click(locator1 = "ExportImport#UPDATE_DATA_MIRROR_WITH_OVERWRITING_RADIO");
	}

	macro _selectImportFile {
		SelectFrame(locator1 = "IFrame#CONFIGURATION_DIALOG");

		NavItem.click(navItem = "Import");

		AssertElementPresent(locator1 = "Button#SELECT_FILE");

		if ("${uploadFrom}" == "dependencies") {
			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${larFileName}");
		}
		else {
			UploadTempFile.uploadTempFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${larFileName}");
		}

		Pause(locator1 = "15000");

		if ("${cannotImport}" == "true") {
			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE_HEADER",
				value1 = "The file ${larFileName} cannot be imported.");
		}
		else if (isSet(importValidationMissingItem)) {
			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE_HEADER",
				value1 = "The file ${larFileName} cannot be imported.");

			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE",
				value1 = "An unexpected error occurred while uploading your file.");
		}
		else if (isSet(import6210buildNumber)) {
			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE_HEADER",
				value1 = "The file ${larFileName} cannot be imported.");

			AssertTextPresent(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE",
				value1 = "LAR build number 6210 does not match portal build number");
		}
		else {
			AssertClickNoError(
				locator1 = "Button#CONTINUE",
				value1 = "Continue");

			Pause(locator1 = "5000");

			if ("${mirrorWithOverwriting}" == "true") {
				LAR._mirrorWithOverwriting();
			}

			if ("${importDeletions}" == "true") {
				Check(locator1 = "Checkbox#DELETIONS");
			}

			if (isSet(portletName)) {
				if (IsNotChecked(locator1 = "ExportImport#CONTENT")) {
					Check(locator1 = "ExportImport#CONTENT");
				}
			}

			if ("${importPermissions}" == "true") {
				Click(locator1 = "ExportImport#PERMISSIONS_TITLE");

				Check.checkToggleSwitch(locator1 = "Checkbox#PERMISSIONS");
			}

			Pause(locator1 = "5000");

			AssertVisible(locator1 = "Link#BACK");

			AssertClickNoError(
				locator1 = "Button#IMPORT",
				value1 = "Import");

			if (isSet(failureExpected)) {
				AssertTextEquals(
					locator1 = "ExportImport#CURRENT_AND_PREVIOUS_STATUS_1",
					value1 = "Failed");
			}
			else {
				AssertTextEquals(
					locator1 = "ExportImport#CURRENT_AND_PREVIOUS_STATUS_1",
					value1 = "Successful");
			}

			SelectFrame(value1 = "relative=top");
		}
	}

	macro _selectImportFileSite {
		LexiconEntry.gotoAdd();

		Pause(locator1 = "7000");

		AssertElementPresent(locator1 = "Button#SELECT_FILE");

		if ("${uploadFrom}" == "dependencies") {
			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${larFileName}");
		}
		else {
			UploadTempFile.uploadTempFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${larFileName}");
		}

		Pause(locator1 = "15000");

		if (isSet(importValidationMissingItem)) {
			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE_HEADER",
				value1 = "cannot be imported.");

			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE",
				value1 = "There are missing references that could not be found in the current site. Please import the following elements first:");

			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesImport#VALIDATION_ERROR_LIST_ITEM",
				value1 = "${importValidationMissingItem}");
		}

		if ("importCampaignValidationError" == "true") {
			AssertTextEquals(
				locator1 = "SitePagesImport#VALIDATION_ERROR_MESSAGE",
				value1 = "The following data will not be imported:");

			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesImport#VALIDATION_ERROR_LIST_ITEM",
				value1 = "Campaign Tracking Action");

			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesImport#VALIDATION_ERROR_LIST_ITEM",
				value1 = "The original Referenced Asset does not exist in the current environment.");
		}

		if ("importFail" == "true") {
			AssertTextEquals(
				locator1 = "ExportImport#CURRENT_AND_PREVIOUS_STATUS_1",
				value1 = "Failed");

			SelectFrame(value1 = "relative=top");
		}
	}

	macro addExportTemplateCP {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Export Templates");

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${exportTemplateName}");

		PortletEntry.inputDescription(description = "${exportTemplateDescription}");
	}

	macro configureExportOptions {
		LAR._configureExportSiteOptions(
			checkContentNameList = "${checkContentNameList}",
			checkPageName = "${checkPageName}",
			contentDeletion = "${contentDeletion}",
			contentName = "${contentName}",
			deleteMissingPages = "${deleteMissingPages}",
			exportPermissions = "${exportPermissions}",
			larFileName = "${larFileName}",
			lastDateRange = "${lastDateRange}",
			mainContent = "${mainContent}",
			subContent = "${subContent}",
			uncheckContentNameList = "${uncheckContentNameList}",
			uncheckLogo = "${uncheckLogo}",
			uncheckSubContent = "${uncheckSubContent}",
			uncheckSubSubContent = "${uncheckSubSubContent}");
	}

	macro configureExportSiteCP {
		LAR._gotoExportSite();

		LexiconEntry.gotoAdd();

		LAR._configureExportSiteOptions(
			checkContentNameList = "${checkContentNameList}",
			checkPageName = "${checkPageName}",
			contentDeletion = "${contentDeletion}",
			contentName = "${contentName}",
			deleteMissingPages = "${deleteMissingPages}",
			exportPermissions = "${exportPermissions}",
			larFileName = "${larFileName}",
			lastDateRange = "${lastDateRange}",
			mainContent = "${mainContent}",
			subContent = "${subContent}",
			uncheckContentNameList = "${uncheckContentNameList}",
			uncheckLogo = "${uncheckLogo}",
			uncheckSitesPageSettings = "${uncheckSitesPageSettings}",
			uncheckSiteTemplateSettings = "${uncheckSiteTemplateSettings}",
			uncheckSubContent = "${uncheckSubContent}",
			uncheckSubSubContent = "${uncheckSubSubContent}");
	}

	macro deleteCurrentAndPreviousProcess {
		if (isSet(deleteFromPortlet)) {
			LAR._gotoExportImport();

			SelectFrame(locator1 = "IFrame#CONFIGURATION_DIALOG");

			Click(locator1 = "ExportImport#CURRENT_AND_PREVIOUS_TAB");
		}

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Clear",
			rowEntry = "${larFileName}");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro downloadLar {
		Click(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");

		DownloadTempFile();
	}

	macro editExportTemplateCP {
		var key_exportTemplateName = "${exportTemplateName}";

		AssertClick(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_NAME",
			value1 = "${exportTemplateName}");

		PortletEntry.inputName(name = "${exportTemplateNameEdit}");

		PortletEntry.inputDescription(description = "${exportTemplateDescriptionEdit}");
	}

	macro exportDDL {
		LAR._gotoExportImport();

		LAR._export(
			exportPermissions = "${exportPermissions}",
			larFileName = "${larFileName}");
	}

	macro exportExportTemplateCP {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Export");

		if (isSet(larFileName)) {
			Type(
				locator1 = "SitePagesExport#EXPORT_PROCESS_NAME",
				value1 = "${larFileName}");
		}

		LAR.exportWithAssertionOnSuccess();

		if (isSet(larFileName)) {
			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_NAME",
				value1 = "${larFileName}");
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_NAME",
				value1 = "${exportTemplateName}");
		}

		AssertElementPresent(locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_DOWNLOAD");
	}

	macro exportPortlet {
		LAR._gotoExportImport();

		AssertElementPresent(locator1 = "IFrame#DIALOG");

		LAR._export(
			exportIndividualDeletions = "${exportIndividualDeletions}",
			exportPermissions = "${exportPermissions}",
			larFileName = "${larFileName}",
			portletName = "${portletName}");

		Click(locator1 = "Icon#CLOSE");
	}

	macro exportSiteCP {
		LAR._gotoExportSite(siteScopeName = "${siteScopeName}");

		Click(locator1 = "SitePagesExport#CUSTOM_EXPORT_BUTTON");

		if ("${privateLayout}" == "true") {
			Click(locator1 = "PagesConfiguration#CHANGE_TO_PRIVATE_PAGES");
		}

		LAR._exportSite(larFileName = "${larFileName}");
	}

	macro exportUserGroups {
		LAR._gotoExportImport();

		LAR._export(
			exportPermissions = "${exportPermissions}",
			larFileName = "${larFileName}");
	}

	macro exportWithAssertionOnSuccess {
		AssertClick(
			locator1 = "SitePagesExport#EXPORT_BUTTON",
			value1 = "Export");

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful");
	}

	macro filterCompletedProcesses {
		Pause(locator1 = "3000");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Completed");
	}

	macro getLarFileName {
		var valueName = selenium.getAttribute("//ul/li/div/h2//a@href");

		echo("value name ${valueName}");

		var portalURL = PropsUtil.get("portal.url");

		var larFileName = RegexUtil.replace("${valueName}", "${portalURL}/documents/portlet_file_entry/[0-9]*/([a-zA-z0-9_.-]*)[(0-9KB)]*", "1");

		echo("lar file name ${larFileName}");

		return "${larFileName}";
	}

	macro gotoExport {
		LAR._gotoExportSite(siteScopeName = "${siteScopeName}");
	}

	macro importPortlet {
		LAR._gotoExportImport();

		LAR._selectImportFile(
			cannotImport = "${cannotImport}",
			failureExpected = "${failureExpected}",
			importDeletions = "${importDeletions}",
			importPermissions = "${importPermissions}",
			larFileName = "${larFileName}",
			mirrorWithOverwriting = "${mirrorWithOverwriting}",
			portletName = "${portletName}",
			uploadFrom = "${uploadFrom}");

		IFrame.closeFrame();
	}

	macro importSiteCP {
		LAR._gotoImportSite(
			baseURL = "${baseURL}",
			siteName = "${siteName}");

		LAR._selectImportFileSite(
			importCampaignValidationError = "${importCampaignValidationError}",
			importValidationMissingItem = "${importValidationMissingItem}",
			larFileName = "${larFileName}",
			uploadFrom = "${uploadFrom}");

		if (!((isSet(importValidationMissingItem)) || (isSet(importFail)))) {
			LAR._importSite(
				checkContentNameList = "${checkContentNameList}",
				contentDeletion = "${contentDeletion}",
				contentName = "${contentName}",
				importPermissions = "${importPermissions}",
				larFileName = "${larFileName}",
				privateLayout = "${privateLayout}");
		}
	}

	macro moveToTheRecycleBinExportTemplate {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Move to Recycle Bin");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro openExportAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_exportimport_web_portlet_ExportPortlet");
	}

	macro openImportAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_exportimport_web_portlet_ImportPortlet");
	}

	macro relaunchCurrentAndPreviousProcess {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Relaunch",
			rowEntry = "${larFileName}");

		AssertTextEquals(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful");
	}

	macro saveExportTemplateCP {
		Button.clickSave();

		var key_exportTemplateName = "${exportTemplateName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_NAME",
			value1 = "${exportTemplateName}");

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_DESCRIPTION",
			value1 = "${exportTemplateDescription}");
	}

	macro searchTemplate {
		Search.searchCP(searchTerm = "${exportTemplateName}");

		var key_exportTemplateName = "${exportTemplateName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_NAME",
			value1 = "${exportTemplateName}");

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_DESCRIPTION",
			value1 = "${exportTemplateDescription}");
	}

	macro viewExportTemplateCP {
		var key_exportTemplateName = "${exportTemplateName}";

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_NAME",
			value1 = "${exportTemplateName}");

		AssertTextEquals(
			locator1 = "SitePagesExport#EXPORT_TEMPLATES_TABLE_DESCRIPTION",
			value1 = "${exportTemplateDescription}");
	}

}