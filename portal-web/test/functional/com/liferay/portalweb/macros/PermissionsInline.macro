definition {
	macro addOrRemoveViewPermissionFromAllRoles {
		for (var roleTitle : list "${roleList}") {
			var roleTitle = "${roleTitle}";
			var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
			var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

			if ("${addOrRemoveViewPermission}" == "Add") {
				Check(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
			else if ("${addOrRemoveViewPermission}" == "Remove") {
				Uncheck(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);
	}

	macro assertDefaultPG {
		for (var roleTitle : list "${roleList}") {
			var roleTitle = "${roleTitle}";
			var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
			var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

			if (("${roleTitle}" == "Guest") || ("${roleTitle}" == "Site Member")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_ADD_TO_PAGE_CHECKBOX"
				);
			}
			else {
				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_ADD_TO_PAGE_CHECKBOX"
				);
			}

			if (("${roleTitle}" == "Guest") || ("${roleTitle}" == "Power User") || ("${roleTitle}" == "Site Member") || ("${roleTitle}" == "User")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX"
				);

				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX"
				);
			}
			else {
				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX"
				);

				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX"
				);
			}

			if (("${roleTitle}" == "Power User") || ("${roleTitle}" == "User")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX"
				);
			}
			else {
				AssertChecked(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
		}
	}

	macro gotoConfigurationPG {
		if (isSet(portletOption)) {
			var optionName = "${portletOption}";
		}
		else {
			var optionName = "Permissions";
		}

		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "${optionName}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoDocumentsAndMediaDocumentPG {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${dmDocumentTitle}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoDocumentsAndMediaHomeFolderPG {
		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		Click(locator1 = "Icon#INFO");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoMessageBoardsCategoryPG {
		AssertClick(
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "${categoryName}",
			key_categoryName = "${categoryName}"
		);

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoMessageBoardsPG {
		Navigator.gotoPage(pageName = "${pageName}");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoMessageBoardsThreadReplyPG {
		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}",
			key_threadSubject = "${threadSubject}"
		);

		Click.waitForMenuToggleJSClick(
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS",
			key_threadReplyBody = "${threadReplyBody}"
		);

		MenuItem.click(menuItem = "Permissions");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoPagePG {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.gotoPageMenuItem(menuItem = "Permissions", pageName = "${pageName}");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoPollPermissionsCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${pollsQuestionTitle}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoSitepageCP {
		SitePages.togglePrivacy(privacy = "${privacy}");

		SitePages.gotoPageMenuItem(menuItem = "Permissions", pageName = "${pageName}");

		IFrame.selectPermissionsFrame();
	}

	macro gotoSiteTeamsCP {
		ProductMenu.gotoSite(site = "${siteScopeName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "${portletName}"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${teamName}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro gotoSiteTemplateCP {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.gotoPageMenuItem(menuItem = "Permissions", pageName = "${page}");
	}

	macro gotoUserGroupSitePermissionsCP {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${userGroupName}");

		MenuItem.click(menuItem = "User Group Pages Permissions");
	}

	macro gotoWCArticle {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${webContentTitle}"
		);

		IFrame.selectPermissionsFrame();
	}

	macro viewPermissionsChecked {
		var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
		var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

		AssertChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}

	macro viewPermissionsRemoved {
		var key_roleTitle = StringUtil.replace("${roleTitle}", " ", "-");
		var key_roleTitle = StringUtil.lowerCase("${key_roleTitle}");

		AssertNotChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}
}