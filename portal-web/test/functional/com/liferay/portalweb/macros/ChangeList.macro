definition {
	macro addNewChangeList {
		Click(locator1 = "Button#PLUS");

		Type(locator1 = "ChangeList#CHANGE_LIST_NAME", value1 = "${changeListName}");

		Type(locator1 = "ChangeList#CHANGE_LIST_DESCRIPTION", value1 = "${changeListDescription}");

		Button.clickSave();
	}

	macro cancelChangeListCreation {
		Click(locator1 = "Button#PLUS");

		Button.clickCancel();

		AssertTextEquals(
			locator1 = "ChangeList#OVERVIEW_PAGE_TITLE",
			value1 = "Select Change List"
		);
	}

	macro disableChangeList {
		Uncheck.uncheckToggleSwitch(
			locator1 = "ChangeListSettings#CHANGE_LISTS_TOGGLE_SWITCH"
		);

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();
	}

	macro enableChangeList {
		Pause(locator1 = "1000");

		Check.checkToggleSwitch(
			locator1 = "ChangeListSettings#CHANGE_LISTS_TOGGLE_SWITCH"
		);

		if (isSet(gotoOverview)) {
			Click(locator1 = "ChangeListSettings#SAVE_AND_GO_TO_OVERVIEW_BUTTON");
		}
		else {
			Click(locator1 = "Button#SAVE");
		}

		Alert.viewSuccessMessage();
	}

	macro publishChangeList {
		Click(locator1 = "Button#PUBLISH");

		SelectFrame.selectFrameTop();

		Click(locator1 = "ChangeList#PUBLISH_BUTTON");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "ChangeList#OVERVIEW_PAGE_TITLE",
			value1 = "History"
		);

		Pause(locator1 = "5000");

		Refresh();

		var key_changeListName = "${changeListName}";

		AssertTextEquals(
			locator1 = "ChangeList#HISTORY_CHANGE_LIST_STATUS",
			value1 = "Published"
		);
	}

	macro searchForChangeList {
		Search.searchCP(searchTerm = "${changeListName}");

		var key_changeListName = "${changeListName}";

		AssertTextPresent(
			locator1 = "ChangeList#CHANGE_LIST_TABLE_ENTRY_NAME",
			value1 = "${changeListName}"
		);
	}

	macro selectChangeList {
		Click(locator1 = "ChangeList#SELECT_CHANGE_LIST_DROPDOWN");

		var key_changeListName = "${changeListName}";

		if ("${changeListName}" == "Select Change List") {
			Click(locator1 = "ChangeList#SELECT_CHANGE_LIST");

			AssertTextEquals(
				locator1 = "ChangeList#OVERVIEW_PAGE_TITLE",
				value1 = "Select Change List"
			);
		}
		else {
			Click(
				locator1 = "ChangeList#SELECT_CHANGE_LIST_VALUE",
				key_changeListName = "${changeListName}"
			);

			AssertTextEquals(
				locator1 = "ChangeList#OVERVIEW_PAGE_TITLE",
				value1 = "Change Lists"
			);
		}
	}

	macro selectChangeListMenuItem {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "${menuItem}",
			rowEntry = "${rowEntry}"
		);
	}

	macro viewChangeOnOverview {
		var key_contentTitle = "${contentTitle}";

		AssertTextEquals(
			locator1 = "ChangeList#LATEST_CHANGES_TITLE",
			value1 = "${contentTitle}"
		);

		var key_contentType = "${contentType}";

		AssertTextEquals(
			locator1 = "ChangeList#LATEST_CHANGES_CONTENT_TYPE",
			value1 = "${contentType}"
		);

		var key_contentChangeType = "${contentChangeType}";

		AssertTextEquals(
			locator1 = "ChangeList#LATEST_CHANGES_CHANGE_TYPE",
			value1 = "${contentChangeType}"
		);
	}

	macro viewContentTypeOnOverview {
		var key_contentTitle = "${contentTitle}";

		AssertTextEquals(
			locator1 = "ChangeList#LATEST_CHANGES_CONTENT_TYPE",
			value1 = "${contentType}"
		);
	}

	macro viewDeletedItemCounter {
		AssertTextEquals(
			locator1 = "ChangeList#CHANGE_LIST_DELETED",
			value1 = "${nbrOfDeletedItems}"
		);
	}

	macro viewNoStagingMenuitemsNotAvailable {
		AssertElementNotPresent(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

		ProductMenuHelper.expandPanel(panel = "Site Administration");

		ProductMenuHelper.expandCategory(category = "Publishing");

		AssertElementNotPresent(
			locator1 = "ProductMenu#PORTLET",
			value1 = "Staging",
			key_portlet = "Staging"
		);
	}

	macro viewPublishedChangeListDetails {
		AssertTextEquals(
			locator1 = "ChangeList#OVERVIEW_CHANGE_LIST_NAME",
			value1 = "${changeListName}"
		);

		AssertTextEquals(
			locator1 = "ChangeList#OVERVIEW_DESCRIPTION",
			value1 = "${changeListDescription}"
		);

		AssertTextPresent(
			locator1 = "ChangeList#OVERVIEW_PUBLISHED_BY",
			value1 = "${changeListPublishedBy}"
		);
	}

	macro viewSpecificChangeListHistory {
		var key_contentTitle = "${contentTitle}";

		AssertTextEquals(
			locator1 = "ChangeList#VIEW_CHANGE_LIST_NAME_HISTORY",
			value1 = "${changeListName}"
		);
	}
}