definition {

	macro checkAnalyticsCloudInfo {
		if (IsElementPresent(key_text = "Review and Run Test", locator1 = "Button#ANY")) {
			ABTest.runTest();
		}

		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		AssertTextEquals(
			abTestTitle = ${abTestTitle},
			locator1 = "ABTest#AB_TEST_TITLE_AC_SIDE",
			value1 = ${abTestTitle});

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	macro checkVariantAnalyticsCloud {
		var index = 1;

		if (IsElementPresent(key_text = "Review and Run Test", locator1 = "Button#ANY")) {
			ABTest.runTest();
		}

		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}

		for (var variantNames : list ${variantNames}) {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = ${index},
				locator1 = "ABTest#REVIEW_VARIANTS_ANALYTICS_CLOUD",
				name = ${variantNames});
		}

		Close(locator1 = "title=Tests - Analytics Cloud");
	}

	macro createABTest {
		while (IsElementNotPresent(key_text = "Create Test", locator1 = "Button#ANY")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		Button.click(button = "Create Test");

		ABTest.fillInput(
			key_testTitle = ${testTitle},
			labelValue = "Test Name");

		ABTest.selectGoal(key_goal = ${goal});

		Click(locator1 = "Modal#SAVE_BUTTON");
	}

	macro createVariant {
		Button.click(button = "Create Variant");

		ABTest.fillInput(
			key_testTitle = ${variantName},
			labelValue = "Name");

		Click(
			key_name = "Save",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");
	}

	macro deleteABTest {
		Click(locator1 = "ABTest#KEBAB_AB_TEST");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro deleteABTestInAC {
		Click(
			key_text = "ellipsis-v",
			locator1 = "Icon#ANY");

		MenuItem.clickNoError(menuItem = "Delete Test");

		Button.clickDelete();
	}

	macro deleteVariant {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro editVariant {
		Click(
			key_variantName = ${variantName},
			locator1 = "ABTest#EDIT_VARIANT_BUTTON");
	}

	macro editVariantName {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(locator1 = "ABTest#VARIANT_DROPDOWN");

		MenuItem.clickNoError(menuItem = "Edit");
	}

	macro fillInput {
		Click(
			key_fieldLabel = ${labelValue},
			locator1 = "Modal#INPUT_WITH_LABEL");

		Type(
			key_fieldLabel = ${labelValue},
			locator1 = "Modal#INPUT_WITH_LABEL",
			value1 = ${key_testTitle});
	}

	macro openABTestInAC {
		ABTest.viewDataInAnalyticsCloud();

		SelectWindow(locator1 = "name=undefined");

		if (IsElementPresent(locator1 = "AnalyticsCloudConnection#ANALYTICS_CLOUD_USER_LOGIN_FIELD")) {
			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");
		}
	}

	macro openABTestPanel {
		if (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			Click(locator1 = "ABTest#AB_TEST_BUTTON");
		}

		while (IsNotVisible(locator1 = "ABTest#AB_TEST_SIDE_BAR")) {
			WaitForElementPresent(locator1 = "ABTest#AB_TEST_SIDE_BAR");
		}
	}

	macro openEditABTest {
		Click(locator1 = "ABTest#KEBAB_AB_TEST");

		MenuItem.clickNoError(menuItem = "Edit");
	}

	macro openTab {
		Click(
			locator1 = "ABTest#TAB",
			tabValue = ${tabValue});
	}

	macro runTest {
		Button.click(button = "Review and Run Test");

		Click(
			key_name = "Run",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");

		Click(
			key_name = "OK",
			locator1 = "Button#GENERAL_BUTTON_MODAL_FOOTER");
	}

	macro saveVariant {
		Click(
			key_text = "Save Variant",
			locator1 = "Button#ANY");
	}

	macro selectElementID {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(
			key_text = "Select Clickable Element",
			locator1 = "Button#ANY_SECONDARY");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		Button.click(button = "Set Element as Click Target");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "ABTest#TARGET_LABEL",
			value1 = "Target");
	}

	macro selectGoal {
		Select(
			locator1 = "Modal#SELECT_WITH_LABEL",
			selectLabel = "Select Goal",
			value1 = ${key_goal});
	}

	macro statusABTestInAC {
		AssertTextEquals(
			locator1 = "ACTests#SUMMARY_CARD_TEXT",
			value1 = ${status});
	}

	macro switchVariant {
		ABTest.openABTestPanel();

		Click(
			key_variantName = ${variantName},
			locator1 = "ABTest#VARIANT_TITLE");
	}

	macro takeElementID {
		if (!(isSet(key_index))) {
			var key_index = 1;
		}

		Click(
			key_text = "Select Clickable Element",
			locator1 = "Button#ANY_SECONDARY");

		Click(locator1 = "ABTest#SELECT_CLICKABLE_ELEMENT");

		var idelement = selenium.getAttribute("//div[contains(@class,'text-truncate')]@title");

		var idelement = StringUtil.substring(${idelement}, 1, 19);

		Click(locator1 = "ABTest#X_BUTTON_TARGET_ID_ELEMENT");

		return ${idelement};
	}

	macro terminateTest {
		if (IsElementPresent(key_text = "Terminate Test", locator1 = "Button#ANY")) {
			Button.clickNoError(button = "Terminate Test");
		}
		else {
			Refresh();

			Button.clickNoError(button = "Terminate Test");
		}

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to terminate this test?");

		Alert.viewSuccessMessage();
	}

	macro viewDataInAnalyticsCloud {
		AssertElementPresent(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");

		Click(locator1 = "ABTest#VIEW_DATA_ANALYTICS_CLOUD_BUTTON");
	}

	macro viewInfoItems {
		var index = 0;

		for (var values : list ${values}) {
			var index = ${index} + 1;

			AssertElementPresent(
				key_index = ${index},
				key_value = ${values},
				locator1 = "ABTest#VIEW_INFO_ITEMS",
				value1 = ${values});
		}
	}

	macro writeId {
		Click(locator1 = "ABTest#ELEMENT_ID_INPUT");

		Type(
			locator1 = "ABTest#ELEMENT_ID_INPUT",
			value1 = ${elementId});
	}

}