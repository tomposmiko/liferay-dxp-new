definition {
	macro deleteCP {
		var key_assetName = "${assetName}";

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_TYPE",
			value1 = "${assetType}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${assetName}");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.waitForConfirmation(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "The Recycle Bin is empty."
		);

		AssertTextNotPresent(value1 = "${assetName}");
	}

	macro disableRecycleBinViaSiteSettings {
		Navigator.gotoNavTab(navTab = "Advanced");

		Panel.expandPanel(panel = "Recycle Bin");

		Uncheck.uncheckToggleSwitchNoErrorNoAssert(
			locator1 = "Checkbox#ENABLE_RECYCLE_BIN"
		);

		AssertConfirm(
			value1 = "Disabling the Recycle Bin prevents the restoring of content that has been moved to the Recycle Bin."
		);

		AssertNotChecked.assertNotCheckedNotVisible(
			locator1 = "Checkbox#ENABLE_RECYCLE_BIN"
		);

		PortletEntry.save();
	}

	macro emptyCP {
		Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

		if (IsElementPresent(locator1 = "RecycleBin#EMPTY_RECYCLE_BIN")) {
			AssertClickNoError(
				locator1 = "RecycleBin#EMPTY_RECYCLE_BIN",
				value1 = "Empty the Recycle Bin"
			);

			AssertConfirm.waitForConfirmation(
				value1 = "Are you sure you want to empty the Recycle Bin?"
			);

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "The Recycle Bin is empty."
			);
		}
	}

	macro gotoEntryViaSuccessMessage {
		var key_assetName = "${assetName}";

		AssertClick(
			locator1 = "RecycleBin#SUCCESS_MESSAGE_CONTENT_LINK",
			value1 = "the Recycle Bin"
		);

		SiteAdmin.viewPortletTitle(portletTitle = "Recycle Bin");
	}

	macro restoreContentFromFolderCP {
		var key_assetName = "${assetName}";

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_TYPE",
			value1 = "${assetType}"
		);

		AssertClick(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_FOLDER_DOCUMENT_NAME",
			value1 = "${documentName}",
			key_assetName = "${documentName}"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Restore",
			rowEntry = "${documentName}"
		);

		SelectFrame(locator1 = "RecycleBin#RECYCLE_BIN_FOLDER_WARNING_IFRAME");

		AssertTextEquals(
			locator1 = "Message#USER_BLOCKED",
			value1 = "The original Folder does not exist anymore. Choose a different Folder to restore ${documentName}."
		);

		AssertClick(
			locator1 = "Button#CHOOSE_THIS_FOLDER",
			value1 = "Choose This Folder"
		);

		SelectFrameTop(value1 = "relative=top");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#RECYCLE_BIN_RESTORE_SUCCESS",
			value1 = "The ${assetType2} ${documentName} was restored to ${assetRestoreLocation}."
		);
	}

	macro restoreCP {
		var key_assetName = "${assetName}";

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${assetName}");

		MenuItem.click(menuItem = "Restore");

		if (isSet(assetType)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#RECYCLE_BIN_RESTORE_SUCCESS",
				value1 = "${assetType}"
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#RECYCLE_BIN_RESTORE_SUCCESS",
				value1 = "The item was restored."
			);
		}

		if (isSet(assetRestoreLocation)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#RECYCLE_BIN_RESTORE_SUCCESS",
				value1 = "${assetRestoreLocation}"
			);
		}

		if ("${multipleAssets}" == "true") {
			AssertElementNotPresent(locator1 = "Message#EMPTY_INFO");
		}
		else {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "The Recycle Bin is empty."
			);
		}

		AssertElementNotPresent(locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME");
	}

	macro restoreOverwriteCP {
		LexiconEntry.openEntryMenu(rowEntry = "${assetName}");

		MenuItem.click(menuItem = "Restore");

		Alert.viewErrorMessage(
			errorMessage = "An entry with name ${assetName} already exists."
		);

		Click(locator1 = "RecycleBin#RECYCLE_BIN_WARNING_OVERWRITE_RADIO");

		PortletEntry.save();
	}

	macro undoMoveToRecycleBin {
		AssertClick(locator1 = "Button#UNDO", value1 = "Undo");
	}

	macro viewCP {
		var key_assetName = "${assetName}";

		if (IsElementPresent(locator1 = "RecycleBin#EMPTY_RECYCLE_BIN")) {
			MouseOver(locator1 = "Icon#TOOLTIP");

			var maxAgeField = "1 month";

			if (isSet(customMaxAge)) {
				var maxAgeField = "${customMaxAge}";
			}

			RecycleBin.viewRecycleBinMaxAge(maxAgeField = "${maxAgeField}");

			AssertTextEquals.assertPartialText(
				locator1 = "Message#TOOLTIP",
				value1 = "The Recycle Bin shows all assets removed by users. Assets can be restored or permanently deleted."
			);
		}

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_TYPE",
			value1 = "${assetType}"
		);

		AssertElementPresent(locator1 = "RecycleBin#RECYCLE_BIN_TABLE_REMOVED_DATE");

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_REMOVED_BY",
			value1 = "${deleteUser}"
		);

		AssertElementPresent(locator1 = "RecycleBin#RECYCLE_BIN_TABLE_ACTIONS");
	}

	macro viewDefaultCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "The Recycle Bin is empty."
		);

		AssertTextNotPresent(value1 = "${assetName}");
	}

	macro viewDuplicateNames {
		var key_assetName = "${assetName}";
		var key_rowNumber = "1";

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER_TD_2",
			value1 = "${assetName}"
		);

		var key_rowNumber = "2";

		AssertTextEquals(
			locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER_TD_2",
			value1 = "${assetName}"
		);
	}

	macro viewEntry {
		var key_assetName = "${assetName}";

		AssertTextEquals(
			locator1 = "RecycleBin#RECYCLE_BIN_TABLE_NAME",
			value1 = "${assetName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${assetName}");

		MenuItem.viewPresent(menuItem = "Restore");

		MenuItem.viewPresent(menuItem = "Delete");
	}

	macro viewRecycleBinMaxAge {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#TOOLTIP",
			value1 = "Entries that have been in the Recycle Bin for more than ${maxAgeField} are automatically deleted."
		);
	}
}