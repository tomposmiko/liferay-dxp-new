definition {

	macro _addPageTypeEmbedded {
		Type(
			locator1 = "SitePagesEditPage#PAGE_TYPE_EMBEDDED_URL_FIELD",
			value1 = "${pageTypeURL}");

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesEditPage#PAGE_TYPE_DESCRIPTION",
			value1 = "Show content from another website.");
	}

	macro _addPageTypeFullPageApplication {
		Select(
			locator1 = "SitePagesEditPage#PAGE_TYPE_FULL_PAGE_APPLICATION_SELECT",
			value1 = "${portlet}");
	}

	macro _addPageTypePanel {
		var key_componentOrPortletName = "${componentName}";

		Click(locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX");

		AssertChecked.assertCheckedNotVisible(locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX_INPUT");
	}

	macro addCategory {
		Navigator.gotoNavTab(navTab = "SEO");

		AssetCategorization.addCategory(
			categoryName = "${categoryName}",
			vocabularyName = "${vocabularyName}");
	}

	macro addFriendlyURLLocalizedPG {
		Navigator.gotoNavTab(navTab = "General");

		PortletEntry.changeLocale(
			fieldName = "Friendly URL",
			locale = "${friendlyUrlLocalized}");

		Type(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "${localizedFriendlyURL}");
	}

	macro addJavaScript {
		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Panel.expandPanel(panel = "JavaScript");

		AssertTextEquals(
			locator1 = "SitePages#JAVASCRIPT_LABEL",
			value1 = "Paste JavaScript code that is executed at the bottom of the page.");

		Type(
			locator1 = "SitePages#JAVASCRIPT_TEXTAREA",
			value1 = "${javaScript}");

		AssertClickNoError(
			locator1 = "Button#SAVE",
			value1 = "Save");
	}

	macro addPageTranslations {
		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${pageTranslation}");

		PortletEntry.inputName(name = "${pageTranslationName}");

		Button.clickSave();
	}

	macro assertAlternateURL {
		var HTML = '''<link data-senna-track="temporary" href="''';

		if ("${locale}" == "zh") {
			var zhAlternate = '''" hreflang="zh-CN" rel="alternate" />''';

			var hrefURL = selenium.getAttribute("//link[contains(@rel,'alternate')][contains(@hreflang,'zh-CN')]@href");

			var hrefURLNoPortalURL = StringUtil.replace("${hrefURL}", "${portalURL}/zh", "");

			var pageSource = StringUtil.add("${HTML}", "${portalURL}/zh${zhAlternate}","");

			var pageSourceAlternate = StringUtil.add("${HTML}", "${portalURL}/zh/web/guest${zhAlternate}","");
		}

		else if ("${locale}" == "es") {
			var esAlternate = '''" hreflang="es-ES" rel="alternate" />''';

			var hrefURL = selenium.getAttribute("//link[contains(@rel,'alternate')][contains(@hreflang,'es-ES')]@href");

			var hrefURLNoPortalURL = StringUtil.replace("${hrefURL}", "${portalURL}/es", "");

			var pageSource = StringUtil.add("${HTML}", "${portalURL}/es${esAlternate}","");

			var pageSourceAlternate = StringUtil.add("${HTML}", "${portalURL}/es/web/guest${esAlternate}","");
		}
		echo("${hrefURL}");

		if ("${hrefURLNoPortalURL}" == "/web/guest") {
			AssertHTMLSourceTextPresent(value1 = "${pageSourceAlternate}");
		}
		else {
			AssertHTMLSourceTextPresent(value1 = "${pageSource}");
		}
	}

	macro assertCannotDeleteOnlyPage {
		Click.waitForMenuToggleJSClick(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.viewNotPresent(menuItem = "Delete");
	}

	macro assertCanonicalURL {
		var HTML = '''<link data-senna-track="temporary" href="''';
		var HTML2 = '''" rel="canonical" />''';

		if (isSet(pageName)) {
			var pageNameURL = StringUtil.lowerCase("${pageName}");

			var pageNameURL = StringUtil.replace("${pageNameURL}", " ", "-");

			var hrefURL = selenium.getAttribute("//link[contains(@rel,'canonical')]@href");

			var hrefURLNoPageName = StringUtil.replace("${hrefURL}", "/${pageNameURL}", "");

			var hrefURLNoPortalURL = StringUtil.replace("${hrefURLNoPageName}", "${portalURL}", "");

			var pageSource = StringUtil.add("${HTML}", "${portalURL}/${pageNameURL}${HTML2}","");

			var pageSourceAlternate = StringUtil.add("${HTML}", "${portalURL}/web/guest/${pageNameURL}${HTML2}","");
		}

		else if (isSet(locale)) {
			var hrefURL = selenium.getAttribute("//link[contains(@rel,'canonical')]@href");

			var hrefURLNoPortalURL = StringUtil.replace("${hrefURL}", "${portalURL}/${locale}", "");

			var pageSource = StringUtil.add("${HTML}", "${portalURL}/${locale}${HTML2}","");

			var pageSourceAlternate = StringUtil.add("${HTML}", "${portalURL}/${locale}/web/guest${HTML2}","");
		}

		else {
			var hrefURL = selenium.getAttribute("//link[contains(@rel,'canonical')]@href");

			var hrefURLNoPortalURL = StringUtil.replace("${hrefURL}", "${portalURL}", "");

			var pageSource = StringUtil.add("${HTML}", "${portalURL}${HTML2}","");

			var pageSourceAlternate = StringUtil.add("${HTML}", "${portalURL}/web/guest${HTML2}","");
		}
		echo("${hrefURL}");

		if ("${hrefURLNoPortalURL}" == "/web/guest") {
			AssertHTMLSourceTextPresent(value1 = "${pageSourceAlternate}");
		}
		else {
			AssertHTMLSourceTextPresent(value1 = "${pageSource}");
		}
	}

	macro assertNodePortPG {
		var key_nodePort = "${nodePort}";

		AssertTextEquals.assertPartialText(
			locator1 = "Home#NODE_NAME",
			value1 = "${nodePort}");
	}

	macro changeCurrentTheme {
		Click.waitForMenuToggleJSClick(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.click(menuItem = "Configure");

		Navigator.gotoNavTab(navTab = "Look and Feel");

		Click(locator1 = "SitePagesEditPage#REGULAR_UNIQUE_LOOK_AND_FEEL");

		Click(locator1 = "SitePagesEditPage#CHANGE_CURRENT_THEME_BUTTON");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_cardText = "${themeName}";

		AssertTextPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${key_cardText}");

		Click(locator1 = "Card#SPECIFIC_LARGE_TEXT");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.save();
	}

	macro changeLayoutLogo {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Page.uploadFileForLogo(logoFile = "${logoFile}");
	}

	macro deleteFriendlyURLPG {
		Navigator.gotoNavTab(navTab = "General");

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${friendlyUrlLocalized}");

		Type(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = " ");

		Button.clickSave();
	}

	macro deleteLogoPG {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		if (isSet(page)) {
			SitePages.gotoPageMenuItem(
				menuItem = "Configure",
				pageName = "${page}");

			Navigator.gotoNavTab(navTab = "Advanced");
		}
		else {
			LexiconEntry.gotoHeaderMenuItem(menuItem = "Configure");

			Panel.expandPanel(panel = "Logo");
		}

		AssertClick(
			locator1 = "Button#DELETE_LAYOUT_LOGO",
			value1 = "Delete");

		PortletEntry.save();
	}

	macro disableMobileDeviceRulesAreInheritedFromPublicPages {
		Uncheck.uncheckHiddenToggleSwitch(locator1 = "ToggleSwitch#INHERIT_MOBILE_DEVICE_RULES_FROM_PAGE");
	}

	macro editName {
		Alert.closeMessage(messageType = "SUCCESS");

		PortletEntry.inputName(name = "${pageNameEdit}");

		Button.clickSave();
	}

	macro editPageMetadata {
		Type.typeClickAt(
			locator1 = "TextInput#SEO_HTML_TITLE",
			value1 = "${HTMLTitle}");

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}");

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}");

		Button.clickSave();
	}

	macro getAuthTokenFromHtmlSource {
		var javaScript = '''
		var authToken = Liferay.authToken;

		return authToken;
		''';

		var authToken = selenium.getEval("${javaScript}");

		echo("## * Auth Token: ${authToken}");

		return "${authToken}";
	}

	macro getPlidFromHtmlSource {
		var javaScript = '''
		var plid = Liferay.ThemeDisplay.getPlid();

		return plid;
		''';

		var plid = selenium.getEval("${javaScript}");

		echo("## * p_l_id: ${plid}");

		return "${plid}";
	}

	macro getTextCountFromHtmlSource {
		var pageSource = selenium.getHtmlSource();

		echo("## * Page Source: ${pageSource}");

		return "${pageSource}";

		var count = StringUtil.count("${pageSource}", "${text}");

		echo("## * Count: ${count}");

		return "${count}";
	}

	macro gotoChildPagePG {
		MouseOver(
			key_pageName = "${pageName}",
			locator1 = "Home#PAGE");

		MouseOver(locator1 = "Home#SITE_NAME");

		MouseOver(
			key_pageName = "${pageName}",
			locator1 = "Home#PAGE");

		AssertVisible(
			key_childPageName = "${childPageName}",
			locator1 = "Home#PAGE_CHILD_PAGE");

		Click(
			key_childPageName = "${childPageName}",
			locator1 = "Home#PAGE_CHILD_PAGE");
	}

	macro gotoPagePanelPortlet {
		var key_portletName = "${portletName}";

		AssertClick(
			locator1 = "Panel#MENU_ITEM",
			value1 = "${portletName}");
	}

	macro localizedPG {
		Click(
			key_pageLocale = "${pageLocale}",
			locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE");
	}

	macro manageDeviceFamilyActions {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage Actions",
			rowEntry = "${deviceFamilyName}");

		SelectFrame(locator1 = "IFrame#DIALOG");

		Click(locator1 = "Button#ADD_ACTION");

		PortletEntry.inputName(name = "${actionName}");

		var key_actionType = "${actionType}";

		Click(locator1 = "MobileDevice#ADD_ACTION_TYPE_OPTION");

		if ("${actionType}" == "Redirect to URL") {
			Type(
				locator1 = "TextInput#URL",
				value1 = "${actionURL}");
		}
		else if ("${actionType}" == "Redirect to Site") {
			var key_siteName = "${siteName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_SITE_OPTION");

			var key_pageName = "${pageName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_PAGE_OPTION");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");

		var key_modalTitle = "Actions";

		Click(locator1 = "Button#CLOSE_MODAL");
	}

	macro openURLLocale {
		Navigator.openSpecificURL(url = "${localizationPageURL}");

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro selectMobileDeviceFamily {
		AssertClick(
			locator1 = "Button#SELECT_MOBILE_DEVICE_RULES",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_deviceFamilyName = "${deviceFamilyName}";

		AssertClick(
			locator1 = "MobileDevice#DEVICE_FAMILY_TABLE_NAME_LINK",
			value1 = "${deviceFamilyName}");

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Delete all pages except the Welcome and Search Page"
	macro tearDownCP {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		while (IsElementPresent(locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS", key_index = "3")) {
			Click.waitForMenuToggleJSClick(
				key_index = "3",
				locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}

		AssertElementNotPresent(
			key_index = "3",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS");
	}

	macro tearDownPG {
		Page.tearDownCP();
	}

	macro toggleHiddenFromNavigationMenuWidget {
		if ("${toggleValue}" == "enable") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Hidden from Navigation Menu Widget",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Hidden from Navigation Menu Widget",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else {
			fail("Failed. Please set ${toggleValue} to enable or disable.");
		}
	}

	macro togglePageTemplateInheritChanges {
		if ("${toggleValue}" == "enable") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Inherit Changes",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Inherit Changes",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
	}

	macro uploadFileForLogo {
		AssertClick(
			locator1 = "Button#CHANGE_LOGO",
			value1 = "Change");

		SelectFrame(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_IFRAME");

		AssertElementPresent(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_BUTTON");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${logoFile}");

		Pause(locator1 = "5000");

		Button.clickDone();

		Pause(locator1 = "5000");

		SelectFrameTop();

		PortletEntry.save();
	}

	macro view {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.togglePrivacy(privacy = "${privacy}");

		if (isSet(depth)) {
			SitePages.expandPageTree(depth = "${depth}");
		}

		AssertElementPresent(
			key_itemName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM");
	}

	macro viewChildPageDropdown {
		ClickNoError(locator1 = "Home#${viewChildPageDropdown}");

		if (isSet(javaScriptPage)) {
			AssertConfirm.waitForConfirmation(value1 = "${javaScriptPage}");
		}

		MouseOver.mouseOverClickNavigation(locator1 = "Home#PAGE_2");

		var key_childPageName = "${childPageName}";

		AssertTextEquals(
			locator1 = "Home#PAGE_CHILD_PAGE",
			value1 = "${childPageName}");
	}

	macro viewCurrentTheme {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		Click.waitForMenuToggleJSClick(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.click(menuItem = "Configure");

		Navigator.gotoNavTab(navTab = "Look and Feel");

		AssertTextPresent(
			locator1 = "SitePagesEditPage#VIEW_THEME",
			value1 = "${themeName}");
	}

	macro viewCustomLogoPG {
		AssertElementPresent(locator1 = "Home#CUSTOM_LOGO");

		AssertElementNotPresent(locator1 = "Home#DEFAULT_LOGO");
	}

	macro viewDefaultLogoPG {
		AssertElementPresent(locator1 = "Home#DEFAULT_LOGO");

		AssertElementNotPresent(locator1 = "Home#CUSTOM_LOGO");
	}

	macro viewDefaultSiteTemplatePagesPG {
		Click(locator1 = "Home#PAGE_NAVIGATION_BAR");

		var key_pageName = "${pageName}";

		if ("${siteTemplate}" == "Community") {
			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_1",
				value1 = "${pageName}");

			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_2",
				value1 = "Wiki");
		}
		else if ("${siteTemplate}" == "Intranet") {
			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_1",
				value1 = "${pageName}");

			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_2",
				value1 = "Documents and Media");
		}
		else if ("${siteTemplate}" == "Zoe Healthcare Theme") {
			AssertElementPresent(locator1 = "Home#SITE_NAME_LOGO");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_1");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_2");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_3");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_4");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_5");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_6");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_7");
		}
	}

	macro viewEmbeddedPagePG {
		AssertTextPresent(
			locator1 = "Home#EMBEDDED_SITE_LIFERAY_BANNER_LOGO",
			value1 = "Liferay");
	}

	macro viewFriendlyURL {
		AssertTextEquals(
			locator1 = "SitePages#DETAILS_FRIENDLY_BASE_URL",
			value1 = "${siteFriendlyURL}");
	}

	macro viewFriendlyURLLanguageOptionsPG {
		Pause(locator1 = "3000");

		Click(
			key_fieldName = "${fieldName}",
			locator1 = "Button#LOCALIZATION");

		for (var locale : list "${currentLanguageList}") {
			AssertElementPresent(
				key_locale = "${locale}",
				locator1 = "Translation#LOCALIZATION_NAME");
		}

		if ("${assertUnavailableLanguages}" == "true") {
			for (var locale : list "${unavailableLanguageList}") {
				AssertElementNotPresent(
					key_locale = "${locale}",
					locator1 = "Translation#LOCALIZATION_NAME");
			}
		}

		Click(
			key_fieldName = "${fieldName}",
			locator1 = "Button#LOCALIZATION");
	}

	macro viewInactiveRequestMessage {
		AssertTextEquals(
			key_resource = "${resource}",
			locator1 = "Home#STATUS_MESSAGE",
			value1 = "This ${resource} is inactive. Please contact the administrator.");
	}

	macro viewLayoutLogoPG {
		if ("${assertLayoutLogoPresent}" == "true") {
			AssertElementPresent(locator1 = "Home#LAYOUT_LOGO");
		}
		else {
			AssertElementNotPresent(locator1 = "Home#LAYOUT_LOGO");
		}
	}

	macro viewNoDeletePagesAssociatedWithSiteTemplate {
		if (isSet(pageName)) {
			Click(
				key_itemName = "${pageName}",
				locator1 = "SitePages#LIST_GROUP_ITEM");
		}

		Click.waitForMenuToggleJSClick(
			key_pageName = "${page}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.viewNotPresent(menuItem = "Delete");

		Click.waitForMenuToggleJSClick(
			key_pageName = "${page}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		PortletEntry.selectAll();

		AssertElementPresent(locator1 = "xpath=(//button[(@title = 'Delete') and (@disabled = 'disabled')])");
	}

	macro viewNoPage {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.togglePrivacy(privacy = "${privacy}");

		AssertElementNotPresent(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM");
	}

	macro viewNoPG {
		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}

	macro viewNoSelectCategory {
		Navigator.gotoNavTab(navTab = "SEO");

		AssertElementNotPresent(
			key_vocabularyName = "${vocabularyName}",
			locator1 = "AssetCategorization#CATEGORY_SELECT");
	}

	macro viewPageFriendlyURLPG {
		if (isSet(friendlyUrlLocalized)) {
			PortletEntry.changeLocale(
				fieldName = "Friendly URL",
				locale = "${friendlyUrlLocalized}");
		}

		AssertTextEquals(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "/${pageName}");
	}

	macro viewPageLayout {
		if ("${pageLayout}" == "1 Column") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_1_COLUMN");

			AssertElementNotPresent(locator1 = "Home#PAGE_COLUMN_2");
		}
		else if ("${pageLayout}" == "2 Column (30/70)") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_2_COLUMNS_30_SPLIT");

			AssertVisible(locator1 = "Home#PAGE_COLUMN_2_LAYOUT_2_COLUMNS_70_SPLIT");
		}
	}

	macro viewPageLayoutColumn {
		AssertElementPresent(
			key_columnName = "${columnName}",
			locator1 = "SitePagesEditPage#LAYOUT_CARD");
	}

	macro viewPageLocalization {
		AssertElementPresent(locator1 = "TextInput#SEO_HTML_TITLE");

		AssertTextEquals.assertPartialText(
			key_fieldName = "${fieldName}",
			locator1 = "Button#LOCALIZATION",
			value1 = "${defaultSiteLanguageKey}");
	}

	macro viewPageLockCheck {
		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a site template which does not allow modifications to it.");
	}

	macro viewPageMetadata {
		AssertTextEquals(
			locator1 = "TextInput#SEO_HTML_TITLE",
			value1 = "${HTMLTitle}");

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}");

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}");
	}

	macro viewPagesOrder {
		AssertTextEquals.assertPartialText(
			key_index = "2",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName1}");

		AssertTextEquals.assertPartialText(
			key_index = "3",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName2}");

		AssertTextEquals.assertPartialText(
			key_index = "4",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName3}");

		if (isSet(pageName4)) {
			AssertTextEquals.assertPartialText(
				key_index = "5",
				locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
				value1 = "${pageName4}");
		}
	}

	macro viewPagesOrderOnPage {
		AssertTextEquals.assertPartialText(
			key_index = "1",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY_ON_PAGE",
			value1 = "${pageName1}");

		AssertTextEquals.assertPartialText(
			key_index = "2",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY_ON_PAGE",
			value1 = "${pageName2}");

		AssertTextEquals.assertPartialText(
			key_index = "3",
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY_ON_PAGE",
			value1 = "${pageName3}");
	}

	macro viewPageTemplate {
		Navigator.openSiteURL(siteName = "Site Name");

		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a page template. Disable the automatic propagation of changes to this page to be able to make modifications.");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${page}");

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "Some page settings are unavailable because Inherit Changes is enabled. To change these settings, disable Inherit Changes under the General section.");

		AssertChecked.assertCheckedNotVisible(locator1 = "SitePagesEditPage#PAGE_TYPE_TEMPLATE_AUTOMATICALLY_APPLY_CHANGES_CHECKBOX_GENERIC");
	}

	macro viewPageTemplateTypeNotPresent {
		AssertElementNotPresent(
			key_cardText = "${pageTemplateName}",
			locator1 = "Card#SPECIFIC_LARGE_TEXT");
	}

	macro viewPageTemplateTypePresent {
		AssertElementPresent(
			key_cardText = "${pageTemplateName}",
			locator1 = "Card#SPECIFIC_LARGE_TEXT");
	}

	macro viewPanelPortletListCP {
		ProductMenuHelper.openProductMenu();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}");

		var key_componentName = "${componentName}";

		if (IsElementPresent(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW")) {
			Click(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW");
		}

		var key_componentOrPortletName = "${componentName}";

		AssertChecked.assertCheckedNotVisible(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT");

		for (var portletName : list "${portletNameList}") {
			var key_componentOrPortletName = "${portletName}";

			AssertChecked.assertCheckedNotVisible(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT");
		}
	}

	macro viewPanelPortletListPG {
		var key_componentName = "${componentName}";

		AssertTextEquals(
			locator1 = "Panel#PANEL_TITLE",
			value1 = "${componentName}");

		var key_pageName = "${pageName}";

		AssertTextEquals(
			locator1 = "Panel#PANEL_PAGE_TITLE",
			value1 = "${pageName}");

		AssertTextEquals(
			locator1 = "Panel#PANEL_PAGE_DEFAULT_INFORMATION",
			value1 = "Please select a tool from the left menu.");

		for (var portletName : list "${portletNameList}") {
			var key_portletName = "${portletName}";

			AssertTextEquals(
				locator1 = "Panel#MENU_ITEM",
				value1 = "${portletName}");
		}
	}

	macro viewRTLLayout {
		AssertCssValue(
			locator1 = "Home#SITE_NAME",
			locator2 = "direction",
			value1 = "rtl");

		AssertCssValue(
			locator1 = "ProductMenu#TOGGLE",
			locator2 = "text-align",
			value1 = "right");

		AssertCssValue(
			locator1 = "ProductMenu#PRODUCT_MENU_OPENED",
			locator2 = "right",
			value1 = "0px");

		var sideNavWidth = Css.getCssValue(
			cssClassSelector = ".sidenav-menu",
			cssProperty = "width"
		);

		AssertCssValue(
			locator1 = "Home#SITE_WRAPPER",
			locator2 = "padding-right",
			value1 = "${sideNavWidth}");
	}

	macro viewSelectedLayoutColumn {
		AssertElementPresent(
			key_columnName = "${columnName}",
			locator1 = "SitePagesEditPage#LAYOUT_CARD_SELECTED");
	}

	macro viewSiteNameTranslationsPG {
		LanguagePortlet.selectLanguagePG(
			locale = "${locale}",
			textIcon = "${textIcon}");

		AssertTextEquals(
			locator1 = "Home#SITE_NAME",
			value1 = "${siteName}");
	}

	macro viewSpecificPG {
		for (var pageName : list "${pageNameList}") {
			var key_pageName = "${pageName}";

			AssertTextEquals(
				locator1 = "Home#PAGE",
				value1 = "${pageName}");
		}
	}

	macro viewTranslationsPG {
		Navigator.openSpecificURL(url = "${sitePageURL}");

		AssertLocation(value1 = "${sitePageURL}");

		Alert.viewLocalizationMessage(
			defaultLanguageLocalizationMessage = "${defaultLanguageLocalizationMessage}",
			key_pageLocale = "${defaultLanguageLocalizationMessage}",
			preferredLanguageLocalizationMessage = "${preferredLanguageLocalizationMessage}",
			translationLanguageLocalizationMessage = "${translationLanguageLocalizationMessage}");
	}

	macro viewURLLocale {
		if (isSet(localizationOption)) {
			AssertClick(
				key_pageLocale = "${localizationOption}",
				locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE",
				value1 = "${localizationOption}");
		}

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro viewWithWorkflowPG {
		Pause(locator1 = "5000");

		if ("${workflowStatus}" == "Ready for Publication") {
			AssertElementPresent(locator1 = "Staging#STAGING_MENU_READY_FOR_PUBLICATION");
		}
		else {
			AssertTextEquals(
				locator1 = "Message#WORKFLOW_STATUS",
				value1 = "${workflowStatus}");
		}

		if ("${livePage}" == "true") {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Staging#LIVE_BUTTON",
				value1 = "Live");

			var key_pageName = "${pageName}";

			AssertElementNotPresent(locator1 = "Home#PAGE");
		}
	}

}