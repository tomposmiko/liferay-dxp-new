definition {

	@summary = "Select a content type and subtype when adding a display page. These locators should not be needed to be reused."
	macro _selectMappingTypes {
		if (!(isSet(contentType))) {
			var contentType = "Web Content Article";
		}

		if (!(isSet(subType))) {
			var subType = "Basic Web Content";
		}

		Select(
			locator1 = "//div[contains(.,'Content Type')]/select",
			value1 = "${contentType}");

		Select(
			locator1 = "//div[contains(.,'Subtype')]/select",
			value1 = "${subType}");
	}

	macro addDisplayPage {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${displayPageName}");

		DisplayPageTemplatesAdmin._selectMappingTypes(
			contentType = "${contentType}",
			subType = "${subType}");

		Button.clickSave();

		PageEditor.assertFragmentSidebarLoaded();
	}

	macro deleteDisplayPage {
		Pause(locator = "5000");

		LexiconCard.delete(card = "${displayPageName}");
	}

	macro gotoDisplayPage {
		LexiconCard.clickCardTitle(card = "${displayPageName}");
	}

	macro gotoDisplayPageEllipsisItem {
		Pause(locator = "1000");

		LexiconCard.clickEllipsisItem(
			card = "${displayPageName}",
			item = "${item}");
	}

	macro markDisplayPageAsDefault {
		DisplayPageTemplatesAdmin.gotoDisplayPageEllipsisItem(
			displayPageName = "${displayPageName}",
			item = "Mark As Default");

		AssertVisible(
			key_card = "${displayPageName}",
			locator1 = "LexiconCard#CARD_STICKER");
	}

	macro openDisplayPagesAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_layout_admin_web_portlet_GroupPagesPortlet&amp;_com_liferay_layout_admin_web_portlet_GroupPagesPortlet_tabs1=display-page-templates");
	}

	macro renameDisplayPage {
		DisplayPageTemplatesAdmin.gotoDisplayPageEllipsisItem(
			displayPageName = "${displayPageName}",
			item = "Rename");

		PortletEntry.inputName(name = "${newDisplayPageName}");

		Modal.save();
	}

	macro viewDisplayPageNotPresent {
		LexiconCard.viewCardNotPresent(card = "${displayPageName}");
	}

	macro viewDisplayPagePresent {
		LexiconCard.viewCardPresent(card = "${displayPageName}");
	}

	macro viewPGViaAP {
		var key_assetContent = "${webContentContent}";
		var key_assetTitle = "${webContentTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${webContentContent}");

		AssertClick(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${webContentTitle}");

		for (var content : list "${contentList}") {
			AssertElementPresent(
				key_text = "${content}",
				locator1 = "Fragment#EDITABLE_FIELD_CONTENT");
		}
	}

}