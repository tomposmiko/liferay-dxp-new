definition {

	macro _addPage {
		SitePages._selectPageType(
			collectionName = "${collectionName}",
			pageTemplateName = "${pageTemplateName}",
			sitePageType = "${sitePageType}");

		SelectFrame(locator1 = "IFrame#DIALOG");

		SitePages._addPageToNavigationMenu(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			navigationMenus = "${navigationMenus}");

		PortletEntry.inputName(name = "${pageName}");

		Button.clickAdd();

		SelectFrame.selectFrameTop();

		if ("${sitePageType}" == "Embedded") {
			Type(
				locator1 = "SitePagesEditPage#PAGE_TYPE_EMBEDDED_URL_FIELD",
				value1 = "${pageTypeURL}");
		}

		if (isSet(inheritChanges)) {
			Page.togglePageTemplateInheritChanges(toggleValue = "${inheritChanges}");
		}

		AssertVisible(locator1 = "TextInput#NAME");

		Pause(locator1 = "1000");

		Alert.closeMessage(messageType = "SUCCESS");

		AssertElementNotPresent(locator1 = "Message#SUCCESS");

		Button.click(button = "Save");

		WaitForSPARefresh();
	}

	@summary = "Add newly created pages to specified navigation menus or assert that the option to add the pages to navigation menus is missing."
	macro _addPageToNavigationMenu {
		if (isSet(navigationMenus)) {
			for (var navigationMenu : list "${navigationMenus}") {
				if ("${assertCheckboxMissing}" == "true") {
					AssertElementNotPresent(
						checkboxName = "${navigationMenu}",
						locator1 = "Checkbox#ANY_CHECKBOX");
				}
				else {
					Check(
						checkboxName = "${navigationMenu}",
						locator1 = "Checkbox#ANY_CHECKBOX");

					AssertChecked(
						checkboxName = "${navigationMenu}",
						locator1 = "Checkbox#ANY_CHECKBOX");
				}
			}
		}
	}

	macro _configurePage {
		if ("${sitePageType}" == "Embedded") {
			Page._addPageTypeEmbedded(pageTypeURL = "${pageTypeURL}");
		}
		else if ("${sitePageType}" == "Panel") {
			Page._addPageTypePanel(componentName = "${componentName}");
		}
		else if ("${sitePageType}" == "Widget Page") {
			var key_columnName = "${columnName}";

			Click(locator1 = "SitePagesEditPage#LAYOUT_CARD");
		}
		else if ("${sitePageType}" == "Content Page") {
			Select(
				locator1 = "SitePagesEditPage#LAYOUT_PAGE_TEMPLATE_SELECT",
				value1 = "${layoutPageTemplateName}");
		}
		else if ("${sitePageType}" == "Full Page Application") {
			Page._addPageTypeFullPageApplication(portlet = "${portlet}");
		}
	}

	macro _selectPageType {
		if (!(contains("${pageTemplateName}", "{pageTemplateName}"))) {
			var sitePageType = "${pageTemplateName}";

			if (isSet(collectionName)) {
				Navigator.gotoNavNested(navNested = "${collectionName}");
			}
			else {
				Navigator.gotoNavNested(navNested = "Global Templates");
			}
		}
		else if (isSet(sitePageType)) {
			var sitePageType = "${sitePageType}";
		}
		else {
			var sitePageType = "Widget Page";
		}

		LexiconCard.viewCardPresent(card = "${sitePageType}");

		Pause(locator1 = "3000");

		LexiconCard.clickCard(card = "${sitePageType}");
	}

	macro addChildPage {
		MouseOver(
			key_itemName = "${parentPageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM");

		Click(
			key_pageName = "${parentPageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_PLUS_ICON");

		SitePages._addPage(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			navigationMenus = "${navigationMenus}",
			pageName = "${childPageName}",
			pageTemplateName = "${pageTemplateName}",
			sitePageType = "${sitePageType}");
	}

	macro addPrivateChildPage {
		SitePages.togglePrivacy(privacy = "Private Pages");

		SitePages.addChildPage(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			childPageName = "${childPageName}",
			navigationMenus = "${navigationMenus}",
			pageTemplateName = "${pageTemplateName}",
			parentPageName = "${parentPageName}",
			sitePageType = "${sitePageType}");
	}

	macro addPrivatePage {
		Pause(locator1 = "3000");

		var key_breadcrumbName="Pages";

		if ("${siteTemplate}" == "true") {
			LexiconEntry.gotoAdd();
		}
		else if (IsElementPresent(locator1 = "Message#EMPTY_INFO_TAGLIB")) {
			SitePages.gotoAddFirstPage(pageType = "Private Page");
		}
		else {
			AssertClick(
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Pages");

			LexiconEntry.gotoAddMenuItem(menuItem = "Private Page");
		}

		SitePages._addPage(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			navigationMenus = "${navigationMenus}",
			pageName = "${pageName}",
			pageTemplateName = "${pageTemplateName}",
			sitePageType = "${sitePageType}");
	}

	macro addPublicChildPage {
		SitePages.togglePrivacy(privacy = "Public Pages");

		SitePages.addChildPage(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			childPageName = "${childPageName}",
			navigationMenus = "${navigationMenus}",
			pageTemplateName = "${pageTemplateName}",
			parentPageName = "${parentPageName}",
			sitePageType = "${sitePageType}");
	}

	macro addPublicPage {
		Pause(locator1 = "3000");

		var key_breadcrumbName="Pages";

		if (IsElementPresent(locator1 = "Message#EMPTY_INFO_TAGLIB")) {
			SitePages.gotoAddFirstPage(pageType = "Public Page");
		}
		else if (IsElementPresent(locator1 = "SitePages#LIST_GROUP_ITEM", key_itemName = "Public Pages")) {
			Click(
				key_itemName = "Public Pages",
				locator1 = "SitePages#LIST_GROUP_ITEM");

			LexiconEntry.gotoAdd();
		}
		else {
			AssertClick(
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
				value1 = "Pages");

			LexiconEntry.gotoAddMenuItem(menuItem = "Public Page");
		}

		SitePages._addPage(
			assertCheckboxMissing = "${assertCheckboxMissing}",
			collectionName = "${collectionName}",
			inheritChanges = "${inheritChanges}",
			navigationMenus = "${navigationMenus}",
			pageName = "${pageName}",
			pageTemplateName = "${pageTemplateName}",
			pageTypeURL = "${pageTypeURL}",
			sitePageType = "${sitePageType}");
	}

	macro configureChildPage {
		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}",
			parentPagesHierarchy = "${parentPagesHierarchy}");

		SitePages._configurePage(
			columnName = "${columnName}",
			componentName = "${componentName}",
			layoutPageTemplateName = "${layoutPageTemplateName}",
			pageTypeURL = "${pageTypeURL}",
			portlet = "${portlet}",
			sitePageType = "${sitePageType}");

		PortletEntry.save();
	}

	macro configurePage {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.togglePrivacy(privacy = "${privacy}");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}");

		SitePages._configurePage(
			columnName = "${columnName}",
			componentName = "${componentName}",
			layoutPageTemplateName = "${layoutPageTemplateName}",
			pageTypeURL = "${pageTypeURL}",
			portlet = "${portlet}",
			sitePageType = "${sitePageType}");

		PortletEntry.save();
	}

	macro deletePage {
		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "chrome") {
			MetalComponent.waitForLayout();
		}

		Click(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		if (isSet(failure)) {
			if (IsElementPresent(locator1 = "Message#ERROR_2")) {
				Alert.viewRequestFailedToComplete();

				AssertTextEquals(
					locator1 = "Message#ERROR_2",
					value1 = "${failure}");
			}
			else {
				AssertTextEquals(
					locator1 = "Message#ERROR",
					value1 = "${failure}");
			}
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro expandPageTree {
		if (!(isSet(depth))) {
			var depth = "1";
		}

		var count = "0";

		while ("${count}" != "${depth}") {
			var index = ${count} + 1;

			Click(
				key_depth = "${index}",
				locator1 = "SitePages#LIST_GROUP_ITEM_DEPTH");

			var count = ${count} + 1;
		}
	}

	@summary = "Go to the page creation form through the empty-result-message taglib"
	macro gotoAddFirstPage {
		var key_menuItem = "${pageType}";

		Refresh();

		Click(locator1 = "Message#EMPTY_INFO_TAGLIB");

		Click(locator1 = "Dropdown#EMPTY_MESSAGE_DROPDOWN");

		Click(locator1 = "MenuItem#DROPDOWN_MENU_ITEM");
	}

	@summary = "Go to the pageMenuItem of a Site Page. Parent pages hierarchy is required to navigate to child pages."
	macro gotoPageMenuItem {
		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "chrome") {
			MetalComponent.waitForLayout();
		}

		if (isSet(parentPagesHierarchy)) {
			for (var parentPage : list "${parentPagesHierarchy}") {
				Click(
					key_itemName = "${parentPage}",
					locator1 = "SitePages#LIST_GROUP_ITEM");
			}
		}

		Click(
			key_pageName = "${pageName}",
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON");

		MenuItem.click(menuItem = "${menuItem}");
	}

	macro openPagesAdmin {
		var siteURLKey = StringUtil.replace("${siteURLKey}", " ", "-");
		var siteURLKey = StringUtil.lowerCase("${siteURLKey}");

		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_layout_admin_web_portlet_GroupPagesPortlet");
	}

	macro togglePrivacy {
		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "chrome") {
			MetalComponent.waitForLayout();
		}

		Click(
			key_itemName = "${privacy}",
			locator1 = "SitePages#LIST_GROUP_ITEM");
	}

}