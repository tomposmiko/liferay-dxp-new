definition {
	macro _gotoPendingFilter {
		Pause(locator1 = "5000");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Pending");
	}

	macro _tearDownWorkflow {
		var noWorkflow = "No Workflow";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Knowledge Base Article"
			);

			Select(
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
				value1 = "${noWorkflow}",
				key_workflowResourceValue = "Knowledge Base Article"
			);

			Button.clickSave();
		}

		for (var workflowResourceValue : list "Blogs Entry,Calendar Event,Comment,Message Boards Message,Page Revision,Wiki Page") {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "${workflowResourceValue}"
			);

			var key_workflowResourceValue = "${workflowResourceValue}";

			Select(
				locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
				value1 = "${noWorkflow}"
			);

			Button.clickSave();
		}
	}

	macro _viewActivities {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertClick(locator1 = "MyWorkflowTasksTask#ACTIVITIES", value1 = "Activities");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#ACTIVITIES_LINE_1",
			value1 = "${workflowActivityComment}"
		);
	}

	macro addNewDefinition {
		LexiconEntry.gotoAdd();

		PortletEntry.inputTitle(title = "${workflowDefinitionTitle}");
	}

	macro approveTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		var menuItem = "Approve";

		if (isSet(workflowDefinitionTask)) {
			var menuItem = "${workflowDefinitionTask}";
		}
		else if (isSet(boardWorkflowTask)) {
			var menuItem = "Approve ${boardWorkflowTask}";
		}

		MenuItem.click(menuItem = "${menuItem}");

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}"
			);
		}

		Workflow.confirmWorkflowAction();

		Pause(locator1 = "1000");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Pause(locator1 = "1000");

		if (isSet(workflowActivityComment)) {
			Workflow.gotoCompletedFilter();

			Workflow._viewActivities(
				workflowActivityComment = "${workflowActivityComment}",
				workflowAssetTitle = "${workflowAssetTitle}"
			);
		}
	}

	macro approveTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro assignByDetails {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to...");

		AssertTextEquals(locator1 = "IFrame#DIALOG_BOX", value1 = "Assign to...");

		IFrame.selectConfigurationFrame();

		Select(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_ASSIGN_TO_SELECT",
			value1 = "${user}"
		);

		if (isSet(comment)) {
			Type(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${comment}"
			);
		}

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignToMeTaskByActions {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		MenuItem.click(menuItem = "Assign to Me");

		IFrame.selectConfigurationFrame();

		if (isSet(workflowActivityComment)) {
			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}"
			);
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		if (isSet(workflowActivityComment)) {
			Workflow._viewActivities(
				workflowActivityComment = "${workflowActivityComment}",
				workflowAssetTitle = "${workflowAssetTitle}"
			);
		}
	}

	macro assignToMeTaskByDetails {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.viewTaskAssignedToMyRolesDetails(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		Click(locator1 = "Icon#ANGLE_LEFT_BACK");

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro configureWorkflow {
		AssertClick(
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit",
			key_rowEntry = "${workflowResourceValue}"
		);

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = "${workflowDefinition}",
			key_workflowResourceValue = "${workflowResourceValue}"
		);

		AssertClick(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SAVE",
			value1 = "Save",
			key_workflowResourceValue = "${workflowResourceValue}"
		);

		Alert.viewSuccessMessage();

		Workflow.viewConfigurationSelected(
			workflowDefinition = "${workflowDefinition}",
			workflowResourceValue = "${workflowResourceValue}"
		);
	}

	macro configureWorkflowViaFolderInfo {
		Click(locator1 = "Icon#INFO");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}"
		);

		PortletEntry.save();
	}

	macro configureWorkflowViaPortlet {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Edit");

		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}"
		);

		PortletEntry.save();
	}

	macro confirmWorkflowAction {
		IFrame.selectConfigurationFrame();

		AssertElementPresent(locator1 = "Button#DONE");

		Click(locator1 = "Button#DONE");

		Alert.viewSuccessMessage();
	}

	macro deleteWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS"
		);

		MenuItem.clickNoError(menuItem = "Delete");

		AssertTextEquals(locator1 = "IFrame#DIALOG_BOX", value1 = "Delete workflow?");

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DIALOG_BOX_BODY",
			value1 = "A deleted workflow cannot be recovered."
		);

		Button.clickDelete();

		Alert.viewSuccessMessage();

		AssertElementNotPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");
	}

	macro gotoAssetViaTableTitle {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);
	}

	macro gotoCompletedFilter {
		Pause(locator1 = "5000");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Completed");
	}

	macro gotoCompletedTaskAssignedToMePreview {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		Workflow.gotoPreviewView();
	}

	macro gotoEditWorkflowDefinition {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${workflowDefinitionTitle}"
		);
	}

	macro gotoPreviewEdit {
		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_EDIT");

		SelectFrame(locator1 = "IFrame#EDIT_ASSET");
	}

	macro gotoPreviewView {
		AssertVisible(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		Click(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");

		AssertElementNotPresent(locator1 = "WorkflowSubmissionsTask#PREVIEW_VIEW");
	}

	macro gotoTaskAssignedToMeActionsCmd {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ACTIONS");
	}

	macro gotoTaskAssignedToMyRolesActionsCmd {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Click(locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS");
	}

	macro gotoTaskDetails {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);
	}

	macro gotoViewCompletedAssetViaMySubmissions {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		Click(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		Workflow.gotoPreviewView();
	}

	macro publishExistingWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS"
		);

		MenuItem.click(menuItem = "Edit");

		Workflow.viewDefinitionPublicationStatus(status = "Not Published");

		PortletEntry.publish();

		Workflow.viewDefinitionPublicationStatus(status = "Published");
	}

	macro publishInvalidWorkflowDefinition {
		if (isSet(update)) {
			AssertClickNoError(locator1 = "Button#UPDATE", value1 = "Update");
		}
		else {
			AssertClickNoError(locator1 = "Button#PUBLISH", value1 = "Publish");
		}

		Alert.viewErrorMessage(errorMessage = "${errorMessage}");
	}

	macro rejectTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		MenuItem.click(menuItem = "Reject");

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}"
			);
		}

		Workflow.confirmWorkflowAction();

		SelectFrame(value1 = "relative=top");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro rejectTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Reject");

		Workflow.confirmWorkflowAction();

		SelectFrame(value1 = "relative=top");

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro resubmitTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		MenuItem.click(menuItem = "Resubmit");

		Workflow.confirmWorkflowAction();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro resubmitTaskByDetails {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssignedTo = "${workflowAssignedTo}",
			workflowTask = "${workflowTask}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Resubmit");

		Workflow.confirmWorkflowAction();

		Workflow.viewCompletedTask(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);
	}

	macro saveDefinition {
		AssertClick(locator1 = "KaleoDesigner#SAVE_BUTTON", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro tearDownPortalWorkflow {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow"
		);

		Navigator.gotoNavItem(navItem = "Schemes");

		Workflow._tearDownWorkflow();

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "User");

		Select(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_SELECT",
			value1 = "No Workflow",
			key_workflowResourceValue = "User"
		);

		Button.clickSave();
	}

	macro tearDownSiteWorkflow {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow"
		);

		Workflow._tearDownWorkflow();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Workflow.configureWorkflowViaFolderInfo(workflowDefinition = "No Workflow");
	}

	macro tearDownSpecificWorkflowDefinition {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow"
		);

		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS")) {
			Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Join Xor");

			Workflow.deleteWorkflowDefinition(workflowDefinitionTitle = "Join Xor");
		}
	}

	macro tearDownWorkflowDefinitions {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow"
		);

		while (IsElementPresent(locator1 = "WorkflowDefinition#DEFINITION_TABLE_ADDED_DEFINITION_ELLIPSIS")) {
			Workflow.unpublishWorkflowDefinition();

			Workflow.deleteWorkflowDefinition();
		}
	}

	macro unpublishWorkflowDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		Click(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_SPECIFIC_DEFINITION_ELLIPSIS"
		);

		MenuItem.clickNoError(menuItem = "Unpublish");

		Alert.viewSuccessMessage();
	}

	macro updateDueDateAssignedToMeTaskByActions {
		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		MenuItem.click(menuItem = "Update Due Date");

		var currentYear = DateUtil.getCurrentYear();
		var futureYear = MathUtil.sum("${currentYear}", "1");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}"
		);

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = "${workflowDueDateTime}"
		);

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}"
			);
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMe(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE",
			value1 = "Within"
		);
	}

	macro updateDueDateTaskByActions {
		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		Workflow.gotoTaskAssignedToMyRolesActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		MenuItem.click(menuItem = "Update Due Date");

		var currentYear = DateUtil.getCurrentYear();
		var futureYear = MathUtil.sum("${currentYear}", "1");

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE",
			value1 = "4/11/${futureYear}"
		);

		Type(
			locator1 = "MyWorkflowTasks#DIALOG_BOX_DUE_DATE_TIME",
			value1 = "${workflowDueDateTime}"
		);

		if (isSet(workflowActivityComment)) {
			var key_workflowActivityComment = "${workflowActivityComment}";

			Type.clickAtType(
				locator1 = "MyWorkflowTasks#DIALOG_BOX_COMMENT_FIELD",
				value1 = "${workflowActivityComment}"
			);
		}

		Workflow.confirmWorkflowAction();

		Workflow.viewTaskAssignedToMyRoles(
			ddlDataDefinitionName = "${ddlDataDefinitionName}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE",
			value1 = "Within"
		);
	}

	macro uploadDefinition {
		Workflow.addNewDefinition(
			workflowDefinitionTitle = "${workflowDefinitionTitle}"
		);

		if (IsElementPresent(locator1 = "KaleoDesignerEditWorkflow#SOURCE_KALEO_XML_TAB")) {
			KaleoDesigner.viewSourceXMLTab();
		}

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "WorkflowUpload#FILE_UPLOAD",
			value1 = "${workflowDefinitionFile}"
		);

		AssertVisible(locator1 = "Message#SUCCESS");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Definition imported successfully."
		);

		Alert.closeMessage(messageType = "SUCCESS");

		PortletEntry.publish();

		AssertTextEquals.assertPartialText(
			locator1 = "Portlet#HEADER",
			value1 = "${workflowDefinitionTitle}"
		);

		Navigator.gotoBack();
	}

	macro viewAssignedToMyRolesTasksCP {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		var key_workflowAssetType = "${workflowAssetType}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS"
		);
	}

	macro viewCannotRejectTaskByActions {
		Workflow.gotoTaskAssignedToMeActionsCmd(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowTask = "${workflowTask}"
		);

		AssertElementNotPresent(locator1 = "MyWorkflowTasksTask#MENU_REJECT");
	}

	macro viewCannotWithdrawTaskByActions {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertElementNotPresent(
			locator1 = "//div[@id='_158_workflowInstancesSearchContainer']//tr[contains(.,'${key_workflowAssetTitle}')]/td[7]/span/a[contains(@id,'menu_withdraw-submission')]/span"
		);

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}

	macro viewCompletedSubmission {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowStatus}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	macro viewCompletedTask {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewCompletedTasksTaskNotPresentCP {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertElementNotPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK"
		);

		AssertElementNotPresent(
			locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE"
		);

		AssertElementNotPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE"
		);
	}

	macro viewConfigurationSelected {
		var key_workflowResourceValue = "${workflowResourceValue}";

		AssertTextEquals(
			locator1 = "WorkflowConfiguration#RESOURCE_TABLE_WORKFLOW",
			value1 = "${workflowDefinition}"
		);
	}

	macro viewDefaultMySubmissionsCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publications requested by me."
		);
	}

	macro viewDefaultMyWorkflowTasksCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to you."
		);

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tasks assigned to your roles."
		);
	}

	macro viewDefaultWorkflowSubmissions {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no publication requests."
		);
	}

	macro viewDefinition {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		if (isSet(workflowDefinitionTitle)) {
			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = "${workflowDefinitionTitle}"
			);
		}
		else {
			var key_workflowDefinitionTitle = "${workflowDefinitionName}";

			AssertTextEquals(
				locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
				value1 = "${workflowDefinitionName}"
			);
		}
	}

	macro viewDefinitionNotPresent {
		AssertElementNotPresent(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
			key_workflowDefinitionTitle = "${workflowDefinitionTitle}"
		);
	}

	macro viewDefinitionPublicationStatus {
		AssertTextEquals(
			locator1 = "WorkflowDefinition#PUBLICATION_STATUS",
			value1 = "${status}"
		);
	}

	macro viewDefinitionPublished {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED",
			value1 = "${workflowDefinitionTitle}"
		);
	}

	macro viewDefinitionUnpublished {
		var key_workflowDefinitionTitle = "${workflowDefinitionTitle}";

		AssertTextEquals(
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_UNPUBLISHED",
			value1 = "${workflowDefinitionTitle}"
		);
	}

	macro viewMySubmissions {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");
	}

	macro viewMySubmissionsTaskPreview {
		AssertTextEquals(
			locator1 = "WorkflowSubmissionsTask#PREVIEW",
			value1 = "Preview of ${workflowAssetType}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "WorkflowSubmissionsTask#PREVIEW_CONTENT",
			value1 = "${workflowAssetContent}"
		);

		SiteAdmin.viewPortletTitle(portletTitle = "${workflowDefinition}");
	}

	macro viewNoDuplicateTaskAssignedToMyRoles {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertElementNotPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE_DUPLICATE"
		);
	}

	macro viewPendingTasks {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#COMPLETED_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewRejectedTask {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "Update";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "Update"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewSecondAssetEntryContent {
		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TITLE_2",
			value1 = "${workflowAssetTitle}"
		);

		WorkflowAsset.previewViewContent(
			fieldLabel = "${fieldLabel}",
			fieldValue = "${fieldValue}"
		);
	}

	macro viewSubmissionNotPresent {
		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertElementNotPresent(locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");
	}

	macro viewTaskAssignedToMe {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to Me");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_ACTIVE");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");
	}

	macro viewTaskAssignedToMeDetails {
		Navigator.gotoNavTab(navTab = "Assigned to Me");

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		if (isSet(workflowAssignedTo)) {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = "${workflowAssignedTo}"
			);
		}
		else {
			AssertTextEquals.assertText(
				locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
				value1 = "Test Test"
			);
		}

		var key_workflowTask = "${workflowTask}";

		AssertTextEquals.assertText(
			locator1 = "MyWorkflowTasksTask#STATE",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_CONTENT",
			value1 = "${workflowAssetContent}"
		);
	}

	macro viewTaskAssignedToMyRoles {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow._gotoPendingFilter();

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_LAST_ACTIVITY_DATE"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_DUE_DATE"
		);

		AssertElementPresent(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ACTIONS"
		);
	}

	macro viewTaskAssignedToMyRolesDetails {
		var key_workflowAssetTitle = "${workflowAssetTitle}";
		var key_workflowTask = "${workflowTask}";

		AssertClick(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_MY_ROLES_TABLE_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
			value1 = "Nobody"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#STATE",
			value1 = "${workflowTask}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "${workflowAssetTitle}"
		);
	}

	macro viewTaskHeaderTitle {
		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${workflowTask}: ${kfProcessName}"
		);
	}

	macro withdrawTaskByActions {
		Workflow.viewMySubmissions(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}",
			workflowTask = "${workflowTask}"
		);

		Workflow._gotoPendingFilter();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	macro withdrawTaskByDetails {
		Workflow.viewMySubmissions(
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}",
			workflowTask = "${workflowTask}"
		);

		Workflow._gotoPendingFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Withdraw Submission");

		Alert.viewSuccessMessage();
	}

	macro withdrawTaskCompletedNoByDetails {
		Workflow.gotoCompletedFilter();

		var key_workflowAssetTitle = "${workflowAssetTitle}";

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_LAST_ACTIVITY_DATE",
			value1 = "${workflowDefinition}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_ASSET_TYPE",
			value1 = "${workflowAssetType}"
		);

		AssertTextEquals(
			locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_TASK",
			value1 = "${workflowTask}"
		);

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_DUE_DATE");

		AssertElementPresent(locator1 = "MyWorkflowTasks#ASSIGNED_TO_ME_TABLE_END_DATE");

		AssertClick(
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE",
			value1 = "${workflowAssetTitle}"
		);

		Workflow.viewMySubmissionsTaskPreview(
			workflowAssetContent = "${workflowAssetContent}",
			workflowAssetTitle = "${workflowAssetTitle}",
			workflowAssetType = "${workflowAssetType}",
			workflowDefinition = "${workflowDefinition}"
		);

		AssertElementNotPresent(
			locator1 = "WorkflowSubmissionsTask#MENU_WITHDRAW_SUBMISSION"
		);

		AssertTextNotPresent(value1 = "Withdraw Submission");
	}
}