definition {

	macro addDraft {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		BlogsEntry.saveAsDraft();
	}

	macro addDraftViaAutoSave {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		BlogsEntry.autoSaveDraft();
	}

	macro addEntry {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			embedVideo = ${embedVideo},
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle},
			videoService = ${videoService});

		if (isSet(readingTime)) {
			var key_readingTime = ${readingTime};

			AssertTextEquals(
				locator1 = "BlogsEditEntry#STATUS_READING_TIME",
				value1 = ${readingTime});
		}

		PortletEntry.publish();
	}

	macro addEntryWithCategory {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addCategory(
			categoryName = ${categoryName},
			vocabularyName = ${vocabularyName});

		PortletEntry.publish();
	}

	macro addEntryWithCoverImageFromDMFolders {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addTitle(entryTitle = ${entryTitle});

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		BlogsNavigator.gotoSelectFile();

		ItemSelector.selectDMImage(
			dmFolderName = ${dmFolderName},
			dmSubFolderName = ${dmSubFolderName},
			imageFileName = ${imageFileName},
			navTab = ${navTab});

		Pause(locator1 = 1000);

		Button.clickPublish();
	}

	macro addEntryWithCustomURL {
		if (isSet(siteURLKey)) {
			BlogsNavigator.openToAddEntry(siteURLKey = ${siteURLKey});
		}
		else {
			BlogsNavigator.gotoAddEntry();
		}

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Configuration");

		BlogsEntry.addCustomURL(customURL = ${customURL});

		PortletEntry.publish();
	}

	macro addEntryWithHTML {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addTitle(entryTitle = ${entryTitle});

		BlogsEntry.addSubtitle(entrySubtitle = ${entrySubtitle});

		AlloyEditor.addSourceContent(content = ${entryContent});

		PortletEntry.publish();
	}

	macro addEntryWithPermissions {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Permissions");

		BlogsEntry.entryAddPermissions(viewableBy = ${viewableBy});

		PortletEntry.publish();
	}

	macro addEntryWithTag {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addTag(tagName = ${tagName});

		SelectFrameTop(value1 = "relative=top");

		Button.clickPublish();
	}

	macro addEntryWithTags {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Categorization");

		for (var tagName : list ${tagNameList}) {
			AssetCategorization.addTag(tagName = ${tagName});
		}

		SelectFrameTop(value1 = "relative=top");

		Button.clickPublish();
	}

	macro addEntryWithUploadedCoverImage {
		BlogsNavigator.gotoAddEntry();

		BlogsNavigator.gotoSelectFile();

		if (isSet(uploadedFileName)) {
			ItemSelector.selectBlogImage(
				imageFileName = ${uploadedFileName},
				navTab = ${navTab});
		}
		else {
			ItemSelector.uploadFile(
				navTab = ${navTab},
				uploadFileName = ${uploadFileName});
		}

		Pause(locator1 = 5000);

		SelectFrame(value1 = "relative-top");

		if (isSet(captionField)) {
			AssertElementPresent(locator1 = "BlogsEntry#ENTRY_COVER_IMAGE_CAPTION");
		}

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		AssertVisible(
			key_coverImageName = ${coverImageName},
			locator1 = "BlogsEntry#ENTRY_COVER_IMAGE_UNPUBLISHED");
	}

	macro addViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Blogs Entry");

		BlogsEntry.addTitle(entryTitle = ${entryTitle});

		AlloyEditor.addContent(content = ${entryContent});

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		SelectFrameTop(value1 = "relative=top");

		Pause(locator1 = 5000);

		var key_assetTitle = ${entryTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${entryTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${entryContent});
	}

	macro addViaAPSelectScope {
		AssetPublisherPortlet.addAsset(
			assetType = "Blogs Entry",
			siteScope = ${siteScope});

		BlogsEntry.addTitle(entryTitle = ${entryTitle});

		AlloyEditor.addContent(content = ${entryContent});

		AssertClick(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		SelectFrameTop(value1 = "relative=top");

		Pause(locator1 = 5000);

		var key_assetTitle = ${entryTitle};

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = ${entryTitle});

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = ${entryContent});
	}

	macro addWithCustomAbstract {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Configuration");

		BlogsEntry.addCustomAbstract(entryAbstractDescription = ${entryAbstractDescription});

		PortletEntry.publish();
	}

	macro addWithCustomAbstractViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Blogs Entry");

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Configuration");

		BlogsEntry.addCustomAbstract(entryAbstractDescription = ${entryAbstractDescription});

		PortletEntry.publish();
	}

	macro addWithDefaultAbstract {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		Panel.expandPanel(panel = "Configuration");

		AssertChecked(
			locator1 = "Radio#FIRST_400_ABSTRACT",
			value1 = "Use the first 400 characters of the entry content.");

		PortletEntry.publish();
	}

	macro addWithInvalidContent {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryInvalidContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		BlogsEntry.publishWithInvalidContent();
	}

	macro addWithInvalidTitle {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryInvalidTitle});

		BlogsEntry.publishWithInvalidTitle();
	}

	macro addWithInvalidTitleLength {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryInvalidTitleLength});

		BlogsEntry.publishWithInvalidTitleLength();
	}

	macro addWithWorkflow {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		BlogsEntry.publishWithWorkflow();
	}

	macro addWithWorkflowViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Blogs Entry");

		BlogsEntry.addTitle(entryTitle = ${entryTitle});

		AlloyEditor.addContent(content = ${entryContent});

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication");

		Pause(locator1 = 5000);

		SelectFrame(value1 = "relative=top");
	}

	macro assertNoPublishOption {
		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_entryTitle = ${entryTitle};

		Blogs.viewEntryTitle(entryTitle = ${entryTitle});

		Click(
			key_listEntry = ${entryTitle},
			locator1 = "LexiconList#LIST_ENTRY_ELLIPSIS");

		MenuItem.viewNotPresent(menuItem = "Publish to Live");
	}

	macro clickEllipsisItemCP {
		LexiconCard.clickEllipsisItem(
			card = ${entryTitle},
			item = ${item});
	}

	macro clickEllipsisItemPG {
		MouseOver.mouseOverInvisible(
			key_entryTitle = ${entryTitle},
			locator1 = "Blogs#WIDGET_VIEW_ENTRY_ELLIPSIS");

		Click(
			key_entryTitle = ${entryTitle},
			locator1 = "Blogs#WIDGET_VIEW_ENTRY_ELLIPSIS");

		MenuItem.clickNoError(menuItem = ${item});
	}

	macro disableSocialBookmarkSites {
		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.gotoPortletOptions(
			portletName = "Blogs",
			portletOption = "Configuration");

		BlogsConfiguration.selectConfigurationIFrame();

		for (var socialBookmarkSite : list ${disableSocialBookmarkSites}) {
			AddSelection(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
				value1 = ${socialBookmarkSite});

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");

			AssertTextEquals.assertPartialText(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
				value1 = ${socialBookmarkSite});
		}

		IFrame.saveConfiguration();
	}

	macro editDraftPG {
		BlogsNavigator.gotoEditPG(entryTitle = ${entryTitle});

		BlogsEntry.editEntryContent(
			entryContent = ${entryContent},
			entryContentEdit = ${entryContentEdit},
			entrySubtitle = ${entrySubtitle},
			entrySubtitleEdit = ${entrySubtitleEdit},
			entryTitle = ${entryTitle},
			entryTitleEdit = ${entryTitleEdit});

		AssertClick(
			locator1 = "Button#SAVE_AS_DRAFT",
			value1 = "Save as Draft");

		Alert.viewSuccessMessage();
	}

	macro editEntryPG {
		BlogsNavigator.gotoEditPG(entryTitle = ${entryTitle});

		BlogsEntry.editEntryContent(
			entryContent = ${entryContent},
			entryContentEdit = ${entryContentEdit},
			entrySubtitle = ${entrySubtitle},
			entrySubtitleEdit = ${entrySubtitleEdit},
			entryTitle = ${entryTitle},
			entryTitleEdit = ${entryTitleEdit});

		if (${sendEmailEntryUpdated} == "true") {
			Panel.expandPanel(panel = "Configuration");

			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Send Email Entry Updated",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.publish();
	}

	macro editEntryViaSearchResultDetails {
		MouseOver(
			locator1 = "SearchResults#ASSET_DETAILS_TITLE",
			value1 = ${searchAssetTitle});

		Click(locator1 = "Icon#EDIT_PENCIL");

		BlogsEntry.editEntryContent(
			entryContent = ${entryContent},
			entryContentEdit = ${entryContentEdit},
			entrySubtitle = ${entrySubtitle},
			entrySubtitleEdit = ${entrySubtitleEdit},
			entryTitle = ${entryTitle},
			entryTitleEdit = ${entryTitleEdit});

		PortletEntry.publish();
	}

	macro enableSocialBookmarkSites {
		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.gotoPortletOptions(
			portletName = "Blogs",
			portletOption = "Configuration");

		BlogsConfiguration.selectConfigurationIFrame();

		for (var socialBookmarkSite : list ${socialBookmarkSites}) {
			BlogsConfiguration.enableSocialBookmarkSites(
				enableSocialBookmarkSites = ${enableSocialBookmarkSites},
				socialBookmarkSite = ${socialBookmarkSite});
		}

		IFrame.saveConfiguration();
	}

	macro publishDraftCP {
		BlogsNavigator.gotoEditCP(entryTitle = ${entryTitle});

		BlogsEntry.viewEntryCP(
			entryContent = ${entryContent},
			entrySubtitle = ${entrySubtitle},
			entryTitle = ${entryTitle});

		PortletEntry.publish();
	}

	macro publishViaSAP {
		Blogs.clickEllipsisItemCP(
			entryTitle = ${entryTitle},
			item = "Publish to Live");

		AssertConfirm(value1 = ${confirmMessage});

		AssertTextEquals(
			locator1 = "Staging#PROCESS_SUCCESSFUL",
			value1 = "Successful");
	}

	macro subscribePG {
		AssertClick(
			locator1 = "Blogs#SUBSCRIBE_LINK",
			value1 = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownConfigurationDisplaySettingsPG {
		Navigator.gotoPage(pageName = ${pageName});

		BlogsNavigator.gotoConfigurationSetupPG();

		BlogsConfiguration.selectDisplayTemplate(displayTemplate = "Abstract");

		IFrame.saveConfiguration();
	}

	macro tearDownConfigurationScopePG {
		Navigator.gotoPage(pageName = ${pageName});

		BlogsNavigator.gotoConfigurationSetupPG();

		Navigator.gotoPage(pageName = ${pageName});

		Portlet.selectScopePG(
			portletName = "Blogs",
			scope = "Liferay");
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Blogs");

		if (IsElementPresent.isVisible(locator1 = "Blogs#ENTRY_TABLE_ALL_CHECKBOX")) {
			Click(locator1 = "Blogs#ENTRY_TABLE_ALL_CHECKBOX");

			Click(locator1 = "Button#MOVE_TO_RECYCLE_BIN");

			VerifyElementPresent(locator1 = "Message#SUCCESS");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.emptyCP();
	}

	macro tearDownSubscribePG {
		Navigator.gotoPage(pageName = ${pageName});

		AssertClick(
			locator1 = "Blogs#UNSUBSCRIBE_LINK",
			value1 = "Unsubscribe");

		Alert.viewSuccessMessage();
	}

	macro viewControlsPG {
		var key_text = "New Entry";

		AssertTextEquals(
			locator1 = "Button#ANY",
			value1 = "New Entry");

		AssertTextEquals(
			locator1 = "Blogs#SUBSCRIBE_LINK",
			value1 = "Subscribe");

		var key_text = "RSS";

		AssertTextEquals(
			locator1 = "Button#ANY",
			value1 = "RSS");
	}

	macro viewEntryNotPresent {
		LexiconList.viewListEntryNotPresent(listEntry = ${entryTitle});
	}

	macro viewEntryPresent {
		LexiconCard.viewCardPresent(card = ${entryTitle});
	}

	macro viewEntryTitle {
		LexiconList.viewListEntryTitleLink(listEntry = ${entryTitle});
	}

	macro viewNoEntryCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No entries were found.");
	}

}