definition {
	macro addDataDefinitionWithDB2 {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no lists."
		);

		DDLNavigator.gotoManageDataDefinitions();

		for (var ddlDataDefinitionName : list "Contacts,Events,Inventory,Issues Tracking,Meeting Minutes,To Do") {
			DDLDataDefinition.viewName(ddlDataDefinitionName = "${ddlDataDefinitionName}");
		}

		AssertConsoleTextNotPresent(value1 = "SQLCODE=-134");

		AssertConsoleTextNotPresent(value1 = "SQLCODE=-727");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text"
		);

		AssertConsoleTextNotPresent(value1 = "SQLCODE=-134");

		AssertConsoleTextNotPresent(value1 = "SQLCODE=-727");
	}

	macro addForm {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no forms. Click on the plus button to add the first one."
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form Name");

		Form.editDescription(formDescription = "Form Description");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdmin.viewForm(
			formDescription = "Form Description",
			formName = "Form Name"
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm(formName = "Form Name");

		FormPortletConfiguration.selectForm(formName = "Form Name");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextField(fieldLabel = "Text Field", fieldName = "TextField");
	}

	macro addMessageBoards {
		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.addPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject 3"
		);
	}

	macro addOrganization {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");
	}

	macro addUserAndSuborganization {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization2", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Suborganization.addCP(
			orgName = "Organization2",
			suborgName = "Sub-organization2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Suborganization.addCP(
			orgName = "Organization1",
			suborgName = "Sub-organization1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "user2@liferay.com",
			userFirstName = "user2",
			userLastName = "user2",
			userScreenName = "user2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization1",
			userFirstName = "user2",
			userLastName = "user2",
			userName = "user2 user2",
			userScreenName = "user2"
		);

		Organization.addMemberCP(
			orgName = "Sub-organization1",
			userFirstName = "user2",
			userLastName = "user2",
			userName = "user2 user2",
			userScreenName = "user2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.gotoCP(orgName = "Organization1", searchToken = "Organization1");

		User.searchCP(searchTerm = "usersn");

		Organization.viewAssignMemberCP(
			userName = "userfn userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.editSiteCP(
			orgName = "Organization1",
			orgNameEdit = "Organization1 Edit"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.editSiteCP(
			orgName = "Sub-organization1",
			orgNameEdit = "Sub-organization1 Edit"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.deleteCP(orgName = "Sub-organization2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.deleteCP(orgName = "Organization2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.removeMemberCP(
			orgName = "Sub-organization1 Edit",
			userFullName = "user2 user2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.deleteCP(orgName = "Sub-organization1 Edit");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.searchCP(
			orgName = "Organization1 Edit",
			searchTerm = "Organization1 Edit"
		);

		Organization.viewCP(orgName = "Organization1 Edit", orgType = "Organization");
	}

	macro addWCStructureAndTemplate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Navigator.gotoNavItem(navItem = "Structures");

		AssertElementNotPresent(locator1 = "Message#ERROR");

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Navigator.gotoNavItem(navItem = "Templates");

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text",
			templateName = "WC Template Name"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);
	}

	macro approveWorkflow {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithWorkflowCP(
			webContentContent = "WC Workflow Content",
			webContentTitle = "WC Workflow Title",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "WC Workflow Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Submissions"
		);

		Workflow.viewMySubmissions(
			workflowAssetTitle = "WC Workflow Title",
			workflowAssetType = "Web Content Article",
			workflowDefinition = "Single Approver",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WC Workflow Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithWorkflowCP(
			webContentContent = "WC Workflow Content",
			webContentTitle = "WC Workflow Title",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "WC Workflow Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Workflow Title");

		WebContent.viewCP(
			webContentContent = "WC Workflow Content",
			webContentTitle = "WC Workflow Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC Workflow Content",
			webContentStatus = "Approved",
			webContentTitle = "WC Workflow Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Submissions"
		);

		Workflow.gotoViewCompletedAssetViaMySubmissions(
			workflowAssetTitle = "WC Workflow Title"
		);

		WebContent.viewEntryAsWorkflowAsset(
			webContentContent = "WC Workflow Content",
			webContentTitle = "WC Workflow Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Workflow Content",
			entryTitle = "Blogs Workflow Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Workflow Content",
			entryTitle = "Blogs Workflow Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "Blogs Workflow Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Submissions"
		);

		Workflow.viewMySubmissions(
			workflowAssetTitle = "Blogs Workflow Title",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Workflow Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Workflow Content",
			entryTitle = "Blogs Workflow Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Workflow Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Workflow Title");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Workflow Title");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Workflow Content",
			entryTitle = "Blogs Workflow Title"
		);

		BlogsEntry.viewStatus(entryStatus = "Approved");
	}

	macro publishStagedSite {
		Navigator.openSiteURL(siteName = "Staging Site Staging");

		AssertElementNotPresent(locator1 = "Home#PORTLET");

		ProductMenu.gotoStagingSite();

		WebContent.viewPGViaWCD(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		WebContent.viewPGViaWCD(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);
	}

	macro publishWCDraft {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "Web Content Draft Title"
		);

		WebContent.viewStatus(
			webContentContent = "Web Content Draft Content",
			webContentStatus = "Draft",
			webContentTitle = "Web Content Draft Title"
		);

		WebContent.editCP(
			webContentContentEdit = "Web Content Content",
			webContentTitle = "Web Content Draft Title",
			webContentTitleEdit = "Web Content Title"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Web Content Title"
		);

		WebContent.viewStatus(
			webContentContent = "Web Content Content",
			webContentStatus = "Approved",
			webContentTitle = "Web Content Title"
		);
	}

	macro publishWorkflowDefinition {
		var testRunEnvironment = PropsUtil.get("test.run.environment");

		if ("${testRunEnvironment}" == "EE") {
			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Workflow"
			);

			Workflow.viewDefinitionUnpublished(
				workflowDefinitionTitle = "New Workflow Definition Draft"
			);

			Workflow.publishExistingWorkflowDefinition(
				workflowDefinitionTitle = "New Workflow Definition Draft"
			);

			Navigator.gotoBack();

			Workflow.viewDefinitionPublished(
				workflowDefinitionTitle = "New Workflow Definition Draft"
			);
		}
	}

	macro resetTestUserPassword {
		SetupWizard.finishConfigurationPG();

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		Navigator.openURL();

		User.acceptEndUserLicenseAgreement();

		User.resetPassword(setupWizardEnabled = "true");

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		User.logoutPG();

		User.loginPG(password = "test2", userEmailAddress = "test@liferay.com");
	}

	macro searchForAssetsAfterUpgrade {
		Navigator.openURL();

		/*<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Web Content" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResults">
			<var name="searchAssetSummary" value="Web Content Content" />
			<var name="searchAssetTitle" value="Web Content Title" />
			<var name="searchAssetType" value="Web Content Article" />
		</execute>

		<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Document1" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResults">
			<var name="searchAssetTitle" value="Document1" />
			<var name="searchAssetType" value="Document" />
		</execute>

		<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Message Boards" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResults">
			<var name="searchAssetSummary" value="Message Boards Body" />
			<var name="searchAssetTitle" value="Message Boards Subject" />
			<var name="searchAssetType" value="Message Boards Message" />
		</execute>

		<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Wiki" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResults">
			<var name="searchAssetSummary" value="Wiki Front Page Content" />
			<var name="searchAssetTitle" value="FrontPage" />
			<var name="searchAssetType" value="Wiki Page" />
		</execute>

		<execute macro="SearchPortlets#searchEmbedded">
			<var name="searchTerm" value="Blogs" />
		</execute>

		<execute macro="SearchResultPortlet#viewSearchResults">
			<var name="searchAssetSummary" value="Blogs Entry Content" />
			<var name="searchAssetTitle" value="Blogs Entry Title" />
			<var name="searchAssetType" value="Blogs Entry" />
		</execute> */
	}

	macro submitNewWorkflow {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "New Blog After Upgrade"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "New Blog After Upgrade"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "New Blog After Upgrade",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "New Blog After Upgrade"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "New Blog After Upgrade",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewEntryTable(entryTitle = "New Blog After Upgrade");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		BlogsNavigator.gotoEntryCP(entryTitle = "New Blog After Upgrade");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "New Blog After Upgrade"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Submissions"
		);

		Workflow.gotoViewCompletedAssetViaMySubmissions(
			workflowAssetTitle = "New Blog After Upgrade"
		);

		BlogsEntry.viewEntryAsWorkflowAsset(
			entryContent = "Blogs Entry Content",
			entryTitle = "New Blog After Upgrade"
		);
	}

	macro viewAndDeleteFormEntry {
		Navigator.openURL();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Status", fieldValue = "Approved");

		FormsAdmin.viewFormTableEntry(fieldLabel = "Checkbox", fieldValue = "Yes");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Multiple Selection",
			fieldValue = "1, 2, 4"
		);

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "SingleLineText",
			fieldName = "SingleLineText",
			fieldValue = "Single Line Text"
		);

		FormsAdmin.viewMultilineTextEntry(
			fieldLabel = "MultilineText",
			fieldName = "MultilineText",
			fieldValue = "Multiline Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "Select",
			fieldName = "Select",
			selectOption = "Select 1"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "Radio",
			fieldName = "Radio",
			fieldValue = "Option 1"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "Date",
			fieldName = "Date",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(fieldLabel = "Checkbox", fieldName = "Checkbox");

		FormPortlet.clickNextPage();

		FormsAdmin.viewTextEntry(
			fieldLabel = "SingleLineText2",
			fieldName = "SingleLineText2",
			fieldValue = "SingleLineText2"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.deleteFormEntry(formEntryValue = "Option 1");

		FormsAdmin.viewNoFormEntries();
	}

	macro viewAssetPublisher {
		Navigator.gotoPage(pageName = "Asset Publisher");

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#TITLE",
			value1 = "Asset Publisher",
			key_portletName = "Asset Publisher"
		);

		WebContent.viewPGViaAP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);
	}

	macro viewCalendar {
		Navigator.gotoPage(pageName = "Calendar");

		ProductMenuHelper.closeProductMenu();

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.editTitle(eventTitle = "Calendar Event Title Edited");

		CalendarEvent.publishRepeating(saveOption = "Entire Series");

		Navigator.gotoPage(pageName = "Calendar");

		ProductMenuHelper.closeProductMenu();

		CalendarEvent.view(eventTitle = "Calendar Event Title Edited");

		Navigator.gotoPage(pageName = "Calendar");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Post Upgrade Calendar Event",
			eventType = "Regular",
			pageName = "Calendar"
		);

		Navigator.gotoPage(pageName = "Calendar");

		ProductMenuHelper.closeProductMenu();

		CalendarEvent.view(eventTitle = "Post Upgrade Calendar Event");
	}

	macro viewDocument {
		Navigator.gotoPage(pageName = "Document");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoPage(pageName = "Document");

		DMDocument.viewAllPG(
			commentBody = "Document Comment",
			dmDocumentTitle = "Document1"
		);

		DMDocument.viewDocumentDetailsCmdPG(dmDocumentTitle = "Document1");

		DMDocument.viewDocumentMetadataCP(
			metadataData = "application/msword",
			metadataLabel = "Content Type"
		);

		DMDocument.viewDocumentMetadataCP(
			metadataData = "Liferay",
			metadataLabel = "Creator"
		);
	}

	macro ViewDroolsAppManager {
		ProductMenu.gotoPortlet(
			category = "Apps",
			panel = "Control Panel",
			portlet = "App Manager"
		);

		AppManager.viewAppCP(appName = "Liferay Drools", appStatus = "Active");

		AppManager.viewAppCP(
			appName = "Liferay Portal Rules Engine Drools",
			appStatus = "Active"
		);
	}

	macro viewMessageBoards {
		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.viewLockedPG(threadSubject = "Message Boards Subject 2");
	}

	macro viewNestedPortlets {
		Navigator.gotoPage(pageName = "Nested Portlets");

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#TITLE",
			value1 = "Nested Applications",
			key_portletName = "Nested Applications"
		);

		AssertTextNotEquals(
			locator1 = "Message#INFO",
			value1 = "Drag applications below to nest them."
		);

		NestedPortlets.viewPG(
			portletColumnNumberTo = "1",
			portletName = "Web Content Display"
		);
	}

	macro viewNotifications {
		Navigator.gotoPage(pageName = "Welcome");

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "message boards message",
			contentBody = "Message Boards Subject 1",
			user = "Test Test"
		);

		Notifications.navigateToContent(contentBody = "Message Boards Subject 1");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject 1"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "2"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "message boards message",
			contentBody = "Message Boards Subject 2",
			user = "Test Test"
		);

		Notifications.navigateToContent(contentBody = "Message Boards Subject 2");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject 2"
		);

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1"
		);

		Notifications.gotoNotifications();

		Notifications.viewNewContent(
			assetType = "message boards message",
			contentBody = "Message Boards Subject 3",
			user = "Test Test"
		);

		Notifications.navigateToContent(contentBody = "Message Boards Subject 3");

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject 3"
		);
	}

	macro viewPolls {
		Navigator.gotoPage(pageName = "Polls");

		AssertElementNotPresent(locator1 = "Message#INFO");

		Navigator.gotoPage(pageName = "Polls");

		Polls.viewPollPG(
			pollsQuestion = "Sample Polls Question",
			pollsQuestionChoiceList = "Yes,No"
		);

		Polls.votePollPG(pollsQuestionChoice = "Yes");

		Navigator.gotoPage(pageName = "Polls");

		Polls.viewVotedPollPG(
			pollsQuestionChoice = "Yes",
			pollsQuestionTotalVotes = "1",
			pollsQuestionVoteCount = "1",
			pollsQuestionVotePercent = "100%"
		);
	}

	macro ViewPortletsPermissions {
		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		Navigator.gotoSitePage(
			pageName = "Message Boards Page",
			siteName = "Site Name 1"
		);

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			threadSubject = "Message Boards Subject"
		);

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject"
		);

		Navigator.gotoSitePage(
			pageName = "Message Boards Page",
			siteName = "Site Name 1"
		);

		AssertElementNotPresent(locator1 = "Portlet#OPTIONS_ICON");

		Navigator.gotoSitePage(pageName = "Web Content Page", siteName = "Site Name 1");

		WebContent.viewPGViaWCD(webContentContent = "Web Content Content");

		Navigator.openSpecificURL(
			url = "http://localhost:8080/web/site-name-2/blogs-page"
		);

		Portlet.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2"
		);

		Navigator.gotoSitePage(pageName = "Wiki Page", siteName = "Site Name 2");

		WikiPage.viewFrontPagePG(wikiPageContent = "Wiki Front Page Content");

		Navigator.gotoSitePage(pageName = "Wiki Page", siteName = "Site Name 2");

		Portlet.viewPortletOptions(OptionsName = "Configuration");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name 2"
		);

		DMDocument.viewPG(dmDocumentTitle = "Document1");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name 2"
		);

		Portlet.viewPortletOptions(OptionsName = "Permissions");

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name 2");

		Portlet.viewNoPermissionPG();
	}

	macro viewStagingNestedPortlets {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Staging Site"
		);

		AssertTextEquals.assertTextCaseInsensitive(
			locator1 = "Portlet#TITLE",
			value1 = "Nested Applications",
			key_portletName = "Nested Applications"
		);

		AssertTextNotEquals(
			locator1 = "Message#INFO",
			value1 = "Drag applications below to nest them."
		);

		NestedPortlets.viewPG(
			portletColumnNumberTo = "1",
			portletName = "Web Content Display"
		);

		NestedPortlets.viewPG(portletColumnNumberTo = "1", portletName = "Blogs");
	}

	macro viewUpgrade {
		Navigator.gotoPage(pageName = "Web Content");

		WebContent.viewPGViaWCD(webContentContent = "Web Content Content");

		Navigator.gotoPage(pageName = "Document");

		var key_menuItem = "List";

		Click(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

		if (IsElementPresent(locator1 = "MenuItem#ANY_MENU_ITEM")) {
			Click(locator1 = "MenuItem#ANY_MENU_ITEM");
		}
		else {
			Navigator.gotoPage(pageName = "Document");

			Click(locator1 = "Icon#CURRENT_DISPLAY_STYLE");

			Click(locator1 = "MenuItem#ANY_MENU_ITEM");
		}

		DMDocument.viewPG(dmDocumentTitle = "Document1");

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Test Test"
		);

		DMDocument.expandInfo();

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
			value1 = "VERSION 1.0",
			key_dmDocumentVersionNumber = "1.0"
		);

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
			value1 = "APPROVED"
		);

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_DOWNLOAD",
			value1 = "Download",
			key_dmDocumentSize = "22KB"
		);

		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			startedByUserName = "Test Test",
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject"
		);

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject"
		);

		Navigator.gotoPage(pageName = "Wiki");

		WikiPage.viewFrontPagePG(
			wikiPageContent = "Wiki Front Page Content",
			wikiPageTitle = "FrontPage"
		);

		Navigator.gotoPage(pageName = "Blogs");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		AssertVisible(locator1 = "Home#PAGE_ACTIVE", key_pageName = "Site Page");

		SignOut.signOut();

		SignIn.signIn(userEmailAddress = "user@liferay.com");

		Smoke.viewWelcomePage(userFirstName = "Userfn", userLastName = "Userln");

		Navigator.gotoPage(pageName = "Web Content");

		WebContent.viewPGViaWCD(webContentContent = "Web Content Content");

		Navigator.gotoPage(pageName = "Document");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.viewPG(dmDocumentTitle = "Document1");

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Test Test"
		);

		DMDocument.expandInfo();

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_VERSION",
			value1 = "VERSION 1.0",
			key_dmDocumentVersionNumber = "1.0"
		);

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_WORKFLOW_STATUS",
			value1 = "APPROVED"
		);

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_DOWNLOAD",
			value1 = "Download",
			key_dmDocumentSize = "22KB"
		);

		Navigator.gotoPage(pageName = "Message Boards");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			replyCount = "0",
			startedByUserName = "Test Test",
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject"
		);

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Body",
			threadSubject = "Message Boards Subject"
		);

		Navigator.gotoPage(pageName = "Wiki");

		WikiPage.viewFrontPagePG(
			wikiPageContent = "Wiki Front Page Content",
			wikiPageTitle = "FrontPage"
		);

		Navigator.gotoPage(pageName = "Blogs");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		AssertVisible(locator1 = "Home#PAGE_ACTIVE", key_pageName = "Site Page");

		SignOut.signOut();

		SignIn.signIn();
	}
}