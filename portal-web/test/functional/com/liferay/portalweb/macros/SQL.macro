definition {

	@summary = "Search for all databases with filter 'databaseFilter' that contain substring 'databaseSubstring' and assert they match 'expectedCount'"
	macro assertDatabaseCount {
		Variables.assertDefined(parameterList = "${databaseFilter},${databaseSubstring},${expectedCount}");

		var mysqlStatement = "SHOW DATABASES LIKE '${databaseFilter}';";

		var sqlResults = SQL.executeMySQLStatement(mysqlStatement = ${mysqlStatement});

		var matches = StringUtil.count(${sqlResults}, ${databaseSubstring});

		if (${matches} != ${expectedCount}) {
			fail("Expected ${expectedCount} matches of ${databaseSubstring}, found ${matches}.");
		}
	}

	macro assertTextInMySQLStatementResult {
		var sqlResults = SQL.executeMySQLStatement(mysqlStatement = ${mysqlStatement});

		if (!(contains(${sqlResults}, ${text}))) {
			fail("The MySql query result does not contain text: ${text}");
		}
	}

	macro dropMySQLIndex {
		Variables.assertDefined(parameterList = "${indexName},${tableName}");

		SQL.executeMySQLStatement(mysqlStatement = "drop index ${indexName} on ${tableName};");

		var hasMySQLIndex = SQL.hasMySQLIndex(indexName = ${indexName});

		if (${hasMySQLIndex} == "true") {
			fail("Index ${indexName} wasn't dropped");
		}
	}

	macro executeMySQLStatement {
		Variables.assertDefined(parameterList = ${mysqlStatement});

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var inputFile = "mysqltemp.sql";
		var outputFile = "mysqltemp.txt";

		FileUtil.write("${liferayHome}/${inputFile}", ${mysqlStatement});

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "execute-mysql -Dmysql.input.file=${liferayHome}/${inputFile} -Dmysql.output.file=${liferayHome}/${outputFile}");

		var output = FileUtil.read("${liferayHome}/${outputFile}");

		return ${output};
	}

	macro hasMySQLIndex {
		Variables.assertDefined(parameterList = ${indexName});

		var indexQuery = "SELECT COUNT(DISTINCT(index_name)) FROM information_schema.statistics WHERE index_schema = database() AND index_name = '${indexName}';";

		var index = SQL.executeMySQLStatement(mysqlStatement = ${indexQuery});

		if (contains(${index}, 1)) {
			return "true";
		}
		else {
			return "false";
		}
	}

}