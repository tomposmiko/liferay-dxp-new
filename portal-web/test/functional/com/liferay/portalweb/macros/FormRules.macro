definition {
	macro addAction {
		Click(locator1 = "FormRules#RULE_BUILDER_ADD_ACTION");
	}

	macro addCondition {
		Click(locator1 = "FormRules#RULE_BUILDER_ADD_CONDITION");
	}

	macro addRule {
		Click(locator1 = "FormRules#RULE_BUILDER_ADD_RULE_BUTTON");

		FormRules.viewInactiveSaveButton();

		AssertNotVisible(locator1 = "FormRules#RULE_BUILDER_ADD_RULE_BUTTON");
	}

	macro chooseCalculateOperator {
		var key_calculateOperator = "${calculateOperator}";

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_CALCULATE_OPERATOR",
			value1 = "${calculateOperator}"
		);
	}

	macro configureActionOptions {
		FormRules.selectAction(
			action = "${action}",
			actionRowNumber = "${actionRowNumber}"
		);

		FormRules.selectActionTarget(
			action = "${action}",
			actionRowNumber = "${actionRowNumber}",
			actionTarget = "${actionTarget}"
		);
	}

	macro configureConditionOptions {
		FormRules.selectConditionField(
			conditionField = "${conditionField}",
			conditionRowNumber = "${conditionRowNumber}"
		);

		FormRules.selectConditionOperator(
			conditionOperator = "${conditionOperator}",
			conditionRowNumber = "${conditionRowNumber}"
		);

		FormRules.selectConditionValue(
			conditionRowNumber = "${conditionRowNumber}",
			conditionValueType = "${conditionValueType}"
		);

		FormRules.defineConditionValue(
			conditionFieldValue = "${conditionFieldValue}",
			conditionRowNumber = "${conditionRowNumber}",
			conditionValueField = "${conditionValueField}",
			conditionValueType = "${conditionValueType}"
		);
	}

	macro defineConditionValue {
		if (isSet(conditionFieldValue)) {
			var key_conditionRowNumber = "${conditionRowNumber}";

			Type(
				locator1 = "FormRules#RULE_BUILDER_CONDITION_VALUE_TEXT_FIELD",
				value1 = "${conditionFieldValue}"
			);
		}

		if (isSet(conditionValueField)) {
			var key_conditionRowNumber = "${conditionRowNumber}";
			var key_conditionValueField = "${conditionValueField}";

			Click(locator1 = "FormRules#RULE_BUILDER_CONDITION_VALUE_FIELD");

			AssertClick(
				locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_VALUE_FIELD",
				value1 = "${conditionValueField}"
			);
		}
	}

	macro gotoEdit {
		var key_ruleNumber = "${ruleNumber}";

		Click.waitForMenuToggleJSClick(
			locator1 = "FormRules#RULE_BUILDER_ROW_VERTICAL_ELLIPSIS"
		);

		MenuItem.click(menuItem = "Edit");
	}

	macro save {
		AssertClick(locator1 = "FormRules#RULE_BUILDER_SAVE_BUTTON", value1 = "Save");
	}

	macro selectAction {
		var key_action = "${action}";
		var key_actionRowNumber = "${actionRowNumber}";

		Click(locator1 = "FormRules#RULE_BUILDER_ACTION_FIELD");

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_SELECT_ACTION",
			value1 = "${action}"
		);
	}

	macro selectActionTarget {
		var key_actionRowNumber = "${actionRowNumber}";
		var key_actionTarget = "${actionTarget}";

		if ("${action}" == "Jump to Page") {
			Click(locator1 = "FormRules#RULE_BUILDER_JUMP_TO_PAGE_ACTION_TARGET");
		}
		else {
			Click(locator1 = "FormRules#RULE_BUILDER_ACTION_TARGET_FIELD");
		}

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_SELECT_ACTION_TARGET",
			value1 = "${actionTarget}"
		);
	}

	macro selectAutofillOutput {
		var key_dataProviderOutput = "${dataProviderOutput}";

		Click(locator1 = "FormRules#RULE_BUILDER_AUTOFILL_OUTPUT_FIELD");

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_AUTOFILL_SELECT_OUTPUT_FIELD",
			value1 = "${dataProviderOutput}"
		);
	}

	macro selectCalculateField {
		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_CALCULATE_ADD_FIELD_BUTTON",
			value1 = "Add Field"
		);

		var key_calculateFieldOption = "${calculateFieldOption}";

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_CALCULATE_ADD_FIELD_LIST",
			value1 = "${calculateFieldOption}"
		);
	}

	macro selectCalculateResultField {
		Click(locator1 = "FormRules#RULE_BUILDER_CALCULATE_RESULT_FIELD");

		var key_calculateResultField = "${calculateResultField}";

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_CALCULATE_RESULT_FIELD_LIST",
			value1 = "${calculateResultField}"
		);
	}

	macro selectConditionField {
		var key_conditionField = "${conditionField}";
		var key_conditionRowNumber = "${conditionRowNumber}";

		Click(locator1 = "FormRules#RULE_BUILDER_CONDITION_FIELD");

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_FIELD",
			value1 = "${conditionField}"
		);
	}

	macro selectConditionOperator {
		var key_conditionOperator = "${conditionOperator}";
		var key_conditionRowNumber = "${conditionRowNumber}";

		Click(locator1 = "FormRules#RULE_BUILDER_CONDITION_OPERATOR_FIELD");

		AssertClick(
			locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_OPERATOR",
			value1 = "${conditionOperator}"
		);
	}

	macro selectConditionValue {
		var key_conditionRowNumber = "${conditionRowNumber}";

		if (isSet(conditionValueType)) {
			Click(locator1 = "FormRules#RULE_BUILDER_CONDITION_VALUE_TYPE_FIELD");

			var key_conditionValueType = "${conditionValueType}";

			AssertClick(
				locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_VALUE_TYPE",
				value1 = "${conditionValueType}"
			);
		}
	}

	macro selectRuleCondition {
		var key_condition = "${condition}";
		var condition = StringUtil.upperCase("${condition}");

		Click(locator1 = "FormRules#RULE_BUILDER_RULE_CONDITION_DROPDOWN");

		MenuItem.click(menuItem = "${condition}");
	}

	macro viewActionSummary {
		AssertTextEquals.assertPartialText(
			locator1 = "FormRules#RULE_BUILDER_SUMMARY_ACTION",
			value1 = "${action}",
			key_action = "${action}",
			key_ruleNumber = "${ruleNumber}"
		);
	}

	macro viewActionTargetSummary {
		AssertTextEquals(
			locator1 = "FormRules#RULE_BUILDER_SUMMARY_ACTION_TARGET",
			value1 = "${actionTarget}",
			key_action = "${action}",
			key_actionTarget = "${actionTarget}",
			key_ruleNumber = "${ruleNumber}"
		);
	}

	macro viewConditionFieldConstantSummary {
		AssertTextEquals(
			locator1 = "FormRules#RULE_BUILDER_SUMMARY_CONDITION_FIELD_CONSTANT",
			value1 = "${conditionFieldConstant}",
			key_conditionFieldConstant = "${conditionFieldConstant}",
			key_ruleNumber = "${ruleNumber}"
		);
	}

	macro viewConditionFieldSummary {
		AssertTextEquals(
			locator1 = "FormRules#RULE_BUILDER_SUMMARY_CONDITION_FIELD",
			value1 = "${conditionField}",
			key_conditionField = "${conditionField}",
			key_ruleNumber = "${ruleNumber}"
		);
	}

	macro viewConditionOperatorOptionsIsPresent {
		Click(
			locator1 = "FormRules#RULE_BUILDER_CONDITION_OPERATOR_FIELD",
			key_conditionRowNumber = "${conditionRowNumber}"
		);

		for (var conditionOperator : list "Is equal to,Is not equal to,Contains,Does not contain") {
			AssertElementPresent(
				locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_OPERATOR",
				key_conditionOperator = "${conditionOperator}",
				key_conditionRowNumber = "${conditionRowNumber}"
			);
		}
	}

	macro viewConditionOperatorOptionsNotPresent {
		Click(
			locator1 = "FormRules#RULE_BUILDER_CONDITION_OPERATOR_FIELD",
			key_conditionRowNumber = "${conditionRowNumber}"
		);

		for (var conditionOperator : list "Is equal to,Is not equal to,Contains,Does not contain") {
			AssertElementNotPresent(
				locator1 = "FormRules#RULE_BUILDER_SELECT_CONDITION_OPERATOR",
				key_conditionOperator = "${conditionOperator}",
				key_conditionRowNumber = "${conditionRowNumber}"
			);
		}
	}

	macro viewConditionOperatorSummary {
		var conditionOperatorLowerCase = StringUtil.lowerCase("${conditionOperator}");

		AssertTextEquals.assertPartialText(
			locator1 = "FormRules#RULE_BUILDER_SUMMARY_CONDITION_OPERATOR",
			value1 = "${conditionOperatorLowerCase}",
			key_conditionOperator = "${conditionOperator}",
			key_ruleNumber = "${ruleNumber}"
		);
	}

	macro viewInactiveSaveButton {
		AssertElementPresent(locator1 = "FormRules#RULE_BUILDER_SAVE_BUTTON_DISABLED");
	}

	macro viewNoRules {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no rules yet. Click on plus icon below to add the first."
		);
	}

	macro viewRuleCondition {
		AssertTextEquals(
			locator1 = "FormRules#RULE_BUILDER_TIMELINE_RULE_CONDITION",
			value1 = "${condition}",
			key_condition = "${condition}",
			key_conditonRowNumber = "${conditonRowNumber}"
		);
	}

	macro viewRuleConditionDropdownDisabled {
		AssertNotEditable(locator1 = "FormRules#RULE_BUILDER_RULE_CONDITION_DROPDOWN");
	}

	macro viewRuleConditionDropdownEnabled {
		AssertEditable(locator1 = "FormRules#RULE_BUILDER_RULE_CONDITION_DROPDOWN");
	}

	macro viewSummary {
		FormRules.viewConditionFieldSummary(
			conditionField = "${conditionField}",
			ruleNumber = "${ruleNumber}"
		);

		FormRules.viewConditionOperatorSummary(
			conditionOperator = "${conditionOperator}",
			ruleNumber = "${ruleNumber}"
		);

		FormRules.viewConditionFieldConstantSummary(
			conditionFieldConstant = "${conditionFieldConstant}",
			ruleNumber = "${ruleNumber}"
		);

		FormRules.viewActionSummary(action = "${action}", ruleNumber = "${ruleNumber}");

		FormRules.viewActionTargetSummary(
			action = "${action}",
			actionTarget = "${actionTarget}",
			ruleNumber = "${ruleNumber}"
		);
	}
}