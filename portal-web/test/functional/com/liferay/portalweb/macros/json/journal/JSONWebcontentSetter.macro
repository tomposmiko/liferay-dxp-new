definition {

	macro setContentXML {
		JSONUtil2._exclusiveOrCheck(
			A = "${content}",
			B = "${contentMap}",
			failMessage = "Please only set &apos;content&apos; or only &apos;contentMap&apos; but not both or none.");

		if (isSet(contentMap)) {
			var contentXML = JSONWebcontentUtil._localizedConvertToXML(contentMap = "${contentMap}");
		}
		else {
			var contentXML = JSONWebcontentUtil._convertToXML(content = "${content}");
		}

		return "${contentXML}";
	}

	macro setDescriptionMap {
		if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		return "${descriptionMap}";
	}

	macro setFolderId {
		if (isSet(folderName)) {
			Variables.assertDefined(parameterList = "${groupId}");

			var folderId = JSONWebcontentAPI._getFolderIdByFolderName(
				folderName = "${folderName}",
				groupId = "${groupId}");
		}
		else {
			var folderId = "0";
		}

		return "${folderId}";
	}

	macro setGroupId {
		Variables.assertDefined(parameterList = "${groupName}");

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}");

		return "${groupId}";
	}

	macro setServiceContext {
		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = "true",
				assetCategoryIds = "${assetCategoryIds}",
				assetTagNames = "${assetTagNames}",
				workflowAction = "${workflowAction}");
		}

		return "${serviceContext}";
	}

	macro setTitleMap {
		JSONUtil2._exclusiveOrCheck(
			A = "${title}",
			B = "${titleMap}",
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		if (isSet(titleMap)) {
			var titleMap = JSONUtil2._convertLocalizedListToMap(listMap = "${titleMap}");
		}
		else {
			var titleMap = '''{"en_US":"${title}"}''';
		}

		return "${titleMap}";
	}

}