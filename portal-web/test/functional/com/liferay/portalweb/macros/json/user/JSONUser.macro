definition {

	macro addUser {
		Variables.assertDefined(parameterList = "${userEmailAddress},${userFirstName},${userLastName},${userScreenName}");

		var locale = JSONUserSetter.setLocale(locale = ${preferredLocale});
		var userFirstName = JSONUserSetter.setUserFirstName(userFirstName = ${userFirstName});
		var userLastName = JSONUserSetter.setUserLastName(userLastName = ${userLastName});

		if (!(isSet(birthdayDay))) {
			var birthdayDay = 31;
		}

		if (!(isSet(birthdayMonth))) {
			var birthdayMonth = 4;
		}

		if (!(isSet(birthdayYear))) {
			var birthdayYear = 1986;
		}

		if (!(isSet(jobTitle))) {
			var jobTitle = "";
		}

		if (!(isSet(creatorEmailAddress))) {
			var creatorEmailAddress = "test@liferay.com";
		}

		if (!(isSet(creatorPassword))) {
			var creatorPassword = "test";
		}

		JSONUserAPI._addUser(
			birthdayDay = ${birthdayDay},
			birthdayMonth = ${birthdayMonth},
			birthdayYear = ${birthdayYear},
			creatorEmailAddress = ${creatorEmailAddress},
			creatorPassword = ${creatorPassword},
			jobTitle = ${jobTitle},
			locale = ${locale},
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		JSONUserAPI._disablePasswordChangeRequired();
	}

	macro addUserByJSONWSUI {
		var companyId = JSONCompany.getCompanyId();

		Type(
			locator1 = "JSONWS#COMPANY_COMPANYID_FIELD",
			value1 = ${companyId});

		var key_span = "autoPassword";

		Check(
			locator1 = "JSONWS#USER_ANYSPAN_FALSE",
			value1 = ${key_span});

		Type(
			locator1 = "JSONWS#USER_PASSWORD1",
			value1 = "initPassword");

		Type(
			locator1 = "JSONWS#USER_PASSWORD2",
			value1 = "initPassword");

		var key_span = "autoScreenName";

		Check(
			locator1 = "JSONWS#USER_ANYSPAN_FALSE",
			value1 = ${key_span});

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_SCREEN_NAME_FIELD",
			value1 = "testUI");

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_EMAIL_ADDRESS_FIELD",
			value1 = "testUI@liferay.com");

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_FACEBOOK_ID_FIELD",
			value1 = 0);

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_FIRST_NAME_FIELD",
			value1 = ${userFirstName});

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_LAST_NAME_FIELD",
			value1 = ${userLastName});

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_PREFIX_ID_FIELD",
			value1 = 0);

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_SUFFIX_ID_FIELD",
			value1 = 0);

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_BIRTHDAY_MONTH_FIELD",
			value1 = 5);

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_BIRTHDAY_DAY_FIELD",
			value1 = 6);

		Type(
			locator1 = "JSONWSUser#API_EXECUTE_BIRTHDAY_YEAR_FIELD",
			value1 = 1993);

		AssertClick(
			locator1 = "Button#INVOKE",
			value1 = "Invoke");
	}

	macro addUserToDepot {
		Variables.assertDefined(parameterList = "${depotName},${userEmailAddress}");

		var depotId = JSONUserSetter.setGroupId(
			groupName = ${depotName},
			site = "false");
		var userId = JSONUserSetter.setUserId(userEmailAddress = ${userEmailAddress});

		JSONUserAPI._addUserToSite(
			groupId = ${depotId},
			userId = ${userId});
	}

	macro addUserToSite {
		Variables.assertDefined(parameterList = "${groupName},${userEmailAddress}");

		var groupId = JSONUserSetter.setGroupId(groupName = ${groupName});
		var userId = JSONUserSetter.setUserId(userEmailAddress = ${userEmailAddress});

		JSONUserAPI._addUserToSite(
			groupId = ${groupId},
			userId = ${userId});
	}

	macro addUserToUserGroup {
		Variables.assertDefined(parameterList = "${userGroupName},${userEmailAddress}");

		var userGroupId = JSONUserGroupSetter.setUserGroupId(userGroupName = ${userGroupName});
		var userId = JSONUserSetter.setUserId(userEmailAddress = ${userEmailAddress});

		JSONUserAPI._addUserToUserGroup(
			userGroupId = ${userGroupId},
			userId = ${userId});
	}

	macro deleteUserByEmailAddress {
		Variables.assertDefined(parameterList = ${userEmailAddress});

		var userId = JSONUserSetter.setUserId(userEmailAddress = ${userEmailAddress});

		JSONUserAPI._deleteUser(userId = ${userId});
	}

	macro deleteUserByUserId {
		Variables.assertDefined(parameterList = ${userId});

		JSONUserAPI._deleteUser(userId = ${userId});
	}

	macro setFirstPassword {

		// Using this macro will require reconfiguring portal.properties. See LRQA-52401.

		Variables.assertDefined(parameterList = ${userEmailAddress});

		var newPassword = JSONUserSetter.setNewPassword(newPassword = ${newPassword});
		var requireReset = JSONUserSetter.setRequireReset(requireReset = ${requireReset});
		var userId = JSONUserSetter.setUserId(userEmailAddress = ${userEmailAddress});

		JSONUserAPI._updatePassword(
			newPassword = ${newPassword},
			requireReset = ${requireReset},
			userId = ${userId});

		if (${requireReset} == "false") {
			JSONUserAPI._disablePasswordChangeRequired();
		}

		if (${agreeToTermsAndAnswerReminderQuery} == "true") {
			JSONUserAPI._agreeToTermsAndAnswerReminderQuery(userId = ${userId});
		}
	}

	macro tearDownByFirstName {
		Variables.assertDefined(parameterList = ${userFirstName});

		var userId = JSONUserAPI._getUserIds();

		for (var userId : list ${userIds}) {
			var currentUserFirstName = JSONUserGetter.getFirstName(userId = ${userId});

			if (contains(${currentUserFirstName}, ${userFirstName})) {
				JSONUser.deleteUserByUserId(userId = ${userId});
			}
		}
	}

	macro tearDownNonAdminUsers {
		var userIds = JSONUserAPI._getUserIds();

		for (var userId : list ${userIds}) {
			var currentEmailAddress = JSONUserGetter.getEmailAddress(userId = ${userId});

			if (${currentEmailAddress} != "test@liferay.com") {
				JSONUser.deleteUserByUserId(userId = ${userId});
			}
		}
	}

}