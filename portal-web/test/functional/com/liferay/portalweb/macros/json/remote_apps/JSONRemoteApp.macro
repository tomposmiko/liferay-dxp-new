definition {

	macro addCustomElementRemoteAppEntry {
		Variables.assertDefined(parameterList = "${customElementName},${customElementHtmlName},${customElementURL}");

		JSONRemoteAppAPI._addCustomElementRemoteAppEntry(
			customElementCssurl = "${customElementCssurl}",
			customElementHtmlName = "${customElementHtmlName}",
			customElementName = "${customElementName}",
			customElementProperties = "${customElementProperties}",
			customElementURL = "${customElementURL}",
			customElementUseESM = "${customElementUseESM}");
	}

	macro addIFrameRemoteAppEntry {
		Variables.assertDefined(parameterList = "${iFrameURL},${name}");

		JSONRemoteAppAPI._addIFrameRemoteAppEntry(
			iFrameURL = "${iFrameURL}",
			name = "${name}");
	}

	macro addRemoteAppEntry {
		Variables.assertDefined(parameterList = "${name},${type},${url}");

		if (!(isSet(description))) {
			var description = "";
		}

		if (!(isSet(properties))) {
			var properties = "";
		}

		var nameMap = JSONRemoteAppSetter.setNameMap(name = "${name}");
		var typeSettings = JSONRemoteAppSetter.setTypeSettings(url = "${url}");

		JSONRemoteAppAPI._addRemoteAppEntry(
			description = "${description}",
			nameMap = "${nameMap}",
			properties = "${properties}",
			type = "${type}",
			typeSettings = "${typeSettings}");
	}

	macro deleteIFrameRemoteAppEntry {
		Variables.assertDefined(parameterList = "${externalReferenceCode}");

		JSONRemoteAppAPI._deleteIFrameRemoteAppEntry(externalReferenceCode = "${externalReferenceCode}");
	}

}