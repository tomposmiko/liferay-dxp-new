definition {

	@summary = "This calls the JSON WS API to add a MB category"
	macro addCategory {
		var portalURL = JSONCompany.getPortalURL();
		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "${userEmailAddress}");

		if (!(isSet(parentCategoryId))) {
			var parentCategoryId = "0";
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/add-category \
				-u test@liferay.com:test \
				-d userId=${userId} \
				-d parentCategoryId=${parentCategoryId} \
				-d name=${categoryName} \
				-d description=${categoryDescription}
		''';

		echo("## Adding a 'Category' with the following info using JSONWS:");

		echo("## * Name: ${categoryName}");

		echo("## * Description: ${categoryDescription}");

		var messageId = JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to add a MB thread"
	macro addMessage {
		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = "${groupName}",
			site = "${site}");
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(addGuestPermissions))) {
			var addGuestPermissions = "false";
		}

		var serviceContext = JSONServiceContextUtil.setServiceContext(
			addGroupPermissions = "true",
			addGuestPermissions = "${addGuestPermissions}",
			assetTagNames = "${assetTagNames}",
			workflowAction = "${workflowAction}");

		if (!(isSet(categoryId))) {
			var categoryId = "0";
		}

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message \
				-u ${userEmailAddress}:${userPassword} \
				-d groupId=${groupId} \
				-d categoryId=${categoryId} \
				-d subject=${threadSubject} \
				-d body=${threadBody} \
				-d format='bbcode' \
				-d inputStreamOVPs= \
				-d anonymous=false \
				-d priority=0 \
				-d allowPingbacks=true \
				-d serviceContext=${serviceContext}
		''';

		echo("## Adding a 'Message' with the following info using JSONWS:");

		echo("## * Subject: ${threadSubject}");

		echo("## * Body: ${threadBody}");

		var messageId = JSONCurlUtil.post("${curl}", "$['messageId']");
	}

	@summary = "This calls the JSON WS API to add a MB reply"
	macro addMessageReply {
		if (isSet(messageId)) {
			var messageId = "${messageId}";
		}
		else {
			var messageId = JSONMBMessage.getmessageId();
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message \
				-u test@liferay.com:test \
				-d parentMessageId=${messageId} \
				-d subject=<script>alert(123);</script> \
				-d body=<script>alert(123);</script> \
				-d format=bbcode \
				-d inputStreamOVPs=[] \
				-d anonymous=true \
				-d priority=0 \
				-d allowPingbacks=true \
		''';

		echo("## Adding a 'Message' with the following info using JSONWS:");

		echo("## * Parent messageId: ${messageId}");

		echo("## * Subject: ${threadSubject}");

		echo("## * Body: ${threadBody}");

		var messageId = JSONCurlUtil.post("${curl}", "$['messageId']");
	}

	@summary = "This calls the JSON WS API to get the ID of a MB category through the URL"
	macro getCategoryId {
		var messageBoardsCategoryURL = selenium.getLocation();
		var portalURL = PropsUtil.get("portal.url");

		var categoryId = StringUtil.replace("${messageBoardsCategoryURL}", "${portalURL}/web/guest/message-boards-page/-/message_boards/category/", "");

		return "${categoryId}";
	}

	@summary = "Get the categoryId by using categoryName and groupName"
	macro getCategoryIdByName {
		Variables.assertDefined(parameterList = "${categoryName},${groupName}");

		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/get-categories \
				-u test@liferay.com:test \
				-d groupId=${groupId}
		''';

		var categoryId = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${categoryName}')]['categoryId']");

		if ("${categoryId}" == "") {
			fail("FAIL. Cannot find category.");
		}

		return "${categoryId}";
	}

	@summary = "This calls the JSON WS API to get the ID of a MB thread through the URL"
	macro getmessageId {
		var messageBoardsThreadURL = selenium.getLocation();
		var portalURL = PropsUtil.get("portal.url");

		var messageId = StringUtil.replace("${messageBoardsThreadURL}", "${portalURL}/web/guest/message-boards-page/-/message_boards/message/", "");

		return "${messageId}";
	}

	@summary = "Get the messageId by using both categoryName and groupName"
	macro getMessageIdByName {
		if (isSet(categoryName)) {
			var categoryId = JSONMBMessage.getCategoryIdByName(
				categoryName = "${categoryName}",
				groupName = "${groupName}");
		}
		else {
			var categoryId = "0";
		}

		var portalURL = JSONCompany.getPortalURL();
		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/get-threads \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d categoryId=${categoryId} \
				-d status=0 \
				-d "start=-1" \
				-d "end=-1"
		''';

		var messageId = JSONCurlUtil.post("${curl}", "$.[?(@['title'] == '${threadSubject}')]['rootMessageId']");

		if ("${messageId}" == "") {
			fail("FAIL. Cannot find category.");
		}

		return "${messageId}";
	}

	@summary = "This calls the JSON WS API to subscribe to a message"
	macro subscribeToMessage {
		Variables.assertDefined(parameterList = "${threadSubject},${groupName}");

		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/subscribe-message \
				-u ${userEmailAddress}:${userPassword} \
				-d messageId=${messageId} \
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

}