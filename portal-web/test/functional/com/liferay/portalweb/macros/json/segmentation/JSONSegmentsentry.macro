definition {

	@summary = "Add a segment with a user or session specific criteria"
	macro addSegment {
		Variables.assertDefined(parameterList = "${groupName},${segmentName},${fieldName},${operator}");

		var descriptionMap = JSONSegmentsentrySetter.setDescriptionMap(description = "${description}");
		var field = JSONSegmentsentrySetter.setField(fieldName = "${fieldName}");

		if (isSet(selectedOption)) {
			var text = JSONSegmentsentrySetter.setSelectedOptionId(
				fieldName = "${field}",
				selectedOption = "${selectedOption}");
		}

		if ("${conditionType}" == "Session") {
			var criteria = JSONSegmentsentrySetter.setSessionCriteria(
				date = "${date}",
				field = "${field}",
				key = "${key}",
				operator = "${operator}",
				text = "${text}",
				value = "${value}");
		}
		else if (!(isSet(conditionType)) || ("${conditionType}" == "User")) {
			var criteria = JSONSegmentsentrySetter.setCriteria(
				date = "${date}",
				field = "${field}",
				operator = "${operator}",
				text = "${text}");
		}

		var nameMap = JSONSegmentsentrySetter.setNameMap(name = "${segmentName}");
		var serviceContext = JSONSegmentsentrySetter.setServiceContext(
			assetCategoryIds = "${assetCategoryIds}",
			assetTagNames = "${assetTagNames}",
			groupName = "${groupName}",
			site = "${site}",
			workflowAction = "${workflowAction}");

		JSONSegmentsentryAPI._addSegment(
			criteria = "${criteria}",
			descriptionMap = "${descriptionMap}",
			nameMap = "${nameMap}",
			serviceContext = "${serviceContext}");
	}

	@summary = "Delete a segment based on its name and group"
	macro deleteSegment {
		Variables.assertDefined(parameterList = "${groupName},${segmentName}");

		var segmentId = JSONSegmentsentry.getSegmentId(
			groupName = "${groupName}",
			segmentName = "${segmentName}");

		JSONSegmentsentryAPI._deleteSegment(segmentsId = "${segmentId}");
	}

	macro getSegmentId {
		Variables.assertDefined(parameterList = "${segmentName}");

		if (!(isSet(groupName))) {
			var groupName = "Guest";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(
			groupName = "${groupName}",
			site = "true");
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/segments.segmentsentry/get-segments-entries \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d includeAncestorSegmentsEntries=true
		''';

		var segmentId = JSONCurlUtil.post("${curl}", "$.[?(@['nameCurrentValue'] == '${segmentName}')]['segmentsEntryId']");

		echo("## ID for Segment ${segmentName}: ${segmentId}");

		return "${segmentId}";
	}

}