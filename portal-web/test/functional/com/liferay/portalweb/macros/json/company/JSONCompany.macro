definition {

	macro getCompanyId {
		if (!(isSet(portalInstanceName))) {
			var portalInstanceName = JSONCompany.getPortalInstanceName();
		}

		if (!(isSet(portalUrl))) {
			var portalUrl = JSONCompany.getPortalURL();
		}

		if (!(isSet(creatorEmailAddress))) {
			if ("${authenticationMethod}" == "By Screen Name") {
				if (!(isSet(userScreenName))) {
					var creatorEmailAddress = "test";
				}
				else {
					var creatorEmailAddress = "${userScreenName}";
				}
			}
			else {
				var creatorEmailAddress = "test@liferay.com";
			}
		}

		if (!(isSet(creatorPassword))) {
			var creatorPassword = "test";
		}

		var curl = '''
			${portalUrl}/api/jsonws/company/get-company-by-virtual-host/virtual-host/${portalInstanceName} \
				-u ${creatorEmailAddress}:${creatorPassword}
		''';
		var companyId = JSONCurlUtil.get("${curl}", "$['companyId']");

		return "${companyId}";
	}

	macro getDefaultPortalURL {
		var portalUrl = PropsUtil.get("default.portal.url");

		if (!(contains("${portalUrl}", "http"))) {
			var portalUrl = "http://${portalUrl}";
		}

		return "${portalUrl}";
	}

	macro getPortalInstanceName {
		var testNameSkipPortalInstance = PropsUtil.get("test.name.skip.portal.instance");
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (("${testPortalInstance}" == "true") && !(IsTestName(locator1 = "", value1 = "${testNameSkipPortalInstance}"))) {
			var portalUrl = JSONCompany.getPortalURL();

			var portalInstanceName = JSONCompany.parsePortalInstanceURL(portalUrl = "${portalUrl}");

			return "${portalInstanceName}";
		}
		else {
			return "localhost";
		}
	}

	macro getPortalURL {
		var portalUrl = PropsUtil.get("portal.url");

		return "${portalUrl}";
	}

	macro parsePortalInstanceURL {
		Variables.assertDefined(parameterList = "${portalUrl}");

		var portalInstanceName = StringUtil.replace("${portalUrl}", "http://", "");
		var portalInstanceName = StringUtil.replace("${portalInstanceName}", ":8080", "");

		return "${portalInstanceName}";
	}

}