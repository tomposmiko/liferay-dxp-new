definition {
	var assetType = "Message Boards Thread";
	var userName = "Test Test";

	macro addCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		PortletEntry.publish();
	}

	macro addCPWithAttachment {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		Click(locator1 = "TextInput#SUBJECT");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Panel.expandPanel(panel = "Attachments");

		AssertClick(locator1 = "Button#SELECT_FILES", value1 = "Select Files");

		var key_attachmentFileName = "${mbAttachmentFile}";

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${mbAttachmentFile}"
		);

		PortletEntry.publish();
	}

	macro addInvalidAttachmentPG {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Pause(locator1 = "3000");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		Panel.expandPanel(panel = "Attachments");

		AssertClick(locator1 = "Button#SELECT_FILES", value1 = "Select Files");

		var key_attachmentFileName = "${mbThreadAttachment}";

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${mbThreadAttachment}"
		);

		if ("${invalidSize}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_INVALID_SIZE_ERROR",
				value1 = "Request is larger than ${maxAttachmentFileSize}KB and could not be processed."
			);
		}
	}

	macro addPG {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Click(locator1 = "TextInput#SUBJECT");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		if (isSet(source)) {
			Click(locator1 = "AlloyEditor#EDITOR", key_editor = "body");

			Click(locator1 = "Button#EDITOR_SWITCH");

			Type.sendKeysAceEditor(
				locator1 = "TextArea#ACE_EDITOR",
				value1 = "${threadBody}"
			);
		}
		else {
			AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");
		}

		PortletEntry.publish();
	}

	macro addPGAsQuestion {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Panel.expandPanel(panel = "More Settings");

		Check(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		PortletEntry.publish();

		AssertClick(
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
			value1 = "${breadcrumbName}",
			key_breadcrumbName = "${breadcrumbName}"
		);

		MessageboardsThread.viewMarkedAsQuestionPG(threadSubject = "${threadSubject}");
	}

	macro addPGWithAttachment {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Panel.expandPanel(panel = "Attachments");

		AssertClick(locator1 = "Button#SELECT_FILES", value1 = "Select Files");

		var key_attachmentFileName = "${mbThreadAttachment}";

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${mbThreadAttachment}"
		);

		Button.clickPublish();

		AssertElementPresent(
			locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
			key_threadSubject = "${threadSubject}"
		);

		Alert.viewSuccessMessage();
	}

	macro addPGWithPermissions {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Panel.expandPanel(panel = "Permissions");

		Select(
			locator1 = "AssetPermissions#VIEWABLE_AS_SELECT",
			value1 = "${viewableBySelection}"
		);

		SelectFrameTop();

		PortletEntry.publish();
	}

	macro addWithWorkflowCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertElementPresent(locator1 = "TextInput#SUBJECT");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Click(locator1 = "Button#SUBMIT_FOR_PUBLICATION");

		Alert.viewSuccessMessage();
	}

	macro addWithWorkflowPG {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		Click(locator1 = "Button#SUBMIT_FOR_PUBLICATION");

		Alert.viewSuccessMessage();
	}

	macro assertAlertNotPresent {
		AssertAlertNotPresent();
	}

	macro banUser {
		Click.waitForMenuToggleJSClick(
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS",
			key_threadReplyBody = "${threadReplyBody}"
		);

		MenuItem.click(menuItem = "Ban This User");

		Alert.viewSuccessMessage();
	}

	macro cancelAdd {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		AssertClick(locator1 = "Button#CANCEL", value1 = "Cancel");
	}

	macro cancelEdit {
		Click(
			locator1 = "MessageBoards#VERTICAL_ELLIPSIS",
			key_threadSubject = "${threadSubject}"
		);

		MenuItem.click(menuItem = "Edit");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubjectEdit}");

		AlloyEditor.typeEditor(content = "${threadBodyEdit}", editor = "body");

		AssertClick(locator1 = "Button#CANCEL", value1 = "Cancel");
	}

	macro deletePG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${threadSubject}");

		MenuItem.click(menuItem = "Move to Recycle Bin");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");
	}

	macro downloadAttachmentPG {
		Click(locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1");

		DownloadTempFile();
	}

	macro editCP {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Edit");

		if ("${threadAttachmentRemove}" == "true") {
			Panel.expandPanel(panel = "Attachments");

			AssertTextEquals.assertPartialText(
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
				value1 = "${mbAttachmentFile}",
				key_rowEntry = "${mbAttachmentFile}"
			);

			AssertClick(
				locator1 = "MessageBoardsEditMessage#ATTACHMENTS_REMOVE_LINK",
				value1 = "Move to Recycle Bin",
				key_attachmentName = "${mbAttachmentFile}"
			);
		}

		if (isSet(threadSubjectEdit)) {
			Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubjectEdit}");
		}

		if (isSet(threadBodyEdit)) {
			Click(locator1 = "AlloyEditor#EDITOR", key_editor = "body");

			AssertElementPresent(locator1 = "AlloyEditor#CONTENT_ADD_BUTTON");

			AlloyEditor.typeEditor(content = "${threadBodyEdit}", editor = "body");
		}

		PortletEntry.publish();
	}

	macro editPG {
		Click(
			locator1 = "MessageBoards#VERTICAL_ELLIPSIS",
			key_threadSubject = "${threadSubject}"
		);

		MenuItem.click(menuItem = "Edit");

		if (isSet(threadSubjectEdit)) {
			Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubjectEdit}");
		}

		if (isSet(threadBodyEdit)) {
			AlloyEditor.typeEditor(content = "${threadBodyEdit}", editor = "body");
		}

		if ("${saveAsDraft}" == "true") {
			AssertClick(locator1 = "Button#SAVE_AS_DRAFT", value1 = "Save as Draft");
		}
		else if ("${preview}" == "true") {
			AssertClickNoError(locator1 = "Button#PREVIEW", value1 = "Preview");

			AssertConfirm(
				value1 = "In order to preview your changes, the message will be saved as a draft and other users may not be able to see it. Are you sure you want to do this?"
			);

			var key_threadSubject = "${threadSubject}";
			var key_userName = "${userName}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#TITLE_HEADER",
				value1 = "Edit ${threadSubject}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${threadSubject}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
				value1 = "Draft"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_1",
				value1 = "${threadBodyEdit}"
			);
		}
		else {
			AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");
		}

		Alert.viewSuccessMessage();
	}

	macro editViaMyPosts {
		AssertClick(locator1 = "MessageBoards#NAVIGATION_MY_POSTS", value1 = "My Posts");

		var key_threadSubject = "${threadSubject}";

		if ("threadSubjectEdit" == "true") {
			var key_threadSubject = "${threadSubjectEdit}";
		}

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		PortletEntry.publish();
	}

	macro gotoCP {
		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}",
			key_threadSubject = "${threadSubject}"
		);
	}

	macro gotoPG {
		var key_repliesCount = "${replyCount}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${lastPostUserName}";

		if (isSet(messageBoardsThreadURL)) {
			AssertLocation(value1 = "${messageBoardsThreadURL}");
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
				value1 = "${lastPostUserName}"
			);

			if ("${replyCount}" == "1") {
				AssertTextEquals.assertPartialText(
					locator1 = "MessageBoards#THREAD_LIST_REPLIES",
					value1 = "${replyCount} Reply"
				);
			}
			else {
				AssertTextEquals.assertPartialText(
					locator1 = "MessageBoards#THREAD_LIST_REPLIES",
					value1 = "${replyCount} Replies"
				);
			}

			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);
		}
	}

	macro gotoViewInContext {
		AssertClick(locator1 = "Link#VIEW_IN_CONTEXT", value1 = "View in Context »");
	}

	macro lockPG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		Click(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Lock");

		Alert.viewSuccessMessage();
	}

	macro markAsAnswerCP {
		LexiconEntry.openEntryMenu(rowEntry = "${threadReplyBody}");

		MenuItem.click(menuItem = "Mark as an Answer");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer"
		);
	}

	macro markAsAnswerPG {
		Click.waitForMenuToggleJSClick(
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS",
			key_threadReplyBody = "${threadReplyBody}"
		);

		MenuItem.click(menuItem = "Mark as an Answer");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer"
		);
	}

	macro movePG {
		AssertClick(
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "${categoryName1}",
			key_categoryName = "${categoryName1}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${threadSubject}");

		MenuItem.click(menuItem = "Move");

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");

		Pause(locator1 = "5000");

		SelectFrame(locator1 = "MessageBoardsSelectCategory#IFRAME");

		AssertClick(
			locator1 = "MessageBoardsSelectCategory#CATEGORY_TABLE_CHOOSE_BUTTON_2",
			value1 = "Choose"
		);

		if ("${explanationPost}" == "true") {
			SelectFrame(value1 = "relative=top");

			AssertElementPresent(locator1 = "MessageBoardsMoveThread#CATEGORY_FIELD");

			Check(locator1 = "Checkbox#ADD_EXPLANATION_POST");

			Type(locator1 = "TextInput#SUBJECT", value1 = "${explanationSubject}");

			AlloyEditor.typeEditor(content = "${explanationBody}", editor = "body");
		}

		SelectFrame(value1 = "relative=top");

		AssertElementPresent(locator1 = "MessageBoardsMoveThread#CATEGORY_FIELD");

		AssertClick(locator1 = "Button#MOVE", value1 = "Move");

		Alert.viewSuccessMessage();
	}

	macro moveToRecycleBinCP {
		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}",
			key_threadSubject = "${threadSubject}"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Move to Recycle Bin");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories."
		);
	}

	macro replyCP {
		if ("${markAsQuestion}" == "true") {
			AssertClick(
				locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY",
				value1 = "Waiting for an Answer",
				key_threadSubject = "${threadSubject}"
			);
		}

		Click(
			locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
			key_threadSubject = "${threadSubject}"
		);

		Type.typeEditor(
			locator1 = "MessageBoardsThread#THREAD_REPLY_EDITOR",
			value1 = "${threadReplyBody}"
		);

		PortletEntry.publish();

		if ("${markAsAnswer}" == "true") {
			MessageboardsThread.markAsAnswerCP(threadReplyBody = "${threadReplyBody}");
		}
	}

	macro replyPG {
		if ("${displayStyle}" == "Question") {
			AssertClick(
				locator1 = "MessageBoards#QUESTION_CATEGORY_THREAD_TABLE_QUESTION",
				value1 = "${threadSubject}",
				key_threadSubject = "${threadSubject}"
			);
		}
		else {
			var key_threadSubject = "${threadSubject}";

			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);
		}

		if (isSet(threadReplySpecific)) {
			AssertClick(
				locator1 = "MessageBoardsThread#MESSAGE_REPLY_SPECIFIC",
				value1 = "Reply",
				key_threadBody = "${threadBody}"
			);
		}
		else {
			AssertElementPresent(
				locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
				key_threadSubject = "${threadSubject}"
			);

			AssertClick(
				locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
				value1 = "Reply",
				key_threadSubject = "${threadSubject}"
			);
		}

		Type.typeEditor(
			locator1 = "MessageBoardsThread#THREAD_REPLY_EDITOR",
			value1 = "${threadReplyBody}"
		);

		if ("${anonymous}" == "true") {
			Check(locator1 = "Checkbox#ANONYMOUS");
		}

		Click(locator1 = "MessageBoardsThread#THREAD_PUBLISH_BUTTON");

		Alert.viewSuccessMessage();

		if ("${markAsAnswer}" == "true") {
			MessageboardsThread.markAsAnswerPG(threadReplyBody = "${threadReplyBody}");
		}
	}

	macro replyWithAttachmentPG {
		var key_threadSubject = "${threadSubject}";

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertClick(
			locator1 = "MessageBoardsThread#THREAD_REPLY_BUTTON",
			value1 = "Reply"
		);

		Type.typeEditor(
			locator1 = "MessageBoardsThread#THREAD_REPLY_EDITOR",
			value1 = "${threadReplyBody}"
		);

		AssertClick(locator1 = "Button#ADVANCED_REPLY", value1 = "Advanced Reply");

		if (IsNotVisible(locator1 = "Button#SELECT_FILES")) {
			AssertClick(locator1 = "Panel#ENTRY_ATTACHMENTS", value1 = "Attachments");
		}

		AssertClick(locator1 = "Button#SELECT_FILES", value1 = "Select Files");

		var key_attachmentFileName = "${mbThreadAttachment}";

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${mbThreadAttachment}"
		);

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		Alert.viewSuccessMessage();
	}

	macro restoreMBAttachmentCP {
		Click(locator1 = "MessageBoardsRemovedAttachments#REMOVED_ATTACHMENT_LINK");

		IFrame.selectModalFrame();

		AssertElementPresent(
			locator1 = "MessageBoardsRemovedAttachments#ATTACHMENT_FILE_NAME",
			key_mbAttachmentFile = "${mbAttachmentFile}"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Restore",
			rowEntry = "${mbAttachmentFile}"
		);

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "This message does not have file attachments in the Recycle Bin."
		);

		IFrame.closeFrame();

		SelectFrameTop();
	}

	macro saveNewThreadAsDraft {
		AssertClick(locator1 = "Button#NEW_THREAD", value1 = "New Thread");

		Pause(locator1 = "3000");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		AlloyEditor.typeEditor(content = "${threadBody}", editor = "body");

		AssertClick(locator1 = "Button#SAVE_AS_DRAFT", value1 = "Save as Draft");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "Edit"
		);

		Alert.viewSuccessMessage();
	}

	macro splitThreadPG {
		Click(locator1 = "MessageBoards#VERTICAL_ELLIPSIS_REPLY_CARD");

		MenuItem.click(menuItem = "Split Thread");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Click OK to create a new thread with the following messages."
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsSplitThread#THREAD_TABLE_SUBJECT",
			value1 = "${threadSubject}",
			key_threadSubject = "${threadSubject}"
		);

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSplitSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_POST_LABEL",
			value1 = "Add explanation post to the source thread."
		);

		Check(locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_POST_CHECKBOX");

		AssertTextEquals(
			locator1 = "Message#INFO_EXPLANATION_POST",
			value1 = "The following post will be added in place of the moved message."
		);

		Type(
			locator1 = "MessageBoardsSplitThread#ADD_EXPLANATION_SUBJECT_FIELD",
			value1 = "${threadSplitReplySubject}"
		);

		AlloyEditor.typeEditor(content = "${threadSplitReplyBody}", editor = "body");

		AssertClick(locator1 = "Button#OK", value1 = "OK");

		var key_threadBody = "${threadReplyBody}";

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSplitSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadReplyBody}"
		);

		var key_threadBody = "${threadSplitReplyBody}";

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_BODY_2");
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Message Boards"
		);

		if (IsElementPresent.isVisible(locator1 = "MessageBoards#THREAD_TABLE_ALL_CHECKBOX")) {
			Check(locator1 = "MessageBoards#THREAD_TABLE_ALL_CHECKBOX");

			AssertClick(
				locator1 = "MessageBoardsAdmin#THREADS_RECYCLE_BIN_BUTTON",
				value1 = "Move to Recycle Bin"
			);

			AssertElementPresent(locator1 = "Message#SUCCESS");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			panel = "Site Administration",
			portlet = "Recycle Bin"
		);

		RecycleBin.emptyCP();
	}

	macro unlockPG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		Click(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Unlock");

		Alert.viewSuccessMessage();
	}

	macro viewAnonymousPostingCheckboxCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertElementPresent(locator1 = "Checkbox#ANONYMOUS");
	}

	macro viewAnswerPG {
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_ANSWER",
			value1 = "Answer"
		);

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#MESSAGE_ANSWER_1",
			value1 = "Answer"
		);

		Click(
			locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK",
			key_breadcrumbName = "Home"
		);
	}

	macro viewAsWorkflowAsset {
		SiteAdmin.viewPortletTitle(portletTitle = "${threadSubject}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}",
			key_threadBody = "${threadBody}"
		);
	}

	macro viewBBCodeNoXSS {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		MessageboardsThread.assertAlertNotPresent();

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_REPLY_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}"
		);
	}

	macro viewCP {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
			value1 = "${userName}"
		);

		var key_repliesCount = "${replyCount}";

		if ("${replyCount}" == "1") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_REPLIES",
				value1 = "${replyCount} Reply"
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_REPLIES",
				value1 = "${replyCount} Replies"
			);
		}

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_VIEWS");

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_ACTIONS");

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "${threadSubject}");

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}"
		);

		if (isSet(mbAttachmentFile)) {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1",
				value1 = "${mbAttachmentFile}"
			);
		}
	}

	macro viewDefaultCP {
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories."
		);

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_CHECKBOX");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_VIEWS");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_ACTIONS");
	}

	macro viewDoNotHaveRequiredPermissionsPG {
		var key_repliesCount = "0";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "You do not have the required permissions."
		);

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");
	}

	macro viewLockedPG {
		var key_threadStatus = "Locked";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_STATUS",
			value1 = "Locked"
		);

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_REPLY_1");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_QUICK_REPLY_1");

		AssertElementNotPresent(
			locator1 = "MessageBoardsThread#MESSAGE_REPLY_WITH_QUOTE_1"
		);

		AssertElementNotPresent(locator1 = "MessageBoardsThread#MESSAGE_EDIT_1");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		AssertTextEquals(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Unlock",
			key_menuItem = "Unlock"
		);
	}

	macro viewMarkAsQuestionCheckedCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertVisible(locator1 = "Button#PUBLISH");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		Panel.expandPanel(panel = "More Settings");

		AssertChecked(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		AssertClick(locator1 = "Button#CANCEL", value1 = "Cancel");
	}

	macro viewMarkAsQuestionNotCheckedCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertVisible(locator1 = "Button#PUBLISH");

		Type(locator1 = "TextInput#SUBJECT", value1 = "${threadSubject}");

		Panel.expandPanel(panel = "More Settings");

		AssertNotChecked(locator1 = "Checkbox#MARK_AS_A_QUESTION");

		AssertClick(locator1 = "Button#CANCEL", value1 = "Cancel");
	}

	macro viewMarkedAsQuestionPG {
		AssertElementPresent(
			locator1 = "MessageBoards#THREAD_LIST_QUESTION_MARK_ICON",
			key_threadSubject = "${threadSubject}"
		);
	}

	macro viewMBThreadVisualStatePG {
		var key_threadSubject = "${threadSubject}";

		if (isSet(unReadMBthread)) {
			AssertTextEquals(
				locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD",
				value1 = "${threadSubject}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);

			AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD_UNREAD");
		}
	}

	macro viewNoAnonymousPostingCheckboxCP {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Thread");

		AssertElementNotPresent(locator1 = "Checkbox#ANONYMOUS");
	}

	macro viewNoPG {
		var key_repliesCount = "0";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals.assertText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no threads or categories."
		);

		AssertTextNotPresent(value1 = "${threadSubject}");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_THREAD");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_STARTED_BY");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_TABLE_REPLIES");

		AssertElementNotPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");
	}

	macro viewNoXSSPG {
		var key_threadSubject = "${threadSubject}";
		var key_title = "${threadBody}";
		var key_userName = "${userName}";

		AssertAlertNotPresent();

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		if ("${sourceContent}" == "true") {
			AssertElementNotPresent(locator1 = "Header#H3_TITLE");
		}
		else {
			AssertTextEquals(locator1 = "Header#H3_TITLE", value1 = "${threadBody}");
		}
	}

	macro viewPG {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}"
		);

		if (isSet(fontSize)) {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_STYLE_1",
				value1 = "${threadBody}",
				key_fontSize = "${fontSize}"
			);
		}

		if (isSet(threadSubject2)) {
			var key_threadSubject = "${threadSubject2}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#TITLE_HEADER",
				value1 = "${threadSubject}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT",
				value1 = "${threadSubject2}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadBody2}",
				key_threadBody = "${threadBody2}"
			);
		}

		if (isSet(workflowTask)) {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
				value1 = "Pending (${workflowTask})"
			);
		}
	}

	macro viewPGViaAP {
		var key_assetTitle = "${threadSubject}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${threadBody}"
		);

		AssertClick(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${threadSubject}");

		AssertVisible(locator1 = "Icon#SHARE");

		AssertTextEquals(
			locator1 = "APAsset#ASSET_TITLE_HEADER",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#MESSAGE_BOARDS_THREAD_TITLE",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#MESSAGE_BOARDS_THREAD_CONTENT",
			value1 = "${threadBody}"
		);
	}

	macro viewReplyCP {
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		if (isSet(mbAttachmentFile)) {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#MESSAGE_BODY_ATTACHMENT_1",
				value1 = "${mbAttachmentFile}"
			);
		}

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME_2",
			value1 = "${userName}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}"
		);
	}

	macro viewReplyPG {
		var key_repliesCount = "${replyCount}";
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
			value1 = "${userName}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_REPLIES",
			value1 = "${replyCount} Reply"
		);

		if ("${guestReply}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoards#THREAD_LIST_LAST_POST",
				value1 = "Anonymous"
			);

			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);
		}
		else {
			AssertClick(
				locator1 = "MessageBoards#THREAD_LIST_THREAD",
				value1 = "${threadSubject}"
			);
		}

		if ("${loggedOut}" == "true") {
			var key_threadBody = "${threadReplyBody}";

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT_2",
				value1 = "RE: ${threadSubject}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadReplyBody}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT",
				value1 = "${threadSubject}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadBody}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#THREAD_SUBJECT_2",
				value1 = "RE: ${threadSubject}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_1_UPVOTE",
				value1 = "0"
			);

			var key_threadBody = "${threadReplyBody}";

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_BODY",
				value1 = "${threadReplyBody}"
			);

			AssertTextEquals.assertPartialText(
				locator1 = "MessageBoardsThread#THREAD_USERNAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_RATING_2_UPVOTE",
				value1 = "0"
			);
		}

		if ("${guestReply}" == "false") {
			AssertTextEquals(
				locator1 = "MessageBoardsThread#MESSAGE_USERNAME_2",
				value1 = "${userName}"
			);
		}

		if (isSet(mbThreadAttachment)) {
			AssertElementPresent(
				locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_IMAGE",
				key_mbThreadAttachment = "${mbThreadAttachment}"
			);
		}
	}

	macro viewSplitThreadPG {
		var key_repliesCount = "1";
		var key_threadBody = "${threadBody}";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_TABLE_REPLIES",
			value1 = "1 Reply"
		);

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}"
		);

		var key_threadBody = "${threadSplitReplyBody}";
		var key_threadSubject = "${threadSubject}";

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadSplitReplyBody}"
		);

		Navigator.gotoPage(pageName = "${pageName}");

		var key_repliesCount = "0";
		var key_threadBody = "${threadReplyBody}";
		var key_threadSubject = "${threadSplitSubject}";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSplitSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_LIST_REPLIES",
			value1 = "0"
		);

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSplitSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSplitSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSplitSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadReplyBody}"
		);

		var key_threadBody = "${threadSplitReplyBody}";
		var key_threadSubject = "${threadSplitReplySubject}";

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_SUBJECT_2");

		AssertElementNotPresent(locator1 = "MessageBoardsThread#THREAD_BODY_2");
	}

	macro viewStatisticsPostsCountDefaultPG {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_STATISTICS",
			value1 = "Statistics"
		);

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN",
				value1 = "General"
			);
		}

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_CATEGORIES",
			value1 = "0"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_POSTS",
			value1 = "0"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_PARTICIPANTS",
			value1 = "0"
		);

		PortletEntry.viewEmptyMessage(entity = "Top Posters");
	}

	macro viewStatisticsPostsCountPG {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_STATISTICS",
			value1 = "Statistics"
		);

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#GENERAL_DROPDOWN",
				value1 = "General"
			);
		}

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#GENERAL_NUMBER_OF_POSTS",
			value1 = "${threadPostNumber}"
		);

		if (isSet(userPostNumber)) {
			MessageboardsThread.viewStatisticsTopPoster();
		}
		else {
			MessageboardsThread.viewStatisticsTopPoster(
				userMessageboardsRank = "${userMessageboardsRank}",
				userName = "${userName}",
				userPostNumber = "${threadPostNumber}"
			);
		}
	}

	macro viewStatisticsTopPoster {
		AssertClick(
			locator1 = "MessageBoards#NAVIGATION_STATISTICS",
			value1 = "Statistics"
		);

		if (IsElementPresent(locator1 = "MessageBoardsStatistics#TOP_POSTERS_DROPDOWN_COLLAPSED")) {
			AssertClick(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_DROPDOWN",
				value1 = "Top Posters"
			);
		}

		var key_userName = "${userName}";

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_NAME",
			value1 = "${userName}"
		);

		if (isSet(userMessageboardsRank)) {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_RANK",
				value1 = "Rank: ${userMessageboardsRank}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_RANK",
				value1 = "Rank: Youngling"
			);
		}

		var key_userPostNumber = "${userPostNumber}";

		AssertTextEquals(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_POSTS",
			value1 = "Posts:${userPostNumber}"
		);

		AssertElementPresent(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_JOIN_DATE"
		);

		AssertElementPresent(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_LAST_POST_DATE"
		);

		AssertElementPresent(
			locator1 = "MessageBoardsStatistics#TOP_POSTERS_AUTHOR_ICON"
		);
	}

	macro viewWithWorkflowPG {
		var key_repliesCount = "0";
		var key_threadBody = "threadBody";
		var key_threadSubject = "${threadSubject}";
		var key_userName = "${userName}";

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoards#THREAD_TABLE_REPLIES",
			value1 = "0 Replies"
		);

		AssertElementPresent(locator1 = "MessageBoards#THREAD_LIST_LAST_POST");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		var key_threadStatus = "Pending (${workflowTask})";

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_STATUS",
			value1 = "Pending (${workflowTask})"
		);

		AssertClick(locator1 = "MessageBoards#NAVIGATION_MY_POSTS", value1 = "My Posts");

		AssertTextEquals(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
			value1 = "Pending (${workflowTask})"
		);

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#TITLE_HEADER",
			value1 = "${threadSubject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MessageBoardsThread#THREAD_USERNAME",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_SUBJECT",
			value1 = "${threadSubject}"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_WORKFLOW_STATUS_1",
			value1 = "Pending"
		);

		AssertTextEquals(
			locator1 = "MessageBoardsThread#THREAD_BODY",
			value1 = "${threadBody}",
			key_threadBody = "${threadBody}"
		);
	}

	macro viewWithWorkflowPGViaAP {
		AssertElementNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			key_assetTitle = "${threadSubject}"
		);
	}
}