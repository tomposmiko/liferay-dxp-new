definition {

	macro definePermissionViaJSONAPI {
		JSONPermission.addPermission(
			actionId = ${resourceAction},
			groupName = ${groupName},
			name = ${resourceName},
			roleTitle = ${roleTitle},
			roleType = ${roleType});
	}

	macro removePermissionViaAPI {
		JSONPermission.removePermission(
			actionId = ${resourceAction},
			groupName = ${groupName},
			name = ${resourceName},
			roleTitle = ${roleTitle},
			roleType = ${roleType});
	}

	macro setUpOrgRoleCP {
		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			currentPassword = ${currentPassword},
			newPassword = ${newPassword},
			userEmailAddress = ${userEmailAddress},
			userScreenName = ${userScreenName});

		JSONOrganization.addOrganization(
			organizationName = ${orgName},
			organizationSite = "true");

		JSONOrganization.assignUserToOrganization(
			organizationName = ${orgName},
			userEmailAddress = ${userEmailAddress});

		JSONLayout.addPublicLayout(
			groupName = ${orgName},
			layoutName = ${pageName});

		Navigator.gotoSitePage(
			pageName = ${pageName},
			siteName = "Organization Name");

		JSONRole.addOrganizationRole(roleTitle = ${roleTitle});

		JSONGroup.assignGroupRoleToUser(
			groupName = ${orgName},
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});
	}

	macro setUpOrgRoleLoginUserPG {
		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			currentPassword = ${currentPassword},
			newPassword = ${newPassword},
			userEmailAddress = ${userEmailAddress},
			userScreenName = ${userScreenName});

		JSONOrganization.addOrganization(
			organizationName = ${orgName},
			organizationSite = "true");

		JSONOrganization.assignUserToOrganization(
			organizationName = ${orgName},
			userEmailAddress = ${userEmailAddress});

		JSONLayout.addPublicLayout(
			groupName = ${orgName},
			layoutName = ${pageName});

		Navigator.gotoSitePage(
			pageName = ${pageName},
			siteName = "Organization Name");

		Portlet.addPG(
			i = ${i},
			pageName = ${pageName},
			portletName = ${portletName},
			siteName = "Organization Name",
			siteURL = "true");

		JSONRole.addOrganizationRole(roleTitle = ${roleTitle});

		JSONGroup.assignGroupRoleToUser(
			groupName = ${orgName},
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpRegRoleLoginUserCP {
		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = ${userEmailAddress});

		JSONRole.addRegularRole(roleTitle = ${roleTitle});

		JSONRole.assignRoleToUser(
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});
	}

	macro setUpRegRoleLoginUserPG {
		Permissions.setUpRegRolePG(
			pageName = ${pageName},
			portletName = ${portletName},
			roleTitle = ${roleTitle},
			siteName = ${siteName},
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpRegRolePG {
		JSONUserAPI._disablePasswordChangeRequired();

		if (isSet(siteName)) {
			var siteName = ${siteName};
		}
		else {
			var siteName = "Guest";
		}

		JSONLayout.addPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName});

		Navigator.gotoSitePage(
			pageName = ${pageName},
			siteName = ${siteName});

		JSONLayout.addWidgetToPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName},
			widgetName = ${portletName});

		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			currentPassword = ${currentPassword},
			newPassword = ${newPassword},
			userEmailAddress = ${userEmailAddress},
			userScreenName = ${userScreenName});

		JSONRole.addRegularRole(roleTitle = ${roleTitle});

		JSONRole.assignRoleToUser(
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});
	}

	macro setUpSiteMemberRoleLoginUserPG {
		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = ${userEmailAddress});

		HeadlessSite.addSite(siteName = ${siteName});

		JSONGroup.assignUserToGroup(
			groupName = ${siteName},
			userEmailAddress = ${userEmailAddress});

		JSONLayout.addPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName});

		JSONLayout.addWidgetToPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName},
			widgetName = ${portletName});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpSiteRoleCP {
		PortalSettings.gotoConfiguration(
			configurationCategory = "Users",
			configurationName = "Default User Associations",
			configurationScope = "Virtual Instance Scope");

		Portlet.waitForForm();

		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			currentPassword = ${currentPassword},
			newPassword = ${newPassword},
			userEmailAddress = ${userEmailAddress},
			userScreenName = ${userScreenName});

		HeadlessSite.addSite(siteName = ${siteName});

		JSONGroup.assignUserToGroup(
			groupName = ${siteName},
			userEmailAddress = ${userEmailAddress});

		JSONLayout.addPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName});

		JSONRole.addSiteRole(roleTitle = ${roleTitle});

		JSONGroup.assignGroupRoleToUser(
			groupName = ${siteName},
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpSiteRoleLoginUserCP {
		Permissions.setUpSiteRoleCP(
			newPassword = ${newPassword},
			pageName = ${pageName},
			roleTitle = ${roleTitle},
			siteName = ${siteName},
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpSiteRoleLoginUserPG {
		JSONUser.addUser(
			userEmailAddress = ${userEmailAddress},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userScreenName = ${userScreenName});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = ${userEmailAddress});

		HeadlessSite.addSite(siteName = ${siteName});

		JSONGroup.assignUserToGroup(
			groupName = ${siteName},
			userEmailAddress = ${userEmailAddress});

		JSONLayout.addPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName});

		JSONLayout.addWidgetToPublicLayout(
			groupName = ${siteName},
			layoutName = ${pageName},
			widgetName = ${portletName});

		JSONRole.addSiteRole(
			roleDescription = ${roleDescription},
			roleKey = ${roleKey},
			roleTitle = ${roleTitle});

		JSONGroup.assignGroupRoleToUser(
			groupName = ${siteName},
			roleTitle = ${roleTitle},
			userEmailAddress = ${userEmailAddress});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

	macro setUpSiteTeamRoleLoginUserPG {
		JSONUser.addUser(
			userBirthday = ${userBirthday},
			userEmailAddress = ${userEmailAddress},
			userEmailAddressVariation = ${userEmailAddressVariation},
			userFirstName = ${userFirstName},
			userGender = ${userGender},
			userLastName = ${userLastName},
			userMiddleName = ${userMiddleName},
			userScreenName = ${userScreenName});

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = ${userEmailAddress});

		HeadlessSite.addSite(siteName = ${siteName});

		JSONGroup.assignUserToGroup(
			groupName = ${siteName},
			userEmailAddress = ${userEmailAddress});

		JSONTeam.addTeam(
			siteName = ${siteName},
			teamDescription = ${teamDescription},
			teamName = ${teamName});

		PagesAdmin.openPagesAdmin(siteURLKey = ${siteName});

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Teams");

		Team.assignMembersCP(
			siteName = ${siteName},
			teamName = ${teamName},
			userFirstName = ${userFirstName},
			userLastName = ${userLastName},
			userNameIsNotFound = ${userNameIsNotFound},
			userScreenName = ${userScreenName});

		User.logoutAndLoginPG(
			userLoginEmailAddress = ${userLoginEmailAddress},
			userLoginFullName = ${userLoginFullName});
	}

}