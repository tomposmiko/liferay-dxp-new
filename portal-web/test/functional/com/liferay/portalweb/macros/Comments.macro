definition {

	macro addPG {
		Click(
			key_editor = "postReply",
			locator1 = "AlloyEditor#EDITOR");

		AlloyEditor.typeEditor(
			content = "${entryComment}",
			editor = "postReply");

		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");

		Alert.viewSuccessMessage();
	}

	macro addPGAsGuest {
		BlogsNavigator.gotoEntryPG(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}");

		var entryComment = "${entryComment}";

		Click(locator1 = "Comments#COMMENT_FIELD");

		Type(
			locator1 = "Comments#COMMENT_FIELD",
			value1 = "${entryComment}");

		AssertElementPresent(locator1 = "UserBar#USER_SIGN_IN");

		AssertClick(
			locator1 = "Button#REPLY_AS",
			value1 = "Reply as...");

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "Link#GUEST",
			value1 = "Guest");

		Type(
			locator1 = "TextInput#FIRST_NAME",
			value1 = "${userFirstName}");

		Type(
			locator1 = "TextInput#LAST_NAME",
			value1 = "${userLastName}");

		Type(
			locator1 = "TextInput#EMAIL_ADDRESS",
			value1 = "${userEmailAddress}");

		Button.clickSave();

		var uniqueSuccess = "Your comment has already been posted. Would you like to create an account with the provided information?";
		var key_uniqueSuccess = "${uniqueSuccess}";

		AssertTextEquals(
			locator1 = "Message#UNIQUE_SUCCESS",
			value1 = "${uniqueSuccess}");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");

		SelectFrame(value1 = "relative=top");

		Alert.viewSuccessMessage();
	}

	macro delete {
		var key_entryComment = "${entryComment}";

		MouseOver(
			locator1 = "Comments#COMMENT_BODY_SPECIFIC",
			value1 = "${entryComment}");

		Click(locator1 = "Comments#COMMENT_ACTIONS");

		AssertClickNoError(
			key_menuItem = "Delete",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(value1 = "${entryComment}");
	}

	macro edit {
		var key_entryComment = "${entryComment}";

		MouseOver(locator1 = "Comments#COMMENT_BODY_SPECIFIC");

		Click(locator1 = "Comments#COMMENT_ACTIONS");

		AssertClick(
			key_menuItem = "Edit",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Edit");

		AssertElementPresent.pauseAssertVisible(locator1 = "Comments#EDIT_COMMENT_FIELD");

		Click.clickAt(locator1 = "Comments#EDIT_COMMENT_FIELD");

		Type(
			locator1 = "Comments#EDIT_COMMENT_FIELD",
			value1 = "${entryCommentEdit}");

		AssertClick(
			key_text = "Save",
			locator1 = "Comments#ANY_BUTTON_IN_COMMENT",
			value1 = "Save");

		var key_entryComment = "${entryCommentEdit}";

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Comments#COMMENT_BODY_SPECIFIC",
			value1 = "${entryCommentEdit}");
	}

	macro subscribePG {
		AssertClick(
			locator1 = "Button#SUBSCRIBE",
			value1 = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro viewCommentReadOnly {
		AssertElementNotPresent(locator1 = "Comments#COMMENT_FIELD");

		AssertTextEquals(
			locator1 = "Comments#COMMENT_INFO",
			value1 = "INFO:Comments are unavailable in staged sites.");
	}

	macro viewPG {
		var key_entryComment = "${entryComment}";

		Pause(locator1 = "1000");

		if (isSet(noAddPermissions)) {
			AssertTextNotPresent(
				locator1 = "Comments#ENTRY_COUNT_PANEL",
				value1 = "${commentCount} COMMENT");
		}

		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Comments#ENTRY_COUNT_PANEL",
				value1 = "${commentCount} COMMENT");
		}

		var key_userFullName = "${userFullName}";

		AssertTextEquals.assertPartialText(
			locator1 = "Comments#USER_NAME",
			value1 = "${userFullName}");

		AssertTextEquals(
			locator1 = "Comments#COMMENT_BODY_SPECIFIC",
			value1 = "${entryComment}");
	}

	macro viewSubscribedPG {
		AssertTextEquals(
			locator1 = "Button#UNSUBSCRIBE",
			value1 = "Unsubscribe");
	}

}