definition {
	macro _addItemPage {
		IFrame.selectConfigurationFrame();

		if (contains("${privacy}", "{privacy}")) {
			var privacy = "Public Pages";
		}

		Navigator.gotoNavItem(navItem = "${privacy}");

		Portlet.expandTree();

		for (var pageName : list "${pageNames}") {
			Portlet.selectTreeNode(nodeName = "${pageName}");
		}
	}

	macro _addItemSubmenu {
		PortletEntry.inputName(name = "${submenuName}");
	}

	macro _addItemURL {
		PortletEntry.inputName(name = "${urlName}");

		Type(locator1 = "TextInput#URL", value1 = "${url}");
	}

	macro _editItemPage {
		if (isSet(name)) {
			Type(locator1 = "TextInput#NAME", value1 = "${name}");
		}
	}

	macro _editItemSubmenu {
		if (isSet(name)) {
			Type(locator1 = "TextInput#NAME", value1 = "${name}");
		}
	}

	macro _editItemURL {
		if (isSet(name)) {
			Type(locator1 = "TextInput#NAME", value1 = "${name}");
		}
		else if (isSet(url)) {
			Type(locator1 = "TextInput#URL", value1 = "${URL}");
		}
	}

	macro addItem {
		LexiconEntry.gotoAddMenuItem(menuItem = "${item}");

		IFrame.selectConfigurationFrame();

		if ("${item}" == "Page") {
			NavigationMenusAdmin._addItemPage(
				pageNames = "${pageNames}",
				privacy = "${privacy}"
			);
		}
		else if ("${item}" == "Submenu") {
			NavigationMenusAdmin._addItemSubmenu(submenuName = "${submenuName}");
		}
		else if ("${item}" == "URL") {
			NavigationMenusAdmin._addItemURL(url = "${url}", urlName = "${urlName}");
		}

		MouseOver(locator1 = "Button#ADD");

		Button.clickAdd();

		IFrame.selectTopFrame();
	}

	macro addMenu {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${menuName}");

		Modal.save();
	}

	macro configureMenuType {
		if ("${menuType}" == "Primary Navigation") {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "${menuType}",
				rowEntry = "${navigationMenu}"
			);

			AssertConfirm(
				value1 = "Do you want to replace ${navigationMenu} for ${currentPrimaryNavigationMenu} as primary navigation? This action will affect all the pages using primary navigation."
			);
		}
		else {
			LexiconEntry.gotoEntryMenuItem(
				menuItem = "${menuType}",
				rowEntry = "${navigationMenu}"
			);
		}
	}

	macro deleteItem {
		Click(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_CLOSE",
			key_itemName = "${itemName}"
		);
	}

	macro editItem {
		NavigationMenusAdmin.openItemSidebar(itemName = "${itemName}");

		if ("${item}" == "Page") {
			NavigationMenusAdmin._editItemPage(name = "${name}");
		}
		else if ("${item}" == "Submenu") {
			NavigationMenusAdmin._editItemSubmenu(submenuName = "${submenuName}");
		}
		else if ("${item}" == "URL") {
			NavigationMenusAdmin._editItemURL(name = "${name}", url = "${url");
		}

		PortletEntry.save();
	}

	macro markAsPrimaryNavigation {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Primary Navigation",
			rowEntry = "${newMenuName}"
		);

		AssertConfirm(
			value1 = "Do you want to replace ${newMenuName} for ${oldMenuName} as primary navigation? This action will affect all the pages using primary navigation."
		);
	}

	macro moveItem {
		if ("${direction}" == "up") {
			var coordString = "0,-150";
		}
		else if ("${direction}" == "down") {
			var coordString = "0,150";
		}
		else if ("${direction}" == "in") {
			var coordString = "100,-77";
		}
		else if ("${direction}" == "out") {
			var coordString = "-100,-77";
		}

		ProductMenuHelper.closeProductMenu();

		DragAndDrop.dragAndDrop(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_STICKER",
			value1 = "${coordString}|10,0|-10,0",
			key_itemName = "${itemName}"
		);

		Refresh();
	}

	macro openItemSidebar {
		Refresh();

		Click(locator1 = "SiteNavigationMenu#ITEM_LINK", key_itemName = "${itemName}");

		AssertTextEquals(
			locator1 = "SiteNavigationMenu#SIDEBAR_ITEM_NAME",
			value1 = "${itemName}",
			key_itemName = "${itemName}"
		);

		AssertElementPresent(locator1 = "SiteNavigationMenu#SIDEBAR");
	}

	macro openNavigationMenusAdmin {
		Navigator.openWithAppendToBaseURL(
			urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_site_navigation_admin_web_portlet_SiteNavigationAdminPortlet"
		);
	}

	macro viewItem {
		AssertElementPresent(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY",
			key_itemName = "${itemName}"
		);
	}

	macro viewItemNested {
		AssertNotAttributeValue(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY",
			locator2 = "data-parent-site-navigation-menu-item-id",
			value1 = "0",
			key_itemName = "${itemName}"
		);
	}

	macro viewItemNotNested {
		AssertAttributeValue(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY",
			locator2 = "data-parent-site-navigation-menu-item-id",
			value1 = "0",
			key_itemName = "${itemName}"
		);
	}

	macro viewItemOrder {
		AssertTextEquals.assertPartialText(
			locator1 = "SiteNavigationMenu#ITEM_ENTRY_N",
			value1 = "${itemName}",
			key_index = "${index}"
		);
	}

	macro viewMenuType {
		AssertTextEquals(
			locator1 = "SiteNavigationMenu#MENU_MARKED_AS",
			value1 = "${menuType}",
			key_markedAs = "${menuType}",
			key_rowEntry = "${rowEntry}"
		);
	}
}