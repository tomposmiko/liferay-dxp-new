definition {
	macro _backtoInbox {
		AssertClick.assertPartialTextClickAt(
			locator1 = "MockMock#MOCKMOCK_HOME_LINK",
			value1 = "Home"
		);
	}

	macro _gotoMail {
		Navigator.openSpecificURL(url = "http://localhost:8282");

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_HEADER_LINK",
			value1 = "MockMock"
		);
	}

	macro _gotoMailMessage {
		var key_columnEntry = "${asset}";

		if (isSet(recipient)) {
			var key_recipient = "${recipient}";

			AssertClick.assertPartialTextClickAt(
				locator1 = "MockMock#MOCKMOCK_SPECIFIC_RECIPIENT_SUBJECT_FIELD_LINK",
				value1 = "${asset}"
			);
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "MockMock#MOCKMOCK_SUBJECT_FIELD_LINK",
				value1 = "${asset}"
			);
		}
	}

	macro _viewMailFromInbox {
		var key_columnEntry = "${asset}";
		var key_recipient = "${recipient}";
		var key_sender = "${sender}";

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_HAVE_EMAILS_MESSAGE",
			value1 = "You have"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_FROM_FIELD",
			value1 = "${sender}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_TO_FIELD",
			value1 = "${recipient}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_SUBJECT_FIELD",
			value1 = "${asset}"
		);
	}

	macro _viewMailMessage {
		var key_asset = "${subject}";

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_MESSAGE_BODY",
			value1 = "${subject}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "MockMock#MOCKMOCK_MESSAGE_BODY",
			value1 = "${content}"
		);
	}

	macro clickBodyLink {
		MockMock._gotoMailMessage(asset = "${asset}");

		var key_bodyLink = "${bodyLink}";

		AssertClick(
			locator1 = "MockMock#MOCKMOCK_HTML_BODY_LINK",
			value1 = "${bodyLink}"
		);
	}

	macro viewMail {
		MockMock._gotoMail();

		MockMock._viewMailFromInbox(
			asset = "${asset}",
			recipient = "${recipient}",
			sender = "${sender}"
		);

		MockMock._gotoMailMessage(asset = "${asset}", recipient = "${recipient}");

		MockMock._viewMailMessage(content = "${content}", subject = "${subject}");

		MockMock._backtoInbox();
	}
}