definition {

	macro clickEllipsis {
		Click(
			key_listEntry = "${listEntry}",
			locator1 = "LexiconList#LIST_ENTRY_ELLIPSIS");
	}

	macro clickEllipsisItem {
		LexiconList.clickEllipsis(listEntry = "${listEntry}");

		MenuItem.clickNoError(menuItem = "${item}");
	}

	macro clickListEntryTitle {
		Click(
			key_listEntry = "${listEntry}",
			locator1 = "LexiconList#LIST_ENTRY_TITLE_LINK");
	}

	macro delete {
		LexiconList.clickEllipsisItem(
			item = "Delete",
			listEntry = "${listEntry}");

		Confirm();
	}

	macro viewListEntryLabel {
		AssertTextEquals(
			key_listEntry = "${listEntry}",
			key_listEntrySubtitle = "${listEntryLabel}",
			locator1 = "LexiconList#LIST_ENTRY_LABEL",
			value1 = "${listEntryLabel}");
	}

	macro viewListEntryNotPresent {
		AssertElementNotPresent(
			key_listEntry = "${listEntry}",
			locator1 = "LexiconList#LIST_ENTRY");
	}

	macro viewListEntrySubtitle {
		AssertTextEquals(
			key_listEntry = "${listEntry}",
			key_listEntrySubtitle = "${listEntrySubtitle}",
			locator1 = "LexiconList#LIST_ENTRY_SUBTITLE",
			value1 = "${listEntrySubtitle}");
	}

	macro viewListEntryTitle {
		AssertTextEquals(
			key_listEntry = "${listEntry}",
			locator1 = "LexiconList#LIST_ENTRY_TITLE",
			value1 = "${listEntry}");
	}

	macro viewListEntryTitleLink {
		AssertTextEquals(
			key_listEntry = "${listEntry}",
			locator1 = "LexiconList#LIST_ENTRY_TITLE_LINK",
			value1 = "${listEntry}");
	}

}