definition {

	@description = "Select the control frame of the Cookie Consent popup."
	macro _selectPanelOuterFrame {
		SelectFrame.selectFrameNoLoading(locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL");
	}

	@description = "Verify if Cookie Consent Panel is not visible"
	macro checkCookieConsentPanelIsNotVisible {
		WaitForElementNotPresent(locator1 = "COOKIES_CONSENT_PANEL_IFRAME");
	}

	@description = "Click on Policy link shown on the Cookie Consent Panel"
	macro clickOnPolicyLink {
		SelectFrame.selectFrameTop();

		SelectFrame.selectFrameNoLoading(locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_IFRAME");

		Click(
			key_text = "${cookiePolicyLink}",
			locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_POLICY_LINK");
	}

	@description = "Accept all cookies on Cookie Consent Panel"
	macro cookiesAcceptAll {
		Click(locator1 = "CookieConsentPanel#ACCEPT_ALL_BUTTON");
	}

	@description = "Select all cookies on Cookie Consent Panel"
	macro cookiesCheckAll {
		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#PERFORMANCE_COOKIES_TOGGLE");

		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#FUNCTIONAL_COOKIES_TOGGLE");

		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#PERSONALIZATION_COOKIES_TOGGLE");

		CookieConsentPanel._selectPanelOuterFrame();

		CookieConsentPanel.cookiesConfirmSelected();
	}

	@description = "Confirm selected cookies on Cookie Consent Panel"
	macro cookiesConfirmSelected {
		CookieConsentPanel._selectPanelOuterFrame();

		Click(locator1 = "CookieConsentPanel#CONFIRM_BUTTON");
	}

	@description = "Decline all cookies on Cookie Consent Panel"
	macro cookiesDeclineAll {
		CookieConsentPanel._selectPanelOuterFrame();

		Click(locator1 = "CookieConsentPanel#DECLINE_ALL_BUTTON");
	}

	@description = "Customized select of cookie consents"
	macro editCookieConsentConsent {
		if (isSet(performanceCookies)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Performance Cookies",
				locator1 = "CookieConsentPanel#PERFORMANCE_COOKIES_TOGGLE");
		}

		if (isSet(functionalCookies)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Functional Cookies",
				locator1 = "CookieConsentPanel#FUNCTIONAL_COOKIES_TOGGLE");
		}

		if (isSet(personalizationCookies)) {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Personalization Cookies",
				locator1 = "CookieConsentPanel#PERSONALIZATION_COOKIES_TOGGLE");
		}
	}

	@description = "Select all cookie categories on the Cookie Consent panel"
	macro selectAllCookiesOnConsentPanel {
		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#PERFORMANCE_COOKIES_TOGGLE");

		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#FUNCTIONAL_COOKIES_TOGGLE");

		Check.checkToggleSwitch(locator1 = "CookieConsentPanel#PERSONALIZATION_COOKIES_TOGGLE");

		Click(locator1 = "CookieConsentPanel#CONFIRM_BUTTON");
	}

	@description = "Verify that all Cookie Consent portlet elements are present on the Cookie Consent Popup"
	macro verifyAllElementsArePresent {
		WaitForElementPresent(locator1 = "CookieConsentPanel#PERFORMANCE_COOKIES_TOGGLE");

		WaitForElementPresent(locator1 = "CookieConsentPanel#FUNCTIONAL_COOKIES_TOGGLE");

		WaitForElementPresent(locator1 = "CookieConsentPanel#PERSONALIZATION_COOKIES_TOGGLE");

		SelectFrame.selectFrameNoLoading(locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL");

		WaitForElementPresent(locator1 = "CookieConsentPanel#DECLINE_ALL_BUTTON");

		WaitForElementPresent(locator1 = "CookieConsentPanel#CONFIRM_BUTTON");

		WaitForElementPresent(locator1 = "CookieConsentPanel#ACCEPT_ALL_BUTTON");

		WaitForElementPresent(locator1 = "CookieConsentPanel#CLOSE_BUTTON");
	}

	@description = "Verify that all Cookie Consent portlet elements are present"
	macro verifyAllElementsArePresentOnCookieConsentPortlet {
		WaitForElementPresent(locator1 = "CookieConsentPanel#PERFORMANCE_COOKIES_TOGGLE");

		WaitForElementPresent(locator1 = "CookieConsentPanel#FUNCTIONAL_COOKIES_TOGGLE");

		WaitForElementPresent(locator1 = "CookieConsentPanel#PERSONALIZATION_COOKIES_TOGGLE");

		WaitForElementPresent(locator1 = "CookieConsentPanel#DECLINE_ALL_BUTTON");

		WaitForElementPresent(locator1 = "CookieConsentPanel#CONFIRM_BUTTON");

		WaitForElementPresent(locator1 = "CookieConsentPanel#ACCEPT_ALL_BUTTON");
	}

	@description = "Verify that cookies are not present with true as value"
	macro verifyCookiesAreNotPresent {
		CookieHelper.checkSelectedCookieIsNotPresent(
			cookieName = "CONSENT_TYPE_PERFORMANCE",
			expectedCookieValue = "true");

		CookieHelper.checkSelectedCookieIsNotPresent(
			cookieName = "CONSENT_TYPE_FUNCTIONAL",
			expectedCookieValue = "true");

		CookieHelper.checkSelectedCookieIsNotPresent(
			cookieName = "CONSENT_TYPE_PERSONALIZATION",
			expectedCookieValue = "true");

		CookieHelper.checkSelectedCookieIsNotPresent(
			cookieName = "CONSENT_TYPE_NECESSARY",
			expectedCookieValue = "true");
	}

	@description = "Verify that customized texts are present"
	macro verifyCustomTextsArePresent {
		Variables.assertDefined(parameterList = "${key_text}");

		SelectFrame.selectFrameTop();

		AssertElementPresent(
			key_text = "${key_text}_1",
			locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_TITLE");

		SelectFrame.selectFrameNoLoading(locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_IFRAME");

		var actualLink = selenium.getAttribute("CookieConsentPanel#COOKIES_CONSENT_PANEL_POLICY_LINK_VALUE");

		TestUtils.assertEquals(
			actual = "${actualLink}",
			expected = "http://localhost:8080/group/guest/~/control_panel/${key_text}_3");

		AssertElementPresent(
			key_text = "${key_text}_4",
			locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_POLICY_TITLE");

		for (var id : list "2,5,6,7,8") {
			AssertElementPresent(
				key_text = "${id}",
				locator1 = "CookieConsentPanel#COOKIES_CONSENT_PANEL_LOCALIZED_TEXT");
		}

		CookieConsentPanel._selectPanelOuterFrame();

		Click(locator1 = "CookieConsentPanel#CLOSE_BUTTON");
	}

}