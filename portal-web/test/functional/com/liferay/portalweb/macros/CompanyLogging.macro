definition {

	macro assertCompanyLogContent {
		var groupId = JSONCompany.getCompanyGroupIdByGroupKey(
			groupKey = "Guest",
			portalInstanceName = ${portalInstanceName});

		if (!(contains(${logContent}, "for group ${groupId}"))) {
			fail("The ${portalInstanceName} company log file content does not contain the group ID.");
		}

		AssertTextPresent(
			locator1 = "CompanyLogging#COMPANY_LOG_CONTENT",
			value1 = "for group ${groupId}");
	}

	macro assertCompanyLogIsolated {
		var logContent = CompanyLogging.downloadCompanyLog(portalInstanceName = ${portalInstanceName});

		CompanyLogging.assertCompanyLogContent(
			logContent = ${logContent},
			portalInstanceName = ${portalInstanceName});

		var portalInstanceNames = JSONCompany.getAllCompanyNames();

		var portalInstanceNames = ListUtil.newListFromString(${portalInstanceNames});

		ListUtil.remove(${portalInstanceNames}, ${portalInstanceName});

		for (var additionalPortalInstanceName : list ${portalInstanceNames}) {
			var groupId = JSONCompany.getCompanyGroupIdByGroupKey(
				groupKey = "Guest",
				portalInstanceName = ${additionalPortalInstanceName});

			if (contains(${logContent}, "for group ${groupId}")) {
				fail("The ${portalInstanceName} company log file contains logs from the ${additionalPortalInstanceName} company");
			}
		}
	}

	macro assertNoLogDownloaded {
		DownloadTempFile();

		DMDocument.assertNoFileNameFromTempFolder(fileName = ${logName});
	}

	macro downloadCompanyLog {
		var logName = CompanyLogging.getCompanyLogName(portalInstanceName = ${portalInstanceName});

		Click(
			key_logName = ${logName},
			locator1 = "CompanyLogging#COMPANY_LOG_NAME");

		Click(
			ariaLabel = "Download",
			locator1 = "Button#ANY_WITH_ARIA_LABEL");

		DownloadTempFile();

		DMDocument.assertFileNameFromTempFolder(fileName = ${logName});

		var logContent = TestCase.getTempFileContent(fileName = ${logName});

		return ${logContent};
	}

	macro getCompanyLogDirPath {
		var companyId = JSONCompany.getCompanyId(portalInstanceName = ${portalInstanceName});
		var homeDir = PropsUtil.get("liferay.home.dir.name");

		var logsDir = "${homeDir}/logs/companies/${companyId}";
		var pattern = StringUtil.split("**/*.log");

		var filePath = FileUtil.getIncludedResourceURLs(${pattern}, ${logsDir});

		var filePath = StringUtil.valueOf(${filePath});

		var filePath = RegexUtil.replace(${filePath}, "\[(.*)\]", 1);

		var filePath = StringUtil.replace(${filePath}, "file:/", "");

		return ${filePath};
	}

	macro getCompanyLogName {
		var companyLogDirPath = CompanyLogging.getCompanyLogDirPath(portalInstanceName = ${portalInstanceName});

		var logName = FileUtil.getFileName(${companyLogDirPath});

		return ${logName};
	}

	macro openServerLogsAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = ${baseURL},
			urlAppend = "group/guest/~/control_panel/manage?p_p_id=com_liferay_portal_company_log_web_internal_portlet_PortalCompanyLogPortlet");
	}

}