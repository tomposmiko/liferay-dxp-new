definition {
	macro _gotoChildArticle {
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "Wiki#CHILD_PAGE_HEADER",
			value1 = "Child Article"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#CHILD_PAGE_TITLE",
			value1 = "${kbChildArticleTitle}"
		);

		AssertClick(
			locator1 = "KnowledgeBase#CHILD_PAGE_TITLE",
			value1 = "${kbChildArticleTitle}"
		);
	}

	macro addChildArticleViaKBAdmin {
		var key_rowEntry = "${kbArticleTitle}";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			Click(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
		}
		else {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}

		MenuItem.click(menuItem = "Add Child Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbChildArticleContent}",
			title = "${kbChildArticleTitle}"
		);

		PortletEntry.publish();
	}

	macro addChildPGViaKBDisplay {
		AssertClick(
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Add Child Article",
			key_kbTool = "Add Child Article"
		);

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		Panel.expandPanel(panel = "Configuration");

		if (isSet(kbArticleFriendlyURL)) {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleFriendlyURL}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			Type(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}"
			);
		}
		else {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleTitle}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}"
			);
		}

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");
		}
	}

	macro addCP {
		if (isSet(kbTemplateTitle)) {
			LexiconEntry.gotoAddMenuItem(menuItem = "${kbTemplateTitle}");
		}
		else {
			LexiconEntry.gotoAddMenuItem(menuItem = "Basic Article");
		}

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		if (isSet(specialCharacters)) {
			Type.sendKeys(
				locator1 = "AlloyEditor#EDITOR",
				value1 = "${kbArticleTitle}",
				key_editor = "title"
			);
		}
		else {
			AlloyEditor.addTitle(title = "${kbArticleTitle}");
		}

		Panel.expandPanel(panel = "Configuration");

		if (isSet(kbArticleFriendlyURL)) {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleFriendlyURL}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			Type(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}"
			);
		}
		else {
			var kbArticleTitleFormatted = StringUtil.lowerCase("${kbArticleTitle}");
			var kbArticleTitleFormatted = StringUtil.replace("${kbArticleTitleFormatted}", " ", "-");

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
				value1 = "${kbArticleTitleFormatted}"
			);
		}

		if ("${kbArticleAddViaSource}" == "true") {
			AlloyEditor.addSourceContent(content = "${kbArticleContentSource}");
		}
		else {
			AlloyEditor.addContent(content = "${kbArticleContent}");
		}

		if (isSet(kbArticleAttachment)) {
			KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");
		}

		if (isSet(kbArticleSourceURL)) {
			Type(locator1 = "CKEditor#SOURCE_URL", value1 = "${kbArticleSourceURL}");
		}

		if (isSet(kbArticleSection)) {
			AssertClick(
				locator1 = "KnowledgeBaseArticle#SECTIONS_SELECT",
				value1 = "${kbArticleSection}",
				key_kbArticleSection = "${kbArticleSection}"
			);
		}

		if (isSet(kbArticleRelatedAssetType)) {
			if (IsElementNotPresent(locator1 = "AssetRelatedAssets#HEADER_EXPANDED")) {
				Click(locator1 = "AssetRelatedAssets#HEADER_COLLAPSED");
			}

			KBArticle.selectRelatedAssetCP(
				kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}",
				kbArticleRelatedAssetType = "${kbArticleRelatedAssetType}"
			);
		}

		if (isSet(categoryName)) {
			Panel.expandPanel(panel = "Categorization");

			AssetCategorization.addCategory(
				categoryName = "${categoryName}",
				vocabularyName = "${vocabularyName}"
			);
		}

		if ("${kbWorkflowAction}" == "Submit for Publication") {
			AssertClick(
				locator1 = "Button#SUBMIT_FOR_PUBLICATION",
				value1 = "Submit for Publication"
			);
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");
		}

		if ("${kbArticleInvalidContent}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please enter valid content."
			);
		}
		else if ("${kbArticleDuplicateFriendlyURL}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please enter a unique friendly URL."
			);
		}
		else if ("${kbMissingRequiredCategory}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "Please select at least one category for ${vocabularyName}."
			);
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro addCPWithBooleanCustomField {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		Panel.expandPanel(panel = "Custom Fields");

		Select(
			locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_BOOLEAN",
			value1 = "${selectBoolean}"
		);

		PortletEntry.publish();
	}

	macro addCPWithInvalidAttachmentSize {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");

		AssertTextEquals(
			locator1 = "MessageBoardsThread#MESSAGE_ATTACHMENT_INVALID_SIZE_ERROR",
			value1 = "Request is larger than ${maxFileSize}KB and could not be processed."
		);

		PortletEntry.publish();
	}

	macro addCPWithInvalidTitle {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertElementPresent(locator1 = "Message#ERROR");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_ENTER_A_VALID_TITLE",
			value1 = "Please enter a valid title."
		);
	}

	macro addPGViaAP {
		AssetPublisherPortlet.addAsset(assetType = "Knowledge Base Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");
	}

	macro cancelAddKBArticle {
		LexiconEntry.gotoAddMenuItem(menuItem = "Basic Article");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContent}",
			title = "${kbArticleTitle}"
		);

		Button.clickCancel();
	}

	macro configureEmailCP {
		Click(locator1 = "Portlet#OPTIONS_ICON");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		if (isSet(emailFrom)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_EMAIL_FROM",
				value1 = "Email From"
			);

			Type(locator1 = "TextInput#EMAIL_FROM_NAME", value1 = "${userName}");

			Type(locator1 = "TextInput#EMAIL_FROM_ADDRESS", value1 = "${userEmailAddress}");

			PortletEntry.save();
		}

		if (isSet(suggestionReceived)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_RECEIVED",
				value1 = "Suggestion Received Email"
			);

			SelectFrame(
				locator1 = "KnowledgeBaseConfiguration#SUGGESTION_RECEIVED_EMAIL_EDITOR_IFRAME"
			);

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your received suggestion here</a>"
			);

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

			PortletEntry.save();
		}

		if (isSet(suggestionInProgress)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_IN_PROGRESS",
				value1 = "Suggestion in Progress Email"
			);

			SelectFrame(
				locator1 = "KnowledgeBaseConfiguration#SUGGESTION_IN_PROGRESS_EMAIL_EDITOR_IFRAME"
			);

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your suggestion that is in progress here</a>"
			);

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

			PortletEntry.save();
		}

		if (isSet(suggestionResolved)) {
			AssertClick(
				locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_SUGGESTION_RESOLVED",
				value1 = "Suggestion Resolved Email"
			);

			SelectFrame(
				locator1 = "KnowledgeBaseConfiguration#SUGGESTION_RESOLVED_EMAIL_EDITOR_IFRAME"
			);

			Type(
				locator1 = "CKEditor#BODY",
				value1 = "[$COMMENT_CREATE_DATE$] <a href=&quot;[$ARTICLE_URL$]&quot;>View your resolved suggestion here</a>"
			);

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

			PortletEntry.save();
		}

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBArticleDisplayPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");

		SelectFrame(value1 = "relative=top");

		if (isSet(kbFolderName)) {
			SelectFrame(locator1 = "KnowledgeBaseSelectParent#SELECT_PARENT_DISPLAY_IFRAME");

			AssertClick(
				locator1 = "KnowledgeBaseSelectParent#FOLDER_TITLE_LINK",
				value1 = "${kbFolderName}",
				key_kbFolderName = "${kbFolderName}"
			);

			SelectFrame(value1 = "relative=top");
		}

		SelectFrame(locator1 = "KnowledgeBaseSelectParent#SELECT_PARENT_DISPLAY_IFRAME");

		Click(
			locator1 = "KnowledgeBaseSelectParent#CHOOSE_BUTTON",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBDisplaySettingsPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		AssertClick(
			locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_DISPLAY_SETTINGS",
			value1 = "Display Settings"
		);

		if ("${subscribe}" == "true") {
			Check(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_SUBSCRIPTIONS_CHECKBOX"
			);
		}
		else if ("${subscribe}" == "false") {
			Uncheck(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_SUBSCRIPTIONS_CHECKBOX"
			);
		}

		if ("${history}" == "true") {
			Check(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_HISTORY_CHECKBOX"
			);
		}
		else if ("${history}" == "false") {
			Uncheck(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_HISTORY_CHECKBOX"
			);
		}

		if ("${print}" == "true") {
			Check(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_PRINT_CHECKBOX"
			);
		}
		else if ("${print}" == "false") {
			Uncheck(
				locator1 = "KnowledgeBaseConfiguration#DISPLAY_SETTINGS_ENABLE_PRINT_CHECKBOX"
			);
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureKBFolderDisplay {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "KnowledgeBaseSelectParent#SELECT_PARENT_DISPLAY_IFRAME");

		AssertClick(
			locator1 = "KnowledgeBaseSelectParent#CHOOSE_FOLDER_BUTTON",
			value1 = "Choose",
			key_kbFolderName = "${kbFolderName}"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		PortletEntry.save();
	}

	macro configureKBSocialBookmarkSites {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		AssertClick(
			locator1 = "KnowledgeBaseConfiguration#NAVIGATION_TAB_DISPLAY_SETTINGS",
			value1 = "Display Settings"
		);

		if (isSet(enableSocialBookmarkSites)) {
			KBArticle.enableSocialBookmarkSites(
				enableSocialBookmarkSites = "${enableSocialBookmarkSites}",
				socialBookmarkSite = "${socialBookmarkSite}"
			);
		}

		if (isSet(disableSocialBookmarkSites)) {
			KBArticle.disableSocialBookmarkSites(
				disableSocialBookmarkSites = "${disableSocialBookmarkSites}",
				socialBookmarkSite = "${socialBookmarkSite}"
			);
		}

		PortletEntry.save();
	}

	macro deleteCP {
		if (IsElementPresent(locator1 = "Button#DELETE_ENTRY")) {
			ClickNoError(locator1 = "Button#DELETE_ENTRY");
		}
		else {
			Click(
				locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
				key_rowEntry = "${kbArticleTitle}"
			);

			MenuItem.click(menuItem = "Delete");
		}

		AssertConfirm(
			value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			locator1 = "Message#ERROR",
			value1 = "Your request failed to complete."
		);

		AssertTextNotPresent(
			locator1 = "Message#ERROR",
			value1 = "An unexpected error occurred while importing articles: File name is null."
		);
	}

	macro deletePG {
		ClickNoError(locator1 = "KnowledgeBase#KB_TOOLS", key_kbTool = "Delete");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		if (isSet(deleteViaKBArticle)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#INFO",
				value1 = "Please configure this portlet to make it visible to all users."
			);
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro disableSocialBookmarkSites {
		for (var socialBookmarkSite : list "${disableSocialBookmarkSites}") {
			AddSelection(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
				value1 = "${socialBookmarkSite}"
			);

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");

			AssertTextEquals.assertPartialText(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
				value1 = "${socialBookmarkSite}"
			);
		}
	}

	macro editCP {
		Click(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
			key_rowEntry = "${kbArticleTitle}"
		);

		MenuItem.click(menuItem = "Edit");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified."
		);

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContentEdit}",
			title = "${kbArticleTitleEdit}"
		);

		if (isSet(kbArticleAttachment)) {
			KBArticle.selectAttachmentCP(kbArticleAttachment = "${kbArticleAttachment}");
		}

		if (isSet(selectBoolean)) {
			Panel.expandPanel(panel = "Custom Fields");

			Select(
				locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_BOOLEAN",
				value1 = "${selectBoolean}"
			);
		}

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			PortletEntry.saveAsDraft();
		}
		else {
			PortletEntry.publish();
		}
	}

	macro editPGViaKBDisplay {
		AssertClick(
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Edit",
			key_kbTool = "Edit"
		);

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified."
		);

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContentEdit}",
			title = "${kbArticleTitleEdit}"
		);

		if ("${cancel}" == "true") {
			Button.clickCancel();
		}
		else if ("${saveAsDraft}" == "true") {
			Button.clickSaveAsDraft();
		}
		else {
			AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");
		}
	}

	macro editPGViaLocalizedKBDisplay {
		var key_editLocalized = "Editar";
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_localizedText = "Editor de texto enriquecido";

		AssertClick(
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "${key_editLocalized}",
			key_kbTool = "${key_editLocalized}"
		);

		AssertTextEquals(locator1 = "Portlet#H3_HEADER", value1 = "${kbArticleTitle}");

		AssertElementPresent(locator1 = "AlloyEditor#EDITOR", key_editor = "title");

		AlloyEditor.addTitleAndContent(
			content = "${kbArticleContentEdit}",
			title = "${kbArticleTitleEdit}"
		);

		AssertClick(locator1 = "Button#PUBLISH_LOCALIZED", value1 = "Publicar");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro enableSocialBookmarkSites {
		for (var socialBookmarkSite : list "${enableSocialBookmarkSites}") {
			AddSelection(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_AVAILABLE_SELECT",
				value1 = "${socialBookmarkSite}"
			);

			Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

			AssertTextEquals.assertPartialText(
				locator1 = "SocialBookmarks#ENABLE_SOCIAL_BOOKMARK_CURRENT_SELECT",
				value1 = "${socialBookmarkSite}"
			);
		}
	}

	macro gotoChildArticleDescriptiveDetails {
		AssertClick.assertPartialTextClickAt(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_CHILD_ARTICLE_LINK",
			value1 = "Child Article",
			key_kbArticleTitle = "${kbArticleTitle}"
		);
	}

	macro gotoKBArticleViaKBDisplayHierarchyNavigationPG {
		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}",
			key_kbArticleTitle = "${kbArticleTitle}"
		);
	}

	macro gotoKBChildArticleViaKBDisplayHierarchyNavigationPG {
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}"
		);

		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}"
		);
	}

	macro gotoKBGrandchildArticleViaKBDisplayHierarchyNavigationPG {
		var key_kbArticleTitle = "${kbArticleTitle}";
		var key_kbChildArticleTitle = "${kbChildArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}"
		);

		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}"
		);

		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_GRANDCHILD",
			value1 = "${kbGrandchildArticleTitle}",
			key_kbGrandchildArticleTitle = "${kbGrandchildArticleTitle}"
		);
	}

	macro gotoNextArticlePG {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#NEXT",
			value1 = "${kbDisplayNextArticle}"
		);
	}

	macro gotoPreviousArticle {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#PREVIOUS",
			value1 = "${kbDisplayPreviousArticle}"
		);
	}

	macro gotoSuggestionsNavigationCP {
		AssertClick(
			locator1 = "KnowledgeBase#ADMIN_TABS_SUGGESTIONS",
			value1 = "Suggestions"
		);
	}

	macro gotoSuggestionsNavigationPG {
		if (IsElementNotPresent(locator1 = "KnowledgeBaseSuggestions#NAVIGATION_BAR")) {
			Click(locator1 = "KnowledgeBase#LINK_THERE_ARE_SUGGESTIONS");
		}
	}

	macro gotoViaKBAdminCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		if (isSet(hasChildArticle)) {
			AssertClick(
				locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_TITLE",
				value1 = "${kbArticleTitle}"
			);
		}
		else {
			AssertClick(
				locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
				value1 = "${kbArticleTitle}"
			);
		}
	}

	macro gotoViaKBDisplayPG {
		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		Pause(locator1 = "5000");
	}

	macro importCP {
		LexiconEntry.gotoAddDropdownMenuItem(menuItem = "Import");

		UploadCommonFile(locator1 = "TextInput#UPLOAD_FILE", value1 = "${kbZipFile}");

		if ("${applyNumericalPrefix}" == "true") {
			Check(locator1 = "Checkbox#PRIORITIZATION_STRATEGY");
		}
		else {
			Uncheck(locator1 = "Checkbox#PRIORITIZATION_STRATEGY");
		}

		Button.clickSave();

		Alert.viewSuccessMessageText(
			successMessage = "Your request completed successfully."
		);
	}

	macro moveArticleCP {
		var key_rowEntry = "${kbArticleTitle}";

		if (IsElementPresent(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS")) {
			Click(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
		}
		else {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}

		MenuItem.click(menuItem = "Move");

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_LABEL",
			value1 = "Current Parent"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_FIELD",
			value1 = "${kbArticleCurrentParent}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_PRIORITY_LABEL",
			value1 = "Priority"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_LABEL",
			value1 = "New Parent"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_PRIORITY_LABEL",
			value1 = "Priority"
		);

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");
	}

	macro moveArticleViaKBDisplayPG {
		AssertClick(
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Move",
			key_kbTool = "Move"
		);

		AssertTextEquals(locator1 = "Portlet#H3_HEADER", value1 = "${kbArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_LABEL",
			value1 = "Current Parent"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_TITLE_FIELD",
			value1 = "Home"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_CURRENT_PARENT_PRIORITY_LABEL",
			value1 = "Priority"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_LABEL",
			value1 = "New Parent"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_PRIORITY_LABEL",
			value1 = "Priority"
		);

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");
	}

	macro rateArticle1Star {
		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}"
		);

		Click.clickWaitForInlineCKEditorNoMouseOver(
			locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_1"
		);

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_1");

		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_5");
	}

	macro rateArticleFrom1StarTo5Star {
		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}"
		);

		Click.clickWaitForInlineCKEditorNoMouseOver(
			locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_4"
		);

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_5");

		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_1");
	}

	macro rateArticlePG {
		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}"
		);

		if ("${rateUp}" == "true") {
			Click(locator1 = "Ratings#THUMB_UP");
		}
		else if ("${rateUp}" == "false") {
			Click(locator1 = "Ratings#THUMB_DOWN");
		}

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_VOTES",
			value1 = "${articleVoteCount}"
		);
	}

	macro selectAllCP {
		PortletEntry.selectAll();
	}

	macro selectArticleCP {
		Check(
			locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_CHECKBOX",
			key_kbArticleTitle = "${kbArticleTitle}"
		);
	}

	macro selectAttachmentCP {
		if (IsElementNotPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_EXPANDED")) {
			Click(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED");
		}

		AssertClick(locator1 = "Button#SELECT_FILES", value1 = "Select Files");

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${kbArticleAttachment}"
		);
	}

	macro selectParentArticleCP {
		SelectFrame(locator1 = "KnowledgeBaseSelectParent#IFRAME");

		Click(
			locator1 = "KnowledgeBaseSelectParent#CHOOSE_BUTTON",
			value1 = "Choose",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_FIELD",
			value1 = "${kbArticleTitle}"
		);

		Click(locator1 = "Button#MOVE");

		Alert.viewSuccessMessage();
	}

	macro selectParentViaKBDisplayPG {
		SelectFrame(locator1 = "KnowledgeBaseSelectParent#IFRAME");

		Click(
			locator1 = "KnowledgeBaseSelectParent#CHOOSE_BUTTON",
			value1 = "Choose",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "KnowledgeBase#MOVE_NEW_PARENT_TITLE_FIELD",
			value1 = "${kbArticleTitle}"
		);

		Click(locator1 = "Button#MOVE");

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro selectPGViaKBArticle {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(locator1 = "Button#SELECT", value1 = "Select");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "KnowledgeBaseSelectParent#SELECT_PARENT_DISPLAY_IFRAME");

		AssertClick(
			locator1 = "KnowledgeBaseSelectParent#CHOOSE_BUTTON",
			value1 = "Choose",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		Button.clickSave();

		SelectFrame(value1 = "relative=top");
	}

	macro selectRelatedAssetCP {
		AssertClick(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT",
			value1 = "Select"
		);

		AssertClick(
			locator1 = "KnowledgeBaseArticle#EDIT_SELECT_RELATED_ASSETS",
			value1 = "${kbArticleRelatedAssetType}",
			key_kbArticleRelatedAssetType = "${kbArticleRelatedAssetType}"
		);

		SelectFrame(locator1 = "AssetRelatedAssets#SELECT_ASSET_IFRAME");

		AssertClick(
			locator1 = "AssetRelatedAssets#KB_ASSET_TABLE_TITLE_LINK",
			value1 = "${kbArticleRelatedAssetTitle}",
			key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro selectScopePG {
		SelectFrame(locator1 = "KnowledgeBaseConfiguration#IFRAME");

		Navigator.gotoNavItem(navItem = "Scope");

		Select(locator1 = "Select#SCOPE", value1 = "${newKBPageScope}");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro setScopeCP {
		Click(locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SCOPE_COG");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "${kbPageScope}",
			key_menuItem = "${kbPageScope}"
		);
	}

	macro subscribeCP {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Knowledge Base"
		);

		if (IsElementPresent(locator1 = "KnowledgeBase#ARTICLE_DESCRIPTIVE_ARTICLE_TITLE_GENERIC")) {
			Check.checkAll(locator1 = "KnowledgeBase#ARTICLE_TABLE_SELECT_ALL_CHECKBOX");

			Click(locator1 = "Icon#DELETE");

			AssertConfirm(
				value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately."
			);

			Alert.viewSuccessMessage();
		}
	}

	macro viewArticle1StarRatingPG {
		AssertTextEquals(
			locator1 = "Ratings#AVERAGE_LABEL",
			value1 = "Average (1 Vote)"
		);

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_1");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_2");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_3");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_4");

		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_5");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_1");

		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_2");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_1");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_2");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_3");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_4");

		AssertElementNotPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_5");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_1");

		AssertElementNotPresent(locator1 = "Ratings#AVERAGE_STAR_2");
	}

	macro viewArticle5StarRatingPG {
		AssertTextEquals(
			locator1 = "Ratings#AVERAGE_LABEL",
			value1 = "Average (1 Vote)"
		);

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_1");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_2");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_3");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_4");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_STAR_5");

		AssertElementNotPresent(locator1 = "Ratings#YOUR_RATING_STAR_EMPTY_1");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_1");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_2");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_3");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_4");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_STAR_5");

		AssertElementNotPresent(locator1 = "Ratings#AVERAGE_STAR_EMPTY_1");
	}

	macro viewArticleHistoryPG {
		AssertClick(locator1 = "KnowledgeBaseArticle#HISTORY", value1 = "History");

		Check(
			locator1 = "KnowledgeBaseArticle#HISTORY_SELECT_VERSION_CHECKBOX",
			value1 = "${kbArticleVersionNew}",
			key_versionNumber = "${kbArticleVersionNew}"
		);

		Check(
			locator1 = "KnowledgeBaseArticle#HISTORY_SELECT_VERSION_CHECKBOX",
			value1 = "${kbArticleVersionOld}",
			key_versionNumber = "${kbArticleVersionOld}"
		);

		AssertClick(locator1 = "Button#COMPARE_VERSIONS", value1 = "Compare Versions");

		if (isSet(kbArticleContentRemovedDiff)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#HISTORY_CONTENT_REMOVED_DIFF",
				value1 = "${kbArticleContentRemovedDiff}",
				key_kbArticleContentRemovedDiff = "${kbArticleContentRemovedDiff}"
			);
		}

		if (isSet(kbArticleContentAddedDiff)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#HISTORY_CONTENT_ADDED_DIFF",
				value1 = "${kbArticleContentAddedDiff}"
			);
		}

		if ("${viewNoXMLInTitle}" == "true") {
			AssertTextNotPresent(locator1 = "KnowledgeBaseArticle#TITLE", value1 = "xml");
		}
	}

	macro viewAttachmentCP {
		Click(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
			key_rowEntry = "${kbArticleTitle}"
		);

		MenuItem.click(menuItem = "Edit");

		AssertClick(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED",
			value1 = "Attachments"
		);

		AssertElementPresent(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER"
		);
	}

	macro viewBlogsEntryRelatedAsset {
		AssertTextEquals(
			locator1 = "BlogsEntry#CONTENT_GENERIC",
			value1 = "Blogs Entry Content"
		);

		AssertTextEquals(
			locator1 = "BlogsEntry#TITLE_GENERIC",
			value1 = "Blogs Entry Title"
		);
	}

	macro viewChildArticleCP {
		KBArticle._gotoChildArticle(kbChildArticleTitle = "${kbChildArticleTitle}");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbChildArticleTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "${kbChildArticleContent}"
		);
	}

	macro viewChildArticleHierarchyViaKBDisplayPG {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertClick(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			value1 = "${kbArticleTitle}"
		);

		var childCount = "0";
		var kbParentChild = "${kbArticleTitle} Child";

		while (IsElementPresent(locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD_GENERIC")) {
			var childCount = MathUtil.sum("${childCount}", "1");
			var kbChildArticleTitle = "${kbParentChild} ${childCount}";
			var key_kbArticleTitle = "${kbArticleTitle}";

			if (IsElementPresent(locator1 = "xpath=//div[@class='kbarticle-navigation']/ul/li[contains(.,'${key_kbArticleTitle}')]/ul[${childCount}]")) {
				var key_kbChildArticleTitle = "${kbChildArticleTitle}";

				AssertClick.assertTextClickNoMouseOver(
					locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
					value1 = "${kbChildArticleTitle}"
				);
			}
		}
	}

	macro viewChildArticlePG {
		AssertClick.assertTextClickNoMouseOver(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_CHILD",
			value1 = "${kbChildArticleTitle}",
			key_kbArticleTitle = "${kbArticleTitle}",
			key_kbChildArticleTitle = "${kbChildArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbChildArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbChildArticleContent}"
		);
	}

	macro viewCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}"
		);

		if ("${kbWorkflowStatus}" == "Pending") {
			AssertTextEquals(
				locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS",
				value1 = "Pending"
			);
		}

		if ("${kbStatus}" == "Draft") {
			AssertTextEquals(
				locator1 = "KnowledgeBase#ARTICLE_TABLE_ARTICLE_STATUS",
				value1 = "Draft"
			);
		}

		AssertClick(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#CONTENT",
			value1 = "${kbArticleContent}"
		);

		if (isSet(kbChildArticleTitle)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#ADMIN_VIEW_CHILD_ARTICLE_TITLE",
				value1 = "${kbChildArticleTitle}"
			);

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#ADMIN_VIEW_CHILD_ARTICLE_CONTENT",
				value1 = "${kbChildArticleContent}"
			);
		}

		if (isSet(kbArticleRelatedAssetTitle)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:"
			);

			AssertTextEquals(
				locator1 = "AssetRelatedAssets#KB_RELATED_ASSETS_LINKS",
				value1 = "${kbArticleRelatedAssetTitle}",
				key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}"
			);
		}

		if (isSet(categoryName)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CATEGORY_HEADER",
				value1 = "${vocabularyName}: ${categoryName}"
			);

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CATEGORY_LINKS",
				value1 = "${categoryName}",
				key_categoryName = "${categoryName}"
			);
		}

		if ("noAttachment" == "true") {
			AssertAlertNotPresent(
				locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER"
			);
		}
	}

	macro viewCPWithHTML {
		AssertClick(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#HTML_BOLD_CONTENT",
			value1 = "${kbArticleContent}"
		);
	}

	macro viewDefaultCP {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No articles were found."
		);

		AssertElementNotPresent(locator1 = "KnowledgeBase#ARTICLE_TABLE_KB_GENERIC");
	}

	macro viewDefaultKBDisplaySettingsPG {
		AssertElementPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");

		AssertElementPresent(locator1 = "KnowledgeBaseArticle#HISTORY");

		AssertElementPresent(locator1 = "KnowledgeBaseArticle#PRINT");
	}

	macro viewDefaultViaKBDisplayPG {
		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Please configure this portlet to make it visible to all users."
		);

		AssertElementNotPresent(locator1 = "KnowledgeBase#DISPLAY_TITLE");
	}

	macro viewFriendlyURLCP {
		Click(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS_2",
			key_rowEntry = "${kbArticleTitle}"
		);

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#EDIT_FRIENDLY_URL_FIELD",
			value1 = "${kbArticleFriendlyURL}"
		);
	}

	macro viewImageViaContentCmd {
		AssertElementPresent(locator1 = "KnowledgeBaseArticle#CONTENT_IMAGE");
	}

	macro viewKBArticlePriorityCP {
		var key_kbArticleTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_PRIORITY",
			value1 = "Priority ${kbPriority}"
		);
	}

	macro viewKBArticleWithAttachmentCP {
		Click(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
			key_rowEntry = "${kbArticleTitle}"
		);

		MenuItem.click(menuItem = "Edit");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "A new version is created automatically if this content is modified."
		);

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "AlloyEditor#EDITOR",
			value1 = "${kbArticleContent}",
			key_editor = "content"
		);

		if (IsElementNotPresent(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_EXPANDED")) {
			Click(locator1 = "KnowledgeBaseArticle#ATTACHMENTS_HEADER_COLLAPSED");
		}

		AssertTextEquals(
			locator1 = "KnowledgeBaseArticle#ATTACHMENTS_SAVED_ATTACHMENTS_CONTAINER",
			value1 = "${kbArticleAttachment}"
		);
	}

	macro viewKBDisplayPG {
		if (isSet(kbArticleFriendlyURL)) {
			AssertLocation(
				value1 = "http://localhost:8080/web/guest/knowledge-base-display/-/knowledge_base/${kbArticleFriendlyURL}"
			);
		}

		if ("${sourceURL}" == "true") {
			AssertClick(
				locator1 = "KnowledgeBaseArticle#EDIT_ON_GITHUB",
				value1 = "Edit On GitHub"
			);

			SelectWindow(locator1 = "Google#PAGE_TITLE", key_pageTitle = "Google");

			var url = selenium.getLocation();

			if (!("${url}" == "https://www.google.com/[#]gws_rd=ssl")) {
				AssertLocation(value1 = "https://www.google.com/?gws_rd=ssl");
			}
			else {
				AssertLocation(value1 = "https://www.google.com/[#]gws_rd=ssl");
			}

			Close(locator1 = "Google#PAGE_TITLE", key_pageTitle = "Google");
		}

		if ("${subscribe}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");
		}
		else if ("${subscribe}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#SUBSCRIBE");
		}

		if ("${history}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#HISTORY");
		}
		else if ("${history}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#HISTORY");
		}

		if ("${print}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#PRINT");
		}
		else if ("${print}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#PRINT");
		}
	}

	macro viewNavigationLinksPG {
		if ("${previous}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#PREVIOUS");
		}
		else if ("${previous}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#PREVIOUS");
		}

		if ("${next}" == "true") {
			AssertElementPresent(locator1 = "KnowledgeBaseArticle#NEXT");
		}
		else if ("${next}" == "false") {
			AssertElementNotPresent(locator1 = "KnowledgeBaseArticle#NEXT");
		}
	}

	macro viewNoHierarchyPG {
		AssertElementNotPresent(
			locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
			key_kbArticleTitle = "${kbArticleTitle}"
		);

		AssertElementPresent(locator1 = "KnowledgeBase#FOLDER_NAVIGATION_MENULIST");
	}

	macro viewNoPGViaKBDisplay {
		AssertTextNotPresent(value1 = "${kbArticleTitle}");
	}

	macro viewParentArticleHierarchyViaKBDisplayPG {
		var count = "0";

		while (IsElementPresent(locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_GENERIC")) {
			var count = MathUtil.sum("${count}", "1");
			var kbParentTitle = "${kbArticleTitle} ${count}";

			if (IsElementPresent(locator1 = "xpath=//div[@class='kbarticle-navigation']/ul[${count}]")) {
				AssertClick(
					locator1 = "KnowledgeBase#HIERARCHY_NAVIGATION_PARENT",
					value1 = "${kbParentTitle}",
					key_kbArticleTitle = "${kbParentTitle}"
				);
			}
		}
	}

	macro viewPG {
		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}"
		);

		if (isSet(customFieldName)) {
			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_NAME",
				value1 = "${customFieldName}"
			);

			AssertTextEquals(
				locator1 = "KnowledgeBaseArticle#CUSTOM_FIELD_VALUE",
				value1 = "${customFieldValue}"
			);
		}
	}

	macro viewPGViaAP {
		var key_assetContent = "${kbArticleContent}";
		var key_assetTitle = "${kbArticleTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${kbArticleContent}"
		);
	}

	macro viewSourceURLCP {
		if (isSet(kbChildArticleTitle)) {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");
		}
		else {
			Click(
				locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
				key_rowEntry = "${kbArticleTitle}"
			);
		}

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "CKEditor#SOURCE_URL",
			value1 = "${kbArticleSourceURL}"
		);
	}

	macro viewSourceURLPG {
		AssertClick(
			locator1 = "KnowledgeBase#KB_TOOLS",
			value1 = "Edit",
			key_kbTool = "Edit"
		);

		Panel.expandPanel(panel = "Configuration");

		AssertTextEquals(
			locator1 = "CKEditor#SOURCE_URL",
			value1 = "${kbArticleSourceURL}"
		);
	}

	macro viewUploadFailed {
		if ("${kbImportFailed}" == "true") {
			Alert.viewRequestFailedToComplete();
		}
		else {
			AssertTextNotPresent(value1 = "Your request failed to complete.");
		}
	}

	macro viewViaKBDisplayPG {
		AssertTextEquals.assertPartialText(
			locator1 = "KnowledgeBase#DISPLAY_TITLE",
			value1 = "${kbArticleTitle}"
		);

		AssertTextEquals(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}"
		);

		if (isSet(kbArticleRelatedAssetTitle)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:"
			);

			AssertTextEquals(
				locator1 = "AssetRelatedAssets#KB_RELATED_ASSETS_LINKS",
				value1 = "${kbArticleRelatedAssetTitle}",
				key_kbArticleRelatedAssetTitle = "${kbArticleRelatedAssetTitle}"
			);
		}
	}

	macro viewViaNextLinkPG {
		AssertClick(
			locator1 = "KnowledgeBaseArticle#NEXT",
			value1 = "${kbArticleTitle}"
		);

		AssertTextPresent(
			locator1 = "KnowledgeBase#DISPLAY_CONTENT",
			value1 = "${kbArticleContent}"
		);
	}
}