definition {
	macro configureScopePG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Navigator.gotoNavItem(navItem = "Scope");

		Select(locator1 = "Select#SCOPE", value1 = "regexp:.*${scopeSelection}.*");

		PortletEntry.save();
	}

	macro configureSetupPG {
		if (isSet(userToolNameList)) {
			SelectFrame(locator1 = "IFrame#DIALOG");

			Click(locator1 = "WCDConfiguration#USER_TOOLS_SELECT_BUTTON");

			SelectFrameTop();

			for (var key_toggleCardLabel : list "${userToolNameList}") {
				if (IsNotChecked(locator1 = "WCDConfiguration#TOGGLE_CARD_CHECKBOX")) {
					Click.clickNoWaitForVisible(locator1 = "WCDConfiguration#TOGGLE_CARD_CHECKBOX");
				}
			}

			Click(locator1 = "Button#DONE");
		}

		if (isSet(metadataNameList)) {
			SelectFrame(locator1 = "IFrame#DIALOG");

			Click(locator1 = "WCDConfiguration#CONTENT_METADATA_SELECT");

			for (var key_toggleCardLabel : list "${metadataNameList}") {
				Pause(locator1 = "1000");

				SelectFrameTop();

				if (IsNotChecked(locator1 = "WCDConfiguration#TOGGLE_CARD_CHECKBOX")) {
					Click.clickNoWaitForVisible(locator1 = "WCDConfiguration#TOGGLE_CARD_CHECKBOX");
				}
			}

			Click(locator1 = "Button#DONE");
		}

		if ("${enableViewCountIncrement}" == "true") {
			SelectFrame(locator1 = "IFrame#DIALOG");

			Check.checkToggleSwitch(
				locator1 = "WCDConfiguration#ENABLE_VIEW_COUNT_INCREMENT_CHECKBOX"
			);

			SelectFrame(value1 = "relative=top");
		}
	}

	macro editTemplate {
		if ("${editTemplateButton}" == "true") {
			WebContentDisplayPortlet.gotoEditTemplate(
				webContentTitle = "${webContentTitle}"
			);
		}
		else {
			WebContentNavigator.gotoEditPGViaWCD(
				menuItem = "${menuItem}",
				webContentTitle = "${webContentTitle}"
			);

			Panel.expandPanel(panel = "Structure and Template");

			AssertTextEquals(
				locator1 = "WCEditWebContent#SELECTED_STRUCTURE",
				value1 = "${structureName}"
			);

			ClickNoError(locator1 = "WCEditWebContent#EDIT_TEMPLATE");

			AssertConfirm(
				value1 = "Editing the current template deletes all unsaved content."
			);
		}

		SelectFrameTop();

		SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

		Type.clickAtType(locator1 = "TextInput#NAME", value1 = "Template Edit");

		if (isSet(templateScript)) {
			Type.typeAceEditor(
				locator1 = "DDMEditTemplate#SCRIPT_CONTENT_FIELD_TEXT_AREA",
				value1 = "${templateScript}"
			);
		}

		Button.clickSave();

		if ("${editTemplateButton}" == "true") {
			SelectFrame(value1 = "relative=top");
		}
		else {
			Pause(locator1 = "2000");

			Click(locator1 = "Button#CLOSE_IFRAME");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

			Panel.expandPanel(panel = "Structure and Template");

			AssertTextEquals(
				locator1 = "WCEditWebContent#SELECTED_TEMPLATE",
				value1 = "${templateName}"
			);

			AssertClick.pauseAssertTextClickAt(
				locator1 = "Button#PUBLISH",
				value1 = "Publish"
			);

			SelectFrame(value1 = "relative=top");
		}

		if (isSet(templateScript)) {
			AssertTextEquals(
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = "${templateScript}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "WCD#WEB_CONTENT_CONTENT",
				value1 = "${webContentContent}"
			);
		}
	}

	macro gotoEditTemplate {
		WebContentNavigator.gotoArticleMenuPGViaWCD(
			webContentTitle = "${webContentTitle}"
		);

		MenuItem.click(menuItem = "Edit Template");
	}

	macro removeWebContent {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Button.clickRemove();

		PortletEntry.save();
	}

	macro saveConfiguration {
		SelectFrame(locator1 = "IFrame#DIALOG");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro searchWebContent {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "WCDConfiguration#SELECT_WEB_CONTENT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var searchTerm = "${webContentTitle}";

		if (isSet(webContentSearchValue)) {
			var searchTerm = "${webContentSearchValue}";
		}

		Search.searchCP(searchTerm = "${searchTerm}");

		var key_webContentTitle = "${webContentTitle}";

		AssertTextEquals(
			locator1 = "WCDConfiguration#WEB_CONTENT_TABLE_TITLE",
			value1 = "${webContentTitle}"
		);

		if ("${addSearchedContent}" == "true") {
			AssertClick(locator1 = "Button#WEB_CONTENT_CHOOSE", value1 = "Choose");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#DIALOG");

			AssertTextEquals(
				locator1 = "Message#INFO_ARTICLE",
				value1 = "${webContentTitle} (Modified)"
			);

			PortletEntry.save();
		}

		SelectFrame(value1 = "relative=top");
	}

	macro searchWebContentNo {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "WCDConfiguration#SELECT_WEB_CONTENT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		Search.searchCP(searchTerm = "${webContentTitle}");

		var key_webContentTitle = "${webContentTitle}";

		AssertElementNotPresent(locator1 = "WCDConfiguration#WEB_CONTENT_TABLE_TITLE");

		SelectFrame(value1 = "relative=top");
	}

	macro selectParentSiteWebContent {
		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "WCDConfiguration#SELECT_WEB_CONTENT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "${parentSiteName}");

		var key_webContentTitle = "${webContentTitle}";

		AssertClick(
			locator1 = "Link#WEB_CONTENT_ARTICLE",
			value1 = "${webContentTitle}"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");

		Click(locator1 = "Icon#CLOSE");
	}

	macro selectWebContent {
		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertClick(
			locator1 = "WCDConfiguration#SELECT_WEB_CONTENT_BUTTON",
			value1 = "Select"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_webContentTitle = "${webContentTitle}";

		AssertClick(
			locator1 = "Link#WEB_CONTENT_ARTICLE",
			value1 = "${webContentTitle}"
		);

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#DIALOG");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro undoMoveToRecycleBin {
		AssertClick(locator1 = "Link#UNDO", value1 = "Undo");
	}

	macro viewAllSettingsEnabledPG {
		AssertTextEquals.assertPartialText(locator1 = "Icon#PRINT", value1 = "Print");

		AssertTextEquals.assertPartialText(
			locator1 = "Comments#SUBSCRIBE_TO_COMMENTS_LINK",
			value1 = "Subscribe to Comments"
		);

		var key_assetTitle = "${relatedAssetTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "WCD#RELATED_ASSETS",
			value1 = "${relatedAssetTitle}"
		);

		Type.typeEditor(locator1 = "Comments#COMMENT_FIELD", value1 = "Hello!");

		AssertClick(locator1 = "Button#REPLY", value1 = "Reply");

		AssertElementPresent(locator1 = "Ratings#THUMB_UP");

		AssertElementPresent(locator1 = "Ratings#THUMB_DOWN");
	}

	macro viewConfigureScopePG {
		var key_portletName = "Web Content Display";

		if ("${scopeSelectionDefault}" == "true") {
			AssertTextEquals.assertTextCaseInsensitive(
				locator1 = "Portlet#TITLE",
				value1 = "Web Content Display"
			);
		}
		else {
			AssertTextEquals.assertTextCaseInsensitive(
				locator1 = "Portlet#TITLE",
				value1 = "Web Content Display (${scopeSelection})"
			);
		}

		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Navigator.gotoNavItem(navItem = "Scope");

		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${scopeSelection}");
	}

	macro viewContentPageBreak {
		AssertClick(locator1 = "Pagination#PAGE_2", value1 = "2");

		AssertTextEquals(
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = "${webContentContent}"
		);

		AssertClick(locator1 = "Pagination#PREVIOUS_LINK", value1 = "Previous");
	}

	macro viewDefaultMessage {
		Alert.viewInfoMessageSpecific(
			infoMessage = "This application is not visible to users yet"
		);

		Alert.viewInfoMessageSpecific(
			infoMessage = "Select Web Content to make it visible"
		);
	}

	macro viewDeletedArticle {
		Alert.viewWarningSpecific(
			warningMessage = "The selected web content no longer exists."
		);

		Alert.viewWarningSpecific(
			warningMessage = "Do you want to Select Another Web Content?"
		);
	}

	macro viewEnabledFileTypesPGViaWCD {
		for (var fileType : list "${fileTypes}") {
			var key_fileType = "${fileType}";

			AssertTextEquals.assertPartialText(
				locator1 = "WCD#DOCUMENT_CONVERSION_TYPE",
				value1 = "${fileType}"
			);

			AssertElementPresent(locator1 = "WCD#DOCUMENT_CONVERSION_TYPE_ICON");
		}
	}

	macro viewImageFieldViaWCD {
		SikuliAssertElementPresent(locator1 = "WCD#WEB_CONTENT_IMAGE_PNG");
	}

	macro viewRecycleBinMessage {
		var key_webContentTitle = "${webContentTitle}";

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_3",
			value1 = "The web content article ${webContentTitle} was moved to the Recycle Bin"
		);
	}
}