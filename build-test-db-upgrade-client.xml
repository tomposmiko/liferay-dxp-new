<?xml version="1.0"?>

<project basedir="." name="portal-test-db-upgrade-client" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-test.xml" />

	<macrodef name="clean-database-upgrade-client">
		<sequential>
			<stop-one-java-process process.name="LocalProcess" />
			<stop-one-java-process process.name="DBUpgrader" />

			<delete file="${db.upgrade.client.log}" />
		</sequential>
	</macrodef>

	<macrodef name="get-database-upgrade-client-paths">
		<sequential>
			<property name="db.upgrade.client.home" value="${liferay.home}/tools/portal-tools-db-upgrade-client" />

			<property name="db.upgrade.client.jar" value="${db.upgrade.client.home}/com.liferay.portal.tools.db.upgrade.client.jar" />
			<property name="db.upgrade.client.log" value="${db.upgrade.client.home}/upgrade.log" />
		</sequential>
	</macrodef>

	<target name="check-upgrade-client-additional-settings">
		<get-database-upgrade-client-paths />

		<parallel failonany="true">
			<java
				dir="${db.upgrade.client.home}"
				failonerror="true"
				fork="true"
				jar="${db.upgrade.client.jar}"
				timeout="900000"
			>
				<arg value="-j" />
				<arg value="&quot;-Dfile.encoding=UTF8 -Duser.country=US -Duser.language=en -Duser.timezone=GMT -Xmx4096m&quot;" />
			</java>

			<sequential>
				<waitfor maxwait="60000">
					<available file="${db.upgrade.client.log}" />
				</waitfor>

				<sleep seconds="5" />

				<get-jinfo-output process.name="DBUpgrader" />

				<echo>${jinfo.output}</echo>

				<if>
					<contains string="${jinfo.output}" substring="MaxHeapSize=4294967296" />
					<then>
						<echo message="Java memory was successfully set to 4GB during the upgrade process." />
					</then>
					<else>
						<fail message="Could not verify that Java memory was set to 4GB" />
					</else>
				</if>
			</sequential>
		</parallel>

		<clean-database-upgrade-client />
	</target>

	<target name="check-upgrade-client-custom-log">
		<get-database-upgrade-client-paths />

		<java
			dir="${db.upgrade.client.home}"
			failonerror="true"
			fork="true"
			jar="${db.upgrade.client.jar}"
			timeout="900000"
		>
			<arg value="-l" />
			<arg value="&quot;log_file.txt&quot;" />
		</java>

		<if>
			<not>
				<available file="${db.upgrade.client.home}/log_file.txt" />
			</not>
			<then>
				<fail message="The upgrade client custom log file was not created successfully." />
			</then>
		</if>

		<local name="custom.log.file.output" />

		<loadfile
			property="custom.log.file.output"
			srcfile="${db.upgrade.client.home}/log_file.txt"
		/>

		<if>
			<not>
				<contains string="${custom.log.file.output}" substring="com.liferay.portal.tools.db.upgrade.client.jar" />
			</not>
			<then>
				<fail message="The upgrade client custom log file is missing some data." />
			</then>
		</if>

		<echo message="The upgrade client custom log file was created successfully." />

		<delete file="${db.upgrade.client.home}/log_file.txt" />

		<clean-database-upgrade-client />
	</target>

	<target name="check-upgrade-client-gogoshell">
		<get-database-upgrade-client-paths />

		<parallel failonany="true">
			<java
				dir="${db.upgrade.client.home}"
				fork="true"
				jar="${db.upgrade.client.jar}"
				timeout="900000"
			>
				<arg value="-s" />
			</java>

			<sequential>
				<waitfor maxwait="900000" timeoutproperty="gogoshell.not.started">
					<resourcecontains
						resource="${db.upgrade.client.log}"
						substring="Connecting to Gogo shell"
					/>
				</waitfor>

				<sleep seconds="20" />

				<if>
					<isset property="gogoshell.not.started" />
					<then>
						<fail message="The Gogo shell failed to open before the test timed out." />
					</then>
					<elseif>
						<resourcecontains
							resource="${db.upgrade.client.log}"
							substring="Unable to open Gogo shell"
						/>
						<then>
							<fail message="The Gogo shell connection failed" />
						</then>
					</elseif>
				</if>

				<echo message="A Gogo shell opened successfully." />

				<stop-one-java-process process.name="jar" />
			</sequential>
		</parallel>

		<clean-database-upgrade-client />
	</target>

	<target name="check-upgrade-client-help">
		<get-database-upgrade-client-paths />

		<local name="upgrade.help.output" />

		<java
			dir="${db.upgrade.client.home}"
			failonerror="true"
			fork="true"
			jar="${db.upgrade.client.jar}"
			outputproperty="upgrade.help.output"
			timeout="30000"
		>
			<arg value="-h" />
		</java>

		<echo>${upgrade.help.output}</echo>

		<if>
			<contains string="${upgrade.help.output}" substring="-h,--help" />
			<then>
				<echo message="The upgrade client help screen appeared successfully" />
			</then>
			<else>
				<fail message="The upgrade client help screen failed to appear." />
			</else>
		</if>

		<clean-database-upgrade-client />
	</target>

	<target name="check-upgrade-client-java-version">
		<get-database-upgrade-client-paths />

		<parallel failonany="true">
			<java
				dir="${db.upgrade.client.home}"
				failonerror="true"
				fork="true"
				jar="${db.upgrade.client.jar}"
				timeout="300000"
			>
				<env key="JAVA_HOME" value="${java.jdk.7.x64.home}" />
			</java>

			<sequential>
				<local name="java.error.unavailable" />

				<waitfor maxwait="15000" timeoutproperty="java.error.unavailable">
					<resourcecontains
						resource="${db.upgrade.client.log}"
						substring="Unsupported major.minor version"
					/>
				</waitfor>

				<if>
					<isset property="java.error.unavailable" />
					<then>
						<clean-database-upgrade-client />

						<fail message="The upgrade client should not be able to run on versions older than Java SE 8." />
					</then>
				</if>

				<echo message="The upgrade client correctly failed to run on a version older than Java SE 8." />
			</sequential>
		</parallel>

		<clean-database-upgrade-client />
	</target>
</project>